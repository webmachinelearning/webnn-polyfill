!function(e){var t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.l=!0,a.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(r,a,function(t){return e[t]}.bind(null,a));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=101)}([function(e,t,n){"use strict";n.r(t),n.d(t,"AdadeltaOptimizer",(function(){return on})),n.d(t,"AdagradOptimizer",(function(){return cn})),n.d(t,"AdamOptimizer",(function(){return pn})),n.d(t,"AdamaxOptimizer",(function(){return xn})),n.d(t,"MomentumOptimizer",(function(){return yn})),n.d(t,"Optimizer",(function(){return sn})),n.d(t,"RMSPropOptimizer",(function(){return kn})),n.d(t,"SGDOptimizer",(function(){return vn})),n.d(t,"Tensor",(function(){return ee.a})),n.d(t,"TensorBuffer",(function(){return ee.b})),n.d(t,"Variable",(function(){return ee.c})),n.d(t,"Rank",(function(){return wn.a})),n.d(t,"sumOutType",(function(){return wn.b})),n.d(t,"upcastType",(function(){return wn.c})),n.d(t,"abs",(function(){return hn})),n.d(t,"acos",(function(){return In})),n.d(t,"acosh",(function(){return Sn})),n.d(t,"add",(function(){return Vt})),n.d(t,"addN",(function(){return _n})),n.d(t,"all",(function(){return On})),n.d(t,"any",(function(){return Tn})),n.d(t,"argMax",(function(){return Cn})),n.d(t,"argMin",(function(){return $n})),n.d(t,"asin",(function(){return En})),n.d(t,"asinh",(function(){return An})),n.d(t,"atan",(function(){return Nn})),n.d(t,"atan2",(function(){return Rn})),n.d(t,"atanh",(function(){return Fn})),n.d(t,"avgPool",(function(){return Xn})),n.d(t,"avgPool3d",(function(){return Yn})),n.d(t,"basicLSTMCell",(function(){return tr})),n.d(t,"batchToSpaceND",(function(){return nr})),n.d(t,"batchNorm",(function(){return rr})),n.d(t,"batchNorm2d",(function(){return ar})),n.d(t,"batchNorm3d",(function(){return sr})),n.d(t,"batchNorm4d",(function(){return or})),n.d(t,"bincount",(function(){return ir})),n.d(t,"broadcastArgs",(function(){return ur})),n.d(t,"broadcastTo",(function(){return cr})),n.d(t,"buffer",(function(){return te})),n.d(t,"cast",(function(){return se})),n.d(t,"ceil",(function(){return lr})),n.d(t,"clipByValue",(function(){return dr})),n.d(t,"clone",(function(){return oe})),n.d(t,"complex",(function(){return pr.a})),n.d(t,"concat",(function(){return Zn})),n.d(t,"concat1d",(function(){return hr})),n.d(t,"concat2d",(function(){return fr})),n.d(t,"concat3d",(function(){return mr})),n.d(t,"concat4d",(function(){return br})),n.d(t,"conv1d",(function(){return xr})),n.d(t,"conv2d",(function(){return gr})),n.d(t,"conv2dTranspose",(function(){return yr})),n.d(t,"conv3d",(function(){return kr})),n.d(t,"conv3dTranspose",(function(){return Ir})),n.d(t,"cos",(function(){return Sr})),n.d(t,"cosh",(function(){return _r})),n.d(t,"cumsum",(function(){return Or})),n.d(t,"denseBincount",(function(){return Tr})),n.d(t,"depthToSpace",(function(){return Cr})),n.d(t,"depthwiseConv2d",(function(){return $r})),n.d(t,"diag",(function(){return Er})),n.d(t,"dilation2d",(function(){return Ar})),n.d(t,"div",(function(){return Ht})),n.d(t,"divNoNan",(function(){return Fr})),n.d(t,"dot",(function(){return Mr})),n.d(t,"einsum",(function(){return Dr})),n.d(t,"elu",(function(){return jr})),n.d(t,"equal",(function(){return Nr})),n.d(t,"erf",(function(){return Pr})),n.d(t,"exp",(function(){return Br})),n.d(t,"expandDims",(function(){return Lr})),n.d(t,"expm1",(function(){return Wr})),n.d(t,"eye",(function(){return Ur})),n.d(t,"fill",(function(){return un})),n.d(t,"floor",(function(){return Vr})),n.d(t,"floorDiv",(function(){return Gt})),n.d(t,"gather",(function(){return Gr})),n.d(t,"greater",(function(){return Hr})),n.d(t,"greaterEqual",(function(){return qr})),n.d(t,"imag",(function(){return Kr})),n.d(t,"isFinite",(function(){return Xr})),n.d(t,"isInf",(function(){return Yr})),n.d(t,"isNaN",(function(){return Zr})),n.d(t,"leakyRelu",(function(){return Qr})),n.d(t,"less",(function(){return Jr})),n.d(t,"lessEqual",(function(){return ea})),n.d(t,"linspace",(function(){return ta})),n.d(t,"localResponseNormalization",(function(){return na})),n.d(t,"log",(function(){return ra})),n.d(t,"log1p",(function(){return aa})),n.d(t,"logSigmoid",(function(){return ia})),n.d(t,"logSoftmax",(function(){return la})),n.d(t,"logSumExp",(function(){return va})),n.d(t,"logicalAnd",(function(){return ya})),n.d(t,"logicalNot",(function(){return ka})),n.d(t,"logicalOr",(function(){return wa})),n.d(t,"logicalXor",(function(){return Ia})),n.d(t,"matMul",(function(){return Ce})),n.d(t,"max",(function(){return ua})),n.d(t,"maxPool",(function(){return Sa})),n.d(t,"maxPool3d",(function(){return _a})),n.d(t,"maxPoolWithArgmax",(function(){return Oa})),n.d(t,"maximum",(function(){return gn})),n.d(t,"mean",(function(){return Ta})),n.d(t,"meshgrid",(function(){return Ea})),n.d(t,"min",(function(){return Aa})),n.d(t,"minimum",(function(){return Na})),n.d(t,"mirrorPad",(function(){return Ra})),n.d(t,"mod",(function(){return Fa})),n.d(t,"moments",(function(){return Ma})),n.d(t,"mul",(function(){return qt})),n.d(t,"multiRNNCell",(function(){return Da})),n.d(t,"multinomial",(function(){return ja})),n.d(t,"neg",(function(){return sa})),n.d(t,"notEqual",(function(){return Pa})),n.d(t,"oneHot",(function(){return $e})),n.d(t,"ones",(function(){return $a})),n.d(t,"onesLike",(function(){return Ba})),n.d(t,"outerProduct",(function(){return La})),n.d(t,"pad",(function(){return Wa})),n.d(t,"pad1d",(function(){return za})),n.d(t,"pad2d",(function(){return Ua})),n.d(t,"pad3d",(function(){return Va})),n.d(t,"pad4d",(function(){return Ga})),n.d(t,"pool",(function(){return qa})),n.d(t,"pow",(function(){return ln})),n.d(t,"prelu",(function(){return Ka})),n.d(t,"print",(function(){return ie})),n.d(t,"prod",(function(){return Xa})),n.d(t,"rand",(function(){return Ya})),n.d(t,"randomGamma",(function(){return ts})),n.d(t,"randomNormal",(function(){return ns})),n.d(t,"randomUniform",(function(){return rs})),n.d(t,"range",(function(){return as})),n.d(t,"real",(function(){return ss})),n.d(t,"reciprocal",(function(){return os})),n.d(t,"relu",(function(){return is})),n.d(t,"relu6",(function(){return us})),n.d(t,"reshape",(function(){return Kn})),n.d(t,"reverse",(function(){return cs})),n.d(t,"reverse1d",(function(){return ls})),n.d(t,"reverse2d",(function(){return ds})),n.d(t,"reverse3d",(function(){return ps})),n.d(t,"reverse4d",(function(){return hs})),n.d(t,"round",(function(){return fs})),n.d(t,"rsqrt",(function(){return ms})),n.d(t,"scalar",(function(){return an})),n.d(t,"selu",(function(){return bs})),n.d(t,"separableConv2d",(function(){return gs})),n.d(t,"setdiff1dAsync",(function(){return xs})),n.d(t,"sigmoid",(function(){return Qn})),n.d(t,"sign",(function(){return vs})),n.d(t,"sin",(function(){return ys})),n.d(t,"sinh",(function(){return ks})),n.d(t,"slice",(function(){return Jn})),n.d(t,"slice1d",(function(){return ws})),n.d(t,"slice2d",(function(){return Is})),n.d(t,"slice3d",(function(){return Ss})),n.d(t,"slice4d",(function(){return _s})),n.d(t,"softmax",(function(){return Os})),n.d(t,"softplus",(function(){return oa})),n.d(t,"spaceToBatchND",(function(){return Ha})),n.d(t,"fft",(function(){return Ts})),n.d(t,"ifft",(function(){return Cs})),n.d(t,"irfft",(function(){return $s})),n.d(t,"rfft",(function(){return As})),n.d(t,"split",(function(){return Es})),n.d(t,"sqrt",(function(){return Kt})),n.d(t,"square",(function(){return Xt})),n.d(t,"squaredDifference",(function(){return Ns})),n.d(t,"squeeze",(function(){return Rs})),n.d(t,"stack",(function(){return Fs})),n.d(t,"step",(function(){return Ms})),n.d(t,"stridedSlice",(function(){return Ds})),n.d(t,"sub",(function(){return dn})),n.d(t,"sum",(function(){return ca})),n.d(t,"tan",(function(){return js})),n.d(t,"tanh",(function(){return er})),n.d(t,"tensor",(function(){return Ps.a})),n.d(t,"tensor1d",(function(){return Bs})),n.d(t,"tensor2d",(function(){return Ls})),n.d(t,"tensor3d",(function(){return Fe})),n.d(t,"tensor4d",(function(){return Ws})),n.d(t,"tensor5d",(function(){return zs})),n.d(t,"tensor6d",(function(){return Us})),n.d(t,"tile",(function(){return zr})),n.d(t,"topk",(function(){return Vs})),n.d(t,"truncatedNormal",(function(){return Gs})),n.d(t,"unique",(function(){return Hs})),n.d(t,"unsortedSegmentSum",(function(){return qs})),n.d(t,"unstack",(function(){return Ks})),n.d(t,"variable",(function(){return Xs})),n.d(t,"where",(function(){return Rr})),n.d(t,"whereAsync",(function(){return Zs})),n.d(t,"zeros",(function(){return Ca})),n.d(t,"zerosLike",(function(){return Yt})),n.d(t,"booleanMaskAsync",(function(){return Qs})),n.d(t,"transpose",(function(){return Ee})),n.d(t,"norm",(function(){return eo})),n.d(t,"movingAverage",(function(){return to})),n.d(t,"scatterND",(function(){return no})),n.d(t,"sparseToDense",(function(){return ro})),n.d(t,"gatherND",(function(){return ao})),n.d(t,"dropout",(function(){return so})),n.d(t,"enclosingPowerOfTwo",(function(){return oo})),n.d(t,"cosineWindow",(function(){return io})),n.d(t,"inTopKAsync",(function(){return uo})),n.d(t,"op",(function(){return ae.b})),n.d(t,"OP_SCOPE_SUFFIX",(function(){return ae.a})),n.d(t,"image",(function(){return gi})),n.d(t,"linalg",(function(){return xi})),n.d(t,"losses",(function(){return vi})),n.d(t,"spectral",(function(){return mi})),n.d(t,"fused",(function(){return d})),n.d(t,"signal",(function(){return bi})),n.d(t,"sparse",(function(){return yi})),n.d(t,"string",(function(){return ki})),n.d(t,"Reduction",(function(){return Qo})),n.d(t,"train",(function(){return Ii})),n.d(t,"enableProdMode",(function(){return It})),n.d(t,"enableDebugMode",(function(){return St})),n.d(t,"disableDeprecationWarnings",(function(){return _t})),n.d(t,"deprecationWarn",(function(){return Ot})),n.d(t,"disposeVariables",(function(){return Tt})),n.d(t,"engine",(function(){return Ct})),n.d(t,"memory",(function(){return $t})),n.d(t,"profile",(function(){return Et})),n.d(t,"tidy",(function(){return At})),n.d(t,"dispose",(function(){return Nt})),n.d(t,"keep",(function(){return Rt})),n.d(t,"time",(function(){return Ft})),n.d(t,"setBackend",(function(){return Mt})),n.d(t,"ready",(function(){return Dt})),n.d(t,"getBackend",(function(){return jt})),n.d(t,"removeBackend",(function(){return Pt})),n.d(t,"findBackend",(function(){return Bt})),n.d(t,"findBackendFactory",(function(){return Lt})),n.d(t,"registerBackend",(function(){return Wt})),n.d(t,"backend",(function(){return zt})),n.d(t,"setPlatform",(function(){return Ut})),n.d(t,"getKernel",(function(){return Ne.c})),n.d(t,"getGradient",(function(){return Ne.b})),n.d(t,"getKernelsForBackend",(function(){return Ne.d})),n.d(t,"registerKernel",(function(){return Ne.f})),n.d(t,"registerGradient",(function(){return Ne.e})),n.d(t,"unregisterKernel",(function(){return Ne.h})),n.d(t,"unregisterGradient",(function(){return Ne.g})),n.d(t,"copyRegisteredKernels",(function(){return Ne.a})),n.d(t,"customGrad",(function(){return nn})),n.d(t,"grad",(function(){return Zt})),n.d(t,"grads",(function(){return Qt})),n.d(t,"valueAndGrad",(function(){return Jt})),n.d(t,"valueAndGrads",(function(){return en})),n.d(t,"variableGrads",(function(){return tn})),n.d(t,"Environment",(function(){return b.b})),n.d(t,"env",(function(){return b.c})),n.d(t,"ENV",(function(){return b.a})),n.d(t,"version_core",(function(){return wt})),n.d(t,"nextFrame",(function(){return Si.a})),n.d(t,"browser",(function(){return s})),n.d(t,"io",(function(){return r})),n.d(t,"math",(function(){return a})),n.d(t,"serialization",(function(){return c})),n.d(t,"test_util",(function(){return l})),n.d(t,"util",(function(){return lt})),n.d(t,"backend_util",(function(){return h})),n.d(t,"tensor_util",(function(){return Te})),n.d(t,"slice_util",(function(){return u})),n.d(t,"gather_util",(function(){return o})),n.d(t,"scatter_util",(function(){return i})),n.d(t,"device_util",(function(){return pu})),n.d(t,"kernel_impls",(function(){return f})),n.d(t,"KernelBackend",(function(){return hu.b})),n.d(t,"DataStorage",(function(){return hu.a})),n.d(t,"Abs",(function(){return ne.a})),n.d(t,"Acos",(function(){return ne.b})),n.d(t,"Acosh",(function(){return ne.c})),n.d(t,"Add",(function(){return ne.d})),n.d(t,"AddN",(function(){return ne.e})),n.d(t,"All",(function(){return ne.f})),n.d(t,"Any",(function(){return ne.g})),n.d(t,"ArgMax",(function(){return ne.h})),n.d(t,"ArgMin",(function(){return ne.i})),n.d(t,"Asin",(function(){return ne.j})),n.d(t,"Asinh",(function(){return ne.k})),n.d(t,"Atan",(function(){return ne.l})),n.d(t,"Atanh",(function(){return ne.n})),n.d(t,"Atan2",(function(){return ne.m})),n.d(t,"AvgPool",(function(){return ne.o})),n.d(t,"AvgPoolGrad",(function(){return ne.r})),n.d(t,"AvgPool3D",(function(){return ne.p})),n.d(t,"AvgPool3DGrad",(function(){return ne.q})),n.d(t,"BatchMatMul",(function(){return ne.s})),n.d(t,"BatchToSpaceND",(function(){return ne.t})),n.d(t,"Bincount",(function(){return ne.u})),n.d(t,"BroadcastTo",(function(){return ne.w})),n.d(t,"BroadcastArgs",(function(){return ne.v})),n.d(t,"Cast",(function(){return ne.x})),n.d(t,"Ceil",(function(){return ne.y})),n.d(t,"ClipByValue",(function(){return ne.z})),n.d(t,"Complex",(function(){return ne.A})),n.d(t,"ComplexAbs",(function(){return ne.B})),n.d(t,"Concat",(function(){return ne.C})),n.d(t,"Conv2D",(function(){return ne.D})),n.d(t,"Conv2DBackpropFilter",(function(){return ne.E})),n.d(t,"Conv2DBackpropInput",(function(){return ne.F})),n.d(t,"Conv3D",(function(){return ne.G})),n.d(t,"Conv3DBackpropFilterV2",(function(){return ne.H})),n.d(t,"Conv3DBackpropInputV2",(function(){return ne.I})),n.d(t,"Cos",(function(){return ne.J})),n.d(t,"Cosh",(function(){return ne.K})),n.d(t,"Cumsum",(function(){return ne.M})),n.d(t,"CropAndResize",(function(){return ne.L})),n.d(t,"DenseBincount",(function(){return ne.N})),n.d(t,"DepthToSpace",(function(){return ne.O})),n.d(t,"DepthwiseConv2dNative",(function(){return ne.P})),n.d(t,"DepthwiseConv2dNativeBackpropFilter",(function(){return ne.Q})),n.d(t,"DepthwiseConv2dNativeBackpropInput",(function(){return ne.R})),n.d(t,"Diag",(function(){return ne.S})),n.d(t,"Dilation2D",(function(){return ne.T})),n.d(t,"Dilation2DBackpropInput",(function(){return ne.V})),n.d(t,"Dilation2DBackpropFilter",(function(){return ne.U})),n.d(t,"RealDiv",(function(){return ne.mc})),n.d(t,"Einsum",(function(){return ne.W})),n.d(t,"Elu",(function(){return ne.X})),n.d(t,"EluGrad",(function(){return ne.Y})),n.d(t,"Erf",(function(){return ne.ab})),n.d(t,"Equal",(function(){return ne.Z})),n.d(t,"Exp",(function(){return ne.bb})),n.d(t,"ExpandDims",(function(){return ne.cb})),n.d(t,"Expm1",(function(){return ne.db})),n.d(t,"FFT",(function(){return ne.eb})),n.d(t,"Fill",(function(){return ne.fb})),n.d(t,"FlipLeftRight",(function(){return ne.gb})),n.d(t,"Floor",(function(){return ne.hb})),n.d(t,"FloorDiv",(function(){return ne.ib})),n.d(t,"FusedBatchNorm",(function(){return ne.kb})),n.d(t,"GatherV2",(function(){return ne.ob})),n.d(t,"GatherNd",(function(){return ne.nb})),n.d(t,"Greater",(function(){return ne.pb})),n.d(t,"GreaterEqual",(function(){return ne.qb})),n.d(t,"Identity",(function(){return ne.sb})),n.d(t,"IFFT",(function(){return ne.rb})),n.d(t,"Imag",(function(){return ne.tb})),n.d(t,"IsFinite",(function(){return ne.ub})),n.d(t,"IsInf",(function(){return ne.vb})),n.d(t,"IsNan",(function(){return ne.wb})),n.d(t,"LeakyRelu",(function(){return ne.zb})),n.d(t,"Less",(function(){return ne.Ab})),n.d(t,"LessEqual",(function(){return ne.Bb})),n.d(t,"LinSpace",(function(){return ne.Cb})),n.d(t,"Log",(function(){return ne.Db})),n.d(t,"Log1p",(function(){return ne.Eb})),n.d(t,"LogicalAnd",(function(){return ne.Gb})),n.d(t,"LogicalNot",(function(){return ne.Hb})),n.d(t,"LogicalOr",(function(){return ne.Ib})),n.d(t,"LogSoftmax",(function(){return ne.Fb})),n.d(t,"LRN",(function(){return ne.xb})),n.d(t,"LRNGrad",(function(){return ne.yb})),n.d(t,"Max",(function(){return ne.Jb})),n.d(t,"Maximum",(function(){return ne.Pb})),n.d(t,"MaxPool",(function(){return ne.Kb})),n.d(t,"MaxPoolGrad",(function(){return ne.Nb})),n.d(t,"MaxPool3D",(function(){return ne.Lb})),n.d(t,"MaxPool3DGrad",(function(){return ne.Mb})),n.d(t,"MaxPoolWithArgmax",(function(){return ne.Ob})),n.d(t,"Mean",(function(){return ne.Qb})),n.d(t,"Min",(function(){return ne.Rb})),n.d(t,"Minimum",(function(){return ne.Sb})),n.d(t,"MirrorPad",(function(){return ne.Tb})),n.d(t,"Mod",(function(){return ne.Ub})),n.d(t,"Multinomial",(function(){return ne.Vb})),n.d(t,"Multiply",(function(){return ne.Wb})),n.d(t,"Neg",(function(){return ne.Xb})),n.d(t,"NotEqual",(function(){return ne.bc})),n.d(t,"NonMaxSuppressionV3",(function(){return ne.Yb})),n.d(t,"NonMaxSuppressionV4",(function(){return ne.Zb})),n.d(t,"NonMaxSuppressionV5",(function(){return ne.ac})),n.d(t,"OnesLike",(function(){return ne.dc})),n.d(t,"OneHot",(function(){return ne.cc})),n.d(t,"Pack",(function(){return ne.ec})),n.d(t,"PadV2",(function(){return ne.fc})),n.d(t,"Pool",(function(){return ne.gc})),n.d(t,"Pow",(function(){return ne.hc})),n.d(t,"Prelu",(function(){return ne.ic})),n.d(t,"Prod",(function(){return ne.jc})),n.d(t,"Range",(function(){return ne.kc})),n.d(t,"Real",(function(){return ne.lc})),n.d(t,"Reciprocal",(function(){return ne.nc})),n.d(t,"Relu",(function(){return ne.oc})),n.d(t,"Reshape",(function(){return ne.qc})),n.d(t,"ResizeNearestNeighbor",(function(){return ne.tc})),n.d(t,"ResizeNearestNeighborGrad",(function(){return ne.uc})),n.d(t,"ResizeBilinear",(function(){return ne.rc})),n.d(t,"ResizeBilinearGrad",(function(){return ne.sc})),n.d(t,"Relu6",(function(){return ne.pc})),n.d(t,"Reverse",(function(){return ne.vc})),n.d(t,"Round",(function(){return ne.xc})),n.d(t,"Rsqrt",(function(){return ne.yc})),n.d(t,"ScatterNd",(function(){return ne.zc})),n.d(t,"Select",(function(){return ne.Ac})),n.d(t,"Selu",(function(){return ne.Bc})),n.d(t,"Slice",(function(){return ne.Gc})),n.d(t,"Sin",(function(){return ne.Ec})),n.d(t,"Sinh",(function(){return ne.Fc})),n.d(t,"Sign",(function(){return ne.Dc})),n.d(t,"Sigmoid",(function(){return ne.Cc})),n.d(t,"Softplus",(function(){return ne.Ic})),n.d(t,"Sqrt",(function(){return ne.Qc})),n.d(t,"Sum",(function(){return ne.Zc})),n.d(t,"SpaceToBatchND",(function(){return ne.Jc})),n.d(t,"SplitV",(function(){return ne.Pc})),n.d(t,"Softmax",(function(){return ne.Hc})),n.d(t,"SparseFillEmptyRows",(function(){return ne.Kc})),n.d(t,"SparseReshape",(function(){return ne.Lc})),n.d(t,"SparseSegmentMean",(function(){return ne.Mc})),n.d(t,"SparseSegmentSum",(function(){return ne.Nc})),n.d(t,"SparseToDense",(function(){return ne.Oc})),n.d(t,"SquaredDifference",(function(){return ne.Sc})),n.d(t,"Square",(function(){return ne.Rc})),n.d(t,"StridedSlice",(function(){return ne.Uc})),n.d(t,"StringNGrams",(function(){return ne.Vc})),n.d(t,"StringSplit",(function(){return ne.Wc})),n.d(t,"StringToHashBucketFast",(function(){return ne.Xc})),n.d(t,"Sub",(function(){return ne.Yc})),n.d(t,"Tan",(function(){return ne.ad})),n.d(t,"Tanh",(function(){return ne.bd})),n.d(t,"Tile",(function(){return ne.cd})),n.d(t,"TopK",(function(){return ne.dd})),n.d(t,"Transform",(function(){return ne.ed})),n.d(t,"Transpose",(function(){return ne.fd})),n.d(t,"Unique",(function(){return ne.gd})),n.d(t,"Unpack",(function(){return ne.hd})),n.d(t,"UnsortedSegmentSum",(function(){return ne.id})),n.d(t,"ZerosLike",(function(){return ne.jd})),n.d(t,"Step",(function(){return ne.Tc})),n.d(t,"FromPixels",(function(){return ne.jb})),n.d(t,"RotateWithOffset",(function(){return ne.wc})),n.d(t,"_FusedMatMul",(function(){return ne.kd})),n.d(t,"FusedConv2D",(function(){return ne.lb})),n.d(t,"FusedDepthwiseConv2D",(function(){return ne.mb}));var r={};n.r(r),n.d(r,"copyModel",(function(){return Z})),n.d(r,"listModels",(function(){return X})),n.d(r,"moveModel",(function(){return Q})),n.d(r,"removeModel",(function(){return Y})),n.d(r,"browserFiles",(function(){return pe})),n.d(r,"browserHTTPRequest",(function(){return we})),n.d(r,"concatenateArrayBuffers",(function(){return g.d})),n.d(r,"decodeWeights",(function(){return g.e})),n.d(r,"encodeWeights",(function(){return g.f})),n.d(r,"fromMemory",(function(){return _e})),n.d(r,"getLoadHandlers",(function(){return w})),n.d(r,"getModelArtifactsForJSON",(function(){return g.g})),n.d(r,"getModelArtifactsInfoForJSON",(function(){return g.h})),n.d(r,"getSaveHandlers",(function(){return k})),n.d(r,"http",(function(){return ke})),n.d(r,"isHTTPScheme",(function(){return ve})),n.d(r,"loadWeights",(function(){return be})),n.d(r,"registerLoadRouter",(function(){return y})),n.d(r,"registerSaveRouter",(function(){return v})),n.d(r,"weightsLoaderFactory",(function(){return ge})),n.d(r,"withSaveHandler",(function(){return Oe}));var a={};n.r(a),n.d(a,"confusionMatrix",(function(){return Ae}));var s={};n.r(s),n.d(s,"fromPixelsAsync",(function(){return Pe})),n.d(s,"toPixels",(function(){return Be})),n.d(s,"fromPixels",(function(){return Le}));var o={};n.r(o),n.d(o,"prepareAndValidate",(function(){return We}));var i={};n.r(i),n.d(i,"validateUpdateShape",(function(){return ze})),n.d(i,"validateInput",(function(){return Ue})),n.d(i,"calculateShapes",(function(){return Ve}));var u={};n.r(u),n.d(u,"assertParamsValid",(function(){return Ge})),n.d(u,"maskToAxes",(function(){return He})),n.d(u,"computeOutShape",(function(){return qe})),n.d(u,"stridesWithElidedDims",(function(){return Ke})),n.d(u,"getNormalizedAxes",(function(){return Ze})),n.d(u,"startIndicesWithElidedDims",(function(){return Qe})),n.d(u,"stopIndicesWithElidedDims",(function(){return Je})),n.d(u,"stridesForAxis",(function(){return et})),n.d(u,"startForAxis",(function(){return tt})),n.d(u,"stopForAxis",(function(){return nt})),n.d(u,"isSliceContinous",(function(){return rt})),n.d(u,"computeFlatOffset",(function(){return at})),n.d(u,"parseSliceParams",(function(){return st})),n.d(u,"sliceInfo",(function(){return ot}));var c={};n.r(c),n.d(c,"Serializable",(function(){return it})),n.d(c,"SerializationMap",(function(){return ut})),n.d(c,"registerClass",(function(){return ct}));var l={};n.r(l),n.d(l,"TEST_EPSILON_FLOAT16",(function(){return dt})),n.d(l,"expectArraysClose",(function(){return pt})),n.d(l,"testEpsilon",(function(){return ht})),n.d(l,"expectPromiseToFail",(function(){return mt})),n.d(l,"expectArraysEqual",(function(){return bt})),n.d(l,"expectNumbersClose",(function(){return gt})),n.d(l,"expectValuesInRange",(function(){return vt})),n.d(l,"expectArrayBuffersEqual",(function(){return yt})),n.d(l,"encodeStrings",(function(){return kt}));var d={};n.r(d),n.d(d,"conv2d",(function(){return mo})),n.d(d,"depthwiseConv2d",(function(){return xo})),n.d(d,"matMul",(function(){return vo}));var p={};n.r(p),n.d(p,"segOpComputeOptimalWindowSize",(function(){return iu})),n.d(p,"computeOutShape",(function(){return uu})),n.d(p,"collectGatherOpShapeInfo",(function(){return cu}));var h={};n.r(h),n.d(h,"axesAreInnerMostDims",(function(){return da})),n.d(h,"combineLocations",(function(){return pa})),n.d(h,"computeOutAndReduceShapes",(function(){return ha})),n.d(h,"expandShapeToKeepDim",(function(){return fa})),n.d(h,"assertAxesAreInnerMostDims",(function(){return ma})),n.d(h,"getAxesPermutation",(function(){return ba})),n.d(h,"getUndoAxesPermutation",(function(){return ga})),n.d(h,"getInnerMostAxes",(function(){return xa})),n.d(h,"getBroadcastDims",(function(){return fn})),n.d(h,"getReductionAxes",(function(){return mn})),n.d(h,"assertAndGetBroadcastShape",(function(){return bn})),n.d(h,"assertParamsConsistent",(function(){return _i})),n.d(h,"computeOutShape",(function(){return Oi})),n.d(h,"computeDilation2DInfo",(function(){return Mn})),n.d(h,"computePool2DInfo",(function(){return Dn})),n.d(h,"computePool3DInfo",(function(){return jn})),n.d(h,"computeConv2DInfo",(function(){return Pn})),n.d(h,"computeConv3DInfo",(function(){return Bn})),n.d(h,"computeDefaultPad",(function(){return Ln})),n.d(h,"tupleValuesAreOne",(function(){return Gn})),n.d(h,"eitherStridesOrDilationsAreOne",(function(){return Hn})),n.d(h,"convertConv2DDataFormat",(function(){return qn})),n.d(h,"getFusedDyActivation",(function(){return lo})),n.d(h,"getFusedBiasGradient",(function(){return po})),n.d(h,"applyActivation",(function(){return ho})),n.d(h,"shouldFuse",(function(){return fo})),n.d(h,"PARALLELIZE_THRESHOLD",(function(){return Ti})),n.d(h,"computeOptimalWindowSize",(function(){return Ci})),n.d(h,"slice_util",(function(){return u})),n.d(h,"upcastType",(function(){return wn.c})),n.d(h,"getImageCenter",(function(){return $i})),n.d(h,"getReshaped",(function(){return Ei})),n.d(h,"getPermuted",(function(){return Ai})),n.d(h,"getReshapedPermuted",(function(){return Ni})),n.d(h,"getSliceBeginCoords",(function(){return Ri})),n.d(h,"getSliceSize",(function(){return Fi})),n.d(h,"prepareAndValidate",(function(){return We})),n.d(h,"validateUpdateShape",(function(){return ze})),n.d(h,"validateInput",(function(){return Ue})),n.d(h,"calculateShapes",(function(){return Ve})),n.d(h,"SELU_SCALEALPHA",(function(){return Mi})),n.d(h,"SELU_SCALE",(function(){return Di})),n.d(h,"ERF_P",(function(){return ji})),n.d(h,"ERF_A1",(function(){return Pi})),n.d(h,"ERF_A2",(function(){return Bi})),n.d(h,"ERF_A3",(function(){return Li})),n.d(h,"ERF_A4",(function(){return Wi})),n.d(h,"ERF_A5",(function(){return zi})),n.d(h,"warn",(function(){return Ui.b})),n.d(h,"log",(function(){return Ui.a})),n.d(h,"mergeRealAndImagArrays",(function(){return Vi})),n.d(h,"splitRealAndImagArrays",(function(){return Gi})),n.d(h,"complexWithEvenIndex",(function(){return Hi})),n.d(h,"complexWithOddIndex",(function(){return qi})),n.d(h,"getComplexWithIndex",(function(){return Ki})),n.d(h,"assignToTypedArray",(function(){return Xi})),n.d(h,"exponents",(function(){return Yi})),n.d(h,"exponent",(function(){return Zi})),n.d(h,"decodeEinsumEquation",(function(){return eu})),n.d(h,"getEinsumPermutation",(function(){return tu})),n.d(h,"checkEinsumDimSizes",(function(){return nu})),n.d(h,"getEinsumComputePath",(function(){return ru})),n.d(h,"isIdentityPermutation",(function(){return au})),n.d(h,"prepareSplitSize",(function(){return ou})),n.d(h,"segment_util",(function(){return p})),n.d(h,"fromUint8ToStringArray",(function(){return lu})),n.d(h,"fromStringArrayToUint8",(function(){return du}));var f={};n.r(f),n.d(f,"nonMaxSuppressionV3Impl",(function(){return No})),n.d(f,"nonMaxSuppressionV4Impl",(function(){return Ro})),n.d(f,"nonMaxSuppressionV5Impl",(function(){return Fo})),n.d(f,"whereImpl",(function(){return Ys}));var m=n(3),b=(n(47),n(9)),g=n(16);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class x{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==x.instance&&(x.instance=new x),x.instance}static registerSaveRouter(e){x.getInstance().saveRouters.push(e)}static registerLoadRouter(e){x.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return x.getHandlers(e,"save")}static getLoadHandlers(e,t){return x.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?x.getInstance().loadRouters:x.getInstance().saveRouters).forEach((t=>{const a=t(e,n);null!==a&&r.push(a)})),r}}const v=e=>x.registerSaveRouter(e),y=e=>x.registerLoadRouter(e),k=e=>x.getSaveHandlers(e),w=(e,t)=>x.getLoadHandlers(e,t)
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */,I="tensorflowjs",S="models_store",_="model_info_store";function O(){if(!Object(b.c)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function T(e){const t=e.result;t.createObjectStore(S,{keyPath:"modelPath"}),t.createObjectStore(_,{keyPath:"modelPath"})}class C{constructor(e){if(this.indexedDB=O(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(I,1);r.onupgradeneeded=()=>T(r),r.onsuccess=()=>{const a=r.result;if(null==t){const t=a.transaction(S,"readonly"),r=t.objectStore(S).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{const r=Object(g.h)(t),s=a.transaction(_,"readwrite");let o=s.objectStore(_);const i=o.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;i.onsuccess=()=>{u=a.transaction(S,"readwrite");const i=u.objectStore(S).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});i.onsuccess=()=>e({modelArtifactsInfo:r}),i.onerror=e=>{o=s.objectStore(_);const t=o.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(i.error)),t.onerror=e=>(a.close(),n(i.error))}},i.onerror=e=>(a.close(),n(i.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)}))}}C.URL_SCHEME="indexeddb://";const $=e=>{return Object(b.c)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(C.URL_SCHEME)?(t=e.slice(C.URL_SCHEME.length),new C(t)):null;var t};x.registerSaveRouter($),x.registerLoadRouter($);class E{constructor(){this.indexedDB=O()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(I,1);n.onupgradeneeded=()=>T(n),n.onsuccess=()=>{const r=n.result,a=r.transaction(_,"readonly"),s=a.objectStore(_).getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(C.URL_SCHEME)?t.slice(C.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(I,1);r.onupgradeneeded=()=>T(r),r.onsuccess=()=>{const a=r.result,s=a.transaction(_,"readwrite"),o=s.objectStore(_),i=o.get(e);let u;i.onsuccess=()=>{if(null==i.result)return a.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=o.delete(e),s=()=>{u=a.transaction(S,"readwrite");const r=u.objectStore(S).delete(e);r.onsuccess=()=>t(i.result.modelArtifactsInfo),r.onerror=e=>n(i.error)};r.onsuccess=s,r.onerror=e=>(s(),a.close(),n(i.error))}},i.onerror=e=>(a.close(),n(i.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}},r.onerror=e=>n(r.error)}))}}var A=n(15);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N="/",R="tensorflowjs_models",F="info",M="model_topology",D="weight_specs",j="weight_data",P="model_metadata";function B(e){return{info:[R,e,F].join(N),topology:[R,e,M].join(N),weightSpecs:[R,e,D].join(N),weightData:[R,e,j].join(N),modelMetadata:[R,e,P].join(N)}}function L(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function W(e){const t=e.split(N);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(N)}class z{constructor(e){if(!Object(b.c)().getBool("IS_BROWSER")||"undefined"==typeof window||"undefined"==typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=B(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=Object(g.h)(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,Object(g.a)(e.weightData));const a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:r}}catch(e){throw L(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=Object(g.b)(s),t}}z.URL_SCHEME="localstorage://";const U=e=>{return Object(b.c)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(z.URL_SCHEME)?(t=e.slice(z.URL_SCHEME.length),new z(t)):null;var t};x.registerSaveRouter(U),x.registerLoadRouter(U);class V{constructor(){Object(A.b)(Object(b.c)().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),Object(A.b)("undefined"==typeof window||"undefined"!=typeof window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=R+N,n=N+F;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);if(a.startsWith(t)&&a.endsWith(n)){e[W(a)]=JSON.parse(this.LS.getItem(a))}}return e}async removeModel(e){var t;const n=B(e=(t=e).startsWith(z.URL_SCHEME)?t.slice(z.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return L(n),r}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G="://";class H{constructor(){this.managers={}}static getInstance(){return null==H.instance&&(H.instance=new H),H.instance}static registerManager(e,t){Object(A.b)(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(G)&&(e=e.slice(0,e.indexOf(G))),Object(A.b)(e.length>0,(()=>"scheme must not be an empty string."));const n=H.getInstance();Object(A.b)(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}function q(e){if(-1===e.indexOf(G))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${H.getSchemes().join(",")}`);return{scheme:e.split(G)[0],path:e.split(G)[1]}}async function K(e,t,n=!1){Object(A.b)(e!==t,(()=>`Old path and new path are the same: '${e}'`));const r=x.getLoadHandlers(e);Object(A.b)(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),Object(A.b)(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));const a=r[0],s=x.getSaveHandlers(t);Object(A.b)(s.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),Object(A.b)(s.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));const o=s[0],i=q(e).scheme,u=q(e).path,c=i===q(e).scheme,l=await a.load();n&&c&&await H.getManager(i).removeModel(u);const d=await o.save(l);return n&&!c&&await H.getManager(i).removeModel(u),d.modelArtifactsInfo}async function X(){const e=H.getSchemes(),t={};for(const n of e){const e=await H.getManager(n).listModels();for(const r in e){t[n+G+r]=e[r]}}return t}async function Y(e){const t=q(e);return H.getManager(t.scheme).removeModel(t.path)}async function Z(e,t){return K(e,t,!1)}async function Q(e,t){return K(e,t,!0)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class J{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(Object(b.c)().get("IS_BROWSER")){Object(b.c)().setPlatform("browser",new J);try{H.registerManager(z.URL_SCHEME,new V)}catch(e){}try{H.registerManager(C.URL_SCHEME,new E)}catch(e){}}n(107);var ee=n(14);
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function te(e,t="float32",n){return t=t||"float32",A.c(e),new ee.b(e,t,n)}var ne=n(4),re=n(1),ae=n(2);const se=Object(ae.b)({cast_:
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t){const n=Object(re.a)(e,"x","cast");if(!A.B(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},a={dtype:t};return m.a.runKernel(ne.x,r,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oe=Object(ae.b)({clone_:function(e){const t={x:Object(re.a)(e,"x","clone","string_or_numeric")};return m.a.runKernel(ne.sb,t)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ie(e,t=!1){console.log(e.toString(t))}
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(m.b)();const ue={buffer:te,cast:se,clone:oe,print:ie};Object(ee.e)(ue);function ce(e){return new Promise((e=>setTimeout(e))).then(e)}class le{constructor(e){if(!Object(b.c)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(le.URL_SCHEME)&&(e=e.slice(le.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r=Object(g.i)(e,n),a=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),s=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(s.download=this.modelJsonFileName,s.href=a,await ce((()=>s.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await ce((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Object(g.h)(e)}}}}le.URL_SCHEME="downloads://";class de{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),a=r.modelTopology;if(null==a)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:a});const s=Object(g.g)(r,(e=>this.loadWeights(e)));e(s)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const r of e)t.push(...r.weights),n.push(...r.paths);const r=this.checkManifestAndWeightFiles(e),a=n.map((e=>this.loadWeightsFile(e,r[e])));return Promise.all(a).then((e=>[t,Object(g.d)(e)]))}loadWeightsFile(e,t){return new Promise(((n,r)=>{const a=new FileReader;a.onload=e=>{const t=e.target.result;n(t)},a.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),a.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>Object(g.c)(e.name))),r={};for(const a of e)a.paths.forEach((e=>{const a=Object(g.c)(e);if(-1!==t.indexOf(a))throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(t.push(a),-1===n.indexOf(a))throw new Error(`Weight file with basename '${a}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(a)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}function pe(e){return new de(e)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function he(e,t,n,r){!function(e){Object(A.b)(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){Object(A.b)(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),Object(A.b)(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),Object(A.b)(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let a=0;return Promise.all(e.map((s=>(s.then((s=>{const o=n+ ++a/e.length*(r-n);return t(o),s})),s))))}x.registerSaveRouter((e=>Object(b.c)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(le.URL_SCHEME)?function(e="model"){return new le(e)}(e.slice(le.URL_SCHEME.length)):null));var fe=n(50);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function me(e,t){null==t&&(t={});const n=null==t.fetchFunc?Object(b.c)().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),a=(null==t.onProgress?await Promise.all(r):await he(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(a):await he(a,t.onProgress,.5,1)}async function be(e,t="",n,r){return ge((e=>me(e,{requestInit:r})))(e,t,n)}function ge(e){return async(t,n="",r)=>{const a=t.map((()=>!1)),s={},o=null!=r?r.map((()=>!1)):[],i=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const u="quantization"in e?e.quantization.dtype:e.dtype,c=fe.a[u]*A.O(e.shape),l=()=>{a[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:c})};null!=r?r.forEach(((t,n)=>{t===e.name&&(l(),o[n]=!0)})):l(),i.push(e.name),n+=c}))})),!o.every((e=>e))){const e=r.filter(((e,t)=>!o[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${i.join(", ")}.`)}const u=a.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),c=[];u.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;c.push(t)}))}));const l=await e(c),d={};let p=0;return u.forEach((e=>{const n=t[e].paths.length;let r=0;for(let e=0;e<n;e++)r+=l[p+e].byteLength;const a=new ArrayBuffer(r),o=new Uint8Array(a);let i=0;for(let e=0;e<n;e++){const t=new Uint8Array(l[p+e]);o.set(t,i),i+=t.byteLength}s[e].forEach((e=>{const t=a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),n=Object(g.e)(t,[e.manifestEntry]);for(const e in n)d[e]=n[e]})),p+=n})),d}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xe{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(Object(A.b)("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=Object(b.c)().platform.fetch,Object(A.b)(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&Object(A.b)(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r=Object(g.i)(e,n);t.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:Object(g.h)(e),responses:[a]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${a.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Object(g.g)(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),a=n>t?e.substring(n):"";return[r+"/",a]}(t),a=this.weightPathPrefix||n,s=[];for(const t of e)s.push(...t.weights);const o=[],i=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(e)):o.push(a+e+r);this.weightUrlConverter&&o.push(...await Promise.all(i));const u=await me(o,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[s,Object(g.d)(u)]}}function ve(e){return null!=e.match(xe.URL_SCHEME_REGEX)}xe.URL_SCHEME_REGEX=/^https?:\/\//;const ye=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>ve(e))):ve(e),n)return ke(e,t)}return null};function ke(e,t){return new xe(e,t)}function we(e,t){return ke(e,t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */x.registerSaveRouter(ye),x.registerLoadRouter(ye);class Ie{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}}class Se{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}}function _e(e,t,n,r){if(1===arguments.length){return null!=e.modelTopology||null!=e.weightSpecs?new Ie(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Ie({modelTopology:e}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Ie({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r})}function Oe(e){return new Se(e)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Te=n(10);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ce=Object(ae.b)({matMul_:function(e,t,n=!1,r=!1){let a=Object(re.a)(e,"a","matMul"),s=Object(re.a)(t,"b","matMul");[a,s]=Object(Te.makeTypesMatch)(a,s);const o={a:a,b:s},i={transposeA:n,transposeB:r};return m.a.runKernel(ne.s,o,i)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $e=Object(ae.b)({oneHot_:function(e,t,n=1,r=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const a={indices:Object(re.a)(e,"indices","oneHot","int32")},s={depth:t,onValue:n,offValue:r};return m.a.runKernel(ne.cc,a,s)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ee=Object(ae.b)({transpose_:function(e,t){const n=Object(re.a)(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),A.b(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{A.b(e>=0&&e<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${t}`))})),n.rank<=1)return n.clone();const r={x:n},a={perm:t};return m.a.runKernel(ne.fd,r,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ae=Object(ae.b)({confusionMatrix_:function(e,t,n){const r=Object(re.a)(e,"labels","confusionMatrix"),a=Object(re.a)(t,"predictions","confusionMatrix");A.b(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),A.b(1===r.rank,(()=>`Expected the rank of labels to be 1, but got ${r.rank}`)),A.b(1===a.rank,(()=>`Expected the rank of predictions to be 1, but got ${a.rank}`)),A.b(r.shape[0]===a.shape[0],(()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`)),A.b(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));const s=$e(se(r,"int32"),n),o=$e(se(a,"int32"),n),i=Ee(s),u=Ce(i,o);return se(u,"int32")}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Ne=n(30),Re=n(20);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Fe(e,t,n){if(Object(A.d)(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=Object(re.c)(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Object(Re.a)(e,t,r,n)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Me;function De(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,o=!1,i=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)o=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);i=!0}if(a){const t=2;if(a&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=Object(Ne.c)(ne.jb,m.a.backendName)){const n={pixels:e},r={numChannels:t};return m.a.runKernel(ne.jb,n,r)}const[u,c]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];let l,d;if(o?l=e.getContext("2d").getImageData(0,0,u,c).data:r||n?l=e.data:(s||a||i)&&(null==Me&&(Me=document.createElement("canvas").getContext("2d")),Me.canvas.width=u,Me.canvas.height=c,Me.drawImage(e,0,0,u,c),l=Me.getImageData(0,0,u,c).data),4===t)d=new Int32Array(l);else{const e=u*c;d=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)d[n*t+e]=l[4*n+e]}return Fe(d,[c,u,t],"int32")}function je(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}async function Pe(e,t=3){let n=null;if(Object(b.c)().getBool("WRAP_TO_IMAGEBITMAP")&&je(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return De(n,t)}async function Be(e,t){let n=Object(re.a)(e,"img","toPixels");if(!(e instanceof ee.a)){const e=n;n=se(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,a]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2];if(s>4||2===s)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const o=await n.data(),i="float32"===n.dtype?255:1,u=new Uint8ClampedArray(a*r*4);for(let e=0;e<r*a;++e){const t=[0,0,0,255];for(let r=0;r<s;r++){const a=o[e*s+r];if("float32"===n.dtype){if(a<0||a>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${a}.`)}else if("int32"===n.dtype&&(a<0||a>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${a}.`);1===s?(t[0]=a*i,t[1]=a*i,t[2]=a*i):t[r]=a*i}const r=4*e;u[r+0]=Math.round(t[0]),u[r+1]=Math.round(t[1]),u[r+2]=Math.round(t[2]),u[r+3]=Math.round(t[3])}if(null!=t){t.width=a,t.height=r;const e=t.getContext("2d"),n=new ImageData(u,a,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),u}const Le=Object(ae.b)({fromPixels_:De});function We(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===Object(A.O)(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const a=t.shape,s=a[a.length-1];let o=1;for(let e=0;e<a.length-1;++e)o*=a[e];const i=e.shape,u=a.slice();u.pop();let c=1;for(let e=s;e<n;++e)c*=i[e],u.push(i[e]);const l=[...Object(A.j)(e.shape).map((e=>e/c)),1].slice(0,s);return[u,o,c,l]}function ze(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw new Error(s+" update.rank != "+(a+e.length-r));for(let e=0;e<a;++e)if(n.shape[e]!==t.shape[e])throw new Error(s+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-a;++t)if(n.shape[t+a]!==e[t+r])throw new Error(s+` updates.shape[${t+a}] (${n.shape[t+a]}) != shape[${t+a}] (${e[t+a]})`)}function Ue(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}ze(n,t,e)}function Ve(e,t,n){const r=t.shape.length,a=r>1?t.shape[r-1]:1,s=n.length;let o=1;for(let e=a;e<s;++e)o*=n[e];const i=a<1?1:a;return{sliceRank:a,numUpdates:Object(A.O)(t.shape)/i,sliceSize:o,strides:[...Object(A.j)(n.slice(0,a)),1],outputSize:Object(A.O)(n)}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ge(e,t,n){const r=e.shape.length;A.b(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),A.b(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let a=0;a<r;++a)A.b(t[a]+n[a]<=e.shape[a],(()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`))}function He(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function qe(e,t,n){const r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function Ke(e,t,n,r){const a=[...e];for(let e=a.length;e<r.length;e++)a.push(1);for(let e=0;e<n;e++)0===e?a[t]=1:(a.splice(t,0,1),a.pop());return a}function Xe(e,t,n){return n<=e?n:n-(t-1)}function Ye(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function Ze(e,t,n,r,a,s,o,i,u){const c=e.length;let l=new Array(c),d=new Array(c),p=new Array(c);if(t.length&&n>0){const u=t[0],c=n+1;l=Qe(o,u,c,r,e),d=Je(i,u,c,a,e),p=Ke(s,u,c,e)}else for(let t=0;t<c;t++)l[t]=tt(o,r,s,e,t,u),d[t]=nt(i,a,s,e,t,u),p[t]=et(s,t,u);return{begin:l,end:d,strides:p}}function Qe(e,t,n,r,a){const s=[...a],o=Ye(n,t);for(let a=0;a<s.length;a++)if(o.indexOf(a)>-1)s[a]=0;else{const o=Xe(t,n,a);let i=r[o];e&1<<o&&(i=0),s[a]=i}return s}function Je(e,t,n,r,a){const s=[...a],o=Ye(n,t);for(let a=0;a<s.length;a++)if(o.indexOf(a)>-1)s[a]=Number.MAX_SAFE_INTEGER;else{const o=Xe(t,n,a);let i=r[o];e&1<<o&&(i=Number.MAX_SAFE_INTEGER),s[a]=i}for(let e=0;e<s.length;e++){const t=a[e];s[e]<0&&(s[e]+=t),s[e]=A.i(0,s[e],a[e])}return s}function et(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function tt(e,t,n,r,a,s){let o=t[a];const i=n[a]||1;(e&1<<a||s&1<<a||null==o)&&(o=i>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=r[a];return o<0&&(o+=u),o=A.i(0,o,u-1),o}function nt(e,t,n,r,a,s){let o=t[a];const i=n[a]||1;(e&1<<a||s&1<<a||null==o)&&(o=i>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[a];return o<0&&(o+=u),o=i>0?A.i(0,o,u):A.i(-1,o,u-1),o}function rt(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function at(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function st(e,t,n){let r;const a=e.shape.length;let s;return r="number"==typeof t?[t,...new Array(a-1).fill(0)]:t.length<a?t.concat(new Array(a-t.length).fill(0)):t.slice(),r.forEach((e=>{A.b(-1!==e,(()=>"slice() does not support negative begin indexing."))})),s=null==n?new Array(a).fill(-1):"number"==typeof n?[n,...new Array(a-1).fill(-1)]:n.length<a?n.concat(new Array(a-n.length).fill(-1)):n,s=s.map(((t,n)=>t>=0?t:(A.b(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,s]}function ot(e,t,n,r,a,s,o,i,u){let c=t.slice(),l=n.slice(),d=r;null==r&&(d=new Array(c.length));const p=He(o);if(p.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==o&&0!==i)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==o&&0!==u)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const h=e.length-c.length,f=He(i),m=e.slice();f.forEach((e=>{c[e]=0,l[e]=1,m.splice(e,0,1)}));const{begin:b,end:g,strides:x}=Ze(m,p,h,c,l,d,a,s,o);c=b,l=g,d=x;const v=He(u);v.forEach((e=>{l[e]=c[e]+1,d[e]=1}));const y=qe(c,l,d),k=y.filter(((e,t)=>-1===v.indexOf(t)));return{nonStrided:d.every((e=>1===e)),$begin:c,$end:l,$strides:d,size:y,newShape:m,outShape:k}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class it{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class ut{constructor(){this.classNameMap={}}static getMap(){return null==ut.instance&&(ut.instance=new ut),ut.instance}static register(e){ut.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function ct(e){Object(A.b)(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),Object(A.b)("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),Object(A.b)(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),ut.register(e)}var lt=n(6);
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dt=.1;function pt(e,t,n){return null==n&&(n=ht()),ft(e,t,((e,t)=>xt(e,t,n)))}function ht(){return 32===m.a.backend.floatPrecision()?.001:dt}function ft(e,t,n){let r=!0;if((Object(A.A)(e)||Object(A.A)(t))&&(r=!1),Object(A.A)(e)&&Object(A.A)(t)&&(r=!0),r){const n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(e)&&Array.isArray(t)){const n=Object(re.c)(e),r=Object(re.c)(t);if(!Object(A.a)(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const a=Object(A.A)(e)?e:Object(A.m)(e),s=Object(A.A)(t)?t:Object(A.m)(t);if(a.length!==s.length)throw new Error(`Arrays have different lengths actual: ${a.length} vs expected: ${s.length}.\nActual:   ${a}.\nExpected: ${s}.`);for(let e=0;e<s.length;++e){const t=a[e],r=s[e];if(!n(t,r))throw new Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${r}.\nActual:   ${a}.\nExpected: ${s}.`)}}function mt(e,t){e().then((()=>t.fail()),(()=>t()))}function bt(e,t){const n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return Object(A.z)(e)||Object(A.z)(e[0])||Object(A.z)(t)||Object(A.z)(t[0])?ft(e,n,((e,t)=>e==t)):ft(e,t,((e,t)=>xt(e,t,0)))}function gt(e,t,n){if(null==n&&(n=ht()),!xt(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function xt(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function vt(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function yt(e,t){expect(new Float32Array(e)).toEqual(new Float32Array(t))}function kt(e){for(let t=0;t<e.length;t++){const n=e[t];Array.isArray(n)?kt(n):e[t]=Object(lt.encodeString)(n)}return e}
/** @license See the LICENSE file. */const wt="3.9.0";
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function It(){Object(b.c)().set("PROD",!0)}function St(){Object(b.c)().set("DEBUG",!0)}function _t(){Object(b.c)().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function Ot(e){Object(b.c)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function Tt(){m.a.disposeVariables()}function Ct(){return m.a}function $t(){return m.a.memory()}function Et(e){return m.a.profile(e)}function At(e,t){return m.a.tidy(e,t)}function Nt(e){Object(Te.getTensorsInContainer)(e).forEach((e=>e.dispose()))}function Rt(e){return m.a.keep(e)}function Ft(e){return m.a.time(e)}function Mt(e){return m.a.setBackend(e)}function Dt(){return m.a.ready()}function jt(){return m.a.backendName}function Pt(e){m.a.removeBackend(e)}function Bt(e){return m.a.findBackend(e)}function Lt(e){return m.a.findBackendFactory(e)}function Wt(e,t,n=1){return m.a.registerBackend(e,t,n)}function zt(){return m.a.backend}function Ut(e,t){Object(b.c)().setPlatform(e,t)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(ee.d)(Ot);const Vt=Object(ae.b)({add_:function(e,t){let n=Object(re.a)(e,"a","add"),r=Object(re.a)(t,"b","add");[n,r]=Object(Te.makeTypesMatch)(n,r);const a={a:n,b:r};return m.a.runKernel(ne.d,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gt=Object(ae.b)({floorDiv_:function(e,t){let n=Object(re.a)(e,"a","floorDiv"),r=Object(re.a)(t,"b","floorDiv");[n,r]=Object(Te.makeTypesMatch)(n,r);const a={a:n,b:r};return m.a.runKernel(ne.ib,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ht=Object(ae.b)({div_:function(e,t){let n=Object(re.a)(e,"a","div"),r=Object(re.a)(t,"b","div");if([n,r]=Object(Te.makeTypesMatch)(n,r),"int32"===n.dtype&&"int32"===r.dtype)return Gt(n,r);const a={a:n,b:r};return m.a.runKernel(ne.mc,a,{})}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qt=Object(ae.b)({mul_:function(e,t){let n=Object(re.a)(e,"a","mul"),r=Object(re.a)(t,"b","mul");[n,r]=Object(Te.makeTypesMatch)(n,r);const a={a:n,b:r};return m.a.runKernel(ne.Wb,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kt=Object(ae.b)({sqrt_:function(e){const t={x:Object(re.a)(e,"x","sqrt")};return m.a.runKernel(ne.Qc,t)}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xt=Object(ae.b)({square_:function(e){const t=Object(re.a)(e,"x","square");return m.a.runKernel("Square",{x:t},{})}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yt=Object(ae.b)({zerosLike_:function(e){const t={x:Object(re.a)(e,"x","zerosLike")};return m.a.runKernel(ne.jd,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zt(e){return A.b(A.u(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{const r=Object(re.a)(t,"x","tf.grad","string_or_numeric"),a=null!=n?Object(re.a)(n,"dy","tf.grad"):null;return m.a.tidy((()=>{const{value:t,grads:n}=m.a.gradients((()=>e(r)),[r],a);return null!=a&&A.e(t.shape,a.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),rn(n),n[0]}))}}function Qt(e){return A.b(A.u(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{A.b(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));const r=Object(re.b)(t,"args","tf.grads","string_or_numeric"),a=null!=n?Object(re.a)(n,"dy","tf.grads"):null;return m.a.tidy((()=>{const{value:t,grads:n}=m.a.gradients((()=>e(...r)),r,a);return null!=a&&A.e(t.shape,a.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),rn(n),n}))}}function Jt(e){return A.b(A.u(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{A.b(t instanceof ee.a,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),A.b(null==n||n instanceof ee.a,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));const{grads:r,value:a}=m.a.gradients((()=>e(t)),[t],n);return rn(r),{grad:r[0],value:a}}}function en(e){return A.b(A.u(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{A.b(Array.isArray(t)&&t.every((e=>e instanceof ee.a)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),A.b(null==n||n instanceof ee.a,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));const r=m.a.gradients((()=>e(...t)),t,n);return null!=n&&A.e(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),rn(r.grads),r}}function tn(e,t){A.b(A.u(e),(()=>"The f passed in variableGrads(f) must be a function")),A.b(null==t||Array.isArray(t)&&t.every((e=>e instanceof ee.c)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in m.a.registeredVariables)t.push(m.a.registeredVariables[e])}const r=n?t.filter((e=>!e.trainable)):null,a=t.length;t=t.filter((e=>e.trainable)),A.b(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`));const{value:s,grads:o}=m.a.gradients(e,t,null,!0);A.b(o.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),A.b(0===s.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${s.rank} tensor`));const i={};return t.forEach(((e,t)=>{null!=o[t]&&(i[e.name]=o[t])})),null!=r&&r.forEach((e=>i[e.name]=null)),{value:s,grads:i}}function nn(e){return m.a.customGrad(e)}function rn(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function an(e,t){if((Object(A.A)(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Object(A.A)(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Object(Re.a)(e,[],[],t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sn extends it{minimize(e,t=!1,n){const{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:a[e.name]})));this.applyGradients(e)}else this.applyGradients(a);return Nt(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return tn(e,t)}dispose(){null!=this.iterations_&&Nt(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:an(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(sn,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class on extends sn{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=m.a.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=m.a.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:At((()=>Yt(r).variable(false)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:At((()=>Yt(r).variable(false)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;At((()=>{const e=Vt(qt(s,this.rho),qt(Xt(a),1-this.rho)),t=qt(Ht(Kt(Vt(o,this.epsilon)),Kt(Vt(s,this.epsilon))),a),n=Vt(qt(o,this.rho),qt(Xt(t),1-this.rho));s.assign(e),o.assign(n);const i=Vt(qt(t,-this.learningRate),r);r.assign(i)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Nt(this.accumulatedGrads.map((e=>e.variable))),Nt(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function un(e,t,n){const r={shape:e,value:t,dtype:n};return m.a.runKernel(ne.fb,{},r)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */on.className="Adadelta",ct(on);class cn extends sn{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=m.a.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:At((()=>un(r.shape,this.initialAccumulatorValue).variable(e)))}}const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable;At((()=>{const e=Vt(s,Xt(a));s.assign(e);const t=Vt(qt(Ht(a,Kt(Vt(e,m.a.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Nt(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}cn.className="Adagrad",ct(cn);const ln=Object(ae.b)({pow_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t){let n=Object(re.a)(e,"base","pow"),r=Object(re.a)(t,"exp","pow");[n,r]=Object(Te.makeTypesMatch)(n,r);const a={a:n,b:r};return m.a.runKernel(ne.hc,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dn=Object(ae.b)({sub_:function(e,t){let n=Object(re.a)(e,"a","sub"),r=Object(re.a)(t,"b","sub");[n,r]=Object(Te.makeTypesMatch)(n,r);const a={a:n,b:r};return m.a.runKernel(ne.Yc,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pn extends sn{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],At((()=>{this.accBeta1=an(t).variable(),this.accBeta2=an(n).variable()})),null==r&&(this.epsilon=m.a.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);At((()=>{const n=dn(1,this.accBeta1),r=dn(1,this.accBeta2);t.forEach(((t,a)=>{const s=m.a.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:At((()=>Yt(s).variable(false)))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:`${t}/v`,variable:At((()=>Yt(s).variable(false)))});const o=Array.isArray(e)?e[a].tensor:e[t];if(null==o)return;const i=this.accumulatedFirstMoment[a].variable,u=this.accumulatedSecondMoment[a].variable,c=Vt(qt(i,this.beta1),qt(o,1-this.beta1)),l=Vt(qt(u,this.beta2),qt(Xt(o),1-this.beta2)),d=Ht(c,n),p=Ht(l,r);i.assign(c),u.assign(l);const h=Vt(qt(Ht(d,Vt(Kt(p),this.epsilon)),-this.learningRate),s);s.assign(h)})),this.accBeta1.assign(qt(this.accBeta1,this.beta1)),this.accBeta2.assign(qt(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Nt(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&Nt(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),At((()=>{this.accBeta1.assign(ln(this.beta1,this.iterations_+1)),this.accBeta2.assign(ln(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}pn.className="Adam",ct(pn);const hn=Object(ae.b)({abs_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const t=Object(re.a)(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return m.a.runKernel(ne.B,e)}{const e={x:t};return m.a.runKernel(ne.a,e)}}});
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fn(e,t){const n=e.length,r=[];for(let a=0;a<n;a++){const s=n-1-a,o=e[s]||1;(t[t.length-1-a]||1)>1&&1===o&&r.unshift(s)}return r}function mn(e,t){const n=[];for(let r=0;r<t.length;r++){const a=e[e.length-r-1],s=t.length-r-1,o=t[s];(null==a||1===a&&o>1)&&n.unshift(s)}return n}function bn(e,t){const n=[],r=Math.max(e.length,t.length);for(let a=0;a<r;a++){let r=e[e.length-a-1];null==r&&(r=1);let s=t[t.length-a-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s){throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`)}n.unshift(r)}}return n}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gn=Object(ae.b)({maximum_:function(e,t){let n=Object(re.a)(e,"a","maximum"),r=Object(re.a)(t,"b","maximum");[n,r]=Object(Te.makeTypesMatch)(n,r),"bool"===n.dtype&&(n=se(n,"int32"),r=se(r,"int32")),bn(n.shape,r.shape);const a={a:n,b:r};return m.a.runKernel(ne.Pb,a)}});
/**
* @license
* Copyright 2018 Google LLC. All Rights Reserved.
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* =============================================================================
*/class xn extends sn{constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],At((()=>{this.iteration=an(0).variable(),this.accBeta1=an(t).variable()})),null==r&&(this.epsilon=m.a.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);At((()=>{const n=dn(1,this.accBeta1),r=Ht(-this.learningRate,Vt(qt(this.iteration,this.decay),1));t.forEach(((t,a)=>{const s=m.a.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:Yt(s).variable(false)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:`${t}/v`,variable:Yt(s).variable(false)});const o=Array.isArray(e)?e[a].tensor:e[t];if(null==o)return;const i=this.accumulatedFirstMoment[a].variable,u=this.accumulatedWeightedInfNorm[a].variable,c=Vt(qt(i,this.beta1),qt(o,1-this.beta1)),l=qt(u,this.beta2),d=hn(o),p=gn(l,d);i.assign(c),u.assign(p);const h=Vt(qt(Ht(r,n),Ht(c,Vt(p,this.epsilon))),s);s.assign(h)})),this.iteration.assign(Vt(this.iteration,1)),this.accBeta1.assign(qt(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Nt(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&Nt(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}xn.className="Adamax",ct(xn);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class vn extends sn{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=m.a.registeredVariables[t];At((()=>{const e=Vt(qt(this.c,r),a);a.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Rt(an(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}vn.className="SGD",ct(vn);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class yn extends vn{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=an(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=m.a.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:At((()=>Yt(r).variable(e)))}}const a=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&At((()=>{let e;const t=Vt(qt(this.m,a),s);e=this.useNesterov?Vt(qt(this.c,Vt(s,qt(t,this.m))),r):Vt(qt(this.c,t),r),a.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Nt(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}yn.className="Momentum",ct(yn);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class kn extends sn{constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=m.a.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=m.a.registeredVariables[t],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:At((()=>Yt(r).variable(a)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:At((()=>Yt(r).variable(a)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:At((()=>Yt(r).variable(a)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const o=this.accumulatedMeanSquares[n].variable,i=this.accumulatedMoments[n].variable;At((()=>{const e=Vt(qt(o,this.decay),qt(Xt(s),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,a=Vt(qt(t,this.decay),qt(s,1-this.decay)),u=Ht(qt(s,this.learningRate),Kt(dn(e,Vt(Xt(a),this.epsilon)))),c=Vt(qt(i,this.momentum),u);o.assign(e),t.assign(a),i.assign(c);const l=dn(r,c);r.assign(l)}else{const e=Vt(qt(o,this.decay),qt(Xt(s),1-this.decay)),t=Vt(qt(i,this.momentum),Ht(qt(s,this.learningRate),Kt(Vt(e,this.epsilon))));o.assign(e),i.assign(t);const n=dn(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Nt(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&Nt(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&Nt(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}kn.className="RMSProp",ct(kn);var wn=n(32);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const In=Object(ae.b)({acos_:function(e){const t={x:Object(re.a)(e,"x","acos")};return m.a.runKernel(ne.b,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sn=Object(ae.b)({acosh_:function(e){const t={x:Object(re.a)(e,"x","acosh")};return m.a.runKernel(ne.c,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _n=Object(ae.b)({addN_:function(e){A.b(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),A.b(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>Object(re.a)(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!A.a(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const r=t;return m.a.runKernel(ne.e,r)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const On=Object(ae.b)({all_:function(e,t=null,n=!1){const r={x:Object(re.a)(e,"x","all","bool")},a={axis:t,keepDims:n};return m.a.runKernel(ne.f,r,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tn=Object(ae.b)({any_:function(e,t=null,n=!1){const r={x:Object(re.a)(e,"x","any","bool")},a={axis:t,keepDims:n};return m.a.runKernel(ne.g,r,a)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cn=Object(ae.b)({argMax_:function(e,t=0){const n={x:Object(re.a)(e,"x","argMax")},r={axis:t};return m.a.runKernel(ne.h,n,r)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $n=Object(ae.b)({argMin_:function(e,t=0){const n={x:Object(re.a)(e,"x","argMin")},r={axis:t};return m.a.runKernel(ne.i,n,r)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const En=Object(ae.b)({asin_:function(e){const t={x:Object(re.a)(e,"x","asin")};return m.a.runKernel(ne.j,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const An=Object(ae.b)({asinh_:function(e){const t={x:Object(re.a)(e,"x","asinh")};return m.a.runKernel(ne.k,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nn=Object(ae.b)({atan_:function(e){const t={x:Object(re.a)(e,"x","atan")};return m.a.runKernel(ne.l,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rn=Object(ae.b)({atan2_:function(e,t){let n=Object(re.a)(e,"a","atan2"),r=Object(re.a)(t,"b","atan2");[n,r]=Object(Te.makeTypesMatch)(n,r);const a={a:n,b:r};return m.a.runKernel(ne.m,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fn=Object(ae.b)({atanh_:function(e){const t={x:Object(re.a)(e,"x","atanh")};return m.a.runKernel(ne.n,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mn(e,t,n,r,a="NHWC",s){return Pn(e,[...t,e[3]],n,s,r,null,null,qn(a))}function Dn(e,t,n,r,a,s,o="channelsLast"){const[i,u]=Wn(t);let c;if("channelsLast"===o)c=[i,u,e[3],e[3]];else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);c=[i,u,e[1],e[1]]}return Pn(e,c,n,r,a,s,!1,o)}function jn(e,t,n,r,a,s,o="NDHWC"){const[i,u,c]=zn(t);let l,d;if("NDHWC"===o)d="channelsLast",l=[i,u,c,e[4],e[4]];else{if("NCDHW"!==o)throw new Error(`Unknown dataFormat ${o}`);d="channelsFirst",l=[i,u,c,e[1],e[1]]}return Bn(e,l,n,r,a,!1,d,s)}function Pn(e,t,n,r,a,s,o=!1,i="channelsLast"){let[u,c,l,d]=[-1,-1,-1,-1];if("channelsLast"===i)[u,c,l,d]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[u,d,c,l]=e}const[p,h,,f]=t,[m,b]=Wn(n),[g,x]=Wn(r),v=Un(p,g),y=Un(h,x),{padInfo:k,outHeight:w,outWidth:I}=function(e,t,n,r,a,s,o,i,u){let c,l,d;if("number"==typeof e){c={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,a){null==r&&(r=Ln(e,t,n));const s=e[0],o=e[1],i=Vn((s-t+2*r)/n+1,a),u=Vn((o-t+2*r)/n+1,a);return[i,u]}([t,n],s,r,e,i);l=a[0],d=a[1]}else if("same"===e){l=Math.ceil(t/r),d=Math.ceil(n/a);const e=Math.max(0,(l-1)*r+s-t),i=Math.max(0,(d-1)*a+o-n),u=Math.floor(e/2),p=e-u,h=Math.floor(i/2);c={top:u,bottom:p,left:h,right:i-h,type:"SAME"}}else if("valid"===e)c={top:0,bottom:0,left:0,right:0,type:"VALID"},l=Math.ceil((t-s+1)/r),d=Math.ceil((n-o+1)/a);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const p="channelsLast"===u?e[1][0]:e[2][0],h="channelsLast"===u?e[1][1]:e[2][1],f="channelsLast"===u?e[2][0]:e[3][0],m="channelsLast"===u?e[2][1]:e[3][1];c={top:p,bottom:h,left:f,right:m,type:0===p&&0===h&&0===f&&0===m?"VALID":"EXPLICIT"},l=Vn((t-s+p+h)/r+1,i),d=Vn((n-o+f+m)/a+1,i)}}return{padInfo:c,outHeight:l,outWidth:d}}(a,c,l,m,b,v,y,s,i),S=o?f*d:f;let _;return"channelsFirst"===i?_=[u,S,w,I]:"channelsLast"===i&&(_=[u,w,I,S]),{batchSize:u,dataFormat:i,inHeight:c,inWidth:l,inChannels:d,outHeight:w,outWidth:I,outChannels:S,padInfo:k,strideHeight:m,strideWidth:b,filterHeight:p,filterWidth:h,effectiveFilterHeight:v,effectiveFilterWidth:y,dilationHeight:g,dilationWidth:x,inShape:e,outShape:_,filterShape:t}}function Bn(e,t,n,r,a,s=!1,o="channelsLast",i){let[u,c,l,d,p]=[-1,-1,-1,-1,-1];if("channelsLast"===o)[u,c,l,d,p]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[u,p,c,l,d]=e}const[h,f,m,,b]=t,[g,x,v]=zn(n),[y,k,w]=zn(r),I=Un(h,y),S=Un(f,k),_=Un(m,w),{padInfo:O,outDepth:T,outHeight:C,outWidth:$}=function(e,t,n,r,a,s,o,i,u,c,l){let d,p,h,f;if("number"==typeof e){d={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,a,s){null==a&&(a=Ln(e,t,r));const o=e[0],i=e[1],u=e[2],c=Vn((o-t+2*a)/r+1,s),l=Vn((i-t+2*a)/r+1,s),d=Vn((u-t+2*a)/r+1,s);return[c,l,d,n]}([t,n,r,1],i,1,a,e,l);p=s[0],h=s[1],f=s[2]}else if("same"===e){p=Math.ceil(t/a),h=Math.ceil(n/s),f=Math.ceil(r/o);const e=(p-1)*a+i-t,l=(h-1)*s+u-n,m=(f-1)*o+c-r,b=Math.floor(e/2),g=e-b,x=Math.floor(l/2),v=l-x,y=Math.floor(m/2);d={top:x,bottom:v,left:y,right:m-y,front:b,back:g,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);d={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},p=Math.ceil((t-i+1)/a),h=Math.ceil((n-u+1)/s),f=Math.ceil((r-c+1)/o)}return{padInfo:d,outDepth:p,outHeight:h,outWidth:f}}(a,c,l,d,g,x,v,I,S,_,i),E=s?b*p:b;let A;return"channelsFirst"===o?A=[u,E,T,C,$]:"channelsLast"===o&&(A=[u,T,C,$,E]),{batchSize:u,dataFormat:o,inDepth:c,inHeight:l,inWidth:d,inChannels:p,outDepth:T,outHeight:C,outWidth:$,outChannels:E,padInfo:O,strideDepth:g,strideHeight:x,strideWidth:v,filterDepth:h,filterHeight:f,filterWidth:m,effectiveFilterDepth:I,effectiveFilterHeight:S,effectiveFilterWidth:_,dilationDepth:y,dilationHeight:k,dilationWidth:w,inShape:e,outShape:A,filterShape:t}}function Ln(e,t,n,r=1){const a=Un(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function Wn(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function zn(e){return"number"==typeof e?[e,e,e]:e}function Un(e,t){return t<=1?e:e+(e-1)*(t-1)}function Vn(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function Gn(e){const[t,n,r]=Wn(e);return 1===t&&1===n&&1===r}function Hn(e,t){return Gn(e)||Gn(t)}function qn(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kn=Object(ae.b)({reshape_:function(e,t){const n={x:Object(re.a)(e,"x","reshape","string_or_numeric")},r={shape:t};return m.a.runKernel(ne.qc,n,r)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xn=Object(ae.b)({avgPool_:function(e,t,n,r,a){const s=Object(re.a)(e,"x","avgPool","float32");A.b(Hn(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let o=s,i=!1;3===s.rank&&(i=!0,o=Kn(s,[1,s.shape[0],s.shape[1],s.shape[2]])),A.b(4===o.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${o.rank}.`)),null!=a&&A.b(A.v(r),(()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const u={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:a};let l=m.a.runKernel(ne.o,u,c);return l=se(l,s.dtype),i?Kn(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yn=Object(ae.b)({avgPool3d_:function(e,t,n,r,a,s="NDHWC"){const o=Object(re.a)(e,"x","avgPool3d","float32");let i=o,u=!1;4===o.rank&&(u=!0,i=Kn(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),A.b(5===i.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`)),A.b("NDHWC"===s,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),null!=a&&A.b(A.v(r),(()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const c={x:i},l={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s};let d=m.a.runKernel(ne.p,c,l);return d=se(d,i.dtype),u?Kn(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zn=Object(ae.b)({concat_:function(e,t=0){Object(A.b)(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=Object(re.b)(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return oe(n[0]);const r=n,a={axis:t};return m.a.runKernel(ne.C,r,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qn=Object(ae.b)({sigmoid_:function(e){const t={x:Object(re.a)(e,"x","sigmoid")};return m.a.runKernel(ne.Cc,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jn=Object(ae.b)({slice_:function(e,t,n){const r=Object(re.a)(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const a={x:r},s={begin:t,size:n};return m.a.runKernel(ne.Gc,a,s)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const er=Object(ae.b)({tanh_:function(e){const t={x:Object(re.a)(e,"x","tanh")};return m.a.runKernel(ne.bd,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tr=Object(ae.b)({basicLSTMCell_:function(e,t,n,r,a,s){const o=Object(re.a)(e,"forgetBias","basicLSTMCell"),i=Object(re.a)(t,"lstmKernel","basicLSTMCell"),u=Object(re.a)(n,"lstmBias","basicLSTMCell"),c=Object(re.a)(r,"data","basicLSTMCell"),l=Object(re.a)(a,"c","basicLSTMCell"),d=Object(re.a)(s,"h","basicLSTMCell"),p=Zn([c,d],1),h=Ce(p,i),f=Vt(h,u),m=f.shape[0],b=f.shape[1]/4,g=[m,b],x=Jn(f,[0,0],g),v=Jn(f,[0,b],g),y=Jn(f,[0,2*b],g),k=Jn(f,[0,3*b],g),w=Vt(qt(Qn(x),er(v)),qt(l,Qn(Vt(o,y))));return[w,qt(er(w),Qn(k))]}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nr=Object(ae.b)({batchToSpaceND_:function(e,t,n){const r=Object(re.a)(e,"x","batchToSpaceND"),a=t.reduce(((e,t)=>e*t));A.b(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),A.b(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),A.b(r.shape[0]%a==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`));const s={x:r},o={blockShape:t,crops:n};return m.a.runKernel(ne.t,s,o)}});const rr=Object(ae.b)({batchNorm_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t,n,r,a,s){null==s&&(s=.001);const o=Object(re.a)(e,"x","batchNorm"),i=Object(re.a)(t,"mean","batchNorm"),u=Object(re.a)(n,"variance","batchNorm");let c,l;null!=a&&(c=Object(re.a)(a,"scale","batchNorm")),null!=r&&(l=Object(re.a)(r,"offset","batchNorm")),A.b(i.rank===u.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),A.b(null==l||i.rank===l.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),A.b(null==c||i.rank===c.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const d=function(e){let t;return t=0===e.rank||1===e.rank?Kn(e,[1,1,1,e.size]):2===e.rank?Kn(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Kn(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(o),p={x:d,scale:c,offset:l,mean:i,variance:u},h={varianceEpsilon:s},f=m.a.runKernel(ne.kb,p,h);return Kn(f,o.shape)}});const ar=Object(ae.b)({batchNorm2d_:function(e,t,n,r,a,s){const o=Object(re.a)(e,"x","batchNorm"),i=Object(re.a)(t,"mean","batchNorm"),u=Object(re.a)(n,"variance","batchNorm");let c,l;return null!=a&&(c=Object(re.a)(a,"scale","batchNorm")),null!=r&&(l=Object(re.a)(r,"offset","batchNorm")),A.b(2===o.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${o.rank}.`)),A.b(2===i.rank||1===i.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`)),A.b(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&A.b(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`)),null!=l&&A.b(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${l.rank}.`)),rr(o,i,u,l,c,s)}});const sr=Object(ae.b)({batchNorm3d_:function(e,t,n,r,a,s){const o=Object(re.a)(e,"x","batchNorm"),i=Object(re.a)(t,"mean","batchNorm"),u=Object(re.a)(n,"variance","batchNorm");let c,l;return null!=a&&(c=Object(re.a)(a,"scale","batchNorm")),null!=r&&(l=Object(re.a)(r,"offset","batchNorm")),A.b(3===o.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${o.rank}.`)),A.b(3===i.rank||1===i.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`)),A.b(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&A.b(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`)),null!=l&&A.b(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${l.rank}.`)),rr(o,i,u,l,c,s)}});const or=Object(ae.b)({batchNorm4d_:function(e,t,n,r,a,s){const o=Object(re.a)(e,"x","batchNorm"),i=Object(re.a)(t,"mean","batchNorm"),u=Object(re.a)(n,"variance","batchNorm");let c,l;return null!=a&&(c=Object(re.a)(a,"scale","batchNorm")),null!=r&&(l=Object(re.a)(r,"offset","batchNorm")),A.b(4===o.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${o.rank}.`)),A.b(4===i.rank||1===i.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`)),A.b(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&A.b(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`)),null!=l&&A.b(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${l.rank}.`)),rr(o,i,u,l,c,s)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ir=Object(ae.b)({bincount_:function(e,t,n){const r=Object(re.a)(e,"x","bincount"),a=Object(re.a)(t,"weights","bincount");A.b("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),A.b(n>=0,(()=>`size must be non-negative, but got ${n}.`)),A.b(a.size===r.size||0===a.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${a.shape}.`));const s={x:r,weights:a},o={size:n};return m.a.runKernel(ne.u,s,o)}});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ur=Object(ae.b)({broadcastArgs_:function(e,t){const n=Object(re.a)(e,"s0","broadcastArgs","int32"),r=Object(re.a)(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==r.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);const a={s0:n,s1:r};return m.a.runKernel(ne.v,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cr=Object(ae.b)({broadcastTo_:function(e,t){let n=Object(re.a)(e,"broadcastTo","x");const r=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=Kn(n,e)}const a=n.shape,s=Array.from(t);for(let e=t.length-1;e>=0;e--)if(a[e]===t[e])s[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===s.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return oe(n);const o={x:n},i={reps:s};return m.a.runKernel(ne.cd,o,i)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lr=Object(ae.b)({ceil_:function(e){const t={x:Object(re.a)(e,"x","ceil")};return m.a.runKernel(ne.y,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dr=Object(ae.b)({clipByValue_:function(e,t,n){const r=Object(re.a)(e,"x","clipByValue");A.b(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const a={x:r},s={clipValueMin:t,clipValueMax:n};return m.a.runKernel(ne.z,a,s)}});var pr=n(24);const hr=Object(ae.b)({concat1d_:function(e){return Zn(e,0)}});const fr=Object(ae.b)({concat2d_:function(e,t){return Zn(e,t)}});const mr=Object(ae.b)({concat3d_:function(e,t){return Zn(e,t)}});const br=Object(ae.b)({concat4d_:function(e,t){return Zn(e,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gr=Object(ae.b)({conv2d_:function(e,t,n,r,a="NHWC",s=[1,1],o){const i=Object(re.a)(e,"x","conv2d"),u=Object(re.a)(t,"filter","conv2d");let c=i,l=!1;3===i.rank&&(l=!0,c=Kn(i,[1,i.shape[0],i.shape[1],i.shape[2]])),A.b(4===c.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${c.rank}.`)),A.b(4===u.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`)),null!=o&&A.b(A.v(r),(()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`));const d="NHWC"===a?c.shape[3]:c.shape[1];A.b(d===u.shape[2],(()=>`Error in conv2d: depth of input (${d}) must match input depth for filter ${u.shape[2]}.`)),A.b(Hn(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`));const p={x:c,filter:u},h={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:o},f=m.a.runKernel(ne.D,p,h);return l?Kn(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const xr=Object(ae.b)({conv1d_:function(e,t,n,r,a="NWC",s=1,o){const i=Object(re.a)(e,"x","conv1d"),u=Object(re.a)(t,"filter","conv1d");let c=i,l=!1;2===i.rank&&(l=!0,c=Kn(i,[1,i.shape[0],i.shape[1]])),A.b(3===c.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`)),A.b(3===u.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`)),null!=o&&A.b(A.v(r),(()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`)),A.b(c.shape[2]===u.shape[1],(()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${u.shape[1]}.`)),A.b(Hn(n,s),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`)),A.b("NWC"===a,(()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`));const d=Kn(u,[1,u.shape[0],u.shape[1],u.shape[2]]),p=Kn(c,[c.shape[0],1,c.shape[1],c.shape[2]]),h=gr(p,d,[1,n],r,"NHWC",[1,s],o);return Kn(h,l?[h.shape[2],h.shape[3]]:[h.shape[0],h.shape[2],h.shape[3]])}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vr=Object(ae.b)({conv2DBackpropInput_:function(e,t,n,r,a,s="NHWC",o){A.b(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let i=e,u=t,c=!1;3===t.rank&&(c=!0,u=Kn(t,[1,t.shape[0],t.shape[1],t.shape[2]]),i=[1,e[0],e[1],e[2]]),A.b(4===i.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`)),A.b(4===u.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`)),A.b(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const l="NHWC"===s?i[3]:i[1],d="NHWC"===s?u.shape[3]:u.shape[1];A.b(l===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[2]}.`)),A.b(d===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${d}) must match output depth for filter ${n.shape[3]}.`)),null!=o&&A.b(A.v(a),(()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${o} but got pad ${a}.`));const p={dy:u,filter:n},h={strides:r,pad:a,dataFormat:s,dimRoundingMode:o,inputShape:i},f=m.a.runKernel(ne.F,p,h);return c?Kn(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const yr=Object(ae.b)({conv2dTranspose_:function(e,t,n,r,a,s){const o=Object(re.a)(e,"x","conv2dTranspose"),i=Object(re.a)(t,"filter","conv2dTranspose");return vr(n,o,i,r,a,"NHWC",s)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kr=Object(ae.b)({conv3d_:function(e,t,n,r,a="NDHWC",s=[1,1,1]){const o=Object(re.a)(e,"x","conv3d"),i=Object(re.a)(t,"filter","conv3d");let u=o,c=!1;4===o.rank&&(c=!0,u=Kn(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),A.b(5===u.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`)),A.b(5===i.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`)),A.b(u.shape[4]===i.shape[3],(()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${i.shape[3]}.`)),A.b(Hn(n,s),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),A.b("NDHWC"===a,(()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`));const l={x:u,filter:i},d={strides:n,pad:r,dataFormat:a,dilations:s},p=m.a.runKernel(ne.G,l,d);return c?Kn(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wr=Object(ae.b)({conv3DBackpropInput_:function(e,t,n,r,a){A.b(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let s=e,o=t,i=!1;4===t.rank&&(i=!0,o=Kn(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);const u=s[4],c=o.shape[4];A.b(5===s.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`)),A.b(5===o.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${o.rank}`)),A.b(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),A.b(u===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`)),A.b(c===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${n.shape[4]}.`));const l={dy:o,filter:n},d={pad:a,strides:r,inputShape:s},p=m.a.runKernel(ne.I,l,d);return i?Kn(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}});const Ir=Object(ae.b)({conv3dTranspose_:function(e,t,n,r,a){const s=Object(re.a)(e,"x","conv3dTranspose"),o=Object(re.a)(t,"filter","conv3dTranspose");return wr(n,s,o,r,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sr=Object(ae.b)({cos_:function(e){const t={x:Object(re.a)(e,"x","cos")};return m.a.runKernel(ne.J,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _r=Object(ae.b)({cosh_:function(e){const t={x:Object(re.a)(e,"x","cosh")};return m.a.runKernel(ne.K,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Or=Object(ae.b)({cumsum_:function(e,t=0,n=!1,r=!1){const a={x:Object(re.a)(e,"x","cumsum")},s={axis:t,exclusive:n,reverse:r};return m.a.runKernel(ne.M,a,s)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tr=Object(ae.b)({denseBincount_:function(e,t,n,r=!1){const a=Object(re.a)(e,"x","denseBincount"),s=Object(re.a)(t,"weights","denseBincount");A.b("int32"===a.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${a.dtype}`)),A.b(a.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`)),A.b(n>=0,(()=>`size must be non-negative, but got ${n}.`)),A.b(s.size===a.size||0===s.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${s.shape}.`));const o={x:a,weights:s},i={size:n,binaryOutput:r};return m.a.runKernel(ne.N,o,i)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cr=Object(ae.b)({depthToSpace_:function(e,t,n="NHWC"){const r=Object(re.a)(e,"x","depthToSpace"),a="NHWC"===n?r.shape[1]:r.shape[2],s="NHWC"===n?r.shape[2]:r.shape[3],o="NHWC"===n?r.shape[3]:r.shape[1];A.b(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),A.b(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),A.b(o%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${o} for depthToSpace with input shape ${r.shape}`));const i={x:r},u={blockSize:t,dataFormat:n};return m.a.runKernel(ne.O,i,u)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $r=Object(ae.b)({depthwiseConv2d_:function(e,t,n,r,a="NHWC",s=[1,1],o){const i=Object(re.a)(e,"x","depthwiseConv2d"),u=Object(re.a)(t,"filter","depthwiseConv2d");let c=i,l=!1;3===i.rank&&(l=!0,c=Kn(i,[1,i.shape[0],i.shape[1],i.shape[2]])),A.b(4===c.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`)),A.b(4===u.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`)),A.b(c.shape[3]===u.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${c.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),null!=o&&A.b(A.v(r),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`));const d={x:c,filter:u},p={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:o},h=m.a.runKernel(ne.P,d,p);return l?Kn(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Er=Object(ae.b)({diag_:function(e){const t={x:Object(re.a)(e,"x","diag")};return m.a.runKernel(ne.S,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ar=Object(ae.b)({dilation2d_:function(e,t,n,r,a=[1,1],s="NHWC"){const o=Object(re.a)(e,"x","dilation2d"),i=Object(re.a)(t,"filter","dilation2d");A.b(3===o.rank||4===o.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${o.rank}.`)),A.b(3===i.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`)),A.b("NHWC"===s,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`));let u=o,c=!1;3===o.rank&&(u=Kn(o,[1,o.shape[0],o.shape[1],o.shape[2]]),c=!0);const l={x:u,filter:i},d={strides:n,pad:r,dilations:a},p=m.a.runKernel(ne.T,l,d);return c?Kn(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nr=Object(ae.b)({equal_:function(e,t){let n=Object(re.a)(e,"a","equal","string_or_numeric"),r=Object(re.a)(t,"b","equal","string_or_numeric");[n,r]=Object(Te.makeTypesMatch)(n,r),bn(n.shape,r.shape);const a={a:n,b:r};return m.a.runKernel(ne.Z,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rr=Object(ae.b)({where_:function(e,t,n){const r=Object(re.a)(t,"a","where"),a=Object(re.a)(n,"b","where"),s=Object(re.a)(e,"condition","where","bool"),o=bn(bn(s.shape,r.shape),a.shape),i={condition:cr(s,o),t:cr(r,o),e:cr(a,o)};return m.a.runKernel(ne.Ac,i)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fr=Object(ae.b)({divNoNan_:function(e,t){let n=Object(re.a)(e,"a","div"),r=Object(re.a)(t,"b","div");[n,r]=Object(Te.makeTypesMatch)(n,r);const a=Ht(n,r),s=Yt(a),o=Nr(r,s);return Rr(o,s,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mr=Object(ae.b)({dot_:function(e,t){const n=Object(re.a)(e,"t1","dot"),r=Object(re.a)(t,"t2","dot");A.b(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const a=1===n.rank?n.size:n.shape[1],s=1===r.rank?r.size:r.shape[0];if(A.b(a===s,(()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${s}.`)),1===n.rank&&1===r.rank){const e=Kn(n,[1,-1]),t=Kn(r,[-1,1]),a=Ce(e,t);return Kn(a,[])}if(1===n.rank&&2===r.rank){const e=Kn(n,[1,-1]),t=Kn(r,[r.shape[0],r.shape[1]]),a=Ce(e,t);return Kn(a,[a.size])}if(2===n.rank&&1===r.rank){const e=Kn(r,[-1,1]),t=Ce(n,e);return Kn(t,[t.size])}{const e=Kn(r,[r.shape[0],r.shape[1]]);return Ce(n,e)}}});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dr=Object(ae.b)({einsum_:function(e,...t){const n=t.map(((e,t)=>Object(re.a)(e,`tensors${t}`,"einsum"))),r={equation:e};return m.a.runKernel(ne.W,n,r)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jr=Object(ae.b)({elu_:function(e){const t={x:Object(re.a)(e,"x","elu")};return m.a.runKernel(ne.X,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pr=Object(ae.b)({erf_:function(e){let t=Object(re.a)(e,"x","erf");A.b("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=se(t,"float32"));const n={x:t};return m.a.runKernel(ne.ab,n)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Br=Object(ae.b)({exp_:function(e){const t={x:Object(re.a)(e,"x","exp")};return m.a.runKernel(ne.bb,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lr=Object(ae.b)({expandDims_:function(e,t=0){const n=Object(re.a)(e,"x","expandDims","string_or_numeric");A.b(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},a={dim:t};return m.a.runKernel(ne.cb,r,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wr=Object(ae.b)({expm1_:function(e){const t={x:Object(re.a)(e,"x","expm1")};return m.a.runKernel(ne.db,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zr=Object(ae.b)({tile_:function(e,t){const n=Object(re.a)(e,"x","tile","string_or_numeric");A.b(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},a={reps:t};return m.a.runKernel(ne.cd,r,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ur=Object(ae.b)({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const a=te([e,t],r),s=e<=t?e:t;for(let e=0;e<s;++e)a.set(1,e,e);const o=Kn(a.toTensor(),[e,t]);if(null==n)return o;if(1===n.length)return zr(Lr(o,0),[n[0],1,1]);if(2===n.length)return zr(Lr(Lr(o,0),0),[n[0],n[1],1,1]);if(3===n.length)return zr(Lr(Lr(Lr(o,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vr=Object(ae.b)({floor_:function(e){const t={x:Object(re.a)(e,"x","floor")};return m.a.runKernel(ne.hb,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gr=Object(ae.b)({gather_:function(e,t,n=0,r=0){const a={x:Object(re.a)(e,"x","gather"),indices:Object(re.a)(t,"indices","gather","int32")},s={axis:n,batchDims:r};return m.a.runKernel(ne.ob,a,s)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hr=Object(ae.b)({greater_:function(e,t){let n=Object(re.a)(e,"a","greater","string_or_numeric"),r=Object(re.a)(t,"b","greater","string_or_numeric");[n,r]=Object(Te.makeTypesMatch)(n,r),bn(n.shape,r.shape);const a={a:n,b:r};return m.a.runKernel(ne.pb,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qr=Object(ae.b)({greaterEqual_:function(e,t){let n=Object(re.a)(e,"a","greaterEqual","string_or_numeric"),r=Object(re.a)(t,"b","greaterEqual","string_or_numeric");[n,r]=Object(Te.makeTypesMatch)(n,r),bn(n.shape,r.shape);const a={a:n,b:r};return m.a.runKernel(ne.qb,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kr=Object(ae.b)({imag_:function(e){const t={input:Object(re.a)(e,"input","imag")};return m.a.runKernel(ne.tb,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xr=Object(ae.b)({isFinite_:function(e){const t={x:Object(re.a)(e,"x","isFinite")};return m.a.runKernel(ne.ub,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yr=Object(ae.b)({isInf_:function(e){const t={x:Object(re.a)(e,"x","isInf")};return m.a.runKernel(ne.vb,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zr=Object(ae.b)({isNaN_:function(e){const t={x:Object(re.a)(e,"x","isNaN")};return m.a.runKernel(ne.wb,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qr=Object(ae.b)({leakyRelu_:function(e,t=.2){const n={x:Object(re.a)(e,"x","leakyRelu")},r={alpha:t};return m.a.runKernel(ne.zb,n,r)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jr=Object(ae.b)({less_:function(e,t){let n=Object(re.a)(e,"a","less","string_or_numeric"),r=Object(re.a)(t,"b","less","string_or_numeric");[n,r]=Object(Te.makeTypesMatch)(n,r),bn(n.shape,r.shape);const a={a:n,b:r};return m.a.runKernel(ne.Ab,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ea=Object(ae.b)({lessEqual_:function(e,t){let n=Object(re.a)(e,"a","lessEqual","string_or_numeric"),r=Object(re.a)(t,"b","lessEqual","string_or_numeric");[n,r]=Object(Te.makeTypesMatch)(n,r),bn(n.shape,r.shape);const a={a:n,b:r};return m.a.runKernel(ne.Bb,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ta(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return m.a.runKernel(ne.Cb,{},r)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const na=Object(ae.b)({localResponseNormalization_:function(e,t=5,n=1,r=1,a=.5){const s=Object(re.a)(e,"x","localResponseNormalization");A.b(4===s.rank||3===s.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${s.rank}.`)),A.b(A.v(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let o=s,i=!1;3===s.rank&&(i=!0,o=Kn(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const u={x:o},c={depthRadius:t,bias:n,alpha:r,beta:a},l=m.a.runKernel(ne.xb,u,c);return i?Kn(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ra=Object(ae.b)({log_:function(e){const t={x:Object(re.a)(e,"x","log")};return m.a.runKernel(ne.Db,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aa=Object(ae.b)({log1p_:function(e){const t={x:Object(re.a)(e,"x","log1p")};return m.a.runKernel(ne.Eb,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sa=Object(ae.b)({neg_:function(e){const t={x:Object(re.a)(e,"x","neg")};return m.a.runKernel(ne.Xb,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oa=Object(ae.b)({softplus_:function(e){const t={x:Object(re.a)(e,"x","softplus")};return m.a.runKernel(ne.Ic,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ia=Object(ae.b)({logSigmoid_:function(e){const t=Object(re.a)(e,"x","logSigmoid"),n=nn((e=>({value:sa(oa(sa(e))),gradFunc:t=>qt(t,Qn(sa(e)))})));return n(t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ua=Object(ae.b)({max_:function(e,t=null,n=!1){const r={x:Object(re.a)(e,"x","max")},a={reductionIndices:t,keepDims:n};return m.a.runKernel(ne.Jb,r,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ca=Object(ae.b)({sum_:function(e,t=null,n=!1){let r=Object(re.a)(e,"x","sum");"bool"===r.dtype&&(r=se(r,"int32"));const a={x:r},s={axis:t,keepDims:n};return m.a.runKernel(ne.Zc,a,s)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const la=Object(ae.b)({logSoftmax_:function(e,t=-1){const n=Object(re.a)(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const r=nn(((e,n)=>{const r=ua(e,t,!0),a=dn(e,r),s=dn(se(a,"float32"),ra(ca(Br(a),t,!0)));n([s]);return{value:s,gradFunc:(e,n)=>{const[r]=n,a=Br(r);return dn(e,qt(ca(e,t,!0),a))}}}));return r(n)}});
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function da(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function pa(e,t,n){const r=e.length+t.length,a=[];let s=0,o=0;for(let i=0;i<r;i++)-1===n.indexOf(i)?a.push(e[s++]):a.push(t[o++]);return a}function ha(e,t){const n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map((t=>e[t]))]}function fa(e,t){return pa(e,t.map((e=>1)),t)}function ma(e,t,n){A.b(da(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function ba(e,t){if(da(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function ga(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function xa(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const va=Object(ae.b)({logSumExp_:function(e,t=null,n=!1){const r=Object(re.a)(e,"x","logSumExp"),a=Object(A.I)(t,r.shape),s=ua(r,a,!0),o=dn(r,s),i=Br(o),u=ca(i,a),c=ra(u),l=Vt(Kn(s,c.shape),c);if(n){const e=fa(l.shape,a);return Kn(l,e)}return l}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ya=Object(ae.b)({logicalAnd_:function(e,t){const n=Object(re.a)(e,"a","logicalAnd","bool"),r=Object(re.a)(t,"b","logicalAnd","bool");bn(n.shape,r.shape);const a={a:n,b:r};return m.a.runKernel(ne.Gb,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ka=Object(ae.b)({logicalNot_:function(e){const t={x:Object(re.a)(e,"x","logicalNot","bool")};return m.a.runKernel(ne.Hb,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wa=Object(ae.b)({logicalOr_:function(e,t){const n=Object(re.a)(e,"a","logicalOr","bool"),r=Object(re.a)(t,"b","logicalOr","bool");bn(n.shape,r.shape);const a={a:n,b:r};return m.a.runKernel(ne.Ib,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ia=Object(ae.b)({logicalXor_:function(e,t){const n=Object(re.a)(e,"a","logicalXor","bool"),r=Object(re.a)(t,"b","logicalXor","bool");return bn(n.shape,r.shape),ya(wa(e,t),ka(ya(e,t)))}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sa=Object(ae.b)({maxPool_:function(e,t,n,r,a){const s=Object(re.a)(e,"x","maxPool");let o=s,i=!1;3===s.rank&&(i=!0,o=Kn(s,[1,s.shape[0],s.shape[1],s.shape[2]])),A.b(4===o.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${o.rank}.`)),A.b(Hn(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),null!=a&&A.b(A.v(r),(()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const u={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:a},l=m.a.runKernel(ne.Kb,u,c);return i?Kn(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _a=Object(ae.b)({maxPool3d_:function(e,t=[1,1,1],n,r,a,s="NDHWC"){const o=Object(re.a)(e,"x","maxPool3d");let i=o,u=!1;4===o.rank&&(u=!0,i=Kn(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),A.b(5===i.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`)),A.b("NDHWC"===s,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),null!=a&&A.b(A.v(r),(()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const c={x:i},l={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},d=m.a.runKernel(ne.Lb,c,l);return u?Kn(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oa=Object(ae.b)({maxPoolWithArgmax_:function(e,t,n,r,a=!1){const s={x:Object(re.a)(e,"x","maxPoolWithArgmax")},o={filterSize:t,strides:n,pad:r,includeBatchInIndex:a},i=m.a.runKernel(ne.Ob,s,o);return{result:i[0],indexes:i[1]}}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ta=Object(ae.b)({mean_:function(e,t=null,n=!1){const r={x:Object(re.a)(e,"x","mean")},a={axis:t,keepDims:n};return m.a.runKernel(ne.Qb,r,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ca(e,t="float32"){if("complex64"===t){const t=Ca(e,"float32"),n=Ca(e,"float32");return Object(pr.a)(t,n)}const n=Object(A.F)(Object(A.O)(e),t);return m.a.makeTensor(n,e,t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $a(e,t="float32"){if("complex64"===t){const t=$a(e,"float32"),n=Ca(e,"float32");return Object(pr.a)(t,n)}const n=Object(A.D)(Object(A.O)(e),t);return m.a.makeTensor(n,e,t)}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ea(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=Object(re.a)(e,"x","meshgrid",e instanceof ee.a?e.dtype:"float32");if(void 0===t)return[r];let a=Object(re.a)(t,"y","meshgrid",t instanceof ee.a?t.dtype:"float32");const s=Object(A.O)(r.shape),o=Object(A.O)(a.shape);return"xy"===n?(r=Kn(r,[1,-1]),a=Kn(a,[-1,1]),[Ce($a([o,1],r.dtype),r),Ce(a,$a([1,s],a.dtype))]):(r=Kn(r,[-1,1]),a=Kn(a,[1,-1]),[Ce(r,$a([1,o],r.dtype)),Ce($a([s,1],a.dtype),a)])}
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Aa=Object(ae.b)({min_:function(e,t=null,n=!1){const r={x:Object(re.a)(e,"x","min")},a={axis:t,keepDims:n};return m.a.runKernel(ne.Rb,r,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Na=Object(ae.b)({minimum_:function(e,t){let n=Object(re.a)(e,"a","minimum"),r=Object(re.a)(t,"b","minimum");[n,r]=Object(Te.makeTypesMatch)(n,r),"bool"===n.dtype&&(n=se(n,"int32"),r=se(r,"int32")),bn(n.shape,r.shape);const a={a:n,b:r};return m.a.runKernel(ne.Sb,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ra=Object(ae.b)({mirrorPad_:function(e,t,n){A.b("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=Object(re.a)(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");A.b(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));const a="reflect"===n?1:0;for(let e=0;e<r.rank;e++)A.b(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),A.b(t[e][0]>=0&&t[e][0]<=r.shape[e]-a&&t[e][1]>=0&&t[e][1]<=r.shape[e]-a,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-a} or less than 0 for input of shape ${r.shape}`));const s={paddings:t,mode:n},o={x:r};return m.a.runKernel(ne.Tb,o,s)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fa=Object(ae.b)({mod_:function(e,t){let n=Object(re.a)(e,"a","mod"),r=Object(re.a)(t,"b","mod");[n,r]=Object(Te.makeTypesMatch)(n,r);const a={a:n,b:r};return m.a.runKernel(ne.Ub,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ma=Object(ae.b)({moments_:function(e,t=null,n=!1){e=Object(re.a)(e,"x","moments");const r=Object(A.I)(t,e.shape),a=Ta(e,r,n);let s=a.shape;n||(s=fa(a.shape,r));const o=Xt(dn(se(e,"float32"),Kn(a,s)));return{mean:a,variance:Ta(o,r,n)}}});const Da=Object(ae.b)({multiRNNCell_:function(e,t,n,r){const a=Object(re.a)(t,"data","multiRNNCell"),s=Object(re.b)(n,"c","multiRNNCell"),o=Object(re.b)(r,"h","multiRNNCell");let i=a;const u=[];for(let t=0;t<e.length;t++){const n=e[t](i,s[t],o[t]);u.push(n[0]),u.push(n[1]),i=n[1]}const c=[],l=[];for(let e=0;e<u.length;e+=2)c.push(u[e]),l.push(u[e+1]);return[c,l]}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ja=Object(ae.b)({multinomial_:function(e,t,n,r=!1){const a=Object(re.a)(e,"logits","multinomial"),s=a.size,o=a.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(o>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${o}`);n=n||Math.random();const i={logits:1===o?Kn(a,[1,-1]):a},u={numSamples:t,seed:n,normalized:r},c=m.a.runKernel(ne.Vb,i,u);return 1===o?Kn(c,[c.size]):c}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pa=Object(ae.b)({notEqual_:function(e,t){let n=Object(re.a)(e,"a","notEqual","string_or_numeric"),r=Object(re.a)(t,"b","notEqual","string_or_numeric");[n,r]=Object(Te.makeTypesMatch)(n,r),bn(n.shape,r.shape);const a={a:n,b:r};return m.a.runKernel(ne.bc,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ba=Object(ae.b)({onesLike_:function(e){const t={x:Object(re.a)(e,"x","onesLike")};return m.a.runKernel(ne.dc,t)}});const La=Object(ae.b)({outerProduct_:function(e,t){const n=Object(re.a)(e,"v1","outerProduct"),r=Object(re.a)(t,"v2","outerProduct");A.b(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));const a=Kn(n,[-1,1]),s=Kn(r,[1,-1]);return Ce(a,s)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wa=Object(ae.b)({pad_:function(e,t,n=0){const r=Object(re.a)(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const a={paddings:t,constantValue:n},s={x:r};return m.a.runKernel(ne.fc,s,a)}});const za=Object(ae.b)({pad1d_:function(e,t,n=0){return Object(A.b)(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),Wa(e,[t],n)}});const Ua=Object(ae.b)({pad2d_:function(e,t,n=0){return Object(A.b)(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Wa(e,t,n)}});const Va=Object(ae.b)({pad3d_:function(e,t,n=0){return Object(A.b)(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Wa(e,t,n)}});const Ga=Object(ae.b)({pad4d_:function(e,t,n=0){return Object(A.b)(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Wa(e,t,n)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ha=Object(ae.b)({spaceToBatchND_:function(e,t,n){const r=Object(re.a)(e,"x","spaceToBatchND");A.b(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),A.b(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),A.b(r.shape.reduce(((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]==0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const a={x:r},s={blockShape:t,paddings:n};return m.a.runKernel(ne.Jc,a,s)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qa=Object(ae.b)({pool_:function(e,t,n,r,a,s){null==a&&(a=[1,1]),null==s&&(s=1),0===r&&(r="valid");const o=Object(re.a)(e,"x","maxPool");let i=o,u=!1;3===o.rank&&(u=!0,i=Kn(o,[1,o.shape[0],o.shape[1],o.shape[2]])),A.b(Hn(s,a),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`));const c=Dn(i.shape,t,s,a,r),l=[c.dilationHeight,c.dilationWidth];let d;d="same"===r?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),a=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],a[t]]))}([c.filterHeight,c.filterWidth],l):[[0,0],[0,0]];const p=1===l[0]&&1===l[1],[h,f]=function(e,t,n){const r=n.map((e=>e[0])),a=n.map((e=>e[1])),s=e.concat(r,a),o=t.map(((e,t)=>(e-s[t]%e)%e)),i=a.map(((e,t)=>e+o[t])),u=t.map(((e,t)=>[r[t],i[t]])),c=t.map(((e,t)=>[0,o[t]]));return[u,c]}([c.inHeight,c.inWidth],l,d),m=p?r:"valid",b=p?i:Ha(i,l,h),g=("avg"===n?()=>Xn(b,t,s,m):()=>Sa(b,t,s,m))(),x=p?g:nr(g,l,f);return u?Kn(x,[x.shape[1],x.shape[2],x.shape[3]]):x}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ka=Object(ae.b)({prelu_:function(e,t){const n={x:Object(re.a)(e,"x","prelu"),alpha:Object(re.a)(t,"alpha","prelu")};return m.a.runKernel(ne.ic,n)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xa=Object(ae.b)({prod_:function(e,t=null,n=!1){let r=Object(re.a)(e,"x","prod");"bool"===r.dtype&&(r=se(r,"int32"));const a={x:r},s={axis:t,keepDims:n};return m.a.runKernel(ne.jc,a,s)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ya=Object(ae.b)({rand_:function(e,t,n){const r=Object(A.O)(e);let a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);a=new Uint8Array(r)}for(let e=0;e<r;e++)a[e]=t();return m.a.makeTensor(a,e,n)}});var Za=n(46);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qa{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const s=a||Math.random();this.random=Za.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);const o=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*o,t=this.mean+this.stdDev*a*o,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class Ja{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;const a=r||Math.random();this.randu=Za.alea(a.toString()),this.randn=new Qa(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,s;for(;;){do{r=this.randn.nextValue(),s=1+this.c*r}while(s<=0);if(s*=s*s,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),a=this.randu(),a<t||Math.log(a)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class es{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Za.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const ts=Object(ae.b)({randomGamma_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t,n=1,r="float32",a){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);const s=new Ja(t,n,r,a),o=te(e,r);for(let e=0;e<o.values.length;e++)o.values[e]=s.nextValue();return o.toTensor()}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ns=Object(ae.b)({randomNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const s=new Qa(t,n,r,!1,a),o=te(e,r);for(let e=0;e<o.values.length;e++)o.values[e]=s.nextValue();return o.toTensor()}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rs=Object(ae.b)({randomUniform_:function(e,t=0,n=1,r="float32",a){const s=te(e,r),o=new es(t,n,null,a);for(let e=0;e<s.values.length;e++)s.values[e]=o.nextValue();return s.toTensor()}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function as(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const a={start:e,stop:t,step:n,dtype:r};return m.a.runKernel(ne.kc,{},a)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ss=Object(ae.b)({real_:function(e){const t={input:Object(re.a)(e,"input","real")};return m.a.runKernel(ne.lc,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const os=Object(ae.b)({reciprocal_:function(e){const t={x:Object(re.a)(e,"x","reciprocal")};return m.a.runKernel(ne.nc,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const is=Object(ae.b)({relu_:function(e){const t={x:Object(re.a)(e,"x","relu")};return m.a.runKernel(ne.oc,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const us=Object(ae.b)({relu6_:function(e){const t={x:Object(re.a)(e,"x","relu6")};return m.a.runKernel(ne.pc,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cs=Object(ae.b)({reverse_:function(e,t){const n={x:Object(re.a)(e,"x","reverse")},r={dims:t};return m.a.runKernel(ne.vc,n,r)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ls=Object(ae.b)({reverse1d_:function(e){const t=Object(re.a)(e,"x","reverse");return A.b(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),cs(t,0)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ds=Object(ae.b)({reverse2d_:function(e,t){const n=Object(re.a)(e,"x","reverse");return A.b(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),cs(n,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ps=Object(ae.b)({reverse3d_:function(e,t){const n=Object(re.a)(e,"x","reverse");return A.b(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),cs(n,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hs=Object(ae.b)({reverse4d_:function(e,t){const n=Object(re.a)(e,"x","reverse");return A.b(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),cs(n,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fs=Object(ae.b)({round_:function(e){const t={x:Object(re.a)(e,"x","round")};return m.a.runKernel(ne.xc,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ms=Object(ae.b)({rsqrt_:function(e){const t={x:Object(re.a)(e,"x","rsqrt")};return m.a.runKernel(ne.yc,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bs=Object(ae.b)({selu_:function(e){const t={x:Object(re.a)(e,"x","selu")};return m.a.runKernel(ne.Bc,t)}});const gs=Object(ae.b)({separableConv2d_:function(e,t,n,r,a,s=[1,1],o="NHWC"){const i=Object(re.a)(e,"x","separableConv2d"),u=Object(re.a)(t,"depthwiseFilter","separableConv2d"),c=Object(re.a)(n,"pointwiseFilter","separableConv2d");let l=i,d=!1;if(3===i.rank&&(d=!0,l=Kn(i,[1,i.shape[0],i.shape[1],i.shape[2]])),"NCHW"===o)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");A.b(4===l.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${l.rank}.`)),A.b(4===u.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`)),A.b(4===c.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`)),A.b(1===c.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`)),A.b(1===c.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`));const p=u.shape[2],h=u.shape[3];A.b(c.shape[2]===p*h,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*h}, but got ${c.shape[2]}.`));const f=$r(l,u,r,a,o,s),m=gr(f,c,1,"valid",o);return d?Kn(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xs=async function(e,t){const n=Object(re.a)(e,"x","setdiff1d"),r=Object(re.a)(t,"y","setdiff1d");A.b(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),A.b(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),A.b(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));const a=await n.data(),s=await r.data(),o=new Set(s);let i=0;for(let e=0;e<a.length;e++)o.has(a[e])||i++;const u=new ee.b([i],n.dtype),c=new ee.b([i],"int32");for(let e=0,t=0;e<a.length;e++)o.has(a[e])||(u.values[t]=a[e],c.values[t]=e,t++);return[u.toTensor(),c.toTensor()]};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vs=Object(ae.b)({sign_:function(e){const t={x:Object(re.a)(e,"x","sign")};return m.a.runKernel(ne.Dc,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ys=Object(ae.b)({sin_:function(e){const t={x:Object(re.a)(e,"x","sin")};return m.a.runKernel(ne.Ec,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ks=Object(ae.b)({sinh_:function(e){const t={x:Object(re.a)(e,"x","sinh")};return m.a.runKernel(ne.Fc,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ws=Object(ae.b)({slice1d_:function(e,t,n){const r=Object(re.a)(e,"x","slice1d");return A.b(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),Jn(r,[t],[n])}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Is=Object(ae.b)({slice2d_:function(e,t,n){const r=Object(re.a)(e,"x","slice2d");return A.b(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),Jn(r,t,n)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ss=Object(ae.b)({slice3d_:function(e,t,n){const r=Object(re.a)(e,"x","slice3d");return A.b(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),Jn(r,t,n)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _s=Object(ae.b)({slice4d_:function(e,t,n){const r=Object(re.a)(e,"x","slice4d");return A.b(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),Jn(r,t,n)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Os=Object(ae.b)({softmax_:function(e,t=-1){const n=Object(re.a)(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},a={dim:t};return m.a.runKernel(ne.Hc,r,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ts=Object(ae.b)({fft_:function(e){Object(A.b)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return m.a.runKernel(ne.eb,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cs=Object(ae.b)({ifft_:function(e){Object(A.b)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return m.a.runKernel(ne.rb,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $s=Object(ae.b)({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const a=Kn(e,[n,t]);r=Cs(a)}else{const a=[n,2*(t-1)],s=Kn(ss(e),[n,t]),o=Kn(Kr(e),[n,t]),i=cs(Jn(s,[0,1],[n,t-2]),1),u=qt(cs(Jn(o,[0,1],[n,t-2]),1),an(-1)),c=Zn([s,i],1),l=Zn([o,u],1),d=Kn(Object(pr.a)(c,l),[a[0],a[1]]);r=Cs(d)}if(r=ss(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=Kn(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Es=Object(ae.b)({split_:function(e,t,n=0){const r={x:Object(re.a)(e,"x","split")},a={numOrSizeSplits:t,axis:n};return m.a.runKernel(ne.Pc,r,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const As=Object(ae.b)({rfft_:function(e,t){Object(A.b)("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let a;if(null!=t&&t<n){const r=e.shape.map((e=>0)),s=e.shape.map((e=>e));s[e.shape.length-1]=t,a=Jn(e,r,s),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,a=Zn([e,Ca(r)],e.shape.length-1),n=t}else a=e;const s=Yt(a),o=Kn(Object(pr.a)(a,s),[r,n]),i=Ts(o),u=Math.floor(n/2)+1,c=ss(i),l=Kr(i),d=Es(c,[u,n-u],c.shape.length-1),p=Es(l,[u,n-u],l.shape.length-1),h=a.shape.slice();return h[a.shape.length-1]=u,Kn(Object(pr.a)(d[0],p[0]),h)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ns=Object(ae.b)({squaredDifference_:function(e,t){let n=Object(re.a)(e,"a","squaredDifference"),r=Object(re.a)(t,"b","squaredDifference");[n,r]=Object(Te.makeTypesMatch)(n,r),bn(n.shape,r.shape);const a={a:n,b:r};return m.a.runKernel(ne.Sc,a,{})}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rs=Object(ae.b)({squeeze_:function(e,t){const n=Object(re.a)(e,"x","squeeze");return Kn(n,Object(A.Q)(n.shape,t).newShape)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fs=Object(ae.b)({stack_:function(e,t=0){const n=Object(re.b)(e,"tensors","stack","string_or_numeric");A.b(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&A.b(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,a={axis:t};return m.a.runKernel(ne.ec,r,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ms=Object(ae.b)({step_:function(e,t=0){const n={x:Object(re.a)(e,"x","step")},r={alpha:t};return m.a.runKernel(ne.Tc,n,r)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ds=Object(ae.b)({stridedSlice_:function(e,t,n,r,a=0,s=0,o=0,i=0,u=0){const c={x:Object(re.a)(e,"x","stridedSlice","string_or_numeric")},l={begin:t,end:n,strides:r,beginMask:a,endMask:s,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:u};return m.a.runKernel(ne.Uc,c,l)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const js=Object(ae.b)({tan_:function(e){const t={x:Object(re.a)(e,"x","tan")};return m.a.runKernel(ne.ad,t)}});var Ps=n(31);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bs(e,t){Object(A.d)(e);const n=Object(re.c)(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Object(Re.a)(e,null,n,t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ls(e,t,n){if(Object(A.d)(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Object(re.c)(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Object(Re.a)(e,t,r,n)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ws(e,t,n){if(Object(A.d)(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=Object(re.c)(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Object(Re.a)(e,t,r,n)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zs(e,t,n){if(Object(A.d)(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=Object(re.c)(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Object(Re.a)(e,t,r,n)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Us(e,t,n){if(Object(A.d)(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=Object(re.c)(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||r,Object(Re.a)(e,t,r,n)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vs=Object(ae.b)({topk_:function(e,t=1,n=!0){const r=Object(re.a)(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const a=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${t}`);const s={x:r},o={k:t,sorted:n},[i,u]=m.a.runKernel(ne.dd,s,o);return{values:i,indices:u}}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gs=Object(ae.b)({truncatedNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const s=new Qa(t,n,r,!0,a),o=te(e,r);for(let e=0;e<o.values.length;e++)o.values[e]=s.nextValue();return o.toTensor()}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hs=Object(ae.b)({unique_:function(e,t=0){const n=Object(re.a)(e,"x","unique","string_or_numeric");Object(A.b)(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},a={axis:t},[s,o]=m.a.runKernel(ne.gd,r,a);return{values:s,indices:o}}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qs=Object(ae.b)({unsortedSegmentSum_:function(e,t,n){const r=Object(re.a)(e,"x","unsortedSegmentSum"),a=Object(re.a)(t,"segmentIds","unsortedSegmentSum","int32");Object(A.b)(Object(A.v)(n),(()=>"numSegments must be of dtype int"));const s={x:r,segmentIds:a},o={numSegments:n};return m.a.runKernel(ne.id,s,o)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ks=Object(ae.b)({unstack_:function(e,t=0){const n=Object(re.a)(e,"x","unstack","string_or_numeric");A.b(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},a={axis:t};return m.a.runKernel(ne.hd,r,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xs(e,t=!0,n,r){return m.a.makeVariable(e,t,n,r)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ys(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=te(e,"int32"),a=te([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const s=r.indexToLoc(n[t]),o=t*e.length;a.values.set(s,o)}return a.toTensor()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zs=async function(e){const t=Object(re.a)(e,"condition","whereAsync","bool"),n=await t.data(),r=Ys(t.shape,n);return e!==t&&t.dispose(),r};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qs=async function(e,t,n){const r=Object(re.a)(e,"tensor","boolMask"),a=Object(re.a)(t,"mask","boolMask","bool"),s=null==n?0:n,o=a.rank,i=r.shape;A.b(o>0,(()=>"mask cannot be scalar")),A.e(i.slice(s,s+o),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let e=s;e<s+o;e++)u*=i[e];const c=i.slice(0,s).concat([u],i.slice(s+o)),l=Kn(r,c),d=Kn(a,[-1]),p=await Zs(d),h=Rs(p,[1]),f=Gr(l,h,s);return e!==r&&r.dispose(),t!==a&&a.dispose(),h.dispose(),l.dispose(),d.dispose(),p.dispose(),f};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Js(e,t,n=null){if(0===e.rank)return hn(e);if(1!==e.rank&&null===n)return Js(Kn(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return ca(hn(e),n);if(t===1/0)return ua(hn(e),n);if(t===-1/0)return Aa(hn(e),n);if("euclidean"===t||2===t)return Kt(ca(ln(hn(e),an(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return ua(ca(hn(e),n[0]),n[1]-1);if(t===1/0)return ua(ca(hn(e),n[1]),n[0]);if(t===-1/0)return Aa(ca(hn(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Kt(ca(Xt(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const eo=Object(ae.b)({norm_:function(e,t="euclidean",n=null,r=!1){const a=Js(e=Object(re.a)(e,"x","norm"),t,n);let s=a.shape;if(r){const t=Object(A.I)(n,e.shape);s=fa(a.shape,t)}return Kn(a,s)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const to=Object(ae.b)({movingAverage_:function(e,t,n,r,a=!0){const s=Object(re.a)(e,"v","movingAverage"),o=Object(re.a)(t,"x","movingAverage"),i=Object(re.a)(n,"decay","movingAverage");Object(Te.assertTypesMatch)(s,o),A.b(A.a(s.shape,o.shape),(()=>"Shape mismatch in v and x"));const u=an(1),c=dn(u,i);let l=qt(dn(o,s),c);if(a){A.b(null!=r,(()=>"When using zeroDebias: true, step is required."));const e=Object(re.a)(r,"step","movingAverage");l=Ht(l,dn(u,ln(i,e)))}return Vt(s,l)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const no=Object(ae.b)({scatterND_:function(e,t,n){const r=Object(re.a)(e,"indices","scatterND","int32"),a=Object(re.a)(t,"updates","scatterND");Ue(a,r,n);const s={indices:r,updates:a},o={shape:n};return m.a.runKernel(ne.zc,s,o)}});const ro=Object(ae.b)({sparseToDense_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t,n,r=0){const a=Object(re.a)(e,"sparseIndices","sparseToDense","int32"),s=Object(re.a)(t,"sparseValues","sparseToDense"),o=Object(re.a)(r,"defaultValue","sparseToDense",s.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);const o=t.size;if(0!==t.rank&&(1!==t.rank||o!==a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(a,s,n,o);const i={sparseIndices:a,sparseValues:s,defaultValue:o},u={outputShape:n};return m.a.runKernel(ne.Oc,i,u)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ao=Object(ae.b)({gatherND_:function(e,t){const n=Object(re.a)(t,"indices","gatherND","int32"),r={params:Object(re.a)(e,"x","gatherND","string_or_numeric"),indices:n};return m.a.runKernel(ne.nb,r)}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const so=Object(ae.b)({dropout_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t,n,r){const a=Object(re.a)(e,"x","dropout");if(A.b("float32"===a.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`)),A.b(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof ee.a?a.clone():a;const s=function(e,t){if(null==t)return e.shape.slice();if(A.a(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(a,n),o=1-t,i=Ht(Vr(Vt(rs(s,0,1,"float32",r),o)),o);return qt(a,i)}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oo(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function io(e,t,n){const r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){const o=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(o)}return Bs(a,"float32")}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uo=async function(e,t,n=1){const r=Object(re.a)(e,"predictions","inTopK"),a=Object(re.a)(t,"targets","inTopK");Object(A.b)(r.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`)),Object(A.b)(r.rank-1===a.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`)),Object(A.e)(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const s=r.shape[r.shape.length-1];Object(A.b)(n>0&&n<=s,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`));const o=await r.data(),i=await a.data(),[u,c]=[o.length/s,s],l=Object(A.o)("bool",u);for(let e=0;e<u;e++){const t=e*c,r=o.subarray(t,t+c),a=[];for(let e=0;e<r.length;e++)a.push({value:r[e],index:e});a.sort(((e,t)=>t.value-e.value)),l[e]=0;for(let t=0;t<n;t++)if(a[t].index===i[e]){l[e]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),Object(Ps.a)(l,a.shape,"bool")};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const co=Object(ae.b)({conv2DBackpropFilter_:function(e,t,n,r,a,s="NHWC",o){let i=e;3===e.rank&&(i=Kn(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=Kn(t,[1,t.shape[0],t.shape[1],t.shape[2]])),A.b(4===i.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`)),A.b(4===u.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`)),A.b(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const c="NHWC"===s?i.shape[3]:i.shape[1],l="NHWC"===s?u.shape[3]:u.shape[1];A.b(c===n[2],(()=>`Error in conv2dDerFilter: depth of input ${c}) must match input depth in filter (${n[2]}.`)),A.b(l===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${l}) must match output depth for filter (${n[3]}).`)),null!=o&&A.b(A.v(a),(()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${o} but got pad ${a}.`));const d={x:i,dy:u},p={strides:r,pad:a,dataFormat:s,dimRoundingMode:o,filterShape:n};return m.a.runKernel(ne.E,d,p)}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lo(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return qt(e,Ms(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function po(e,t){let n=t;const r=mn(e.shape,t.shape);return r.length>0&&(n=ca(n,r)),Kn(n,e.shape)}function ho(e,t,n,r){if("linear"===t)return e;if("relu"===t)return is(e);if("elu"===t)return jr(e);if("relu6"===t)return us(e);if("prelu"===t)return Ka(e,n);if("leakyrelu"===t)return Qr(e,r);if("sigmoid"===t)return Qn(e);throw new Error(`Unknown fused activation ${t}.`)}const fo=(e,t)=>!(e>0)||"linear"===t;
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mo=Object(ae.b)({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:o,bias:i,activation:u="linear",preluActivationWeights:c,leakyreluAlpha:l}){if(u=u||"linear",!1===fo(m.a.state.gradientDepth,u)){let d=gr(e,t,n,r,a,s,o);return null!=i&&(d=Vt(d,i)),ho(d,u,c,l)}const d=Object(re.a)(e,"x","conv2d"),p=Object(re.a)(t,"filter","conv2d");let h=d,f=!1;3===d.rank&&(f=!0,h=Kn(d,[1,d.shape[0],d.shape[1],d.shape[2]])),A.b(4===h.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${h.rank}.`)),A.b(4===p.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`)),null!=o&&A.b(A.v(r),(()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`)),A.b(h.shape[3]===p.shape[2],(()=>`Error in conv2d: depth of input (${h.shape[3]}) must match input depth for filter ${p.shape[2]}.`)),A.b(Hn(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),A.b("NHWC"===a,(()=>`Error in conv2d: got dataFormat of ${a} but only NHWC is currently supported.`));const b=Pn(h.shape,p.shape,n,s,r,o);let g,x;null!=i&&(g=Object(re.a)(i,"bias","fused conv2d"),[g]=Object(Te.makeTypesMatch)(g,d),bn(b.outShape,g.shape)),null!=c&&(x=Object(re.a)(c,"prelu weights","fused conv2d"));const v=(e,t)=>{const[a,o,i,c]=t,l=lo(e,i,u);A.b(Gn(s),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));const d=[vr(o.shape,l,a,n,r),co(o,l,a.shape,n,r)];if(null!=c){const e=po(c,l);d.push(e)}return d},y={x:h,filter:p,bias:g,preluActivationWeights:x},k={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:o,activation:u,leakyreluAlpha:l};if(null==i){const e=nn(((e,t,n)=>{let r=m.a.runKernel(ne.lb,y,k);return n([t,e,r]),f&&(r=Kn(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:v}}));return e(h,p)}{const e=nn(((e,t,n,r)=>{let a=m.a.runKernel(ne.lb,y,k);return r([t,e,a,n]),f&&(a=Kn(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:v}}));return e(h,p,g)}}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bo=Object(ae.b)({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,a,s=[1,1],o){let i=e;3===e.rank&&(i=Kn(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=Kn(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const c={x:i,dy:u},l={strides:r,pad:a,dimRoundingMode:o,dilations:s,filterShape:n};return m.a.runKernel(ne.Q,c,l)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const go=Object(ae.b)({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,a,s=[1,1],o){let i=t,u=!1;3===t.rank&&(u=!0,i=Kn(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const c={dy:i,filter:n},l={strides:r,pad:a,dimRoundingMode:o,dilations:s,inputShape:e},d=m.a.runKernel(ne.R,c,l);return u?Kn(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xo=Object(ae.b)({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:o,bias:i,activation:u="linear",preluActivationWeights:c,leakyreluAlpha:l}){if(!1===fo(m.a.state.gradientDepth,u)){let d=$r(e,t,n,r,a,s,o);return null!=i&&(d=Vt(d,i)),ho(d,u,c,l)}const d=Object(re.a)(e,"x","depthwiseConv2d"),p=Object(re.a)(t,"filter","depthwiseConv2d");let h=d,f=!1;3===d.rank&&(f=!0,h=Kn(d,[1,d.shape[0],d.shape[1],d.shape[2]])),A.b(4===h.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${h.rank}.`)),A.b(4===p.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`)),A.b(h.shape[3]===p.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${h.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`)),null==s&&(s=[1,1]),A.b(Hn(n,s),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),null!=o&&A.b(A.v(r),(()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${o} but got pad ${r}.`));const b=Pn(h.shape,p.shape,n,s,r,o,!0);let g,x;null!=i&&(g=Object(re.a)(i,"bias","fused conv2d"),[g]=Object(Te.makeTypesMatch)(g,d),bn(b.outShape,g.shape)),null!=c&&(x=Object(re.a)(c,"prelu weights","fused depthwiseConv2d"));const v=(e,t)=>{A.b(Gn(s),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`));const[a,i,c,l]=t,d=lo(e,c,u),p=go(i.shape,d,a,n,r,s,o),h=bo(i,d,a.shape,n,r,s,o);if(null!=l){return[p,h,po(g,d)]}return[p,h]},y={x:h,filter:p,bias:g,preluActivationWeights:x},k={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:o,activation:u,leakyreluAlpha:l};if(null==i){const e=nn(((e,t,n)=>{let r=m.a.runKernel(ne.mb,y,k);return n([t,e,r]),f&&(r=Kn(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:v}}));return e(h,p)}{const e=nn(((e,t,n,r)=>{let a=m.a.runKernel(ne.mb,y,k);return r([t,e,a,n]),f&&(a=Kn(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:v}}));return e(h,p,g)}}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vo=Object(ae.b)({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:s="linear",preluActivationWeights:o,leakyreluAlpha:i}){if(!1===fo(m.a.state.gradientDepth,s)){let u=Ce(e,t,n,r);return null!=a&&(u=Vt(u,a)),ho(u,s,o,i)}let u=Object(re.a)(e,"a","fused matMul"),c=Object(re.a)(t,"b","fused matMul");[u,c]=Object(Te.makeTypesMatch)(u,c);const l=n?u.shape[u.rank-2]:u.shape[u.rank-1],d=r?c.shape[c.rank-1]:c.shape[c.rank-2],p=n?u.shape[u.rank-1]:u.shape[u.rank-2],h=r?c.shape[c.rank-2]:c.shape[c.rank-1],f=u.shape.slice(0,-2),b=c.shape.slice(0,-2),g=A.O(f),x=A.O(b);A.b(u.rank>=2&&c.rank>=2&&u.rank===c.rank,(()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${u.rank} and ${c.rank}.`)),A.b(A.a(f,b),(()=>`Error in fused matMul: outer dimensions (${f}) and (${b}) of Tensors with shapes ${u.shape} and ${c.shape} must match.`)),A.b(l===d,(()=>`Error in fused matMul: inner shapes (${l}) and (${d}) of Tensors with shapes ${u.shape} and ${c.shape} and transposeA=${n} and transposeB=${r} must match.`));const v=u.shape.slice(0,-2).concat([p,h]),y=Kn(u,n?[g,l,p]:[g,p,l]),k=Kn(c,r?[x,h,d]:[x,d,h]);let w,I;null!=a&&(w=Object(re.a)(a,"bias","fused matMul"),[w]=Object(Te.makeTypesMatch)(w,u),bn(v,w.shape)),null!=o&&(I=Object(re.a)(o,"prelu weights","fused matMul"));const S=(e,t)=>{const[o,i,u,c]=t,l=lo(Kn(e,u.shape),u,s);let d,p;if(n||r?!n&&r?(d=Ce(l,i,!1,!1),p=Ce(l,o,!0,!1)):n&&!r?(d=Ce(i,l,!1,!0),p=Ce(o,l,!1,!1)):(d=Ce(i,l,!0,!0),p=Ce(l,o,!0,!0)):(d=Ce(l,i,!1,!0),p=Ce(o,l,!0,!1)),null!=a){return[d,p,po(c,l)]}return[d,p]},_={a:y,b:k,bias:w,preluActivationWeights:I},O={transposeA:n,transposeB:r,activation:s,leakyreluAlpha:i};if(null==a){const e=nn(((e,t,n)=>{const r=m.a.runKernel(ne.kd,_,O);return n([e,t,r]),{value:Kn(r,v),gradFunc:S}}));return e(y,k)}{const e=nn(((e,t,n,r)=>{const a=m.a.runKernel(ne.kd,_,O);return r([e,t,a,n]),{value:Kn(a,v),gradFunc:S}}));return e(y,k,w)}}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yo=Object(ae.b)({hammingWindow_:function(e){return io(e,.54,.46)}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ko=Object(ae.b)({hannWindow_:function(e){return io(e,.5,.5)}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wo=Object(ae.b)({frame_:function(e,t,n,r=!1,a=0){let s=0;const o=[];for(;s+t<=e.size;)o.push(Jn(e,s,t)),s+=n;if(r)for(;s<e.size;){const r=s+t-e.size,i=Zn([Jn(e,s,t-r),un([r],a)]);o.push(i),s+=n}return 0===o.length?Ls([],[0,t]):Kn(Zn(o),[o.length,t])}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Io=Object(ae.b)({stft_:function(e,t,n,r,a=ko){null==r&&(r=oo(t));const s=wo(e,t,n),o=qt(s,a(t));return As(o,r)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const So=Object(ae.b)({cropAndResize_:function(e,t,n,r,a="bilinear",s=0){const o=Object(re.a)(e,"image","cropAndResize"),i=Object(re.a)(t,"boxes","cropAndResize","float32"),u=Object(re.a)(n,"boxInd","cropAndResize","int32"),c=i.shape[0];A.b(4===o.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`)),A.b(2===i.rank&&4===i.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${i.shape}.`)),A.b(1===u.rank&&u.shape[0]===c,(()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${i.shape}.`)),A.b(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),A.b(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),A.b("bilinear"===a||"nearest"===a,(()=>`method must be bilinear or nearest, but was ${a}`));const l={image:o,boxes:i,boxInd:u},d={method:a,extrapolationValue:s,cropSize:r};return m.a.runKernel(ne.L,l,d)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _o=Object(ae.b)({flipLeftRight_:function(e){const t=Object(re.a)(e,"image","flipLeftRight","float32");A.b(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return m.a.runKernel(ne.gb,n,{})}});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oo=Object(ae.b)({grayscaleToRGB_:function(e){const t=Object(re.a)(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];A.b(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),A.b(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const a=new Array(t.rank);return a.fill(1,0,n),a[n]=3,zr(t,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const To=Object(ae.b)({rotateWithOffset_:function(e,t,n=0,r=.5){const a=Object(re.a)(e,"image","rotateWithOffset","float32");A.b(4===a.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`));const s={image:a},o={radians:t,fillValue:n,center:r};return m.a.runKernel(ne.wc,s,o)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Co(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);const o=e.shape[0];return n=Math.min(n,o),A.b(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),A.b(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),A.b(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),A.b(1===t.rank,(()=>"scores must be a 1D tensor")),A.b(t.shape[0]===o,(()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${t.shape[0]}`)),A.b(0<=s&&s<=1,(()=>`softNmsSigma must be in [0, 1], but was '${s}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $o=Object(ae.b)({nonMaxSuppression_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=Object(re.a)(e,"boxes","nonMaxSuppression"),o=Object(re.a)(t,"scores","nonMaxSuppression"),i=Co(s,o,n,r,a),u={maxOutputSize:n=i.maxOutputSize,iouThreshold:r=i.iouThreshold,scoreThreshold:a=i.scoreThreshold};return m.a.runKernel(ne.Yb,{boxes:s,scores:o},u)}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Eo(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,a=e.length,s=0,o=!1;for(;r<a;){s=r+(a-r>>>1);const i=n(t,e[s]);i>0?r=s+1:(a=s,o=!i)}return o?r:-r-1}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(e,t,n||Ao)}(e,t,n),a=r<0?-(r+1):r;e.splice(a,0,t)}function Ao(e,t){return e>t?1:e<t?-1:0}function No(e,t,n,r,a){return Mo(e,t,n,r,a,0)}function Ro(e,t,n,r,a,s){return Mo(e,t,n,r,a,0,!1,s,!0)}function Fo(e,t,n,r,a,s){return Mo(e,t,n,r,a,s,!0)}function Mo(e,t,n,r,a,s,o=!1,i=!1,u=!1){const c=[];for(let e=0;e<t.length;e++)t[e]>a&&c.push({score:t[e],boxIndex:e,suppressBeginIndex:0});c.sort(Po);const l=s>0?-.5/s:0,d=[],p=[];for(;d.length<n&&c.length>0;){const t=c.pop(),{score:n,boxIndex:s,suppressBeginIndex:o}=t;if(n<a)break;let i=!1;for(let n=d.length-1;n>=o;--n){const o=Do(e,s,d[n]);if(o>=r){i=!0;break}if(t.score=t.score*jo(r,l,o),t.score<=a)break}t.suppressBeginIndex=d.length,i||(t.score===n?(d.push(s),p.push(t.score)):t.score>a&&Eo(c,t,Po))}const h=d.length,f=n-h;i&&f>0&&(d.push(...new Array(f).fill(0)),p.push(...new Array(f).fill(0)));const m={selectedIndices:d};return o&&(m.selectedScores=p),u&&(m.validOutputs=h),m}function Do(e,t,n){const r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),o=Math.min(r[1],r[3]),i=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),c=Math.min(a[0],a[2]),l=Math.min(a[1],a[3]),d=Math.max(a[0],a[2]),p=Math.max(a[1],a[3]),h=(i-s)*(u-o),f=(d-c)*(p-l);if(h<=0||f<=0)return 0;const m=Math.max(s,c),b=Math.max(o,l),g=Math.min(i,d),x=Math.min(u,p),v=Math.max(g-m,0)*Math.max(x-b,0);return v/(h+f-v)}function jo(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function Po(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bo=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=Object(re.a)(e,"boxes","nonMaxSuppressionAsync"),o=Object(re.a)(t,"scores","nonMaxSuppressionAsync"),i=Co(s,o,n,r,a);n=i.maxOutputSize,r=i.iouThreshold,a=i.scoreThreshold;const u=await Promise.all([s.data(),o.data()]),c=u[0],l=u[1],{selectedIndices:d}=No(c,l,n,r,a);return s!==e&&s.dispose(),o!==t&&o.dispose(),Bs(d,"int32")};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lo=Object(ae.b)({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const o=Object(re.a)(e,"boxes","nonMaxSuppression"),i=Object(re.a)(t,"scores","nonMaxSuppression"),u=Co(o,i,n,r,a,s),c={boxes:o,scores:i},l={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:a=u.scoreThreshold,softNmsSigma:s=u.softNmsSigma},d=m.a.runKernel(ne.ac,c,l);return{selectedIndices:d[0],selectedScores:d[1]}}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wo=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const o=Object(re.a)(e,"boxes","nonMaxSuppressionAsync"),i=Object(re.a)(t,"scores","nonMaxSuppressionAsync"),u=Co(o,i,n,r,a,s);n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,s=u.softNmsSigma;const c=await Promise.all([o.data(),i.data()]),l=c[0],d=c[1],{selectedIndices:p,selectedScores:h}=Fo(l,d,n,r,a,s);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:Bs(p,"int32"),selectedScores:Bs(h)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zo=Object(ae.b)({nonMaxSuppressionPadded_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const o=Object(re.a)(e,"boxes","nonMaxSuppression"),i=Object(re.a)(t,"scores","nonMaxSuppression"),u=Co(o,i,n,r,a,null),c={boxes:o,scores:i},l={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:s},d=m.a.runKernel(ne.Zb,c,l);return{selectedIndices:d[0],validOutputs:d[1]}}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uo=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const o=Object(re.a)(e,"boxes","nonMaxSuppressionAsync"),i=Object(re.a)(t,"scores","nonMaxSuppressionAsync"),u=Co(o,i,n,r,a,null),c=u.maxOutputSize,l=u.iouThreshold,d=u.scoreThreshold,[p,h]=await Promise.all([o.data(),i.data()]),{selectedIndices:f,validOutputs:m}=Ro(p,h,c,l,d,s);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:Bs(f,"int32"),validOutputs:an(m,"int32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vo=Object(ae.b)({resizeBilinear_:function(e,t,n=!1,r=!1){const a=Object(re.a)(e,"images","resizeBilinear");A.b(3===a.rank||4===a.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`)),A.b(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),A.b(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let s=a,o=!1;3===a.rank&&(o=!0,s=Kn(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,i={images:s},u={alignCorners:n,halfPixelCenters:r,size:t},c=m.a.runKernel(ne.rc,i,u);return o?Kn(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Go=Object(ae.b)({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const a=Object(re.a)(e,"images","resizeNearestNeighbor");A.b(3===a.rank||4===a.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`)),A.b(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),A.b("float32"===a.dtype||"int32"===a.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),A.b(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let s=a,o=!1;3===a.rank&&(o=!0,s=Kn(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,i={images:s},u={alignCorners:n,halfPixelCenters:r,size:t},c=m.a.runKernel(ne.tc,i,u);return o?Kn(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ho=Object(ae.b)({threshold_:function(e,t="binary",n=!1,r=.5){const a=Object(re.a)(e,"image","threshold"),s=a.shape[0]*a.shape[1];let o,i,u,c,l=qt(Bs([r]),255);if(A.b(3===a.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${a.rank}.`)),A.b(3===a.shape[2]||1===a.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${a.shape[2]}.`)),A.b("int32"===a.dtype||"float32"===a.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${a.dtype}.`)),A.b("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===a.shape[2]){[o,i,u]=Es(a,[1,1,1],-1);const e=qt(o,.2989),t=qt(i,.587),n=qt(u,.114);c=Vt(Vt(e,t),n)}else c=e;if("otsu"===t){l=function(e,t){let n,r,a,s,o,i,u=Bs([-1]),c=Bs([0]),l=Bs([0]);for(let d=0;d<e.size-1;d++){n=Jn(e,0,d+1),r=Jn(e,d+1),o=Ht(ca(n),t),i=Ht(ca(r),t);const p=ca(qt(n,as(0,n.size)));a=Ht(p,ca(n));const h=un(r.shape,n.size),f=Vt(as(0,r.size),h),m=qt(r,f);s=Ht(ca(m),ca(r));const b=dn(a,s),g=dn(a,s),x=qt(o,i);l=qt(qt(x,b),g);const v=Hr(l,c);c=Rr(v,l,c),u=Rr(v,Bs([d]),u)}return u}(ir(se(fs(c),"int32"),Object(Ps.a)([]),256),s)}const d=n?ea(c,l):Hr(c,l);return se(qt(d,255),"int32")}});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qo=Object(ae.b)({transform_:function(e,t,n="nearest",r="constant",a=0,s){const o=Object(re.a)(e,"image","transform","float32"),i=Object(re.a)(t,"transforms","transform","float32");A.b(4===o.rank,(()=>`Error in transform: image must be rank 4,but got rank ${o.rank}.`)),A.b(2===i.rank&&(i.shape[0]===o.shape[0]||1===i.shape[0])&&8===i.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),A.b(null==s||2===s.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`));const u={image:o,transforms:i},c={interpolation:n,fillMode:r,fillValue:a,outputShape:s};return m.a.runKernel(ne.ed,u,c)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ko=Object(ae.b)({bandPart_:function(e,t,n){Object(A.b)(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),Object(A.b)(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=Object(re.a)(e,"a","bandPart");Object(A.b)(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const a=r.shape,[s,o]=r.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(n<=o))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${o}).`);t<0&&(t=s),n<0&&(n=o);const i=Kn(as(0,s,1,"int32"),[-1,1]),u=as(0,o,1,"int32"),c=dn(i,u),l=ya(ea(c,an(+t,"int32")),qr(c,an(-n,"int32"))),d=Ca([s,o],r.dtype);return Kn(Fs(Ks(Kn(r,[-1,s,o])).map((e=>Rr(l,e,d)))),a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xo=Object(ae.b)({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,Object(A.b)(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)Object(A.b)(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=Es(e,e.shape[0],0).map((e=>Rs(e,[0])));Object(A.b)(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(m.a.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=qt(ca(qt(n[r],e)),n[r]);e=dn(e,t)}return Ht(e,eo(e,"euclidean"))})));return t?Fs(n,0):n}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yo(e,t=!1){return m.a.tidy((()=>{Object(A.b)(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let a=Ur(n),s=oe(e);const o=Ls([[1]],[1,1]);let i=oe(o);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=s,u=i,c=a;[i,s,a]=m.a.tidy((()=>{const t=Jn(s,[e,e],[n-e,1]),u=eo(t),c=Jn(s,[e,e],[1,1]),l=Rr(Hr(c,0),Ls([[-1]]),Ls([[1]])),d=dn(c,qt(l,u)),p=Ht(t,d);i=1===p.shape[0]?oe(o):Zn([o,Jn(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);const h=sa(Ht(Ce(l,d),u)),f=Jn(s,[e,0],[n-e,r]),m=qt(h,i),b=Ee(i);if(0===e)s=dn(f,Ce(m,Ce(b,f)));else{const t=dn(f,Ce(m,Ce(b,f)));s=Zn([Jn(s,[0,0],[e,r]),t],0)}const g=Ee(m),x=Jn(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=dn(x,Ce(Ce(x,i),g));else{const t=dn(x,Ce(Ce(x,i),g));a=Zn([Jn(a,[0,0],[n,e]),t],1)}return[i,s,a]})),Nt([t,u,c])}return!t&&n>r&&(a=Jn(a,[0,0],[n,r]),s=Jn(s,[0,0],[r,r])),[a,s]}))}const Zo=Object(ae.b)({qr_:function(e,t=!1){if(Object(A.b)(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return Yo(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=Ks(Kn(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];r.forEach((e=>{const[n,r]=Yo(e,t);a.push(n),s.push(r)}));return[Kn(Fs(a,0),e.shape),Kn(Fs(s,0),e.shape)]}}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Qo;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Qo||(Qo={}));const Jo=Object(ae.b)({computeWeightedLoss_:function(e,t,n=Qo.SUM_BY_NONZERO_WEIGHTS){const r=Object(re.a)(e,"losses","computeWeightedLoss");let a=null;null!=t&&(a=Object(re.a)(t,"weights","computeWeightedLoss"));const s=null==a?r:qt(r,a);if(n===Qo.NONE)return s;if(n===Qo.SUM)return ca(s);if(n===Qo.MEAN){if(null==a)return Ta(s);{const e=r.size/a.size,t=Ht(ca(s),ca(a));return e>1?Ht(t,an(e)):t}}if(n===Qo.SUM_BY_NONZERO_WEIGHTS){if(null==a)return Ht(ca(s),an(r.size));{const e=qt(a,$a(r.shape)),t=se(ca(Pa(e,an(0))),"float32");return Ht(ca(s),t)}}throw Error(`Unknown reduction: ${n}`)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ei=Object(ae.b)({absoluteDifference_:function(e,t,n,r=Qo.SUM_BY_NONZERO_WEIGHTS){const a=Object(re.a)(e,"labels","absoluteDifference"),s=Object(re.a)(t,"predictions","absoluteDifference");let o=null;null!=n&&(o=Object(re.a)(n,"weights","absoluteDifference")),Object(A.e)(a.shape,s.shape,"Error in absoluteDifference: ");const i=hn(dn(a,s));return Jo(i,o,r)}});const ti=Object(ae.b)({cosineDistance_:function(e,t,n,r,a=Qo.SUM_BY_NONZERO_WEIGHTS){const s=Object(re.a)(e,"labels","cosineDistance"),o=Object(re.a)(t,"predictions","cosineDistance");let i=null;null!=r&&(i=Object(re.a)(r,"weights","cosineDistance")),Object(A.e)(s.shape,o.shape,"Error in cosineDistance: ");const u=an(1),c=dn(u,ca(qt(s,o),n,!0));return Jo(c,i,a)}});const ni=Object(ae.b)({hingeLoss_:function(e,t,n,r=Qo.SUM_BY_NONZERO_WEIGHTS){let a=Object(re.a)(e,"labels","hingeLoss");const s=Object(re.a)(t,"predictions","hingeLoss");let o=null;null!=n&&(o=Object(re.a)(n,"weights","hingeLoss")),Object(A.e)(a.shape,s.shape,"Error in hingeLoss: ");const i=an(1);a=dn(qt(an(2),a),i);const u=is(dn(i,qt(a,s)));return Jo(u,o,r)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ri=Object(ae.b)({huberLoss_:function(e,t,n,r=1,a=Qo.SUM_BY_NONZERO_WEIGHTS){const s=Object(re.a)(e,"labels","huberLoss"),o=Object(re.a)(t,"predictions","huberLoss");let i=null;null!=n&&(i=Object(re.a)(n,"weights","huberLoss")),Object(A.e)(s.shape,o.shape,"Error in huberLoss: ");const u=an(r),c=hn(dn(o,s)),l=Na(c,u),d=dn(c,l),p=Vt(qt(an(.5),Xt(l)),qt(u,d));return Jo(p,i,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ai=Object(ae.b)({logLoss_:function(e,t,n,r=1e-7,a=Qo.SUM_BY_NONZERO_WEIGHTS){const s=Object(re.a)(e,"labels","logLoss"),o=Object(re.a)(t,"predictions","logLoss");let i=null;null!=n&&(i=Object(re.a)(n,"weights","logLoss")),Object(A.e)(s.shape,o.shape,"Error in logLoss: ");const u=an(1),c=an(r),l=sa(qt(s,ra(Vt(o,c)))),d=qt(dn(u,s),ra(Vt(dn(u,o),c))),p=dn(l,d);return Jo(p,i,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const si=Object(ae.b)({meanSquaredError_:function(e,t,n,r=Qo.SUM_BY_NONZERO_WEIGHTS){const a=Object(re.a)(e,"labels","meanSquaredError"),s=Object(re.a)(t,"predictions","meanSquaredError");let o=null;null!=n&&(o=Object(re.a)(n,"weights","meanSquaredError")),Object(A.e)(a.shape,s.shape,"Error in meanSquaredError: ");const i=Ns(a,s);return Jo(i,o,r)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oi=Object(ae.b)({sigmoidCrossEntropy_:function(e,t,n,r=0,a=Qo.SUM_BY_NONZERO_WEIGHTS){let s=Object(re.a)(e,"multiClassLabels","sigmoidCrossEntropy");const o=Object(re.a)(t,"logits","sigmoidCrossEntropy");let i=null;if(null!=n&&(i=Object(re.a)(n,"weights","sigmoidCrossEntropy")),Object(A.e)(s.shape,o.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=an(r),t=an(1),n=an(.5);s=Vt(qt(s,dn(t,e)),qt(n,e))}const u=function(e,t){const n=Object(re.a)(e,"labels","sigmoidCrossEntropyWithLogits"),r=Object(re.a)(t,"logits","sigmoidCrossEntropyWithLogits");Object(A.e)(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const a=is(r),s=qt(r,n),o=aa(Br(sa(hn(r))));return Vt(dn(a,s),o)}(s,o);return Jo(u,i,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ii=Object(ae.b)({softmaxCrossEntropy_:function(e,t,n,r=0,a=Qo.SUM_BY_NONZERO_WEIGHTS){let s=Object(re.a)(e,"onehotLabels","softmaxCrossEntropy");const o=Object(re.a)(t,"logits","softmaxCrossEntropy");let i=null;if(null!=n&&(i=Object(re.a)(n,"weights","softmaxCrossEntropy")),Object(A.e)(s.shape,o.shape,"Error in softmaxCrossEntropy: "),r>0){const e=an(r),t=an(1),n=an(s.shape[1]);s=Vt(qt(s,dn(t,e)),Ht(e,n))}const u=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const r=nn(((e,t,r)=>{const a=va(t,[n],!0),s=dn(se(t,"float32"),a);r([e,s]);const o=sa(qt(s,e));return{value:ca(o,[n]),gradFunc:(e,t)=>{const[r,a]=t,s=fa(e.shape,[n]);return[qt(Kn(e,s),dn(se(r,"float32"),Br(a))),qt(Kn(e,s),dn(Br(a),se(r,"float32")))]}}}));return r(e,t)}(s,o);return Jo(u,i,a)}});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ui=Object(ae.b)({sparseFillEmptyRows_:function(e,t,n,r){const a=Object(re.a)(e,"indices","sparseFillEmptyRows"),s=Object(re.a)(t,"values","sparseFillEmptyRows"),o=Object(re.a)(n,"denseShape","sparseFillEmptyRows"),i=Object(re.a)(r,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==a.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${a.shape}`);if(1!==s.rank)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(1!==o.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${o.shape}`);if(0!==i.rank)throw new Error(`Default value should be a scalar but received shape ${i.shape}`);const u={indices:a,values:s,denseShape:o,defaultValue:i},c=m.a.runKernel(ne.Kc,u);return{outputIndices:c[0],outputValues:c[1],emptyRowIndicator:c[2],reverseIndexMap:c[3]}}});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ci=Object(ae.b)({sparseReshape_:function(e,t,n){const r=Object(re.a)(e,"inputIndices","sparseReshape"),a=Object(re.a)(t,"inputShape","sparseReshape"),s=Object(re.a)(n,"newShape","sparseReshape");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==a.rank)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(1!==s.rank)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);const o={inputIndices:r,inputShape:a,newShape:s},i=m.a.runKernel(ne.Lc,o);return{outputIndices:i[0],outputShape:i[1]}}});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const li=Object(ae.b)({sparseSegmentMean_:function(e,t,n){const r=Object(re.a)(e,"data","sparseSegmentMean"),a=Object(re.a)(t,"indices","sparseSegmentMean"),s=Object(re.a)(n,"segmentIds","sparseSegmentMean");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${s.shape}`);const o={data:r,indices:a,segmentIds:s};return m.a.runKernel(ne.Mc,o)}});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const di=Object(ae.b)({sparseSegmentSum_:function(e,t,n){const r=Object(re.a)(e,"data","sparseSegmentSum"),a=Object(re.a)(t,"indices","sparseSegmentSum"),s=Object(re.a)(n,"segmentIds","sparseSegmentSum");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${s.shape}`);const o={data:r,indices:a,segmentIds:s};return m.a.runKernel(ne.Nc,o)}});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pi=Object(ae.b)({stringNGrams_:function(e,t,n,r,a,s,o,i){const u=Object(re.a)(e,"data","stringNGrams","string");if("string"!==u.dtype)throw new Error("Data must be of datatype string");if(1!==u.shape.length)throw new Error(`Data must be a vector, saw: ${u.shape}`);const c=Object(re.a)(t,"dataSplits","stringNGrams");if("int32"!==c.dtype)throw new Error("Data splits must be of datatype int32");const l={separator:n,nGramWidths:r,leftPad:a,rightPad:s,padWidth:o,preserveShortSequences:i},d={data:u,dataSplits:c},p=m.a.runKernel(ne.Vc,d,l);return{nGrams:p[0],nGramsSplits:p[1]}}});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hi=Object(ae.b)({stringSplit_:function(e,t,n=!0){const r=Object(re.a)(e,"input","stringSplit","string"),a=Object(re.a)(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==a.rank)throw new Error(`Delimiter should be a scalar but received shape ${a.shape}`);const s={skipEmpty:n},o={input:r,delimiter:a},i=m.a.runKernel(ne.Wc,o,s);return{indices:i[0],values:i[1],shape:i[2]}}});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fi=Object(ae.b)({stringToHashBucketFast_:function(e,t){const n=Object(re.a)(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const a={input:n};return m.a.runKernel(ne.Xc,a,r)}}),mi={fft:Ts,ifft:Cs,rfft:As,irfft:$s},bi={hammingWindow:yo,hannWindow:ko,frame:wo,stft:Io},gi={flipLeftRight:_o,grayscaleToRGB:Oo,resizeNearestNeighbor:Go,resizeBilinear:Vo,rotateWithOffset:To,cropAndResize:So,nonMaxSuppression:$o,nonMaxSuppressionAsync:Bo,nonMaxSuppressionWithScore:Lo,nonMaxSuppressionWithScoreAsync:Wo,nonMaxSuppressionPadded:zo,nonMaxSuppressionPaddedAsync:Uo,threshold:Ho,transform:qo},xi={bandPart:Ko,gramSchmidt:Xo,qr:Zo},vi={absoluteDifference:ei,computeWeightedLoss:Jo,cosineDistance:ti,hingeLoss:ni,huberLoss:ri,logLoss:ai,meanSquaredError:si,sigmoidCrossEntropy:oi,softmaxCrossEntropy:ii},yi={sparseFillEmptyRows:ui,sparseReshape:ci,sparseSegmentMean:li,sparseSegmentSum:di},ki={stringNGrams:pi,stringSplit:hi,stringToHashBucketFast:fi};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class wi{static sgd(e){return new vn(e)}static momentum(e,t,n=!1){return new yn(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,a=!1){return new kn(e,t,n,r,a)}static adam(e=.001,t=.9,n=.999,r=null){return new pn(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new on(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,a=0){return new xn(e,t,n,r,a)}static adagrad(e,t=.1){return new cn(e,t)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ii={sgd:wi.sgd,momentum:wi.momentum,adadelta:wi.adadelta,adagrad:wi.adagrad,rmsprop:wi.rmsprop,adamax:wi.adamax,adam:wi.adam};var Si=n(94);
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _i(e,t){const n=e[0].length;e.forEach(((e,t)=>{A.b(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),A.b(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,a)=>{for(let s=0;s<n;s++)A.b(s===t||e[s]===r[s],(()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`))}))}function Oi(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ti=30;function Ci(e){return e<=Ti?e:Object(A.G)(e,Math.floor(Math.sqrt(e)))}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $i(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ei(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function Ai(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function Ni(e,t,n,r=!0){const a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?a.push(t[n-1]*e[n]):a.push(e[n]/t[n-1]):a.push(e[n]);return a}function Ri(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function Fi(e,t,n){const r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mi=1.7580993408473768,Di=1.0507009873554805,ji=.3275911,Pi=.254829592,Bi=-.284496736,Li=1.421413741,Wi=-1.453152027,zi=1.061405429;var Ui=n(23);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vi(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function Gi(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function Hi(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function qi(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function Ki(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Xi(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function Yi(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){const s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function Zi(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qi="->",Ji=/->/g;function eu(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(Ji,"").length)/Qi.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[r,a]=e.split(Qi);Object(A.b)(-1===r.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));const s=r.split(","),o=s.length;if(t!==o)throw new Error(`Expected ${o} input tensors, received ${t}`);if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const i=[];for(let e=0;e<a.length;++e){const t=a[e];if(!s.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===i.indexOf(t)&&i.push(t)}for(let e=0;e<r.length;++e){const t=r[e];-1===i.indexOf(t)&&","!==t&&i.push(t)}const u=new Array(s.length);for(let e=0;e<o;++e){if(new Set(s[e].split("")).size!==s[e].length)throw new Error(`Found duplicate axes in input component ${s[e]}. Support for duplicate axes in input is not implemented yet.`);u[e]=[];for(let t=0;t<s[e].length;++t)u[e].push(i.indexOf(s[e][t]))}const c=i.length,l=[];for(let e=a.length;e<c;++e)l.push(e);return{allDims:i,summedDims:l,idDims:u}}function tu(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function nu(e,t,n){const r=new Array(e);for(let e=0;e<n.length;++e){const a=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=a[n]:Object(A.b)(r[t[e][n]]===a[n],(()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(a)}, but got dimension ${a[n]}`))}}function ru(e,t){const n=e,r=[];let a=0;0===e.length&&n.push(-1),a=e.length+1;for(let e=0;e<a;++e)r.push([]);const s=[];for(let e=0;e<n.length;++e){const a=su(t,n[e]);for(const t of a)-1===s.indexOf(t)&&(r[e].push(t),s.push(t))}return{path:n,steps:r}}function au(e){return e.every(((e,t)=>e===t))}function su(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function ou(e,t,n=0){let r=[];if("number"==typeof t)Object(A.b)(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const a=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);Object(A.b)(a<=1,(()=>"There should be only one negative value in split array."));const s=t.indexOf(-1);if(-1!==s){const r=t.reduce(((e,t)=>t>0?e+t:e));t[s]=e.shape[n]-r}Object(A.b)(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iu(e,t){let n,r=!1;for(e<=Ti?(n=e,r=!0):n=Object(A.G)(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=Object(A.G)(e,n+1);return n}function uu(e,t,n){const r=[],a=e.length;for(let s=0;s<a;s++)s!==t?r.push(e[s]):r.push(n);return r}function cu(e,t,n,r){const a=t.shape.length,s=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const o=e.shape[n],i=[];let u=1,c=1,l=1;for(let t=0;t<r;++t)i.push(e.shape[t]),u*=e.shape[t];for(let t=r;t<n;t++)i.push(e.shape[t]),c*=e.shape[t];for(let e=r;e<a;e++)i.push(t.shape[e]);for(let t=n+1;t<s;t++)i.push(e.shape[t]),l*=e.shape[t];return{batchSize:u,sliceSize:l,outerSize:c,dimSize:o,outputShape:i}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lu(e){try{return e.map((e=>Object(lt.decodeString)(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function du(e){return e.map((e=>Object(lt.encodeString)(e)))}var pu=n(52),hu=n(49);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */},function(e,t,n){"use strict";n.d(t,"c",(function(){return u})),n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return p}));var r=n(3),a=n(9),s=n(14),o=n(15),i=n(6);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(e,t){let n=e;if(Object(o.A)(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||Object(o.A)(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&Object(a.c)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&c(e,r,[]),r}function c(e,t,n){if(n=n||[],!Array.isArray(e)&&!Object(o.A)(e))return void Object(o.b)(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));Object(o.b)(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),Object(o.b)(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)c(e[t],r,n.concat(t))}function l(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function d(e,t,n,a="numeric"){if(e instanceof s.a)return l(a,e.dtype,t,n),e;let c=Object(o.r)(e);if("string"!==c&&["bool","int32","float32"].indexOf(a)>=0&&(c=a),l(a,c,t,n),null==e||!Object(o.A)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const d=u(e,c);Object(o.A)(e)||Array.isArray(e)||(e=[e]);const p="string"!==c?Object(i.toTypedArray)(e,c):Object(o.m)(e,[],!0);return r.a.makeTensor(p,d,c)}function p(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,a)=>d(e,`${t}[${a}]`,n,r)))}},function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return o}));var r=n(3),a=n(15);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const s="__op";function o(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const o=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=s;const i=(...e)=>{r.a.startScope(n);try{const t=o(...e);return Object(a.x)(t)&&console.error("Cannot return a Promise inside of tidy."),r.a.endScope(t),t}catch(e){throw r.a.endScope(null),e}};return Object.defineProperty(i,"name",{value:n,configurable:!0}),i}},function(e,t,n){"use strict";n.d(t,"b",(function(){return v})),n.d(t,"a",(function(){return y}));var r=n(49),a=n(9),s=n(35),o=n(4),i=n(30),u=n(6),c=n(15);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class l{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new p)}profileKernel(e,t,n){let r;const s=()=>{r=n()};let o;const i=u.now();if(this.backendTimer.timerAvailable())o=this.backendTimer.time(s);else{s();for(const e of r)e.dataSync();o=Promise.resolve({kernelMs:u.now()-i})}if(Object(a.c)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{d(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:o.then((e=>e.kernelMs)),extraInfo:o.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),r,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])}))}))}}function d(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class p{logKernelProfile(e,t,n,r,a,s){const o="number"==typeof r?c.L(`${r}ms`,9):r.error,i=c.L(e,25),u=t.rank,l=t.size,d=c.L(t.shape.toString(),14);let p="";for(const e in a){const n=a[e];if(null!=n){const r=n.shape||t.shape,a=r.length;p+=`${e}: ${a}D ${a>0?r:""} `}}console.log(`%c${i}\t%c${o}\t%c${u}D ${d}\t%c${l}\t%c${p}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var h=n(14),f=n(10),m=n(23);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function b(e){return null!=e.kernelName}class g{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class x{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new g}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(m.b(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new l(this.backendInstance),!0}setupRegisteredKernels(){Object(i.d)(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){Object(i.d)(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof r.b||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,m.b(`Initialization of backend ${e} failed`),m.b(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return m.b(`Initialization of backend ${e} failed`),m.b(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return x.nextTensorId++}nextVariableId(){return x.nextVariableId++}clone(e){const t=y.runKernel(o.sb,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e},n={dtype:"float32"};return y.runKernel(o.x,t,n)}})),[],{}),t}runKernel(e,t,n){null==this.backendName&&this.backend;if(!(null!=Object(i.c)(e,this.backendName)))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let a=0;n.forEach((e=>{a+="complex64"===e.dtype?3:1}));const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=r-t-a-s;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),a=this.state.numBytes,s=this.state.numTensors;let o,u;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=b(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(b(e)){const{kernelName:t,inputs:a,attrs:s}=e;null==this.backendName&&this.backend;const l=Object(i.c)(t,this.backendName);c.b(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),o=()=>{const e=this.backend.numDataIds();u=l.kernelFunc({inputs:a,attrs:s,backend:this.backend});const o=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,o);const i=o.map((e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)}));if(r){const e=this.getTensorsForGradient(t,a,i);n=this.saveTensorsForBackwardMode(e)}return i}}else{const{forwardFunc:t}=e,a=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};o=()=>{const e=this.backend.numDataIds();u=this.tidy((()=>t(this.backend,a)));const n=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:d,attrs:p}=e,h=b(e)?null:e.backwardsFunc;let f;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(f=this.profiler.profileKernel(l,d,(()=>o())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),t=f.outputs):t=o()})),r&&this.addTapeNode(l,d,t,h,n,p),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(d).map((e=>null!=d[e]?d[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(u)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const r=Object(i.b)(e);if(null!=r){const e=r.inputsToSave||[],a=r.outputsToSave||[];let s;r.saveAllInputs?(c.b(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),s=Object.keys(t).map((e=>t[e]))):s=e.map((e=>t[e]));const o=n.filter(((e,t)=>a[t]));return s.concat(o)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&c.z(e[0])&&(a=e.map((e=>u.encodeString(e))));const s=r.write(a,t,n),o=new h.a(t,n,s,this.nextTensorId());if(this.trackTensor(o,r),"string"===n){const e=this.state.tensorInfo.get(s),t=Object(c.f)(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return o}makeTensorFromDataId(e,t,n,r){n=n||"float32";const a=new h.a(t,n,e,this.nextTensorId());return this.trackTensor(a,r),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const a=new h.c(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*c.g(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof h.c||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*c.g(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){const o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},u=Object(i.b)(e);null!=u&&(r=u.gradFunc),null!=r&&(o.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=c.F(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Object(f.getTensorsInContainer)(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(c.b(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const a=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));c.b(a instanceof h.a,(()=>"The result y returned by f() must be a tensor."));const s=function(e,t,n){const r={},a={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const s=e[n],o=s.inputs;for(const e in o){const n=o[e];let i=!1;for(let e=0;e<t.length;e++)if(r[n.id]){s.outputs.forEach((e=>r[e.id]=!0)),i=!0,a[s.id]=!0;break}if(i)break}}const s={};s[n.id]=!0;const o={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(s[n.outputs[e].id]){for(const e in r)s[r[e].id]=!0,o[n.id]=!0;break}}const i=[];for(let t=0;t<e.length;t++){const n=e[t];if(a[n.id]&&o[n.id]){const e={};for(const t in n.inputs){const a=n.inputs[t];r[a.id]&&(e[t]=a)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,i.push(t)}}return i}(this.state.activeTape,t,a);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[a.id]=null==n?function(e){const t=Object(c.D)(Object(c.O)(e),"float32");return y.makeTensor(t,e,"float32")}(a.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){const s=t[a],o=[];if(s.outputs.forEach((t=>{const n=e[t.id];null!=n?o.push(n):o.push(null)})),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const i=s.gradient(o);for(const t in s.inputs){if(!(t in i))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(i)}.`);const a=n((()=>i[t]()));if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);const o=s.inputs[t];if(!c.a(a.shape,o.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${o.shape}'`);if(null==e[o.id])e[o.id]=a;else{const t=e[o.id];e[o.id]=r(t,a),t.dispose()}}}}(e,s,(e=>this.tidy(e)),k);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:a,grads:r}}))}customGrad(e){return c.b(c.u(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;c.b(t.every((e=>e instanceof h.a)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};t.forEach(((e,t)=>{r[t]=e}));return this.runKernelFunc({forwardFunc:(r,a)=>(n=e(...t,a),c.b(n.value instanceof h.a,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),c.b(c.u(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const a=n.gradFunc(e,r),s=Array.isArray(a)?a:[a];c.b(s.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),c.b(s.every((e=>e instanceof h.a)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const o={};return s.forEach(((e,t)=>{o[t]=()=>e})),o},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=Object(u.now)(),n=await this.backend.time(e);return n.wallMs=Object(u.now)()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new g;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function v(){const e=Object(s.b)();if(null==e._tfengine){const t=new a.b(e);e._tfengine=new x(t)}return Object(a.d)(e._tfengine.ENV),Object(h.f)((()=>e._tfengine)),e._tfengine}x.nextTensorId=0,x.nextVariableId=0;const y=v();function k(e,t){const n={a:e,b:t};return y.runKernel(o.d,n)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return a})),n.d(t,"c",(function(){return s})),n.d(t,"d",(function(){return o})),n.d(t,"e",(function(){return i})),n.d(t,"f",(function(){return u})),n.d(t,"g",(function(){return c})),n.d(t,"h",(function(){return l})),n.d(t,"i",(function(){return d})),n.d(t,"j",(function(){return p})),n.d(t,"k",(function(){return h})),n.d(t,"l",(function(){return f})),n.d(t,"n",(function(){return m})),n.d(t,"m",(function(){return b})),n.d(t,"o",(function(){return g})),n.d(t,"r",(function(){return x})),n.d(t,"p",(function(){return v})),n.d(t,"q",(function(){return y})),n.d(t,"s",(function(){return k})),n.d(t,"t",(function(){return w})),n.d(t,"u",(function(){return I})),n.d(t,"w",(function(){return S})),n.d(t,"v",(function(){return _})),n.d(t,"x",(function(){return O})),n.d(t,"y",(function(){return T})),n.d(t,"z",(function(){return C})),n.d(t,"A",(function(){return $})),n.d(t,"B",(function(){return E})),n.d(t,"C",(function(){return A})),n.d(t,"D",(function(){return N})),n.d(t,"E",(function(){return R})),n.d(t,"F",(function(){return F})),n.d(t,"G",(function(){return M})),n.d(t,"H",(function(){return D})),n.d(t,"I",(function(){return j})),n.d(t,"J",(function(){return P})),n.d(t,"K",(function(){return B})),n.d(t,"M",(function(){return L})),n.d(t,"L",(function(){return W})),n.d(t,"N",(function(){return z})),n.d(t,"O",(function(){return U})),n.d(t,"P",(function(){return V})),n.d(t,"Q",(function(){return G})),n.d(t,"R",(function(){return H})),n.d(t,"S",(function(){return q})),n.d(t,"T",(function(){return K})),n.d(t,"V",(function(){return X})),n.d(t,"U",(function(){return Y})),n.d(t,"mc",(function(){return Z})),n.d(t,"W",(function(){return Q})),n.d(t,"X",(function(){return J})),n.d(t,"Y",(function(){return ee})),n.d(t,"ab",(function(){return te})),n.d(t,"Z",(function(){return ne})),n.d(t,"bb",(function(){return re})),n.d(t,"cb",(function(){return ae})),n.d(t,"db",(function(){return se})),n.d(t,"eb",(function(){return oe})),n.d(t,"fb",(function(){return ie})),n.d(t,"gb",(function(){return ue})),n.d(t,"hb",(function(){return ce})),n.d(t,"ib",(function(){return le})),n.d(t,"kb",(function(){return de})),n.d(t,"ob",(function(){return pe})),n.d(t,"nb",(function(){return he})),n.d(t,"pb",(function(){return fe})),n.d(t,"qb",(function(){return me})),n.d(t,"sb",(function(){return be})),n.d(t,"rb",(function(){return ge})),n.d(t,"tb",(function(){return xe})),n.d(t,"ub",(function(){return ve})),n.d(t,"vb",(function(){return ye})),n.d(t,"wb",(function(){return ke})),n.d(t,"zb",(function(){return we})),n.d(t,"Ab",(function(){return Ie})),n.d(t,"Bb",(function(){return Se})),n.d(t,"Cb",(function(){return _e})),n.d(t,"Db",(function(){return Oe})),n.d(t,"Eb",(function(){return Te})),n.d(t,"Gb",(function(){return Ce})),n.d(t,"Hb",(function(){return $e})),n.d(t,"Ib",(function(){return Ee})),n.d(t,"Fb",(function(){return Ae})),n.d(t,"xb",(function(){return Ne})),n.d(t,"yb",(function(){return Re})),n.d(t,"Jb",(function(){return Fe})),n.d(t,"Pb",(function(){return Me})),n.d(t,"Kb",(function(){return De})),n.d(t,"Nb",(function(){return je})),n.d(t,"Lb",(function(){return Pe})),n.d(t,"Mb",(function(){return Be})),n.d(t,"Ob",(function(){return Le})),n.d(t,"Qb",(function(){return We})),n.d(t,"Rb",(function(){return ze})),n.d(t,"Sb",(function(){return Ue})),n.d(t,"Tb",(function(){return Ve})),n.d(t,"Ub",(function(){return Ge})),n.d(t,"Vb",(function(){return He})),n.d(t,"Wb",(function(){return qe})),n.d(t,"Xb",(function(){return Ke})),n.d(t,"bc",(function(){return Xe})),n.d(t,"Yb",(function(){return Ye})),n.d(t,"Zb",(function(){return Ze})),n.d(t,"ac",(function(){return Qe})),n.d(t,"dc",(function(){return Je})),n.d(t,"cc",(function(){return et})),n.d(t,"ec",(function(){return tt})),n.d(t,"fc",(function(){return nt})),n.d(t,"gc",(function(){return rt})),n.d(t,"hc",(function(){return at})),n.d(t,"ic",(function(){return st})),n.d(t,"jc",(function(){return ot})),n.d(t,"kc",(function(){return it})),n.d(t,"lc",(function(){return ut})),n.d(t,"nc",(function(){return ct})),n.d(t,"oc",(function(){return lt})),n.d(t,"qc",(function(){return dt})),n.d(t,"tc",(function(){return pt})),n.d(t,"uc",(function(){return ht})),n.d(t,"rc",(function(){return ft})),n.d(t,"sc",(function(){return mt})),n.d(t,"pc",(function(){return bt})),n.d(t,"vc",(function(){return gt})),n.d(t,"xc",(function(){return xt})),n.d(t,"yc",(function(){return vt})),n.d(t,"zc",(function(){return yt})),n.d(t,"Ac",(function(){return kt})),n.d(t,"Bc",(function(){return wt})),n.d(t,"Gc",(function(){return It})),n.d(t,"Ec",(function(){return St})),n.d(t,"Fc",(function(){return _t})),n.d(t,"Dc",(function(){return Ot})),n.d(t,"Cc",(function(){return Tt})),n.d(t,"Ic",(function(){return Ct})),n.d(t,"Qc",(function(){return $t})),n.d(t,"Zc",(function(){return Et})),n.d(t,"Jc",(function(){return At})),n.d(t,"Pc",(function(){return Nt})),n.d(t,"Hc",(function(){return Rt})),n.d(t,"Kc",(function(){return Ft})),n.d(t,"Lc",(function(){return Mt})),n.d(t,"Mc",(function(){return Dt})),n.d(t,"Nc",(function(){return jt})),n.d(t,"Oc",(function(){return Pt})),n.d(t,"Sc",(function(){return Bt})),n.d(t,"Rc",(function(){return Lt})),n.d(t,"Uc",(function(){return Wt})),n.d(t,"Vc",(function(){return zt})),n.d(t,"Wc",(function(){return Ut})),n.d(t,"Xc",(function(){return Vt})),n.d(t,"Yc",(function(){return Gt})),n.d(t,"ad",(function(){return Ht})),n.d(t,"bd",(function(){return qt})),n.d(t,"cd",(function(){return Kt})),n.d(t,"dd",(function(){return Xt})),n.d(t,"ed",(function(){return Yt})),n.d(t,"fd",(function(){return Zt})),n.d(t,"gd",(function(){return Qt})),n.d(t,"hd",(function(){return Jt})),n.d(t,"id",(function(){return en})),n.d(t,"jd",(function(){return tn})),n.d(t,"Tc",(function(){return nn})),n.d(t,"jb",(function(){return rn})),n.d(t,"wc",(function(){return an})),n.d(t,"kd",(function(){return sn})),n.d(t,"lb",(function(){return on})),n.d(t,"mb",(function(){return un}));const r="Abs",a="Acos",s="Acosh",o="Add",i="AddN",u="All",c="Any",l="ArgMax",d="ArgMin",p="Asin",h="Asinh",f="Atan",m="Atanh",b="Atan2",g="AvgPool",x="AvgPoolGrad",v="AvgPool3D",y="AvgPool3DGrad",k="BatchMatMul",w="BatchToSpaceND",I="Bincount",S="BroadcastTo",_="BroadcastArgs",O="Cast",T="Ceil",C="ClipByValue",$="Complex",E="ComplexAbs",A="Concat",N="Conv2D",R="Conv2DBackpropFilter",F="Conv2DBackpropInput",M="Conv3D",D="Conv3DBackpropFilterV2",j="Conv3DBackpropInputV2",P="Cos",B="Cosh",L="Cumsum",W="CropAndResize",z="DenseBincount",U="DepthToSpace",V="DepthwiseConv2dNative",G="DepthwiseConv2dNativeBackpropFilter",H="DepthwiseConv2dNativeBackpropInput",q="Diag",K="Dilation2D",X="Dilation2DBackpropInput",Y="Dilation2DBackpropFilter",Z="RealDiv",Q="Einsum",J="Elu",ee="EluGrad",te="Erf",ne="Equal",re="Exp",ae="ExpandDims",se="Expm1",oe="FFT",ie="Fill",ue="FlipLeftRight",ce="Floor",le="FloorDiv",de="FusedBatchNorm",pe="GatherV2",he="GatherNd",fe="Greater",me="GreaterEqual",be="Identity",ge="IFFT",xe="Imag",ve="IsFinite",ye="IsInf",ke="IsNan",we="LeakyRelu",Ie="Less",Se="LessEqual",_e="LinSpace",Oe="Log",Te="Log1p",Ce="LogicalAnd",$e="LogicalNot",Ee="LogicalOr",Ae="LogSoftmax",Ne="LRN",Re="LRNGrad",Fe="Max",Me="Maximum",De="MaxPool",je="MaxPoolGrad",Pe="MaxPool3D",Be="MaxPool3DGrad",Le="MaxPoolWithArgmax",We="Mean",ze="Min",Ue="Minimum",Ve="MirrorPad",Ge="Mod",He="Multinomial",qe="Multiply",Ke="Neg",Xe="NotEqual",Ye="NonMaxSuppressionV3",Ze="NonMaxSuppressionV4",Qe="NonMaxSuppressionV5",Je="OnesLike",et="OneHot",tt="Pack",nt="PadV2",rt="Pool",at="Pow",st="Prelu",ot="Prod",it="Range",ut="Real",ct="Reciprocal",lt="Relu",dt="Reshape",pt="ResizeNearestNeighbor",ht="ResizeNearestNeighborGrad",ft="ResizeBilinear",mt="ResizeBilinearGrad",bt="Relu6",gt="Reverse",xt="Round",vt="Rsqrt",yt="ScatterNd",kt="Select",wt="Selu",It="Slice",St="Sin",_t="Sinh",Ot="Sign",Tt="Sigmoid",Ct="Softplus",$t="Sqrt",Et="Sum",At="SpaceToBatchND",Nt="SplitV",Rt="Softmax",Ft="SparseFillEmptyRows",Mt="SparseReshape",Dt="SparseSegmentMean",jt="SparseSegmentSum",Pt="SparseToDense",Bt="SquaredDifference",Lt="Square",Wt="StridedSlice",zt="StringNGrams",Ut="StringSplit",Vt="StringToHashBucketFast",Gt="Sub",Ht="Tan",qt="Tanh",Kt="Tile",Xt="TopK",Yt="Transform",Zt="Transpose",Qt="Unique",Jt="Unpack",en="UnsortedSegmentSum",tn="ZerosLike",nn="Step",rn="FromPixels",an="RotateWithOffset",sn="_FusedMatMul",on="FusedConv2D",un="FusedDepthwiseConv2D"},function(e,t,n){"use strict";n.d(t,"a",(function(){return o})),n.d(t,"f",(function(){return i})),n.d(t,"h",(function(){return u})),n.d(t,"i",(function(){return c})),n.d(t,"j",(function(){return l})),n.d(t,"e",(function(){return d})),n.d(t,"b",(function(){return p})),n.d(t,"n",(function(){return h})),n.d(t,"g",(function(){return f})),n.d(t,"p",(function(){return m})),n.d(t,"q",(function(){return b})),n.d(t,"c",(function(){return g})),n.d(t,"k",(function(){return x})),n.d(t,"m",(function(){return v})),n.d(t,"o",(function(){return y})),n.d(t,"l",(function(){return k})),n.d(t,"d",(function(){return w}));var r=n(0),a=n(51),s=n(11);function o(e,t){if(!e)throw new Error(t)}function i(e){return"boolean"==typeof e}function u(e){return"number"==typeof e&&Number.isInteger(e)}function c(e){return e instanceof Array&&e.every((e=>u(e)))}function l(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint32Array||e instanceof Int16Array||e instanceof Uint16Array||e instanceof Int8Array||e instanceof Uint8Array}function d(e){if("float32"===e)return Float32Array;if("int32"===e)return Int32Array;if("uint32"===e)return Uint32Array;if("float16"===e)return Uint16Array;if("int8"===e)return Int8Array;if("uint8"===e)return Uint8Array;throw new Error("Type is not supported.")}function p(e){let t;return"float32"===e.dtype?t=s.d.float32:"int32"===e.dtype&&(t=s.d.int32),{type:t,dimensions:e.shape}}function h(e){o(e.type in s.d,"The operand type is invalid."),e.dimensions&&o(c(e.dimensions),"The dimensions is invalid.")}function f(e){return!e.every((e=>e>0))}function m(e,t,n){o(l(e),"The value is not a typed array."),o(e instanceof d(t),"The type of value is invalid."),o(e.length===x(n),`the value length ${e.length} is invalid, size of [${n}] ${x(n)} is expected.`)}function b(e,t){t===s.d.int32?o(Number.isInteger(e),"the value is not an int32."):t===s.d.uint32?o(Number.isInteger(e)&&e>=0,"the value is not an uint32."):t===s.d.int8?o(Number.isInteger(e)&&e>=-128&&e<=127,"the value is not an int8."):t===s.d.uint8&&o(Number.isInteger(e)&&e>=0&&e<=255,"the value is not an uint8.")}function g(e,t){const n=function(e){if("float32"===e)return"float32";if("int32"===e)return"int32";throw new Error("The operand type is not supported by TF.js.")}(e.type);if(void 0!==e.dimensions){o(l(t),"Only ArrayBufferView value is supported.");const a=t;m(a,e.type,e.dimensions);const s=function(e){let t;if(e instanceof Float32Array)t=new Float32Array(e.length);else if(e instanceof Int32Array)t=new Int32Array(e.length);else if(e instanceof Uint32Array)t=new Uint32Array(e.length);else if(e instanceof Uint16Array)t=new Uint16Array(e.length);else if(e instanceof Int8Array)t=new Int8Array(e.length);else{if(!(e instanceof Uint8Array))throw new Error("Type is not supported.");t=new Uint8Array(e.length)}return t.set(e),t}(a);return r.tensor(s,e.dimensions,n)}return"number"==typeof t?(b(t,e.type),r.scalar(t,n)):(m(t,e.type,e.dimensions),r.scalar(t[0],n))}function x(e){return void 0===e||c(e)&&0===e.length?1:e.reduce(((e,t)=>t>0?e*t:e),1)}function v(e,t=""){o(e instanceof s.c,`The parameter ${t} is not an operand.`)}function y(e,t=""){o(void 0===e||e instanceof s.c,`The parameter ${t} is not an optional operand.`)}function k(e,t){if("undefined"!=typeof e&&e.length>0)for(let n=0;n<e.length;++n)if(e[n]>=t||e[n]<-t)return!1;return!0}function w(e,t,n,r,s,o,i){let u;if(i===a.a.explicit)u=n.every((e=>0===e))?"valid":[[0,0],[n[0],n[1]],[n[2],n[3]],[0,0]];else if(i===a.a["same-upper"])u="same";else{u=[[0,0],[0,0],[0,0],[0,0]];const n=[0,0];for(let t=0;t<2;++t)n[t]=Math.ceil(e.shape[1+t]/r[t]);const a=[0,0];for(let i=0;i<2;++i)a[i]=r[i]*(n[i]-1)+s[i]+((t.shape[i]-1)*o[i]+1)-e.shape[1+i];for(let e=0;e<2;++e)u[e+1][0]=a[e]-Math.floor(a[e]/2),u[e+1][1]=Math.floor(a[e]/2)}return u}},function(e,t,n){"use strict";n.r(t),n.d(t,"shuffle",(function(){return a.M})),n.d(t,"shuffleCombo",(function(){return a.N})),n.d(t,"clamp",(function(){return a.i})),n.d(t,"nearestLargerEven",(function(){return a.H})),n.d(t,"swap",(function(){return a.S})),n.d(t,"sum",(function(){return a.R})),n.d(t,"randUniform",(function(){return a.J})),n.d(t,"distSquared",(function(){return a.l})),n.d(t,"assert",(function(){return a.b})),n.d(t,"assertShapesMatch",(function(){return a.e})),n.d(t,"assertNonNull",(function(){return a.d})),n.d(t,"flatten",(function(){return a.m})),n.d(t,"sizeFromShape",(function(){return a.O})),n.d(t,"isScalarShape",(function(){return a.y})),n.d(t,"arraysEqual",(function(){return a.a})),n.d(t,"isInt",(function(){return a.v})),n.d(t,"tanh",(function(){return a.T})),n.d(t,"sizeToSquarishShape",(function(){return a.P})),n.d(t,"createShuffledIndices",(function(){return a.k})),n.d(t,"rightPad",(function(){return a.L})),n.d(t,"repeatedTry",(function(){return a.K})),n.d(t,"inferFromImplicitShape",(function(){return a.s})),n.d(t,"parseAxisParam",(function(){return a.I})),n.d(t,"squeezeShape",(function(){return a.Q})),n.d(t,"getTypedArrayFromDType",(function(){return a.o})),n.d(t,"getArrayFromDType",(function(){return a.n})),n.d(t,"checkConversionForErrors",(function(){return a.h})),n.d(t,"isValidDtype",(function(){return a.B})),n.d(t,"hasEncodingLoss",(function(){return a.p})),n.d(t,"isTypedArray",(function(){return a.A})),n.d(t,"bytesPerElement",(function(){return a.g})),n.d(t,"bytesFromStringArray",(function(){return a.f})),n.d(t,"isString",(function(){return a.z})),n.d(t,"isBoolean",(function(){return a.t})),n.d(t,"isNumber",(function(){return a.w})),n.d(t,"inferDtype",(function(){return a.r})),n.d(t,"isFunction",(function(){return a.u})),n.d(t,"nearestDivisor",(function(){return a.G})),n.d(t,"computeStrides",(function(){return a.j})),n.d(t,"toNestedArray",(function(){return a.U})),n.d(t,"makeOnesTypedArray",(function(){return a.D})),n.d(t,"makeZerosTypedArray",(function(){return a.F})),n.d(t,"makeZerosNestedTypedArray",(function(){return a.E})),n.d(t,"assertNonNegativeIntegerDimensions",(function(){return a.c})),n.d(t,"locToIndex",(function(){return a.C})),n.d(t,"indexToLoc",(function(){return a.q})),n.d(t,"isPromise",(function(){return a.x})),n.d(t,"hexToLong",(function(){return i})),n.d(t,"fingerPrint64",(function(){return x})),n.d(t,"createScalarValue",(function(){return v})),n.d(t,"toTypedArray",(function(){return y})),n.d(t,"now",(function(){return k})),n.d(t,"fetch",(function(){return w})),n.d(t,"encodeString",(function(){return I})),n.d(t,"decodeString",(function(){return S}));var r=n(9),a=n(15),s=n(91);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=n.n(s).a||s;function i(e){return o.fromString(e,!0,16)}const u=i("c3a5c85c97cb3127"),c=i("b492b66fbe98f273"),l=i("9ae16a3b2f90404f");function d(e){return e.xor(e.shru(47))}function p(e,t,n){const r=e.slice(t,t+n);return o.fromBytes(Array.from(r),!0,!0)}function h(e,t){return p(e,t,8)}function f(e,t){return p(e,t,4)}function m(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function b(e,t,n=i("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let a=t.xor(r).mul(n);return a=a.xor(a.shru(47)),a=a.mul(n),a}function g(e,t,n,r){return function(e,t,n,r,a,s){a=a.add(e),s=m(s.add(a).add(r),21);const o=a;return a=(a=a.add(t)).add(n),s=s.add(m(a,44)),[a.add(r),s.add(o)]}(h(e,t),h(e,t+8),h(e,t+16),h(e,t+24),n,r)}function x(e,t=e.length){const n=o.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=l.add(2*t),r=h(e,0).add(l),a=h(e,t-8);return b(m(a,37).mul(n).add(r),m(r,25).add(a).mul(n),n)}if(t>=4){const n=l.add(2*t);return b(f(e,0).shl(3).add(t),f(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return d(l.mul(n).xor(u.mul(r))).mul(l)}return l}(e,t):function(e,t=e.length){const n=l.add(2*t),r=h(e,0).mul(c),a=h(e,8),s=h(e,t-8).mul(n),o=h(e,t-16).mul(l);return b(m(r.add(a),43).add(m(s,30)).add(o),r.add(m(a.add(l),18)).add(s),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=l.add(2*t),r=h(e,0).mul(l),a=h(e,8),s=h(e,t-8).mul(n),o=h(e,t-16).mul(l),i=m(r.add(a),43).add(m(s,30)).add(o),u=b(i,r.add(m(a.add(l),18)).add(s),n),c=h(e,16).mul(n),d=h(e,24),p=i.add(h(e,t-32)).mul(n),f=u.add(h(e,t-24)).mul(n);return b(m(c.add(d),43).add(m(p,30)).add(f),c.add(m(d.add(r),18)).add(p),n)}(e,t);let r=n,a=n.mul(c).add(113),s=d(a.mul(l).add(113)).mul(l),i=[o.UZERO,o.UZERO],p=[o.UZERO,o.UZERO];r=r.mul(l).add(h(e,0));let x=0;const v=64*(t-1>>6),y=v+(t-1&63)-63;do{r=m(r.add(a).add(i[0]).add(h(e,x+8)),37).mul(c),a=m(a.add(i[1]).add(h(e,x+48)),42).mul(c),r=r.xor(p[1]),a=a.add(i[0]).add(h(e,x+40)),s=m(s.add(p[0]),33).mul(c),i=g(e,x,i[1].mul(c),r.add(p[0])),p=g(e,x+32,s.add(p[1]),a.add(h(e,x+16))),[s,r]=[r,s],x+=64}while(x!==v);const k=c.add(s.and(255).shl(1));return x=y,p[0]=p[0].add(t-1&63),i[0]=i[0].add(p[0]),p[0]=p[0].add(i[0]),r=m(r.add(a).add(i[0]).add(h(e,x+8)),37).mul(k),a=m(a.add(i[1]).add(h(e,x+48)),42).mul(k),r=r.xor(p[1].mul(9)),a=a.add(i[0].mul(9).add(h(e,x+40))),s=m(s.add(p[0]),33).mul(k),i=g(e,x,i[1].mul(k),r.add(p[0])),p=g(e,x+32,s.add(p[1]),a.add(h(e,x+16))),[s,r]=[r,s],b(b(i[0],p[0],k).add(d(a).mul(u)).add(s),b(i[1],p[1],k).add(r),k)}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v(e,t){return"string"===t?I(e):y([e],t)}function y(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=a.m(e)),Object(r.c)().getBool("DEBUG")&&a.h(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function k(){return Object(r.c)().platform.now()}function w(e,t){return Object(r.c)().platform.fetch(e,t)}function I(e,t="utf-8"){return t=t||"utf-8",Object(r.c)().platform.encode(e,t)}function S(e,t="utf-8"){return t=t||"utf-8",Object(r.c)().platform.decode(e,t)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&r.util.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}},function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return o}));var r=n(0),a=n(7);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function s(e,t,n){return({inputs:s,attrs:o,backend:i})=>{const{x:u}=s;if(Object(a.a)(u,e),"string"===u.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const c=i,l=c.data.get(u.dataId).values,d=r.util.sizeFromShape(u.shape),p=n||u.dtype,h=r.util.getArrayFromDType(p,d);for(let e=0;e<d;++e)h[e]=t(l[e],o);return c.makeTensorInfo(u.shape,p,h)}}function o(e,t,n){return({inputs:r,attrs:s,backend:o})=>{const{x:i}=r;if(Object(a.a)(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const u=o,c=u.data.get(i.dataId).values,l=n||i.dtype,d=t(c,l,s);return u.makeTensorInfo(i.shape,l,d)}}},function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"c",(function(){return u})),n.d(t,"a",(function(){return c})),n.d(t,"d",(function(){return l}));var r=n(15),a=n(23);
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const s="tfjsflags";class o{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=i,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&a.b(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];a.b(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Object(r.x)(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"==typeof this.global||"undefined"==typeof this.global.location||"undefined"==typeof this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if(s in e){e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}}function i(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function u(){return c}let c=null;function l(e){c=e}},function(e,t,n){"use strict";n.r(t),n.d(t,"makeTypesMatch",(function(){return o})),n.d(t,"assertTypesMatch",(function(){return i})),n.d(t,"isTensorInList",(function(){return u})),n.d(t,"getTensorsInContainer",(function(){return c}));var r=n(14),a=n(32),s=n(15);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(e,t){if(e.dtype===t.dtype)return[e,t];const n=Object(a.c)(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function i(e,t){Object(s.b)(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function u(e,t){return t.some((t=>t.id===e.id))}function c(e){const t=[];return l(e,t,new Set),t}function l(e,t,n){if(null==e)return;if(e instanceof r.a)return void t.push(e);if(a=e,!Array.isArray(a)&&"object"!=typeof a)return;var a;const s=e;for(const e in s){const r=s[e];n.has(r)||(n.add(r),l(r,t,n))}}},function(e,t,n){"use strict";n.d(t,"d",(function(){return r})),n.d(t,"c",(function(){return s})),n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return i})),n.d(t,"e",(function(){return u}));var r,a=n(5);!function(e){e.float32="float32",e.float16="float16",e.int32="int32",e.uint32="uint32",e.int8="int8",e.uint8="uint8"}(r||(r={}));class s{constructor(e){this.builder_=e}get builder(){return this.builder_}}class o extends s{constructor(e,t,n){super(n),a.a("string"==typeof e,"The name parameter is invalid"),this.name=e,a.n(t),this.desc=t}}class i extends s{constructor(e,t,n){super(n),this.desc=e,this.value=t}static createScalar(e,t=r.float32,n){return a.a(t in r,"The operand type is invalid."),a.q(e,t),new i({type:t},e,n)}static createTensor(e,t,n){a.a(a.j(t),"Only ArrayBufferView value type is supported.");const r=t;return a.n(e),a.p(r,e.type,e.dimensions),new i(e,r,n)}}class u extends s{constructor(e){super(e.builder),this.operation=e}}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e){return(t,n,a,s,o)=>{const i=r.backend_util.assertAndGetBroadcastShape(t,n),u=i.length,c=r.util.computeStrides(i),l=r.util.sizeFromShape(i),d=r.util.getTypedArrayFromDType(o,l),p=t.length,h=n.length,f=r.util.computeStrides(t),m=r.util.computeStrides(n),b=r.backend_util.getBroadcastDims(t,i),g=r.backend_util.getBroadcastDims(n,i);if(b.length+g.length===0)for(let t=0;t<d.length;++t)d[t]=e(a[t%a.length],s[t%s.length]);else for(let t=0;t<d.length;++t){const n=r.util.indexToLoc(t,u,c),o=n.slice(-p);b.forEach((e=>o[e]=0));const i=r.util.locToIndex(o,p,f),l=n.slice(-h);g.forEach((e=>l[e]=0));const x=r.util.locToIndex(l,h,m);d[t]=e(a[i],s[x])}return[d,i]}}},function(e,t,n){"use strict";n.d(t,"a",(function(){return i})),n.d(t,"b",(function(){return u}));var r=n(0),a=n(7),s=n(29),o=n(18);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t,n,i){return null==n?({inputs:n,backend:s})=>{const{a:o,b:u}=n,c=s;Object(a.a)([o,u],e);const l=c.data.get(o.dataId).values,d=c.data.get(u.dataId).values,p="string"===o.dtype?r.backend_util.fromUint8ToStringArray(l):l,h="string"===o.dtype?r.backend_util.fromUint8ToStringArray(d):d,f=i||o.dtype,[m,b]=t(o.shape,u.shape,p,h,f);return c.makeTensorInfo(b,f,m)}:({inputs:e,backend:r})=>{const{a:a,b:u}=e,c=r;if("complex64"===a.dtype||"complex64"===u.dtype){const e=Object(s.a)({inputs:{x:a},backend:c,attrs:{dtype:"complex64"}}),t=c.data.get(e.dataId),r=t.complexTensorInfos.real,i=t.complexTensorInfos.imag,l=c.data.get(r.dataId).values,d=c.data.get(i.dataId).values,p=Object(s.a)({inputs:{x:u},backend:c,attrs:{dtype:"complex64"}}),h=c.data.get(p.dataId),f=h.complexTensorInfos.real,m=h.complexTensorInfos.imag,b=c.data.get(f.dataId).values,g=c.data.get(m.dataId).values,[x,v,y]=n(a.shape,u.shape,l,d,b,g),k=c.makeTensorInfo(y,"float32",x),w=c.makeTensorInfo(y,"float32",v),I=Object(o.a)({inputs:{real:k,imag:w},backend:c});return c.disposeIntermediateTensorInfo(e),c.disposeIntermediateTensorInfo(p),c.disposeIntermediateTensorInfo(k),c.disposeIntermediateTensorInfo(w),I}{const e=c.data.get(a.dataId).values,n=c.data.get(u.dataId).values,r=i||a.dtype,[s,o]=t(a.shape,u.shape,e,n,r);return c.makeTensorInfo(o,r,s)}}}function u(e){return(t,n,a,s,o,i)=>{const u=r.backend_util.assertAndGetBroadcastShape(t,n),c=r.util.sizeFromShape(u),l=u.length,d=r.util.computeStrides(u),p=r.util.getTypedArrayFromDType("float32",c),h=r.util.getTypedArrayFromDType("float32",c),f=r.backend_util.getBroadcastDims(t,u),m=r.backend_util.getBroadcastDims(n,u),b=r.backend_util.mergeRealAndImagArrays(a,s),g=r.backend_util.mergeRealAndImagArrays(o,i),x=t.length,v=r.util.computeStrides(t),y=n.length,k=r.util.computeStrides(n);if(f.length+m.length===0)for(let t=0;t<p.length;t++){const n=t%b.length,r=t%g.length,a=e(b[2*n],b[2*n+1],g[2*r],g[2*r+1]);p[t]=a.real,h[t]=a.imag}else for(let t=0;t<p.length;t++){const n=r.util.indexToLoc(t,l,d),a=n.slice(-x);f.forEach((e=>a[e]=0));const s=r.util.locToIndex(a,x,v),o=n.slice(-y);m.forEach((e=>o[e]=0));const i=r.util.locToIndex(o,y,k),u=e(b[2*s],b[2*s+1],g[2*i],g[2*i+1]);p[t]=u.real,h[t]=u.imag}return[p,h,u]}}},function(e,t,n){"use strict";n.d(t,"b",(function(){return d})),n.d(t,"f",(function(){return m})),n.d(t,"e",(function(){return b})),n.d(t,"d",(function(){return g})),n.d(t,"a",(function(){return x})),n.d(t,"c",(function(){return v}));var r=n(35),a=n(15);function s(e,t,n,r){const s=Object(a.j)(t),i=function(e,t,n,r){const s=Object(a.O)(t),i=r[r.length-1],u=new Array(i).fill(0),l=t.length,d="complex64"===n?c(e):e;if(l>1)for(let e=0;e<s/i;e++){const t=e*i;for(let e=0;e<i;e++)u[e]=Math.max(u[e],o(d[t+e],0,n).length)}return u}(e,t,n,s),l=t.length,d=u(e,t,n,s,i),p=["Tensor"];return r&&(p.push(`  dtype: ${n}`),p.push(`  rank: ${l}`),p.push(`  shape: [${t}]`),p.push("  values:")),p.push(d.map((e=>"    "+e)).join("\n")),p.join("\n")}function o(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:Object(a.z)(e)?`'${e}'`:"bool"===n?i(e):parseFloat(e.toFixed(7)).toString(),Object(a.L)(r,t)}function i(e){return 0===e?"false":"true"}function u(e,t,n,r,a,s=!0){const l="complex64"===n?2:1,d=t[0],p=t.length;if(0===p){if("complex64"===n){return[o(c(e)[0],0,n)]}return"bool"===n?[i(e[0])]:[e[0].toString()]}if(1===p){if(d>20){const t=3*l;let r=Array.from(e.slice(0,t)),s=Array.from(e.slice((d-3)*l,d*l));return"complex64"===n&&(r=c(r),s=c(s)),["["+r.map(((e,t)=>o(e,a[t],n))).join(", ")+", ..., "+s.map(((e,t)=>o(e,a[d-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?c(e):Array.from(e)).map(((e,t)=>o(e,a[t],n))).join(", ")+"]"]}const h=t.slice(1),f=r.slice(1),m=r[0]*l,b=[];if(d>20){for(let t=0;t<3;t++){const r=t*m,s=r+m;b.push(...u(e.slice(r,s),h,n,f,a,!1))}b.push("...");for(let t=d-3;t<d;t++){const r=t*m,s=r+m;b.push(...u(e.slice(r,s),h,n,f,a,t===d-1))}}else for(let t=0;t<d;t++){const r=t*m,s=r+m;b.push(...u(e.slice(r,s),h,n,f,a,t===d-1))}const g=2===p?",":"";b[0]="["+b[0]+g;for(let e=1;e<b.length-1;e++)b[e]=" "+b[e]+g;let x=",\n";for(let e=2;e<p;e++)x+="\n";return b[b.length-1]=" "+b[b.length-1]+"]"+(s?"":x),b}function c(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var l=n(6);
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class d{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=a.O(e),null!=n){const e=n.length;a.b(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||a.n(t,this.size),this.strides=Object(a.j)(e)}set(e,...t){0===t.length&&(t=[0]),a.b(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return p().makeTensor(this.values,this.shape,this.dtype)}}let p=null,h=null,f=null;function m(e){p=e}function b(e){h=e}function g(e){f=e}class x{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=a.O(e),this.strides=Object(a.j)(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return h.buffer(this.shape,this.dtype,e)}bufferSync(){return h.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Object(a.U)(this.shape,e,"complex64"===this.dtype)}arraySync(){return Object(a.U)(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=p().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>l.decodeString(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=p().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>l.decodeString(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await p().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(p().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return h.print(this,e)}clone(){return this.throwIfDisposed(),h.clone(this)}toString(e=!1){return s(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),h.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),p().makeVariable(this,e,t,n)}}Object.defineProperty(x,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),Object(r.a)("Tensor",(()=>x));class v extends x{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!a.a(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);p().disposeTensor(this),this.dataId=e.dataId,p().incRef(this,null)}dispose(){p().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(v,Symbol.hasInstance,{value:e=>e instanceof x&&null!=e.assign&&e.assign instanceof Function})},function(e,t,n){"use strict";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function r(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,i(e,t,n)}function a(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,i(e,n,r),i(t,n,r)}function s(e,t,n){return Math.max(e,Math.min(t,n))}function o(e){return e%2==0?e:e+1}function i(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function u(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function c(e,t){const n=Math.random();return t*n+(1-n)*e}function l(e,t){let n=0;for(let r=0;r<e.length;r++){const a=Number(e[r])-Number(t[r]);n+=a*a}return n}function d(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function p(e,t,n=""){d(g(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function h(e){d(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function f(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||N(e)&&!n)for(let r=0;r<e.length;++r)f(e[r],t,n);else t.push(e);return t}function m(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function b(e){return 0===e.length}function g(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function x(e){return e%1==0}function v(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function y(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function k(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return r(t),t}function w(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function I(e,t=(e=>0),n){return new Promise(((r,a)=>{let s=0;const o=()=>{if(e())return void r();s++;const i=t(s);null!=n&&s>=n?a():setTimeout(o,i)};o()}))}function S(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const a=e.slice();return a[r]=t/n,a}function _(e,t){const n=t.length;return d((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),d(e.every((e=>x(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function O(e,t){const n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:_(t,e).sort();let o=0;for(let t=0;t<e.length;++t){if(null!=s){if(s[o]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==s[o]||s[o]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),s[o]<=t&&o++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function T(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function C(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function $(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function E(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function A(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function N(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function R(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function F(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function M(e){return"string"==typeof e||e instanceof String}function D(e){return"boolean"==typeof e}function j(e){return"number"==typeof e}function P(e){return Array.isArray(e)?P(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":j(e)?"float32":M(e)?"string":D(e)?"bool":"float32"}function B(e){return!!(e&&e.constructor&&e.call&&e.apply)}function L(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function W(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function z(e,t,n,r=!1){const a=new Array;if(1===t.length){const s=t[0]*(r?2:1);for(let t=0;t<s;t++)a[t]=n[e+t]}else{const s=t[0],o=t.slice(1),i=o.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<s;t++)a[t]=z(e+t*i,o,n,r)}return a}function U(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return z(0,e,t,n)}function V(e,t){const n=G(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function G(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function H(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return U(e,new Float32Array(n));if("int32"===t)return U(e,new Int32Array(n));if("bool"===t)return U(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function q(e){e.forEach((t=>{d(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function K(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function X(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function Y(e){return e&&e.then&&"function"==typeof e.then}n.d(t,"M",(function(){return r})),n.d(t,"N",(function(){return a})),n.d(t,"i",(function(){return s})),n.d(t,"H",(function(){return o})),n.d(t,"S",(function(){return i})),n.d(t,"R",(function(){return u})),n.d(t,"J",(function(){return c})),n.d(t,"l",(function(){return l})),n.d(t,"b",(function(){return d})),n.d(t,"e",(function(){return p})),n.d(t,"d",(function(){return h})),n.d(t,"m",(function(){return f})),n.d(t,"O",(function(){return m})),n.d(t,"y",(function(){return b})),n.d(t,"a",(function(){return g})),n.d(t,"v",(function(){return x})),n.d(t,"T",(function(){return v})),n.d(t,"P",(function(){return y})),n.d(t,"k",(function(){return k})),n.d(t,"L",(function(){return w})),n.d(t,"K",(function(){return I})),n.d(t,"s",(function(){return S})),n.d(t,"I",(function(){return _})),n.d(t,"Q",(function(){return O})),n.d(t,"o",(function(){return T})),n.d(t,"n",(function(){return C})),n.d(t,"h",(function(){return $})),n.d(t,"B",(function(){return E})),n.d(t,"p",(function(){return A})),n.d(t,"A",(function(){return N})),n.d(t,"g",(function(){return R})),n.d(t,"f",(function(){return F})),n.d(t,"z",(function(){return M})),n.d(t,"t",(function(){return D})),n.d(t,"w",(function(){return j})),n.d(t,"r",(function(){return P})),n.d(t,"u",(function(){return B})),n.d(t,"G",(function(){return L})),n.d(t,"j",(function(){return W})),n.d(t,"U",(function(){return U})),n.d(t,"D",(function(){return V})),n.d(t,"F",(function(){return G})),n.d(t,"E",(function(){return H})),n.d(t,"c",(function(){return q})),n.d(t,"C",(function(){return K})),n.d(t,"q",(function(){return X})),n.d(t,"x",(function(){return Y}))},function(e,t,n){"use strict";(function(e){n.d(t,"f",(function(){return i})),n.d(t,"e",(function(){return u})),n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return h})),n.d(t,"d",(function(){return f})),n.d(t,"c",(function(){return m})),n.d(t,"i",(function(){return b})),n.d(t,"g",(function(){return g})),n.d(t,"h",(function(){return x}));var r=n(24),a=n(31),s=n(15),o=n(50);async function i(e,t){const n=[],r=[],a=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let s=0;s<a.length;++s){const o=a[s],i=Array.isArray(e)?e[s].tensor:e[o];if("float32"!==i.dtype&&"int32"!==i.dtype&&"bool"!==i.dtype&&"string"!==i.dtype&&"complex64"!==i.dtype)throw new Error(`Unsupported dtype in weight '${o}': ${i.dtype}`);const u={name:o,shape:i.shape,dtype:i.dtype};if("string"===i.dtype){const e=new Promise((async e=>{const t=await i.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n);let a=0;for(let e=0;e<t.length;e++){const n=t[e],s=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(s,a),a+=4,r.set(n,a),a+=n.length}e(r)}));r.push(e)}else r.push(i.data());null!=t&&(u.group=t),n.push(u)}return{data:c(await Promise.all(r)),specs:n}}function u(e,t){const n={};let i,u=0;for(const c of t){const t=c.name,l=c.dtype,d=c.shape,p=Object(s.O)(d);let h;if("quantization"in c){const n=c.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${c.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${c.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==l)throw new Error(`Weight ${c.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${l}.`)}const r=o.a[n.dtype],a=e.slice(u,u+p*r),s="uint8"===n.dtype?new Uint8Array(a):new Uint16Array(a);if("float32"===l)if("uint8"===n.dtype||"uint16"===n.dtype){h=new Float32Array(s.length);for(let e=0;e<s.length;e++){const t=s[e];h[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===i&&(i=v()),h=i(s)}else{if("int32"!==l)throw new Error(`Unsupported dtype in weight '${t}': ${l}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);h=new Int32Array(s.length);for(let e=0;e<s.length;e++){const t=s[e];h[e]=Math.round(t*n.scale+n.min)}}u+=p*r}else if("string"===l){const t=Object(s.O)(c.shape);h=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(u,u+4))[0];u+=4;const n=new Uint8Array(e.slice(u,u+t));h.push(n),u+=t}}else{const s=o.a[l],i=e.slice(u,u+p*s);if("float32"===l)h=new Float32Array(i);else if("int32"===l)h=new Int32Array(i);else if("bool"===l)h=new Uint8Array(i);else{if("complex64"!==l)throw new Error(`Unsupported dtype in weight '${t}': ${l}`);{h=new Float32Array(i);const e=new Float32Array(h.length/2),s=new Float32Array(h.length/2);for(let t=0;t<e.length;t++)e[t]=h[2*t],s[t]=h[2*t+1];const o=Object(a.a)(e,d,"float32"),u=Object(a.a)(s,d,"float32");n[t]=Object(r.a)(o,u),o.dispose(),u.dispose()}}u+=p*s}"complex64"!==l&&(n[t]=Object(a.a)(h,d,l))}return n}function c(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let a=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength})),r.buffer}const l="undefined"!=typeof e&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function d(t){return l?e.byteLength(t):new Blob([t]).size}function p(t){if(l)return e.from(t).toString("base64");const n=new Uint8Array(t);let r="";for(let e=0,t=n.length;e<t;e++)r+=String.fromCharCode(n[e]);return btoa(r)}function h(t){if(l){const n=e.from(t,"base64");return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}const n=atob(t),r=new Uint8Array(n.length);for(let e=0;e<n.length;++e)r.set([n.charCodeAt(e)],e);return r.buffer}function f(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function m(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function b(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}async function g(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest){const[r,a]=await t(e.weightsManifest);n.weightSpecs=r,n.weightData=a}return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),n}function x(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:d(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:d(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function v(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let a=0;a<r.length;a++){const o=r[a],i=e[n[o>>10]+(1023&o)]+t[o>>10];s[a]=i}return new Float32Array(a)}}}).call(this,n(103).Buffer)},function(e,t,n){"use strict";n.d(t,"a",(function(){return o})),n.d(t,"b",(function(){return i}));var r=n(0),a=n(7),s=n(42);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(e){const{inputs:t,attrs:n,backend:r}=e,{x:o}=t,{perm:i}=n;Object(a.a)(o,"transpose");const u=o.shape.length,c=new Array(u);for(let e=0;e<c.length;e++)c[e]=o.shape[i[e]];const l=r.data.get(o.dataId).values,d=Object(s.a)(l,o.shape,o.dtype,i,c);return{dataId:r.write(d,c,o.dtype),shape:c,dtype:o.dtype}}const i={kernelName:r.Transpose,backendName:"cpu",kernelFunc:o}},function(e,t,n){"use strict";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function r(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,i=n.makeTensorInfo(r.shape,"complex64");return n.data.get(i.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",o)},i}n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return a}));const a={kernelName:n(0).Complex,backendName:"cpu",kernelFunc:r}},function(e,t,n){"use strict";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function r(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return a}));const a={kernelName:n(0).Identity,backendName:"cpu",kernelFunc:r}},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(3),a=n(15),s=n(6);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(e,t,n,o){if(null==o&&(o=Object(a.r)(e)),"complex64"===o)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Object(a.A)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Object(a.c)(t);const e=Object(a.O)(t),r=Object(a.O)(n);Object(a.b)(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],s=e!==n.length-1||r!==Object(a.O)(t.slice(e));Object(a.b)(n[e]===t[e]||!s,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return Object(a.A)(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==o?Object(s.toTypedArray)(e,o):Object(a.m)(e,[],!0),r.a.makeTensor(e,t,o)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e){return(t,n,a)=>{const s=r.util.getTypedArrayFromDType(n,t.length);for(let n=0;n<t.length;++n)s[n]=e(t[n],a);return s}}},function(e,t,n){"use strict";n.d(t,"c",(function(){return s})),n.d(t,"a",(function(){return o})),n.d(t,"b",(function(){return i}));var r=n(0),a=n(7);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function s(e,t,n,a,s){const o=r.slice_util.isSliceContinous(a,t,n),i=r.util.sizeFromShape(n),u=r.util.computeStrides(a);if(o){const n=r.slice_util.computeFlatOffset(t,u);return"string"===s?e.slice(n,n+i):e.subarray(n,n+i)}const c="string"===s?r.backend_util.fromUint8ToStringArray(e):e,l=Object(r.buffer)(a,s,c),d=Object(r.buffer)(n,s);for(let e=0;e<d.size;++e){const n=d.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));d.set(l.get(...r),...n)}return"string"===s?r.backend_util.fromStringArrayToUint8(d.values):d.values}function o(e){const{inputs:t,backend:n,attrs:o}=e,{x:i}=t,{begin:u,size:c}=o;Object(a.a)(i,"slice");const[l,d]=r.slice_util.parseSliceParams(i,u,c);r.slice_util.assertParamsValid(i,l,d);const p=s(n.data.get(i.dataId).values,l,d,i.shape,i.dtype);return n.makeTensorInfo(d,i.dtype,p)}const i={kernelName:r.Slice,backendName:"cpu",kernelFunc:o}},function(e,t,n){"use strict";n.d(t,"b",(function(){return a})),n.d(t,"a",(function(){return s}));var r=n(9);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(...e){Object(r.c)().getBool("IS_TEST")||Object(r.c)().getBool("PROD")||console.warn(...e)}function s(...e){Object(r.c)().getBool("IS_TEST")||Object(r.c)().getBool("PROD")||console.log(...e)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(3),a=n(4),s=n(1),o=n(15),i=n(2);const u=Object(i.b)({complex_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t){const n=Object(s.a)(e,"real","complex"),i=Object(s.a)(t,"imag","complex");o.e(n.shape,i.shape,`real and imag shapes, ${n.shape} and ${i.shape}, must match in call to tf.complex().`);const u={real:n,imag:i};return r.a.runKernel(a.A,u)}})},function(e,t,n){"use strict";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function r(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return a}));const a={kernelName:n(0).Real,backendName:"cpu",kernelFunc:r}},function(e,t){e.exports=function(){throw new Error("define cannot be used indirect")}},function(e,t,n){"use strict";n.d(t,"c",(function(){return o})),n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return c}));var r=n(0),a=n(12),s=n(13);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=Object(a.a)(((e,t)=>e+t)),i=Object(s.b)(((e,t,n,r)=>({real:e+n,imag:t+r}))),u=Object(s.a)(r.Add,o,i),c={kernelName:r.Add,backendName:"cpu",kernelFunc:u}},function(e,t,n){"use strict";n.d(t,"c",(function(){return o})),n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return c}));var r=n(0),a=n(12),s=n(13);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=Object(a.a)(((e,t)=>e*t)),i=Object(s.b)(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),u=Object(s.a)(r.Multiply,o,i),c={kernelName:r.Multiply,backendName:"cpu",kernelFunc:u}},function(e,t,n){"use strict";n.d(t,"a",(function(){return c})),n.d(t,"b",(function(){return l}));var r=n(0),a=n(12),s=n(86),o=n(18),i=n(19),u=n(25);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(e){const{inputs:t,backend:n,attrs:l}=e,{x:d}=t,{dtype:p}=l;if("complex64"===p){if("complex64"===d.dtype)return Object(i.a)({inputs:{x:d},backend:n});const e=Object(s.a)(n,d.shape,d.dtype),t=c({inputs:{x:d},backend:n,attrs:{dtype:"float32"}}),r=Object(o.a)({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===d.dtype){const e=Object(u.a)({inputs:{input:d},backend:n}),t=c({inputs:{x:e},backend:n,attrs:{dtype:p}});return n.disposeIntermediateTensorInfo(e),t}if(!r.util.hasEncodingLoss(d.dtype,p)){const e=Object(i.a)({inputs:{x:d},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:p}}if("int32"===p){const e=n.data.get(d.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(d.shape,"int32",t)}if("bool"===p){const e=n.data.get(d.dataId).values,t=r.util.toTypedArray([0],d.dtype),[s,o]=Object(a.a)(((e,t)=>e!==t?1:0))(d.shape,[],e,t,"bool");return n.makeTensorInfo(o,"bool",s)}throw new Error(`Error in Cast: failed to cast ${d.dtype} to ${p}`)}const l={kernelName:r.Cast,backendName:"cpu",kernelFunc:c}},function(e,t,n){"use strict";n.d(t,"c",(function(){return u})),n.d(t,"b",(function(){return c})),n.d(t,"d",(function(){return l})),n.d(t,"f",(function(){return d})),n.d(t,"e",(function(){return p})),n.d(t,"h",(function(){return h})),n.d(t,"g",(function(){return f})),n.d(t,"a",(function(){return m}));var r=n(9),a=n(35),s=n(23);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=Object(a.a)("kernelRegistry",(()=>new Map)),i=Object(a.a)("gradRegistry",(()=>new Map));function u(e,t){const n=b(e,t);return o.get(n)}function c(e){return i.get(e)}function l(e){const t=o.entries(),n=[];for(;;){const{done:r,value:a}=t.next();if(r)break;const[s,o]=a,[i]=s.split("_");i===e&&n.push(o)}return n}function d(e){const{kernelName:t,backendName:n}=e,r=b(t,n);o.has(r)&&s.b(`The kernel '${t}' for backend '${n}' is already registered`),o.set(r,e)}function p(e){const{kernelName:t}=e;i.has(t)&&Object(r.c)().getBool("DEBUG")&&s.b(`Overriding the gradient for '${t}'`),i.set(t,e)}function h(e,t){const n=b(e,t);if(!o.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);o.delete(n)}function f(e){if(!i.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);i.delete(e)}function m(e,t){l(e).forEach((e=>{d(Object.assign({},e,{backendName:t}))}))}function b(e,t){return`${t}_${e}`}},function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var r=n(1),a=n(20);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function s(e,t,n){const s=Object(r.c)(e,n);return Object(a.a)(e,t,s,n)}},function(e,t,n){"use strict";
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
var r,a,s,o,i;n.d(t,"a",(function(){return r})),n.d(t,"c",(function(){return c})),n.d(t,"b",(function(){return l})),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(r||(r={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(a||(a={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(s||(s={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(o||(o={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(i||(i={}));const u={float32:o,int32:a,bool:s,complex64:i};function c(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return u[e][t]}function l(e){return c(e,"int32")}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a})),n.d(t,"b",(function(){return s}));var r=n(0);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n,a,s){const o=r.util.sizeFromShape(a),i=r.util.makeZerosTypedArray(s,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=s||(i[r]+=o>0?t[n]:1)}return i}function s(e,t,n,a=!1){const s=e.shape[0],o=e.shape[1],i=Object(r.buffer)([s,n],t.dtype);for(let r=0;r<s;r++)for(let s=0;s<o;s++){const o=e.get(r,s);if(o<0)throw new Error("Input x must be non-negative!");o>=n||(a?i.set(1,r,o):t.size>0?i.set(i.get(r,o)+t.get(r,s),r,o):i.set(i.get(r,o)+1,r,o))}return i}},function(e,t,n){"use strict";n.d(t,"c",(function(){return o})),n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return c}));var r=n(0),a=n(12),s=n(13);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=Object(a.a)(((e,t)=>e-t)),i=Object(s.b)(((e,t,n,r)=>({real:e-n,imag:t-r}))),u=Object(s.a)(r.Sub,o,i),c={kernelName:r.Sub,backendName:"cpu",kernelFunc:u}},function(e,t,n){"use strict";(function(e,r){
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
let a;function s(){if(null==a){let t;if("undefined"!=typeof window)t=window;else if("undefined"!=typeof e)t=e;else if("undefined"!=typeof r)t=r;else{if("undefined"==typeof self)throw new Error("Could not find a global object");t=self}a=t}return a}function o(e,t){const n=function(){const e=s();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}n.d(t,"b",(function(){return s})),n.d(t,"a",(function(){return o}))}).call(this,n(36),n(37))},function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t){var n,r,a=e.exports={};function s(){throw new Error("setTimeout has not been defined")}function o(){throw new Error("clearTimeout has not been defined")}function i(e){if(n===setTimeout)return setTimeout(e,0);if((n===s||!n)&&setTimeout)return n=setTimeout,setTimeout(e,0);try{return n(e,0)}catch(t){try{return n.call(null,e,0)}catch(t){return n.call(this,e,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:s}catch(e){n=s}try{r="function"==typeof clearTimeout?clearTimeout:o}catch(e){r=o}}();var u,c=[],l=!1,d=-1;function p(){l&&u&&(l=!1,u.length?c=u.concat(c):d=-1,c.length&&h())}function h(){if(!l){var e=i(p);l=!0;for(var t=c.length;t;){for(u=c,c=[];++d<t;)u&&u[d].run();d=-1,t=c.length}u=null,l=!1,function(e){if(r===clearTimeout)return clearTimeout(e);if((r===o||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(e);try{r(e)}catch(t){try{return r.call(null,e)}catch(t){return r.call(this,e)}}}(e)}}function f(e,t){this.fun=e,this.array=t}function m(){}a.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];c.push(new f(e,t)),1!==c.length||l||i(h)},f.prototype.run=function(){this.fun.apply(null,this.array)},a.title="browser",a.browser=!0,a.env={},a.argv=[],a.version="",a.versions={},a.on=m,a.addListener=m,a.once=m,a.off=m,a.removeListener=m,a.removeAllListeners=m,a.emit=m,a.prependListener=m,a.prependOnceListener=m,a.listeners=function(e){return[]},a.binding=function(e){throw new Error("process.binding is not supported")},a.cwd=function(){return"/"},a.chdir=function(e){throw new Error("process.chdir is not supported")},a.umask=function(){return 0}},function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,t){(function(t){e.exports=t}).call(this,{})},function(e,t,n){"use strict";n.d(t,"c",(function(){return o})),n.d(t,"a",(function(){return i})),n.d(t,"b",(function(){return u}));var r=n(0),a=n(12),s=n(13);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=Object(a.a)(((e,t)=>e===t?1:0)),i=Object(s.a)(r.Equal,o,null,"bool"),u={kernelName:r.Equal,backendName:"cpu",kernelFunc:i}},function(e,t,n){"use strict";n.d(t,"c",(function(){return o})),n.d(t,"a",(function(){return i})),n.d(t,"b",(function(){return u}));var r=n(0),a=n(21),s=n(8);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=Object(a.a)((e=>Math.exp(e))),i=Object(s.b)(r.Exp,o),u={kernelName:r.Exp,backendName:"cpu",kernelFunc:i}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n,a,s){const o=t.length,i=r.util.sizeFromShape(t),u=r.util.computeStrides(t),c=r.util.computeStrides(s),l=r.util.getTypedArrayFromDType(n,r.util.sizeFromShape(s));for(let t=0;t<i;++t){const n=r.util.indexToLoc(t,o,u),s=new Array(n.length);for(let e=0;e<s.length;e++)s[e]=n[a[e]];l[r.util.locToIndex(s,o,c)]=e[t]}return l}},function(e,t,n){"use strict";n.d(t,"c",(function(){return o})),n.d(t,"a",(function(){return i})),n.d(t,"b",(function(){return u}));var r=n(0),a=n(21),s=n(8);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=Object(a.a)((e=>1/(1+Math.exp(-e)))),i=Object(s.a)(r.Sigmoid,(e=>1/(1+Math.exp(-e)))),u={kernelName:r.Sigmoid,backendName:"cpu",kernelFunc:i}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n,a,s,o=!1,i=0){const u=a.length;if(u!==s.length)throw new Error("segmentIds and indices should have same size.");const c=[t[0],e.length/t[0]],l=c[1],d=u>0?s[u-1]+1:0;if(d<0)throw new Error("segment ids must be >= 0");const p=t.slice();p[0]=d;const h=p.reduce(((e,t)=>e*t),1),f=r.util.getArrayFromDType(n,h);if(0===u)return d>0&&f.fill(i),[f,p];if(d<=0)throw new Error("segment ids must be >= 0");let m=0,b=1,g=0,x=s[m];for(;;){let t=0;if(b<u){if(t=s[b],x===t){++b;continue}if(x>=t)throw new Error("segment ids are not increasing")}if(x<0||x>=d)throw new Error(`Segment id ${x} out of range [0, ${d}), possibly because segmentIds input is not sorted.`);x>g&&f.fill(i,g*l,x*l);for(let t=m;t<b;++t){const n=a[t];if(n<0||n>=c[0])throw new Error(`Bad: indices[${t}] == ${a[t]} out of range [0, ${c[0]})`);for(let t=0;t<l;t++)f[x*l+t]+=e[n*l+t]}if(o)for(let e=0;e<l;e++)f[x*l+e]/=b-m;if(m=b,++b,g=x+1,x=t,b>u)break}return g<d&&f.fill(i,g*l,d*l),[f,p]}},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));n(95),n(96);var r,a,s=n(89),o=n(0),i=n(5);!function(e){e.default="default",e["high-performance"]="high-performance",e["low-power"]="low-power"}(r||(r={})),function(e){e.default="default",e.gpu="gpu",e.cpu="cpu"}(a||(a={}));class u{constructor(e={}){i.a(e instanceof Object,"Invalid options."),void 0!==e.powerPreference&&i.a(e.powerPreference in r,"Invalid power preference."),this.options_=e}get options(){return this.options_}get tf(){return s.a(`https://unpkg.com/@tensorflow/tfjs-backend-wasm@${o.version_core}/dist/`),o}}},function(e,t,n){var r=n(110),a=n(111),s=n(112),o=n(113),i=n(114),u=n(115),c=n(116);c.alea=r,c.xor128=a,c.xorwow=s,c.xorshift7=o,c.xor4096=i,c.tychei=u,e.exports=c},function(e,t,n){"use strict";(function(e){n(3);var t=n(52),r=n(9);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const a=Object(r.c)();a.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),a.registerFlag("IS_BROWSER",(()=>t.isBrowser())),a.registerFlag("IS_NODE",(()=>"undefined"!=typeof e&&"undefined"!=typeof e.versions&&"undefined"!=typeof e.versions.node)),a.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),a.registerFlag("PROD",(()=>!1)),a.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>a.getBool("DEBUG"))),a.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),a.registerFlag("IS_TEST",(()=>!1)),a.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),a.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1))}).call(this,n(37))},function(e,t){},function(e,t,n){"use strict";n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return a}));class r{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class a{refCount(e){return s("refCount")}incRef(e){return s("incRef")}timerAvailable(){return!0}time(e){return s("time")}read(e){return s("read")}readSync(e){return s("readSync")}numDataIds(){return s("numDataIds")}disposeData(e,t){return s("disposeData")}write(e,t,n){return s("write")}move(e,t,n,r,a){return s("move")}memory(){return s("memory")}floatPrecision(){return s("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return s("dispose")}}function s(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8}},function(e,t,n){"use strict";n.d(t,"d",(function(){return c})),n.d(t,"b",(function(){return l})),n.d(t,"a",(function(){return d})),n.d(t,"h",(function(){return p})),n.d(t,"g",(function(){return h})),n.d(t,"f",(function(){return f})),n.d(t,"e",(function(){return m})),n.d(t,"c",(function(){return be}));var r=n(45),a=n(87),s=n(11),o=n(0);class i{constructor(e){this.outputs_=[],this.builder_=e}get builder(){return this.builder_}get outputs(){return this.outputs_}compute(e){const t=new Map;for(const n of this.inputs())t.set(n,e.getTensor(n));const n=o.tidy((()=>this.computeImpl(t)));for(let t=0;t<this.outputs_.length;++t)e.setOutputTensor(this.outputs_[t],n[t]);for(const t of this.inputs())e.releaseTensor(t)}dispose(){}}class u extends i{constructor(e){super(e),e&&this.createOutput()}createOutput(){this.outputs_.push(new s.e(this))}get output(){return this.outputs_[0]}computeImpl(e){return[this.run(e)]}}var c,l,d,p,h,f,m,b=n(5);class g extends u{constructor(e,t,n,r={}){if(super(e.builder),b.m(e),this.input_=e,b.m(t),this.mean_=t,b.m(n),this.variance_=n,b.o(r.scale),this.scale_=r.scale,b.o(r.bias),this.bias_=r.bias,void 0!==r.axis){const e=r.axis;b.a(b.h(e),"The axis parameter is invalid."),this.axis_=e}else this.axis_=1;if(void 0!==r.epsilon){const e=r.epsilon;b.a("number"==typeof e,"The epsilon parameter is invalid"),this.epsilon_=e}else this.epsilon_=1e-5;this.activation_=r.activation}inputs(){const e=[this.input_,this.mean_,this.variance_];return this.scale_&&e.push(this.scale_),this.bias_&&e.push(this.bias_),e}getFusedOutputs(){return this.activation_?[this.activation_.apply(this.output)]:[this.output]}run(e){const t=e.get(this.input_);b.a(this.axis_<t.rank&&this.axis_>=-t.rank,"The axis parameter is invalid.");const n=this.axis_>=0?this.axis_:t.rank+this.axis_,r=e.get(this.mean_);b.a(1===r.rank,"The mean operand is not 1-D.");const a=e.get(this.variance_);let s,i;b.a(1===a.rank,"The mean operand is not 1-D."),this.scale_&&(s=e.get(this.scale_),b.a(1===s.rank,"The scale operand is not 1-D.")),this.bias_&&(i=e.get(this.bias_),b.a(1===i.rank,"The bias operand is not 1-D."));const u=Array.from(Array(t.rank).keys());return u[n]=t.rank-1,u[t.rank-1]=n,o.transpose(o.batchNorm(o.transpose(t,u),r,a,i,s,this.epsilon_),u)}}class x extends u{constructor(e,t){super(e.builder),b.m(e),this.a_=e,b.m(t),this.b_=t}inputs(){return[this.a_,this.b_]}run(e){const t=e.get(this.a_),n=e.get(this.b_);return this.runOp(t,n)}}class v extends x{runOp(e,t){return o.add(e,t)}}class y extends x{runOp(e,t){return o.sub(e,t)}}class k extends x{runOp(e,t){return o.mul(e,t)}}class w extends x{runOp(e,t){return o.div(e,t)}}class I extends x{runOp(e,t){return o.maximum(e,t)}}class S extends x{runOp(e,t){return o.minimum(e,t)}}class _ extends x{runOp(e,t){return o.pow(e,t)}}class O extends x{runOp(e,t){if(1===e.rank)return 1===t.rank?o.dot(e,t):o.matMul(o.reshape(e,[1,-1]),t);if(1===t.rank)return o.matMul(e,o.reshape(t,[-1,1]));{const n=e.rank>t.rank?e.rank:t.rank;let r=o.matMul(e,t);return r.rank!==n&&(r=o.reshape(r,[1].concat(r.shape))),r}}}class T extends u{constructor(e){void 0!==e?(super(e.builder),b.m(e),this.x_=e):(super(void 0),this.x_=void 0)}inputs(){return[this.x_]}run(e){const t=e.get(this.x_);return this.runOp(t)}}class C extends T{runOp(e){return o.abs(e)}}class $ extends T{runOp(e){return o.ceil(e)}}class E extends T{runOp(e){return o.cos(e)}}class A extends T{runOp(e){return o.exp(e)}}class N extends T{runOp(e){return o.floor(e)}}class R extends T{runOp(e){return o.log(e)}}class F extends T{runOp(e){return o.neg(e)}}class M extends T{runOp(e){return o.sin(e)}}class D extends T{runOp(e){return o.tan(e)}}class j extends T{apply(e){return this.builder_=e.builder,b.m(e),this.x_=e,this.createOutput(),this.output}}class P extends j{runOp(e){return o.sigmoid(e)}}class B extends j{runOp(e){return o.tanh(e)}}class L extends j{runOp(e){return o.relu(e)}}class W extends j{runOp(e){return o.div(o.mul(e,o.maximum(0,o.minimum(6,o.add(e,3)))),6)}}class z extends j{constructor(e,t={}){if(void 0!==e?(super(e),b.m(e),this.x_=e):(super(void 0),this.x_=void 0),void 0!==t.minValue){const e=t.minValue;b.a("number"==typeof e,"The minValue parameter is invalid"),this.minValue_=e}if(void 0!==t.maxValue){const e=t.maxValue;b.a("number"==typeof e,"The maxValue parameter is invalid"),this.maxValue_=e}}get minValue(){return void 0!==this.minValue_?this.minValue_:-1/0}get maxValue(){return void 0!==this.maxValue_?this.maxValue_:1/0}runOp(e){return void 0!==this.minValue_&&void 0!==this.maxValue_?o.clipByValue(e,this.minValue_,this.maxValue_):void 0!==this.minValue_&&void 0===this.maxValue_?o.maximum(e,this.minValue_):void 0===this.minValue_&&void 0!==this.maxValue_?o.minimum(e,this.maxValue_):o.clone(e)}}class U extends u{constructor(e,t){b.a(e.every((e=>e instanceof s.c)),"The parameter is not an operand."),super(e[0].builder),this.inputs_=e,b.a(b.h(t),"The axis parameter is invalid."),this.axis_=t}inputs(){return this.inputs_}run(e){const t=[];for(const n of this.inputs())t.push(e.get(n));return o.concat(t,this.axis_)}}class V extends j{constructor(e,t=.01){super(e),b.a("number"==typeof t,"The alpha parameter is invalid."),this.alpha_=t}get alpha(){return this.alpha_}runOp(e){return o.leakyRelu(e,this.alpha_)}}class G extends u{constructor(e,t,n={}){super(e.builder),b.m(e),this.input_=e,b.m(t),this.filter_=t,b.a(!(n.autoPad===d.explicit&&void 0===n.padding),"The padding parameter should be assigned when autoPad is explicit."),this.initOptions(n.padding,n.strides,n.dilations,n.groups,n.inputLayout,n.filterLayout,n.autoPad,n.transpose,n.outputPadding,n.outputSizes,n.bias,n.activation)}initOptions(e=[0,0,0,0],t=[1,1],n=[1,1],r=1,a=c.nchw,s=l.oihw,o=d.explicit,i=!1,u=[0,0],p,h,f){b.a(b.i(e)&&4===e.length,"The padding parameter is invalid."),this.padding_=e,b.a(b.i(t)&&2===t.length,"The strides parameter is invalid."),this.strides_=t,b.a(b.i(n)&&2===n.length,"The dilations parameter is invalid."),this.dilations_=n,b.a(b.h(r),"The gourps parameter is invalid."),this.groups_=r,b.a(a in c,"The input layout parameter is invalid."),this.inputLayout_=a,b.a(s in l,"The filter layout parameter is invalid."),this.filterLayout_=s,b.a(o in d,"The autoPad parameter is invalid."),this.autoPad_=o,this.transpose_=i,this.transpose_?(b.a(b.i(u)&&2===u.length,"The outputPadding parameter is invalid."),this.outputPadding_=u,b.a(void 0===p||b.i(p)&&2===p.length,"The outputSizes parameter is invalid."),this.outputSizes_=p):(this.outputPadding_=[0,0],this.outputSizes_=void 0),this.bias_=h,this.bias_&&b.m(this.bias_),f instanceof L?(this.fusedActivation_="relu",this.activation_=void 0):this.isRelu6(f)?(this.fusedActivation_="relu6",this.activation_=void 0):f instanceof V?(this.fusedActivation_="leakyrelu",this.leakyreluAlpha_=f.alpha,this.activation_=void 0):f instanceof P?(this.fusedActivation_="sigmoid",this.activation_=void 0):(this.fusedActivation_=void 0,this.activation_=f)}isRelu6(e){if(e instanceof z){const t=e;if(Math.abs(t.minValue-0)<1e-5&&Math.abs(t.maxValue-6)<1e-5)return!0}return!1}getFusedOutputs(){return this.activation_?[this.activation_.apply(this.output)]:[this.output]}inputs(){const e=[this.input_,this.filter_];return this.bias_&&e.push(this.bias_),e}run(e){let t,n,r=e.get(this.input_),a=!1;this.bias_&&(n=e.get(this.bias_)),this.inputLayout_===c.nchw&&(r=o.transpose(r,[0,2,3,1]));const i=r.shape[3];void 0===this.filterTensor_?(t=e.get(this.filter_),!1===this.transpose_?this.filterLayout_===l.oihw?t=o.transpose(t,[2,3,1,0]):this.filterLayout_===l.ohwi?t=o.transpose(t,[1,2,3,0]):this.filterLayout_===l.ihwo&&(t=o.transpose(t,[1,2,0,3])):this.filterLayout_===l.oihw?t=o.transpose(t,[2,3,0,1]):this.filterLayout_===l.hwio?t=o.transpose(t,[0,1,3,2]):this.filterLayout_===l.ohwi?t=o.transpose(t,[1,2,0,3]):this.filterLayout_===l.ihwo&&(t=o.transpose(t,[1,2,3,0])),1!==this.groups_&&(t=o.transpose(t,[0,1,3,2])),this.filter_ instanceof s.a&&(this.filterTensor_=t,o.keep(this.filterTensor_))):t=this.filterTensor_;const u=b.d(r,t,this.padding_,this.strides_,this.outputPadding_,this.dilations_,this.autoPad_);let p;if(!1===this.transpose_)if(1===this.groups_)p=o.fused.conv2d({x:r,filter:t,strides:this.strides_,pad:u,dataFormat:"NHWC",dilations:this.dilations_,bias:n,activation:this.fusedActivation_,leakyreluAlpha:this.leakyreluAlpha_}),a=!0;else{if(this.groups_!==i||this.groups_!==t.shape[2])throw new Error(`The tf.js convolution doesn't support groups parameter ${this.groups_}`);if("valid"===u||"same"===u||u instanceof Array&&u[1][0]===u[1][1]&&u[1][0]===u[2][0]&&u[1][0]===u[2][1]){let e;e="valid"===u||"same"===u?u:u[1][0],p=o.fused.depthwiseConv2d({x:r,filter:t,strides:this.strides_,pad:e,dataFormat:"NHWC",dilations:this.dilations_,bias:n,activation:this.fusedActivation_,leakyreluAlpha:this.leakyreluAlpha_}),a=!0}else p=o.depthwiseConv2d(r,t,this.strides_,u,"NHWC",this.dilations_)}else{this.autoPad_!==d.explicit&&(this.outputSizes_=[r.shape[1]*this.strides_[0],r.shape[2]*this.strides_[1]]);const e=[r.shape[0],0,0,t.shape[2]];if(void 0===this.outputSizes_)for(let n=0;n<2;++n)e[n+1]=this.strides_[n]*(r.shape[n+1]-1)+this.outputPadding_[n]+((t.shape[n]-1)*this.dilations_[n]+1)-this.padding_[2*n]-this.padding_[2*n+1];else e[1]=this.outputSizes_[0],e[2]=this.outputSizes_[1];p=o.conv2dTranspose(r,t,e,this.strides_,u)}return a||(n&&(p=o.add(p,n)),"relu"===this.fusedActivation_?p=o.relu(p):"relu6"===this.fusedActivation_?p=o.clipByValue(p,0,6):"leakyrelu"===this.fusedActivation_?p=o.leakyRelu(p,this.leakyreluAlpha_):"sigmoid"===this.fusedActivation_?p=o.sigmoid(p):void 0!==this.fusedActivation_&&b.a(!1,`The ${this.fusedActivation_} is un supported.`)),this.inputLayout_===c.nchw&&(p=o.transpose(p,[0,3,1,2])),p}dispose(){this.filterTensor_&&o.dispose(this.filterTensor_)}}class H extends i{constructor(e,t,n,r,a,o={}){super(e.builder),b.m(e),this.input_=e,b.m(t),this.weight_=t,b.m(n),this.recurrentWeight_=n,b.a(b.h(r)&&r>0,"The steps parameter is invalid."),this.steps_=r,b.a(b.h(a)&&a>0,"The hiddenSize parameter is invalid."),this.hiddenSize_=a,this.initOptions(o.bias,o.recurrentBias,o.initialHiddenState,o.resetAfter,o.returnSequence,o.direction,o.layout,o.activations),this.outputs.push(new s.e(this)),this.returnSequence_&&this.outputs_.push(new s.e(this))}initOptions(e,t,n,r=!0,a=!1,s=h.forward,o=p.zrn,i=[this.builder.sigmoid(),this.builder.tanh()]){b.o(e),this.bias_=e,b.o(t),this.recurrentBias_=t,b.o(n),this.initialHiddenState_=n,b.a(b.f(r),"The resetAfter parameter is not a boolean."),this.resetAfter_=r,b.a(b.f(a),"The resetAfter parameter is not a boolean."),this.returnSequence_=a,b.a(s in h,"The direction parameter is invalid."),this.direction_=s,b.a(o in p,"The layout parameter is invalid."),this.layout_=o,b.a(i instanceof Array&&2===i.length&&i.every((e=>e instanceof j)),"The activations parameter is invalid."),this.activations_=i}inputs(){const e=[this.input_,this.weight_,this.recurrentWeight_];return this.bias_&&e.push(this.bias_),this.recurrentBias_&&e.push(this.recurrentBias_),this.initialHiddenState_&&e.push(this.initialHiddenState_),e}computeImpl(e){const t=e.get(this.input_),n=e.get(this.weight_),r=e.get(this.recurrentWeight_),a=this.bias_?e.get(this.bias_):void 0,s=this.recurrentWeight_?e.get(this.recurrentBias_):void 0,i=this.initialHiddenState_?e.get(this.initialHiddenState_):void 0,u=this.steps_,c=this.hiddenSize_,l=this.resetAfter_,d=this.returnSequence_,p=this.layout_,f=this.activations_,m=this.direction_,b=m===h.both?2:1;let g,x=i;void 0===x&&(x=o.zeros([b,1,c]));const v=[],y=[],k=[],w=[];for(let e=0;e<b;++e)v.push(o.squeeze(o.slice(n,[e,0,0],[1,-1,-1]),[0])),y.push(o.squeeze(o.slice(r,[e,0,0],[1,-1,-1]),[0])),k.push(a?o.squeeze(o.slice(a,[e,0],[1,-1]),[0]):void 0),w.push(s?o.squeeze(o.slice(s,[e,0],[1,-1]),[0]):void 0);for(let e=0;e<u;++e){const n=[];let r;for(let e=0;e<b;++e)n.push(o.squeeze(o.slice(x,[e,0,0],[1,-1,-1]),[0]));for(let a=0;a<b;++a){const s=1===a||m===h.backward?u-e-1:e,i=o.squeeze(o.slice(t,[s,0,0],[1,-1,-1]),[0]),d=o.reshape(q.compute(i,v[a],y[a],n[a],c,f,k[a],w[a],l,p),[1,-1,c]);r=r?o.concat([r,d],0):d}x=r,d&&(r=o.reshape(r,[1,b,-1,c]),g=g?o.concat([g,r],0):r)}return[x,g]}}class q extends u{constructor(e,t,n,r,a,s={}){super(e.builder),b.m(e),this.input_=e,b.m(t),this.weight_=t,b.m(n),this.recurrentWeight_=n,b.m(r),this.hiddenState_=r,b.a(b.h(a)&&a>0,"The hiddenSize parameter is invalid."),this.hiddenSize_=a,this.initOptions(s.bias,s.recurrentBias,s.resetAfter,s.layout,s.activations)}initOptions(e,t,n=!0,r=p.zrn,a=[this.builder.sigmoid(),this.builder.tanh()]){b.o(e),this.bias_=e,b.o(t),this.recurrentBias_=t,b.a(b.f(n),"The resetAfter parameter is not a boolean."),this.resetAfter_=n,b.a(r in p,"The layout parameter is invalid."),this.layout_=r,b.a(a instanceof Array&&2===a.length&&a.every((e=>e instanceof j)),"The activations parameter is invalid."),this.activations_=a}inputs(){const e=[this.input_,this.weight_,this.recurrentWeight_,this.hiddenState_];return this.bias_&&e.push(this.bias_),this.recurrentBias_&&e.push(this.recurrentBias_),e}static compute(e,t,n,r,a,s,i,u,c=!0,l=p.zrn){const d=o.scalar(1),h=o.scalar(0),f=l===p.zrn?{z:0,r:a,n:2*a}:{r:0,z:a,n:2*a},m=s[0],b=s[1],g=m.runOp(o.add(o.add(i?o.slice(i,[f.z],[a]):h,u?o.slice(u,[f.z],[a]):h),o.add(o.matMul(e,o.transpose(o.slice(t,[f.z,0],[a,-1]))),o.matMul(r,o.transpose(o.slice(n,[f.z,0],[a,-1])))))),x=m.runOp(o.add(o.add(i?o.slice(i,[f.r],[a]):h,u?o.slice(u,[f.r],[a]):h),o.add(o.matMul(e,o.transpose(o.slice(t,[f.r,0],[a,-1]))),o.matMul(r,o.transpose(o.slice(n,[f.r,0],[a,-1]))))));let v;return v=c?b.runOp(o.add(i?o.slice(i,[f.n],[a]):h,o.add(o.matMul(e,o.transpose(o.slice(t,[f.n,0],[a,-1]))),o.mul(x,o.add(u?o.slice(u,[f.n],[a]):h,o.matMul(r,o.transpose(o.slice(n,[f.n,0],[a,-1])))))))):b.runOp(o.add(o.add(i?o.slice(i,[f.n],[a]):h,u?o.slice(u,[f.n],[a]):h),o.add(o.matMul(e,o.transpose(o.slice(t,[f.n,0],[a,-1]))),o.matMul(o.mul(x,r),o.transpose(o.slice(n,[f.n,0],[a,-1])))))),o.add(o.mul(g,r),o.mul(v,o.sub(d,g)))}run(e){return q.compute(e.get(this.input_),e.get(this.weight_),e.get(this.recurrentWeight_),e.get(this.hiddenState_),this.hiddenSize_,this.activations_,this.bias_?e.get(this.bias_):void 0,this.recurrentBias_?e.get(this.recurrentBias_):void 0,this.resetAfter_,this.layout_)}}class K extends u{constructor(e,t={}){if(super(e.builder),b.m(e),this.input_=e,b.o(t.scale),this.scale_=t.scale,b.o(t.bias),this.bias_=t.bias,void 0!==t.epsilon){const e=t.epsilon;b.a("number"==typeof e,"The epsilon parameter is invalid"),this.epsilon_=e}else this.epsilon_=1e-5;void 0!==t.layout?(b.a(t.layout in c,"The layout parameter is invalid."),this.layout_=t.layout):this.layout_=c.nchw}inputs(){const e=[this.input_];return this.scale_&&e.push(this.scale_),this.bias_&&e.push(this.bias_),e}run(e){const t=e.get(this.input_);b.a(4===t.rank,"The input operand is not 4-D.");let n,r,a=[2,3],s=[1,-1,1,1],i=t.shape[1];this.layout_===c.nhwc&&(a=[1,2],s=[1,1,1,-1],i=t.shape[3]),this.scale_&&(n=e.get(this.scale_),b.a(1===n.rank,"The scale operand is not 1-D."),b.a(n.shape[0]===i,"The length of scale is not equal to the size of the feature dimension of the input.")),this.bias_&&(r=e.get(this.bias_),b.a(1===r.rank,"The bias operand is not 1-D."),b.a(r.shape[0]===i,"The length of bias is not equal to the size of the feature dimension of the input."));const u=o.mean(t,a,!0),l=o.mean(o.pow(o.sub(t,u),2),a,!0),d=o.div(o.sub(t,u),o.sqrt(o.add(l,this.epsilon_))),p=n?o.mul(o.reshape(n,s),d):d;return r?o.add(o.reshape(r,s),p):p}}class X extends u{constructor(e,t,n={}){super(e.builder),this.mode_=f.constant,this.value_=0,b.m(e),this.input_=e,b.m(t),this.padding_=t,void 0!==n.mode&&(b.a(n.mode in f,"The mode parameter is invalid."),this.mode_=n.mode),void 0!==n.value&&(this.value_=n.value)}inputs(){return[this.input_,this.padding_]}run(e){const t=e.get(this.input_),n=e.get(this.padding_);b.a(2===n.rank&&"int32"===n.dtype&&n.shape[0]===t.rank,"The padding operand is invalid.");const r=n.arraySync();if(this.mode_===f.constant)return o.pad(t,r,this.value_);if(this.mode_===f.edge){const e=new Array(r.length);let n=t;for(;;){for(let t=0;t<r.length;++t){e[t]=[0,0];for(let n=0;n<2;++n)r[t][n]>0?(e[t][n]=1,r[t][n]-=1):e[t][n]=0}if(e.every((e=>0===e[0]&&0===e[1])))break;n=o.mirrorPad(n,e,"symmetric")}return n}{let e;return this.mode_===f.reflection?e="reflect":this.mode_===f.symmetric&&(e="symmetric"),o.mirrorPad(t,r,e)}}}class Y extends u{constructor(e,t={}){super(e.builder),b.m(e),this.input_=e,this.initOptions(t.windowDimensions,t.padding,t.strides,t.dilations,t.layout,t.autoPad)}initOptions(e=[-1,-1],t=[0,0,0,0],n=[1,1],r=[1,1],a=c.nchw,s=d.explicit){b.a(b.i(e)&&2===e.length,"The padding parameter is invalid."),this.windowDimensions_=e,b.a(b.i(t)&&4===t.length,"The padding parameter is invalid."),this.padding_=t,b.a(b.i(n)&&2===n.length,"The strides parameter is invalid."),this.strides_=n,b.a(b.i(r)&&2===r.length,"The dilations parameter is invalid."),this.dilations_=r,b.a(a in c,"The layout parameter is invalid."),this.layout_=a,b.a(s in d,"The autoPad parameter is invalid."),this.autoPad_=s}inputs(){return[this.input_]}run(e){let t=e.get(this.input_);const n=this.getPoolingType();this.layout_===c.nchw&&(t=o.transpose(t,[0,2,3,1]));const r=this.windowDimensions_;let a,s;if(-1===r[0]&&-1===r[1]&&(r[0]=t.shape[1],r[1]=t.shape[2]),this.autoPad_===d.explicit)a=this.padding_.every((e=>0===e))?"valid":[[0,0],[this.padding_[0],this.padding_[1]],[this.padding_[2],this.padding_[3]],[0,0]];else if(this.autoPad_===d["same-upper"])a="same";else{a=[[0,0],[0,0],[0,0],[0,0]];const e=[0,0];for(let n=0;n<2;++n)e[n]=Math.ceil(t.shape[1+n]/this.strides_[n]);const n=[0,0];for(let a=0;a<2;++a)n[a]=this.strides_[a]*(e[a]-1)+((r[a]-1)*this.dilations_[a]+1)-t.shape[1+a];for(let e=0;e<2;++e)a[e+1][0]=n[e]-Math.floor(n[e]/2),a[e+1][1]=Math.floor(n[e]/2)}return"l2"===n?(t=o.pow(t,2),s=o.sqrt(o.pool(t,this.windowDimensions_,"avg",a,this.dilations_,this.strides_))):s=o.pool(t,this.windowDimensions_,n,a,this.dilations_,this.strides_),this.layout_===c.nchw&&(s=o.transpose(s,[0,3,1,2])),s}}class Z extends Y{getPoolingType(){return"avg"}}class Q extends Y{getPoolingType(){return"max"}}class J extends Y{getPoolingType(){return"l2"}}class ee extends u{constructor(e,t={}){super(e.builder),b.m(e),this.input_=e,void 0!==t.axes?(b.a(b.i(t.axes),"The axes parameter is invalid."),this.axes_=t.axes):this.axes_=void 0,void 0!==t.keepDimensions?(b.a(b.f(t.keepDimensions),"The keepDimensions parameter is not a boolean."),this.keepDimensions_=t.keepDimensions):this.keepDimensions_=!1}inputs(){return[this.input_]}run(e){const t=e.get(this.input_);return b.a(b.l(this.axes_,t.rank),`The axes must be in range [-${t.rank}, ${t.rank})`),this.runOp(t,this.axes_,this.keepDimensions_)}}class te extends ee{runOp(e,t,n){return o.logSumExp(e,t,n)}}class ne extends ee{runOp(e,t,n){return o.max(e,t,n)}}class re extends ee{runOp(e,t,n){return o.mean(e,t,n)}}class ae extends ee{runOp(e,t,n){return o.min(e,t,n)}}class se extends ee{runOp(e,t,n){return o.prod(e,t,n)}}class oe extends ee{runOp(e,t,n){return o.sum(e,t,n)}}class ie extends ee{runOp(e,t,n){return o.sum(o.abs(e),t,n)}}class ue extends ee{runOp(e,t,n){return o.sqrt(o.sum(o.pow(e,2),t,n))}}class ce extends u{constructor(e,t={}){if(super(e.builder),this.mode_=m["nearest-neighbor"],b.m(e),this.input_=e,void 0!==t.scales){const e=t.scales;b.a(e instanceof Array&&e.every((e=>"number"==typeof e))&&4===e.length,"The scales parameter is invalid."),this.scales_=t.scales}void 0!==t.sizes&&(b.a(b.i(t.sizes)&&4===t.sizes.length,"The sizes parameter is invalid."),this.sizes_=t.sizes,this.scales_=void 0),b.a(void 0!==this.scales_||void 0!==this.sizes_,"The scales or sizes parameter is not provied."),void 0!==t.mode&&(b.a(t.mode in m,"The mode parameter is invalid."),this.mode_=t.mode)}inputs(){return[this.input_]}run(e){let t=e.get(this.input_);b.a(4===t.rank,"The input tensor is not 4-D.");const n=[0,0];let r,a=!1;if(void 0!==this.sizes_)if(this.sizes_[0]===t.shape[0]&&this.sizes_[1]===t.shape[1])n[0]=this.sizes_[2],n[1]=this.sizes_[3],t=o.transpose(t,[0,2,3,1]),a=!0;else{if(this.sizes_[0]!==t.shape[0]||this.sizes_[3]!==t.shape[3])throw new Error("tf.image.resize doesn't support the sizes parameter.");n[0]=this.sizes_[1],n[1]=this.sizes_[2]}else if(void 0!==this.scales_)if(1===this.scales_[0]&&1===this.scales_[1])n[0]=Math.floor(t.shape[2]*this.scales_[2]),n[1]=Math.floor(t.shape[3]*this.scales_[3]),t=o.transpose(t,[0,2,3,1]),a=!0;else{if(1!==this.scales_[0]||1!==this.scales_[3])throw new Error("tf.image.resize doesn't support the scales parameter.");n[0]=Math.floor(t.shape[1]*this.scales_[1]),n[1]=Math.floor(t.shape[2]*this.scales_[2])}return this.mode_===m["nearest-neighbor"]?r=o.image.resizeNearestNeighbor(t,n,!1,!0):this.mode_===m.linear&&(r=o.image.resizeBilinear(t,n,!1,!0)),a&&(r=o.transpose(r,[0,3,1,2])),r}}class le extends u{constructor(e,t){super(e.builder),b.m(e),this.input_=e,b.a(b.i(t)&&0!==t.length,"The newShape parameter is invalid."),this.newShape_=t}inputs(){return[this.input_]}run(e){const t=e.get(this.input_);return o.reshape(t,this.newShape_)}}class de extends u{constructor(e,t,n,r){super(e.builder),b.m(e),this.input_=e,b.a(b.i(t),"The starts parameter is invalid."),this.starts_=t,b.a(b.i(n)&&n.every((e=>e>0||-1===e)),"The sizes parameter is invalid."),this.sizes_=n,b.a(n.length==n.length,"The length of sizes is not equal to the length of sizes.))"),b.a(void 0===r||b.i(r),"The axes parameter is invalid."),void 0!==r&&b.a(n.length===r.length,"The length of axes is invalid.))"),this.axes_=r}inputs(){return[this.input_]}run(e){const t=e.get(this.input_),n=t.shape.length;if(void 0===this.axes_){this.axes_=[];for(let e=0;e<n;++e)this.axes_.push(e)}b.a(this.axes_.every((e=>e<n&&e>=-n)),"The value of axes is invalid."),b.a(this.starts_.length===this.axes_.length,"The length of starts is invalid."),b.a(this.sizes_.length===this.axes_.length,"The length of sizes is invalid.");const r=new Array(this.axes_.length).fill(0),a=new Array(this.axes_.length).fill(-1);for(let e=0;e<this.axes_.length;++e){let t=this.axes_[e];t<0&&(t=n+t),r[t]=this.starts_[e],a[t]=this.sizes_[e]}return o.slice(t,r,a)}}class pe extends u{constructor(e){super(e.builder),b.m(e),this.x_=e}inputs(){return[this.x_]}run(e){const t=e.get(this.x_);if(2!==t.rank)throw new Error("The rank of x parameter should be 2.");return o.softmax(t)}}class he extends i{constructor(e,t,n={}){super(e.builder),b.m(e),this.input_=e,b.a(b.h(t)||b.i(t),"The splits parameter is invalid."),this.splits_=t,b.a(void 0===n.axis||b.h(n.axis),"The options.axis is invalid."),this.axis_=n.axis;const r=b.h(t)?t:t.length;for(let e=0;e<r;++e)this.outputs.push(new s.e(this))}inputs(){return[this.input_]}computeImpl(e){const t=e.get(this.input_);return o.split(t,this.splits_,this.axis_)}}class fe extends u{constructor(e,t){super(e.builder),b.m(e),this.input_=e,void 0!==t&&b.a(b.i(t)&&0!==t.length,"The axes parameter is invalid."),this.axes_=t}inputs(){return[this.input_]}run(e){const t=e.get(this.input_);return o.squeeze(t,this.axes_)}}class me extends u{constructor(e,t){super(e.builder),b.m(e),this.input_=e,void 0!==t&&b.a(b.i(t)&&0!==t.length,"The permutation parameter is invalid."),this.permutation_=t}inputs(){return[this.input_]}run(e){const t=e.get(this.input_);return o.transpose(t,this.permutation_)}}!function(e){e.nchw="nchw",e.nhwc="nhwc"}(c||(c={})),function(e){e.oihw="oihw",e.hwio="hwio",e.ohwi="ohwi",e.ihwo="ihwo"}(l||(l={})),function(e){e.explicit="explicit",e["same-upper"]="same-upper",e["same-lower"]="same-lower"}(d||(d={})),function(e){e.zrn="zrn",e.rzn="rzn"}(p||(p={})),function(e){e.forward="forward",e.backward="backward",e.both="both"}(h||(h={})),function(e){e.constant="constant",e.edge="edge",e.reflection="reflection",e.symmetric="symmetric"}(f||(f={})),function(e){e["nearest-neighbor"]="nearest-neighbor",e.linear="linear"}(m||(m={}));class be{constructor(e){b.a(e instanceof r.a,"The context paramter is invalid."),this.context_=e}get context(){return this.context_}build(e){return a.a.buildAndCompile(e)}input(e,t){return new s.b(e,t,this)}constant(e,t){return"number"==typeof e?(void 0===t&&(t=s.d.float32),s.a.createScalar(e,t,this)):s.a.createTensor(e,t,this)}batchNormalization(e,t,n,r={}){return this.validateOperandBuilder([e,t,n,r.scale,r.bias]),new g(e,t,n,r).getFusedOutputs()[0]}clamp(e={},t={}){if(e instanceof s.c){const n=e;return this.validateOperandBuilder([n]),new z(n,t).output}return new z(void 0,e)}concat(e,t){return this.validateOperandBuilder(e),new U(e,t).output}conv2d(e,t,n={}){const r=[e,t];return n.bias&&r.push(n.bias),this.validateOperandBuilder(r),new G(e,t,n).getFusedOutputs()[0]}add(e,t){return this.validateOperandBuilder([e,t]),new v(e,t).output}sub(e,t){return this.validateOperandBuilder([e,t]),new y(e,t).output}mul(e,t){return this.validateOperandBuilder([e,t]),new k(e,t).output}div(e,t){return this.validateOperandBuilder([e,t]),new w(e,t).output}max(e,t){return this.validateOperandBuilder([e,t]),new I(e,t).output}min(e,t){return this.validateOperandBuilder([e,t]),new S(e,t).output}pow(e,t){return this.validateOperandBuilder([e,t]),new _(e,t).output}abs(e){return this.validateOperandBuilder([e]),new C(e).output}ceil(e){return this.validateOperandBuilder([e]),new $(e).output}cos(e){return this.validateOperandBuilder([e]),new E(e).output}exp(e){return this.validateOperandBuilder([e]),new A(e).output}floor(e){return this.validateOperandBuilder([e]),new N(e).output}log(e){return this.validateOperandBuilder([e]),new R(e).output}neg(e){return this.validateOperandBuilder([e]),new F(e).output}sin(e){return this.validateOperandBuilder([e]),new M(e).output}tan(e){return this.validateOperandBuilder([e]),new D(e).output}hardSwish(e){return void 0===e?new W(void 0):(this.validateOperandBuilder([e]),new W(e).output)}relu(e){return void 0===e?new L(void 0):(this.validateOperandBuilder([e]),new L(e).output)}sigmoid(e){return void 0===e?new P(void 0):(this.validateOperandBuilder([e]),new P(e).output)}tanh(e){return void 0===e?new B(void 0):(this.validateOperandBuilder([e]),new B(e).output)}gemm(e,t,n={}){return this.validateOperandBuilder([e,t,n.c]),class{static build(e,t,n,r={}){b.m(t),b.m(n),b.a(void 0===r.c||"number"==typeof r.c||r.c instanceof s.c,"The options.c is invalid."),b.a(void 0===r.aTranspose||b.f(r.aTranspose),"The options.aTranspose is invalid."),b.a(void 0===r.bTranspose||b.f(r.bTranspose),"The options.bTranspose is invalid."),b.a(void 0===r.alpha||"number"==typeof r.alpha,"The options.alpha is invalid."),b.a(void 0===r.beta||"number"==typeof r.beta,"The options.beta is invalid."),r.aTranspose&&(t=e.transpose(t)),r.bTranspose&&(n=e.transpose(n));const a=e.constant(void 0===r.alpha?1:r.alpha),o=e.constant(void 0===r.beta?1:r.beta),i=e.matmul(e.mul(a,t),n);return r.c?e.add(i,e.mul(o,r.c)):i}}.build(this,e,t,n)}gru(e,t,n,r,a,s={}){return this.validateOperandBuilder([e,t,n,s.bias,s.recurrentBias,s.initialHiddenState]),new H(e,t,n,r,a,s).outputs}gruCell(e,t,n,r,a,s={}){return this.validateOperandBuilder([e,t,n,r,s.bias,s.recurrentBias]),new q(e,t,n,r,a,s).output}instanceNormalization(e,t={}){return this.validateOperandBuilder([e,t.bias,t.scale]),new K(e,t).output}leakyRelu(e={},t={}){if(e instanceof s.c){const n=e;return this.validateOperandBuilder([n]),new V(n,t.alpha).output}return new V(void 0,e.alpha)}matmul(e,t){return this.validateOperandBuilder([e,t]),new O(e,t).output}pad(e,t,n={}){return this.validateOperandBuilder([e,t]),new X(e,t,n).output}averagePool2d(e,t={}){return this.validateOperandBuilder([e]),new Z(e,t).output}l2Pool2d(e,t={}){return this.validateOperandBuilder([e]),new J(e,t).output}maxPool2d(e,t={}){return this.validateOperandBuilder([e]),new Q(e,t).output}reduceL1(e,t={}){return this.validateOperandBuilder([e]),new ie(e,t).output}reduceL2(e,t={}){return this.validateOperandBuilder([e]),new ue(e,t).output}reduceLogSumExp(e,t={}){return this.validateOperandBuilder([e]),new te(e,t).output}reduceMax(e,t={}){return this.validateOperandBuilder([e]),new ne(e,t).output}reduceMean(e,t={}){return this.validateOperandBuilder([e]),new re(e,t).output}reduceMin(e,t={}){return this.validateOperandBuilder([e]),new ae(e,t).output}reduceProduct(e,t={}){return this.validateOperandBuilder([e]),new se(e,t).output}reduceSum(e,t={}){return this.validateOperandBuilder([e]),new oe(e,t).output}resample(e,t={}){return this.validateOperandBuilder([e]),new ce(e,t).output}reshape(e,t){return this.validateOperandBuilder([e]),new le(e,t).output}slice(e,t,n,r={}){return this.validateOperandBuilder([e]),new de(e,t,n,r.axes).output}softmax(e){return this.validateOperandBuilder([e]),new pe(e).output}split(e,t,n={}){return this.validateOperandBuilder([e]),new he(e,t,n).outputs}squeeze(e,t={}){return this.validateOperandBuilder([e]),new fe(e,t.axes).output}transpose(e,t={}){return this.validateOperandBuilder([e]),new me(e,t.permutation).output}validateOperandBuilder(e){b.a(e.every((e=>!e||e instanceof s.c&&e.builder===this)),"The operand is not built by this builder.")}}},function(e,t,n){"use strict";function r(e){if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function a(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}n.r(t),n.d(t,"isMobile",(function(){return r})),n.d(t,"isBrowser",(function(){return a}))},function(e,t,n){"use strict";n.r(t);var r=n(54);n.d(t,"simpleAbsImpl",(function(){return r.b}));var a=n(27);n.d(t,"addImpl",(function(){return a.c}));var s=n(33);n.d(t,"bincountImpl",(function(){return s.a})),n.d(t,"bincountReduceImpl",(function(){return s.b}));var o=n(55);n.d(t,"ceilImpl",(function(){return o.b}));var i=n(56);n.d(t,"concatImpl",(function(){return i.a}));var u=n(40);n.d(t,"equalImpl",(function(){return u.c}));var c=n(41);n.d(t,"expImpl",(function(){return c.c}));var l=n(57);n.d(t,"expm1Impl",(function(){return l.b}));var d=n(58);n.d(t,"floorImpl",(function(){return d.b}));var p=n(59);n.d(t,"gatherNdImpl",(function(){return p.a}));var h=n(60);n.d(t,"gatherV2Impl",(function(){return h.a}));var f=n(61);n.d(t,"greaterImpl",(function(){return f.b}));var m=n(62);n.d(t,"greaterEqualImpl",(function(){return m.b}));var b=n(63);n.d(t,"lessImpl",(function(){return b.b}));var g=n(64);n.d(t,"lessEqualImpl",(function(){return g.b}));var x=n(65);n.d(t,"linSpaceImpl",(function(){return x.a}));var v=n(66);n.d(t,"logImpl",(function(){return v.b}));var y=n(67);n.d(t,"maxImpl",(function(){return y.a}));var k=n(68);n.d(t,"maximumImpl",(function(){return k.b}));var w=n(69);n.d(t,"minimumImpl",(function(){return w.b}));var I=n(28);n.d(t,"multiplyImpl",(function(){return I.c}));var S=n(70);n.d(t,"negImpl",(function(){return S.b}));var _=n(71);n.d(t,"notEqualImpl",(function(){return _.b}));var O=n(72);n.d(t,"prodImpl",(function(){return O.b}));var T=n(73);n.d(t,"rangeImpl",(function(){return T.a}));var C=n(74);n.d(t,"rsqrtImpl",(function(){return C.b}));var $=n(43);n.d(t,"sigmoidImpl",(function(){return $.c}));var E=n(22);n.d(t,"sliceImpl",(function(){return E.c}));var A=n(75);n.d(t,"sparseFillEmptyRowsImpl",(function(){return A.a}));var N=n(76);n.d(t,"sparseReshapeImpl",(function(){return N.a}));var R=n(44);n.d(t,"sparseSegmentReductionImpl",(function(){return R.a}));var F=n(77);n.d(t,"sqrtImpl",(function(){return F.b}));var M=n(78);n.d(t,"squaredDifferenceImpl",(function(){return M.b}));var D=n(79);n.d(t,"stridedSliceImpl",(function(){return D.a}));var j=n(80);n.d(t,"stringNGramsImpl",(function(){return j.a}));var P=n(81);n.d(t,"stringSplitImpl",(function(){return P.a}));var B=n(82);n.d(t,"stringToHashBucketFastImpl",(function(){return B.a}));var L=n(34);n.d(t,"subImpl",(function(){return L.c}));var W=n(83);n.d(t,"tileImpl",(function(){return W.a}));var z=n(84);n.d(t,"topKImpl",(function(){return z.a}));var U=n(42);n.d(t,"transposeImpl",(function(){return U.a}));var V=n(85);n.d(t,"uniqueImpl",(function(){return V.a}))},function(e,t,n){"use strict";n.d(t,"b",(function(){return s})),n.d(t,"a",(function(){return o}));var r=n(0),a=n(7);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function s(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const o={kernelName:r.Abs,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;Object(a.a)(t,"abs");let o=new Float32Array(r.util.sizeFromShape(t.shape));return o=s(n.data.get(t.dataId).values),n.makeOutput(o,t.shape,"float32")}}},function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return u}));var r=n(0),a=n(21),s=n(8);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=Object(a.a)((e=>Math.ceil(e))),i=Object(s.b)(r.Ceil,o),u={kernelName:r.Ceil,backendName:"cpu",kernelFunc:i}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n,a){const s=r.util.getArrayFromDType(n,r.util.sizeFromShape(t));if(a&&"string"!==n){let t=0;e.forEach((e=>{const n=r.util.sizeFromShape(e.shape);s.set(e.vals,t),t+=n}))}else{let a=0;e.forEach((e=>{const o="string"===n?r.backend_util.fromUint8ToStringArray(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const r=n*t[1]+a;for(let t=0;t<e.shape[1];++t)s[r+t]=o[i++]}a+=e.shape[1]}))}return s}},function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return u}));var r=n(0),a=n(21),s=n(8);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=Object(a.a)((e=>Math.expm1(e))),i=Object(s.b)(r.Expm1,o),u={kernelName:r.Expm1,backendName:"cpu",kernelFunc:i}},function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return u}));var r=n(0),a=n(21),s=n(8);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=Object(a.a)((e=>Math.floor(e))),i=Object(s.b)(r.Floor,o),u={kernelName:r.Floor,backendName:"cpu",kernelFunc:i}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n,a,s,o,i,u,c){const l=Object(r.buffer)([a,o],n);for(let n=0;n<a;n++){const r=[];let a=0;for(let t=0;t<s;t++){const o=e[n*s+t];a+=o*i[t],r.push(o)}if(a<0||a>=c/o)throw new Error(`Invalid indices: ${r} does not index into ${u}`);for(let e=0;e<o;e++)l.values[n*o+e]=t.get(...t.indexToLoc(a*o+e))}return l}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n){const a=Object(r.buffer)(n,e.dtype);for(let n=0;n<a.size;++n){const r=a.indexToLoc(n).slice(),s=r[0],o=r[2],i=t.locToIndex([s,o]);r[2]=t.values[i];const u=e.locToIndex(r);a.values[n]=e.values[u]}return a}},function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return u}));var r=n(0),a=n(12),s=n(13);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=Object(a.a)(((e,t)=>e>t?1:0)),i=Object(s.a)(r.Greater,o,null,"bool"),u={kernelName:r.Greater,backendName:"cpu",kernelFunc:i}},function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return u}));var r=n(0),a=n(12),s=n(13);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=Object(a.a)(((e,t)=>e>=t?1:0)),i=Object(s.a)(r.GreaterEqual,o,null,"bool"),u={kernelName:r.GreaterEqual,backendName:"cpu",kernelFunc:i}},function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return u}));var r=n(0),a=n(12),s=n(13);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=Object(a.a)(((e,t)=>e<t?1:0)),i=Object(s.a)(r.Less,o,null,"bool"),u={kernelName:r.Less,backendName:"cpu",kernelFunc:i}},function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return u}));var r=n(0),a=n(12),s=n(13);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=Object(a.a)(((e,t)=>e<=t?1:0)),i=Object(s.a)(r.LessEqual,o,null,"bool"),u={kernelName:r.LessEqual,backendName:"cpu",kernelFunc:i}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n){const a=(t-e)/(n-1),s=r.util.makeZerosTypedArray(n,"float32");s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+a;return s}},function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return u}));var r=n(0),a=n(21),s=n(8);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=Object(a.a)((e=>Math.log(e))),i=Object(s.b)(r.Log,o),u={kernelName:r.Log,backendName:"cpu",kernelFunc:i}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n,a){const s=r.util.getTypedArrayFromDType(a,r.util.sizeFromShape(n));for(let n=0;n<s.length;++n){const r=n*t;let a=e[r];for(let n=0;n<t;++n){const t=e[r+n];(Number.isNaN(t)||t>a)&&(a=t)}s[n]=a}return s}},function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return u}));var r=n(0),a=n(12),s=n(13);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=Object(a.a)(((e,t)=>Math.max(e,t))),i=Object(s.a)(r.Maximum,o),u={kernelName:r.Maximum,backendName:"cpu",kernelFunc:i}},function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return u}));var r=n(0),a=n(12),s=n(13);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=Object(a.a)(((e,t)=>Math.min(e,t))),i=Object(s.a)(r.Minimum,o),u={kernelName:r.Minimum,backendName:"cpu",kernelFunc:i}},function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return i}));var r=n(0),a=n(7),s=n(28);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(e,t,n){const a=r.util.createScalarValue(-1,n);return Object(s.c)([],t,a,e,n)}const i={kernelName:r.Neg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;Object(a.a)(r,"neg");const s=n.data.get(r.dataId).values,[i,u]=o(s,r.shape,r.dtype);return n.makeTensorInfo(u,r.dtype,i)}}},function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return u}));var r=n(0),a=n(12),s=n(13);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=Object(a.a)(((e,t)=>e!==t?1:0)),i=Object(s.a)(r.NotEqual,o,null,"bool"),u={kernelName:r.NotEqual,backendName:"cpu",kernelFunc:i}},function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return i}));var r=n(0),a=n(7),s=n(17);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(e,t,n,a){const[s,o]=r.backend_util.computeOutAndReduceShapes(e,a),i=Object(r.upcastType)(t,"int32"),u=r.util.makeZerosTypedArray(r.util.sizeFromShape(s),i),c=r.util.sizeFromShape(o);for(let e=0;e<u.length;++e){const t=e*c;let r=1;for(let e=0;e<c;++e)r*=n[t+e];u[e]=r}return{outVals:u,outShape:s,outDtype:i}}const i={kernelName:r.Prod,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:u}=t,{axis:c,keepDims:l}=i;Object(a.a)(u,"prod");const d=u.shape.length,p=r.util.parseAxisParam(c,u.shape),h=r.backend_util.getAxesPermutation(p,d);let f=p,m=u;const b=[];null!=h&&(m=Object(s.a)({inputs:{x:u},backend:n,attrs:{perm:h}}),b.push(m),f=r.backend_util.getInnerMostAxes(f.length,d));const g=n.data.get(m.dataId).values,{outVals:x,outShape:v,outDtype:y}=o(m.shape,m.dtype,g,f);let k=v;return l&&(k=r.backend_util.expandShapeToKeepDim(v,p)),b.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(k,y,x)}}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n,a){if(e===t||e<t&&n<0||t<e&&n>1)return r.util.makeZerosTypedArray(0,a);const s=Math.abs(Math.ceil((t-e)/n)),o=r.util.makeZerosTypedArray(s,a);t<e&&1===n&&(n=-1),o[0]=e;for(let e=1;e<o.length;e++)o[e]=o[e-1]+n;return o}},function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return u}));var r=n(0),a=n(21),s=n(8);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=Object(a.a)((e=>1/Math.sqrt(e))),i=Object(s.b)(r.Rsqrt,o),u={kernelName:r.Rsqrt,backendName:"cpu",kernelFunc:i}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n,a,s,o,i){const u=t[0],c=o[0],l=new Array(c),d=new Array(u),p=t[1];if(0===c){if(0!==u)throw new Error(`Received SparseTensor with denseShape[0] = 0 but\n         indices.shape[0] = ${u}`);return[r.util.getArrayFromDType(n,0),[0,p],r.util.getArrayFromDType(s,0),l,d]}let h=!0,f=0;const m=new Array(c).fill(0);for(let t=0;t<u;++t){const n=e[t*p];if(n<0)throw new Error(`indices(${t}, 0) is invalid: ${n} < 0`);if(n>=c)throw new Error(`indices(${t}, 0) is invalid: ${n} >= ${c}`);++m[n],h=h&&n>=f,f=n}let b=!0;for(let e=0;e<c;++e){const t=0===m[e];l[e]=t,b=b&&!t,m[e]=Math.max(m[e],1),e>0&&(m[e]+=m[e-1])}if(b&&h){const t=e,n=a;for(let e=0;e<u;++e)d[e]=e;return[t,[u,p],n,l,d]}{const t=m[c-1],o=r.util.getArrayFromDType(n,t*p),h=r.util.getArrayFromDType(s,t),f=new Array(c).fill(0);for(let t=0;t<u;++t){const n=e[t*p],r=f[n],s=(0===n?0:m[n-1])+r;f[n]++;for(let n=0;n<p;++n)o[s*p+n]=e[t*p+n];h[s]=a[t],d[t]=s}for(let e=0;e<c;++e){if(0===f[e]){const t=0===e?0:m[e-1];o[t*p+0]=e;for(let e=1;e<p;++e)o[t*p+e]=0;h[t]=i}}return[o,[t,p],h,l,d]}}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n,a,s){const o=r.util.sizeFromShape(a),i=t[0],u=s.length,c=[];let l=1,d=-1;for(let e=0;e<u;++e){const t=s[e];if(-1===t){if(-1!==d)throw new Error(`only one output dimension may be -1, not both ${d} and ${e}`);d=e,c.push(1)}else{if(t<0)throw new Error(`size ${e} must be non-negative, not ${t}`);l*=t,c.push(t)}}if(-1!==d){if(l<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(o/l);if(l*e!==o)throw new Error(`Input to reshape is a SparseTensor with ${o}\n          dense values, but the requested shape requires a multiple of ${l}. inputShape=${a} outputShape= ${c}`);c[d]=e}const p=r.util.sizeFromShape(c);if(p!==o)throw new Error(`Input to reshape is a tensor with ${o} dense values, but the requested shape has ${p}. inputShape=${a} outputShape=${c}`);const h=a.length,f=[];if(h>0){f[h-1]=1;for(let e=h-2;e>=0;--e)f[e]=f[e+1]*a[e+1]}const m=[];if(u>0){m[u-1]=1;for(let e=u-2;e>=0;--e)m[e]=m[e+1]*c[e+1]}const b=r.util.getArrayFromDType(n,i*u);for(let t=0;t<i;++t){let n=0;for(let r=0;r<h;++r)n+=e[t*h+r]*f[r];for(let e=0;e<u;++e)b[t*u+e]=Math.trunc(n/m[e]),n%=m[e]}return[b,[i,u],c]}},function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return u}));var r=n(0),a=n(21),s=n(8);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=Object(a.a)((e=>Math.sqrt(e))),i=Object(s.a)(r.Sqrt,(e=>Math.sqrt(e))),u={kernelName:r.Sqrt,backendName:"cpu",kernelFunc:i}},function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return u}));var r=n(0),a=n(12),s=n(13);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=Object(a.a)(((e,t)=>{const n=e-t;return n*n})),i=Object(s.a)(r.SquaredDifference,o),u={kernelName:r.SquaredDifference,backendName:"cpu",kernelFunc:i}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n,a){const s=Object(r.buffer)(e,t.dtype);for(let e=0;e<s.size;e++){const r=s.indexToLoc(e),o=new Array(r.length);for(let e=0;e<o.length;e++)o[e]=r[e]*n[e]+a[e];s.set(t.get(...o),...r)}return s}},function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var r=n(0);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class a{constructor(e,t,n,a,s,o){this.separator=r.util.encodeString(e),this.nGramWidths=t,this.leftPad=r.util.encodeString(n),this.rightPad=r.util.encodeString(a),this.padWidth=s,this.preserveShort=o}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,a,s){for(let o=0;o<a;++o){const i=this.getPadWidth(s),u=Math.max(0,i-o),c=Math.max(0,i-(a-(o+1))),l=s-(u+c),d=t+(u>0?0:o-i);let p=0;p+=u*this.leftPad.length;for(let t=0;t<l;++t)p+=e[d+t].length;p+=c*this.rightPad.length;p+=(u+c+l-1)*this.separator.length,n[r+o]=new Uint8Array(p);const h=n[r+o];let f=0;const m=e=>e.forEach((e=>h[f++]=e));for(let e=0;e<u;++e)m(this.leftPad),m(this.separator);for(let t=0;t<l-1;++t)m(e[d+t]),m(this.separator);if(l>0){m(e[d+l-1]);for(let e=0;e<c;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<c-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,a=t.length;if(a>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let r=1;r<a;++r){let a=t[r]>=e;if(a=a&&t[r]<=n,!a)throw new Error(`Invalid split value ${t[r]}, must be in [${e}, ${n}]`);e=t[r]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const s=a-1,o=r.util.getArrayFromDType("int32",a);if(0===n||0===a){const e=new Array(n);for(let e=0;e<=s;++e)o[e]=0;return[e,o]}o[0]=0;for(let e=1;e<=s;++e){const n=t[e]-t[e-1];let r=0;this.nGramWidths.forEach((e=>{r+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===r&&(r=1),o[e]=o[e-1]+r}const i=new Array(o[s]);for(let n=0;n<s;++n){const r=t[n];let a=o[n];if(this.nGramWidths.forEach((s=>{const o=t[n+1]-t[n],u=this.getNumNGrams(o,s);this.createNGrams(e,r,i,a,u,s),a+=u})),this.preserveShort&&a===o[n]){const s=t[n+1]-t[n];if(0===s)continue;const o=s+2*this.padWidth,u=1;this.createNGrams(e,r,i,a,u,o)}}return[i,o]}}function s(e,t,n,r,s,o,i,u){return new a(n,r,s,o,i,u).compute(e,t)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var r=n(0);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const a=t[0];let s=e.indexOf(a);for(;-1!==s;){const t=e.subarray(0,s);n&&0===t.length||r.push(t),s=(e=e.subarray(s+1)).indexOf(a)}return void(n&&0===e.length||r.push(e))}let a=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){const t=e.subarray(a,s);n&&0===t.length||r.push(t),a=s+1}}function s(e,t,n){const s=e.length,o=[];let i=0,u=0;const c=new Array(s);for(let r=0;r<s;++r){const s=o.length;a(e[r],t,n,o);const l=o.length-s;c[r]=l,i+=l,u=Math.max(u,l)}const l=r.util.getArrayFromDType("int32",2*i),d=new Array(i),p=[s,u];let h=0;for(let e=0;e<s;++e)for(let t=0;t<c[e];++t)l[2*h]=e,l[2*h+1]=t,d[h]=o[h],++h;return[l,d,p]}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t){const n=r.util.getArrayFromDType("int32",e.length);for(let a=0;a<e.length;++a)n[a]=r.util.fingerPrint64(e[a]).modulo(t).getLowBitsUnsigned();return n}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const a=Object(r.buffer)(n,e.dtype);for(let t=0;t<a.values.length;++t){const n=a.indexToLoc(t),r=new Array(e.rank);for(let t=0;t<r.length;t++)r[t]=n[t]%e.shape[t];const s=e.locToIndex(r);a.values[t]=e.values[s]}return a}},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(0);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function s(e,t,n=0,o=e.length-1){for(;o>n;){if(o-n>600){const r=o-n+1,a=t-n+1,i=Math.log(r),u=.5*Math.exp(2*i/3),c=.5*Math.sqrt(i*u*(r-u)/r)*Math.sign(a-r/2);s(e,t,Math.max(n,Math.floor(t-a*u/r+c)),Math.min(o,Math.floor(t+(r-a)*u/r+c)))}const i=e[t];let u=n,c=o;for(r.util.swap(e,n,t),a(e[o],i)>0&&r.util.swap(e,n,o);u<c;){for(r.util.swap(e,u,c),u++,c--;a(e[u],i)<0;)u+=1;for(;a(e[c],i)>0;)c-=1}0===a(e[n],i)?r.util.swap(e,n,c):(c+=1,r.util.swap(e,c,o)),c<=t&&(n=c+1),t<=c&&(o=c-1)}}function o(e,t,n,o,i){const u=t[t.length-1],[c,l]=[e.length/u,u],d=r.util.getTypedArrayFromDType(n,c*o),p=r.util.getTypedArrayFromDType("int32",c*o);for(let t=0;t<c;t++){const n=t*l,r=e.subarray(n,n+l);let u=new Array(r.length);r.forEach(((e,t)=>u[t]={value:e,index:t})),o<u.length&&(s(u,o),u=u.slice(0,o)),i&&u.sort(a);const c=t*o,h=d.subarray(c,c+o),f=p.subarray(c,c+o);for(let e=0;e<o;e++)h[e]=u[e].value,f[e]=u[e].index}const h=t.slice();return h[h.length-1]=o,[Object(r.buffer)(h,n,d),Object(r.buffer)(h,"int32",p)]}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n,a){const s=r.util.parseAxisParam(t,n)[0],o=[1,n[0],1];for(let e=0;e<s;e++)o[0]*=n[e];o[1]=n[s];for(let e=s+1;e<n.length;e++)o[2]*=n[e];const i={},u=new Int32Array(n[s]),c=new r.TensorBuffer(o,a,e),l=[],d=1===o[0]&&1===o[2];for(let t=0;t<n[s];t++){let n;if(d)n=e[t].toString();else{const e=[];for(let n=0;n<o[0];n++)for(let r=0;r<o[2];r++)e.push(c.get(n,t,r));n=e.join(",")}if(void 0!==i[n])u[t]=i[n];else{const e=Object.keys(i).length;i[n]=e,u[t]=e,l.push(t)}}const p=o.slice();p[1]=Object.keys(i).length;const h=new r.TensorBuffer(p,a);l.forEach(((e,t)=>{for(let n=0;n<o[0];n++)for(let r=0;r<o[2];r++)h.set(c.get(n,e,r),n,t,r)}));const f=n.slice();return f[s]=p[1],{outputValues:h.values,outputShape:f,indices:u}}},function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var r=n(0),a=n(18);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function s(e,t,n="float32"){if("complex64"===n){const n=s(e,t,"float32"),r=s(e,t,"float32");return Object(a.a)({inputs:{real:n,imag:r},backend:e})}const o=r.util.makeZerosTypedArray(r.util.sizeFromShape(t),n);return e.makeTensorInfo(t,n,o)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));n(95),n(96),n(89);var r=n(0),a=n(11),s=n(5);class o{constructor(e,t,n,r){this.constantTenosrs_=e,this.operandRefs_=r,this.allocateInputTensors(t,n),this.outputTensors_=new Map,this.outputOperands_=new Set}allocateInputTensors(e,t){this.inputTensors_=new Map;for(const n in t){const r=t[n],a=e.get(n);let o,i;void 0!==r.dimensions?(o={type:a.desc.type,dimensions:r.dimensions},i=r.resource):(o=a.desc,i=r),this.inputTensors_.set(a,{ref:this.operandRefs_.get(a),tensor:s.c(o,i)})}}compute(e){for(const t of e.values())this.outputOperands_.add(t);const t={};for(const n of e.keys())t[n]=this.getTensor(e.get(n));return t}setOutputTensor(e,t){s.a(!this.outputTensors_.has(e),"MLOutput already has tensor."),this.outputTensors_.set(e,{ref:this.operandRefs_.get(e),tensor:t})}releaseTensor(e){let t;if(e instanceof a.b)t=this.inputTensors_;else{if(!(e instanceof a.e))return;if(this.outputOperands_.has(e))return;t=this.outputTensors_}const n=t.get(e);s.a(void 0!==n,"No tensor found for operand."),n.ref--,0===n.ref&&(r.dispose(n.tensor),t.delete(e))}getTensor(e){if(e instanceof a.a)return this.constantTenosrs_.get(e);if(e instanceof a.b)return this.inputTensors_.get(e).tensor;if(e instanceof a.e)return this.outputTensors_.has(e)||(e.operation.compute(this),s.a(this.outputTensors_.has(e),"No output is set.")),this.outputTensors_.get(e).tensor;throw new Error("The operand is invalid.")}}class i{constructor(e){this.inputs_=new Map,this.outputs_=new Map,this.constants_=new Set,this.operandRefs_=new Map,this.constantTensors_=new Map,s.a(void 0!==e,"Invalid argument");for(const t in e)s.a("string"==typeof t&&e[t]instanceof a.e,"The outputs parameter is invalid."),this.outputs_.set(t,e[t]);s.a(0!==this.outputs_.size,"The outputs is empty")}compute(e,t){this.validateInputs(e),s.a(0!==Object.keys(t).length,"The outputs is invalid.");const n=new Map;for(const e in t)s.a("string"==typeof e&&this.outputs_.has(e),"The name of the output is invalid."),s.a(s.j(t[e]),"Only output of ArrayBufferView type is supported."),n.set(e,this.outputs_.get(e));const a=r.tidy((()=>new o(this.constantTensors_,this.inputs_,e,this.operandRefs_).compute(n)));for(const e of Object.keys(a)){const n=a[e],o=s.b(n),i=t[e];s.p(i,o.type,o.dimensions),i.set(n.dataSync()),r.dispose(n)}}validateInputs(e){for(const t in e){s.a("string"==typeof t&&this.inputs_.has(t),"The name of the input is invalid.");const n=this.inputs_.get(t);let r,a;if(void 0!==e[t].dimensions){const o=e[t];r=o.resource,a=o.dimensions,s.a(void 0!==r,"The resource of input is undefined."),s.a(!0===s.i(a),"The type of the input dimensions is invalid."),s.a(a.length===n.desc.dimensions.length,"The rank of the input dimensions is invalid."),s.a(!s.g(a),"The value of input dimensions is negative.");for(let e=0;e<n.desc.dimensions.length;++e){const t=n.desc.dimensions[e];t>0&&s.a(t===a[e],"The value of the input dimensions is invalid.")}}else r=e[t],s.a(!s.g(n.desc.dimensions),"The input dimensions is not specified."),a=n.desc.dimensions;s.a(s.j(r),"Only resource of ArrayBufferView type is supported."),s.p(r,n.desc.type,a)}}static buildAndCompile(e){const t=new i(e);return t.build(),t.compile(),t}build(){const e=new Set;for(const t of this.outputs_.values())this.buildOperation(t.operation,e)}buildOperation(e,t){if(!t.has(e)){t.add(e);for(const n of e.inputs()){if(this.operandRefs_.has(n)){let e=this.operandRefs_.get(n);e++,this.operandRefs_.set(n,e)}else this.operandRefs_.set(n,1);if(n instanceof a.b){if(this.inputs_.has(n.name)){if(this.inputs_.get(n.name)!==n)throw new Error("The name of this input is existed.");continue}this.inputs_.set(n.name,n)}else n instanceof a.a?this.constants_.has(n)||this.constants_.add(n):n instanceof a.e&&this.buildOperation(n.operation,t)}}}compile(){this.allocateConstants(),this.computeOnce()}allocateConstants(){for(const e of this.constants_)this.constantTensors_.set(e,s.c(e.desc,e.value))}computeOnce(){const e={};for(const t of this.inputs_.keys()){const n=this.inputs_.get(t),r=n.desc.dimensions.map((e=>e<0?1:e)),a=new(s.e(n.desc.type))(s.k(n.desc.dimensions));e[t]={resource:a,dimensions:r}}const t=r.tidy((()=>new o(this.constantTensors_,this.inputs_,e,this.operandRefs_).compute(this.outputs_)));for(const e of Object.keys(t)){const n=t[e];n.dataSync(),r.dispose(n)}}dispose(){for(const e of this.constantTensors_.values())r.dispose(e);const e=new Set;for(const t of this.outputs_.values())this.disposeOperation(t.operation,e)}disposeOperation(e,t){if(!t.has(e)){e.dispose(),t.add(e);for(const n of e.inputs())n instanceof a.e&&this.disposeOperation(n.operation,t)}}}},function(e,t){},function(e,t,n){"use strict";n.d(t,"a",(function(){return yn}));var r,a,s=n(0);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
let o;!function(e){e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64"}(r||(r={})),function(e){e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid",e[e.elu=6]="elu"}(a||(a={}));const i={kernelName:s._FusedMatMul,backendName:"wasm",setupFunc:function(e){o=e.wasm.cwrap(s._FusedMatMul,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:i,bias:u,preluActivationWeights:c}=t;if("float32"!==s.dtype||"float32"!==i.dtype)throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");const{transposeA:l,transposeB:d,activation:p,leakyreluAlpha:h}=r,f=n.dataIdMap.get(s.dataId).id,m=n.dataIdMap.get(i.dataId).id;let b=0;if(null!=u){const e=n.dataIdMap.get(u.dataId);if(1!==e.shape.length)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${e.shape.length}.`);b=e.id}const g=null==c?0:n.dataIdMap.get(c.dataId).id,x=a[p];if(null==x)throw new Error(`${p} activation not yet supported for FusedConv2D in the wasm backend.`);const v=l?s.shape[2]:s.shape[1],y=d?i.shape[1]:i.shape[2],k=s.shape[0],w=n.makeOutput([k,v,y],s.dtype),I=n.dataIdMap.get(w.dataId).id,S=new Uint8Array(new Int32Array(s.shape).buffer),_=new Uint8Array(new Int32Array(i.shape).buffer);return o(f,S,s.shape.length,m,_,i.shape.length,l,d,x,b,g,h||0,I),w}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u(e){let t;return{kernelName:e,backendName:"wasm",setupFunc:function(n){t=n.wasm.cwrap(e,null,["number","number"])},kernelFunc:function(e){const{backend:n,inputs:{x:r}}=e,a=n.dataIdMap.get(r.dataId).id,o=n.makeOutput(r.shape,r.dtype),i=n.dataIdMap.get(o.dataId).id;return 0===s.util.sizeFromShape(o.shape)||t(a,i),o}}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c=u(s.Abs);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l(e,t,n){let a;return{kernelName:e,backendName:"wasm",setupFunc:function(t){a=t.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])},kernelFunc:function(o){const{backend:i,inputs:u}=o,{a:c,b:l}=u,d=i.dataIdMap.get(c.dataId).id,p=i.dataIdMap.get(l.dataId).id,h=null!=n?n:c.dtype,f=s.backend_util.assertAndGetBroadcastShape(c.shape,l.shape),m=i.makeOutput(f,h);if(0===s.util.sizeFromShape(f))return m;const b=new Uint8Array(new Int32Array(c.shape).buffer),g=new Uint8Array(new Int32Array(l.shape).buffer),x=i.dataIdMap.get(m.dataId).id,v=()=>a(d,b,c.shape.length,p,g,l.shape.length,r[c.dtype],x);if(t&&"float32"===c.dtype)return v(),m;const y=s.backend_util.getBroadcastDims(c.shape,f),k=s.backend_util.getBroadcastDims(l.shape,f),w=y.every(((e,t)=>e===t)),I=k.every(((e,t)=>e===t));if(w&&I)return v(),m;throw new Error(`Broadcasting along outer dims is not yet supported for ${c.dtype} ${e}.`)}}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d=l(s.Add,!0);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
let p;const h={kernelName:s.AddN,backendName:"wasm",setupFunc:function(e){p=e.wasm.cwrap(s.AddN,null,["array","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n}=e,a=n.makeOutput(t[0].shape,t[0].dtype);if(0===s.util.sizeFromShape(a.shape))return a;const o=t.map((e=>n.dataIdMap.get(e.dataId).id)),i=new Uint8Array(new Int32Array(o).buffer),u=n.dataIdMap.get(a.dataId).id;return p(i,o.length,r[a.dtype],u),a}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype),a=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(r).set(a),r}const m={kernelName:s.Identity,backendName:"wasm",kernelFunc:f};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let b;function g(e){const{inputs:t,backend:n,attrs:a}=e,[s,o]=function(e,t){const n=[],r=[];for(let a=0;a<e.length;++a)1!==e[a]&&n.push(e[a]),1!==e[t[a]]&&r.push(t[a]);for(let e=0;e<r.length;++e){let t=-1;for(let n=0;n<r.length;++n)r[n]>=e&&(-1===t||r[t]>r[n])&&(t=n);r[t]=e}return[n,r]}(t.x.shape,a.perm);let i=!0;for(let e=0;e<o.length;e++)o[e]!==e&&(i=!1);const u=function(e,t){const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];return n}(t.x.shape,a.perm),c={dataId:t.x.dataId,shape:s,dtype:t.x.dtype};if(i){const e=f({inputs:t,backend:n});return e.shape=u,e}const l=n.makeOutput(u,c.dtype),d=n.dataIdMap.get(c.dataId).id,p=n.dataIdMap.get(l.dataId).id,h=new Uint8Array(new Int32Array(o).buffer),m=new Uint8Array(new Int32Array(c.shape).buffer);return b(d,m,c.shape.length,r[c.dtype],p,h,o.length),l}const x={kernelName:s.Transpose,backendName:"wasm",kernelFunc:g,setupFunc:function(e){b=e.wasm.cwrap(s.Transpose,null,["number","array","number","number","number","array","number"])}};
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v(e,t,n){const r=e.shape,a=e.shape.length,o=s.util.parseAxisParam(t,r);let i=o;const u=s.backend_util.getAxesPermutation(i,a);let c=null,l=!1;if(null!=u){const t=new Array(a);for(let e=0;e<t.length;e++)t[e]=r[u[e]];i=s.backend_util.getInnerMostAxes(i.length,a),c=g({inputs:{x:e},attrs:{perm:u},backend:n});const o=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(c.dataId).id!==o&&(l=!0)}return{transposed:c,originalAxes:o,axes:i,inputWasTransposed:l}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let y;const k={kernelName:s.All,backendName:"wasm",setupFunc:function(e){y=e.wasm.cwrap(s.All,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:o}=r,{x:i}=n;let u=t.dataIdMap.get(i.dataId).id,c=i;const{transposed:l,axes:d,originalAxes:p,inputWasTransposed:h}=v(i,a,t);if(h){c=l,u=t.dataIdMap.get(l.dataId).id}const f=c.shape.length;s.backend_util.assertAxesAreInnerMostDims("all",d,f);const[m,b]=s.backend_util.computeOutAndReduceShapes(c.shape,d),g=s.util.sizeFromShape(b),x=t.makeOutput(m,i.dtype);if(0!==s.util.sizeFromShape(c.shape)){const e=t.dataIdMap.get(x.dataId).id;y(u,g,e)}if(h&&t.disposeData(l.dataId),o){const e=s.backend_util.expandShapeToKeepDim(x.shape,p);x.shape=e}return x}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let w;const I={kernelName:s.Any,backendName:"wasm",setupFunc:function(e){w=e.wasm.cwrap(s.Any,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:o}=r,{x:i}=n;let u=t.dataIdMap.get(i.dataId).id,c=i;const{transposed:l,axes:d,originalAxes:p,inputWasTransposed:h}=v(i,a,t);if(h){c=l,u=t.dataIdMap.get(l.dataId).id}const f=c.shape.length;s.backend_util.assertAxesAreInnerMostDims("any",d,f);const[m,b]=s.backend_util.computeOutAndReduceShapes(c.shape,d),g=s.util.sizeFromShape(b),x=t.makeOutput(m,i.dtype);if(0!==s.util.sizeFromShape(c.shape)){const e=t.dataIdMap.get(x.dataId).id;w(u,g,e)}if(h&&t.disposeData(l.dataId),o){const e=s.backend_util.expandShapeToKeepDim(x.shape,p);x.shape=e}return x}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let S;const _={kernelName:s.ArgMax,backendName:"wasm",kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{axis:o}=a,{x:i}=n,u=t.dataIdMap.get(i.dataId).id;let c=u,l=i;const{transposed:d,axes:p,inputWasTransposed:h}=v(i,o,t);if(h){const e=t.dataIdMap.get(d.dataId).id;e!==u&&(l=d,c=e)}const f=l.shape.slice(0,-1),m=t.makeOutput(f,"int32"),b=t.dataIdMap.get(m.dataId).id,g=s.util.sizeFromShape(m.shape),x=l.shape[p[0]];return S(c,r[l.dtype],g,x,b),h&&t.disposeData(d.dataId),m},setupFunc:function(e){S=e.wasm.cwrap(s.ArgMax,null,["number","number","number","number","number"])}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let O;const T={kernelName:s.AvgPool,backendName:"wasm",setupFunc:function(e){O=e.wasm.cwrap(s.AvgPool,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,a=t.x,o=r.dataIdMap.get(a.dataId).id,{filterSize:i,strides:u,pad:c,dimRoundingMode:l}=n,d=s.backend_util.computePool2DInfo(a.shape,i,u,1,c,l),p=d.filterHeight,h=d.filterWidth,f=d.padInfo.top,m=d.padInfo.right,b=d.padInfo.bottom,g=d.padInfo.left,x=d.strideHeight,v=d.strideWidth,y=d.inChannels;if("channelsLast"!==d.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${d.dataFormat}'. Please use 'channelsLast'.`);if(1!==d.dilationWidth||1!==d.dilationHeight)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${d.dilationHeight}, ${d.dilationWidth}].`);const k=r.makeOutput(d.outShape,"float32"),w=r.dataIdMap.get(k.dataId).id;return O(o,a.shape[0],a.shape[1],a.shape[2],p,h,f,m,b,g,x,v,y,w),k}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C(e){const{inputs:t,attrs:n}=e,{x:r}=t,{shape:a}=n,o=s.util.sizeFromShape(r.shape),i=s.util.inferFromImplicitShape(a,o);return s.util.assert(o===s.util.sizeFromShape(i),(()=>`new shape: ${i}, old shape: ${r.shape}. New shape and old shape must have the same number of elements.`)),e.backend.incRef(r.dataId),{dataId:r.dataId,shape:i,dtype:r.dtype}}const $={kernelName:s.Reshape,backendName:"wasm",kernelFunc:C};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let E;const A={kernelName:s.BatchMatMul,backendName:"wasm",setupFunc:function(e){E=e.wasm.cwrap(s.BatchMatMul,null,["number","array","number","number","array","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:o}=t,{transposeA:i,transposeB:u}=r;if("float32"!==a.dtype||"float32"!==o.dtype)throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");const c=a.shape.length,l=o.shape.length,d=i?a.shape[c-2]:a.shape[c-1],p=u?o.shape[l-1]:o.shape[l-2],h=i?a.shape[c-1]:a.shape[c-2],f=u?o.shape[l-2]:o.shape[l-1],m=a.shape.slice(0,-2),b=o.shape.slice(0,-2),g=s.util.sizeFromShape(m),x=s.util.sizeFromShape(b),v=g===x||1===g||1===x;s.util.assert(c>=2&&l>=2&&v,(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${b}).`));const y=(g>x?a.shape.slice(0,-2):o.shape.slice(0,-2)).concat([h,f]);s.util.assert(d===p,(()=>`Error in matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${a.shape} and ${o.shape} and transposeA=${i} and transposeB=${u} must match.`));const k=u?[x,f,p]:[x,p,f],w=C({inputs:{x:a},backend:n,attrs:{shape:i?[g,d,h]:[g,h,d]}}),I=C({inputs:{x:o},backend:n,attrs:{shape:k}}),S=n.dataIdMap.get(w.dataId).id,_=n.dataIdMap.get(I.dataId).id,O=i?w.shape[2]:w.shape[1],T=u?I.shape[1]:I.shape[2],$=Math.max(g,x),A=n.makeOutput([$,O,T],w.dtype),N=n.dataIdMap.get(A.dataId).id,R=new Uint8Array(new Int32Array(w.shape).buffer),F=new Uint8Array(new Int32Array(I.shape).buffer);return E(S,R,w.shape.length,_,F,I.shape.length,i,u,N),n.disposeData(w.dataId),n.disposeData(I.dataId),A.shape=y,A}};var N=n(22);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R(e){const{inputs:{x:t},attrs:{begin:n,size:r},backend:a}=e,[o,i]=s.slice_util.parseSliceParams(t,n,r),u=s.slice_util.isSliceContinous(t.shape,o,i),c=a.readSync(t.dataId),l=a.makeOutput(i,t.dtype),d=s.util.computeStrides(t.shape),p=a.dataIdMap.get(l.dataId);if(u){const e=s.slice_util.computeFlatOffset(o,d);if("string"===t.dtype)p.stringBytes=c.slice(e,e+s.util.sizeFromShape(i));else{a.typedArrayFromHeap(l).set(c.subarray(e,e+s.util.sizeFromShape(i)))}return l}if("string"===t.dtype){const e=Object(N.c)(c,o,i,t.shape,t.dtype);return p.stringBytes=e,l}const h=a.typedArrayFromHeap(l),f=t.shape.length;if(2===f)!function(e,t,n,r,a){let s=0;const o=r[0],i=r[1],u=o+a[0];for(let r=o;r<u;r++){const o=r*t+i;n.set(e.subarray(o,o+a[1]),s),s+=a[1]}}(c,d[0],h,o,i);else if(3===f)!function(e,t,n,r,a,s){let o=0;const i=a[0],u=a[1],c=a[2],l=i+s[0],d=u+s[1];for(let a=i;a<l;a++)for(let i=u;i<d;i++){const u=a*t+i*n+c;r.set(e.subarray(u,u+s[2]),o),o+=s[2]}}(c,d[0],d[1],h,o,i);else if(4===f)!function(e,t,n,r,a,s,o){let i=0;const u=s[0],c=s[1],l=s[2],d=u+o[0],p=c+o[1],h=l+o[2],f=s[3];for(let s=u;s<d;s++)for(let u=c;u<p;u++)for(let c=l;c<h;c++){const l=s*t+u*n+c*r+f;a.set(e.subarray(l,l+o[3]),i),i+=o[3]}}(c,d[0],d[1],d[2],h,o,i);else{const e=Object(N.c)(c,o,i,t.shape,t.dtype);h.set(e)}return l}const F={kernelName:s.Slice,backendName:"wasm",kernelFunc:R};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M={kernelName:s.BatchToSpaceND,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:o,crops:i}=r,u=o.reduce(((e,t)=>e*t)),c=s.backend_util.getReshaped(a.shape,o,u),l=s.backend_util.getPermuted(c.length,o.length),d=s.backend_util.getReshapedPermuted(a.shape,o,u),p=s.backend_util.getSliceBeginCoords(i,o.length),h=s.backend_util.getSliceSize(d,i,o.length),f=C({inputs:{x:a},backend:n,attrs:{shape:c}}),m=g({inputs:{x:f},backend:n,attrs:{perm:l}}),b=R({inputs:{x:C({inputs:{x:m},backend:n,attrs:{shape:d}})},backend:n,attrs:{begin:p,size:h}});return n.disposeData(f.dataId),n.disposeData(m.dataId),n.disposeData(f.dataId),b}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D(e){const{inputs:{x:t},attrs:{dtype:n},backend:r}=e,a=r.makeOutput(t.shape,n),s=r.typedArrayFromHeap(t);return r.typedArrayFromHeap(a).set(s),a}const j={kernelName:s.Cast,backendName:"wasm",kernelFunc:D},P=u(s.Ceil);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
let B;const L={kernelName:s.ClipByValue,backendName:"wasm",setupFunc:function(e){B=e.wasm.cwrap(s.ClipByValue,null,["number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:o}=r,i=n.dataIdMap.get(a.dataId).id,u=n.makeOutput(a.shape,a.dtype),c=n.dataIdMap.get(u.dataId).id;return B(i,s,o,c),u}};var W=n(56);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z(e){const{inputs:t,backend:n}=e,r=s.util.parseAxisParam(e.attrs.axis,t[0].shape)[0];let a=s.backend_util.computeOutShape(t.map((e=>e.shape)),r);const o=t.filter((e=>s.util.sizeFromShape(e.shape)>0));if(1===o.length)return f({inputs:{x:o[0]},backend:n});const i=n.makeOutput(a,t[0].dtype);if(0===s.util.sizeFromShape(a))return i;const u=o.map((e=>e.shape));if(s.backend_util.assertParamsConsistent(u,r),"string"===o[0].dtype){const e=o.map((e=>{const t=s.util.sizeFromShape(e.shape.slice(r));return C({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),u=e.map((e=>({vals:n.readSync(e.dataId),shape:e.shape})));a=s.backend_util.computeOutShape(e.map((e=>e.shape)),1);const c=1===e[0].shape[0],l=Object(W.a)(u,a,t[0].dtype,c),d=s.backend_util.computeOutShape(o.map((e=>e.shape)),r);i.shape=d;return n.dataIdMap.get(i.dataId).stringBytes=s.backend_util.fromStringArrayToUint8(l),e.forEach((e=>n.disposeData(e.dataId))),i}const c=s.util.sizeFromShape(o[0].shape.slice(0,r));let l=0;const d=o.map((e=>{const t=s.util.sizeFromShape(e.shape.slice(r));return l+=t,t})),p=o.map((e=>n.typedArrayFromHeap(e))),h=n.typedArrayFromHeap(i);for(let e=0;e<c;e++){let t=e*l;for(let n=0;n<p.length;n++){const r=d[n],a=e*r,s=p[n].subarray(a,a+r);h.set(s,t),t+=r}}return i}const U={kernelName:s.Concat,backendName:"wasm",kernelFunc:z};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let V;const G={kernelName:s.Conv2D,backendName:"wasm",setupFunc:function(e){V=e.wasm.cwrap(s.Conv2D,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:o}=t,i=r.dataIdMap.get(a.dataId).id,u=r.dataIdMap.get(o.dataId).id,{strides:c,dilations:l,pad:d,dimRoundingMode:p,dataFormat:h}=n,f=s.backend_util.convertConv2DDataFormat(h),m=s.backend_util.computeConv2DInfo(a.shape,o.shape,c,l,d,p,!1,f),b=m.filterHeight,g=m.filterWidth,x=m.padInfo.top,v=m.padInfo.right,y=m.padInfo.bottom,k=m.padInfo.left,w=m.dilationHeight,I=m.dilationWidth,S=m.strideHeight,_=m.strideWidth,O=m.inChannels,T=m.outChannels,C="SAME"===m.padInfo.type?1:0;if("channelsLast"!==m.dataFormat)throw new Error(`wasm backend Conv2D does not support dataFormat:'${m.dataFormat}'. Please use 'channelsLast'.`);const $=r.makeOutput(m.outShape,"float32"),E=r.dataIdMap.get($.dataId).id;return V(i,a.shape[0],a.shape[1],a.shape[2],u,b,g,x,v,y,k,C,w,I,S,_,O,T,E),$}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let H;const q={kernelName:s.Conv2DBackpropInput,backendName:"wasm",setupFunc:function(e){H=e.wasm.cwrap(s.Conv2DBackpropInput,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{dy:a,filter:o}=n,{strides:i,pad:u,dataFormat:c,dimRoundingMode:l,inputShape:d}=r,p=s.backend_util.convertConv2DDataFormat(c),h=s.backend_util.computeConv2DInfo(d,o.shape,i,1,u,l,!1,p),{batchSize:f,filterHeight:m,filterWidth:b,inChannels:g,inHeight:x,inWidth:v,outChannels:y,outHeight:k,outWidth:w,strideHeight:I,strideWidth:S}=h,_=m-1-h.padInfo.top,O=b-1-h.padInfo.left,T="channelsLast"===h.dataFormat,C=s.util.computeStrides(h.inShape),$=s.util.computeStrides(a.shape),[E,A,N]=s.util.computeStrides(o.shape),R=C[0],F=T?C[1]:C[2],M=T?C[2]:1,D=T?1:C[1],j=$[0],P=T?$[1]:$[2],B=T?$[2]:1,L=T?1:$[1],W=t.makeOutput(h.inShape,"float32"),z=t.dataIdMap.get(W.dataId).id,U=t.dataIdMap.get(a.dataId).id,V=t.dataIdMap.get(o.dataId).id;return H(U,V,f,m,b,x,v,g,k,w,y,I,S,_,O,E,A,N,R,F,M,D,j,P,B,L,z),W}},K=u(s.Cos),X=u(s.Cosh);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
var Y;let Z;!function(e){e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest"}(Y||(Y={}));const Q={kernelName:s.CropAndResize,backendName:"wasm",setupFunc:function(e){Z=e.wasm.cwrap(s.CropAndResize,null,["number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{method:a,extrapolationValue:s,cropSize:o}=r,{image:i,boxes:u,boxInd:c}=n,l=u.shape[0],[d,p]=o,h=[l,d,p,i.shape[3]];let f,m=t.dataIdMap.get(i.dataId);"float32"!==i.dtype&&(f=D({backend:t,inputs:{x:i},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(f.dataId));const b=m.id,g=t.dataIdMap.get(u.dataId).id,x=t.dataIdMap.get(c.dataId).id,v=t.makeOutput(h,"float32"),y=t.dataIdMap.get(v.dataId).id,k=new Uint8Array(new Int32Array(i.shape).buffer);return Z(b,g,x,l,k,d,p,Y[a],s,y),null!=f&&t.disposeData(f.dataId),v}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let J;const ee={kernelName:s.Cumsum,backendName:"wasm",setupFunc:function(e){J=e.wasm.cwrap(s.Cumsum,null,["number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{axis:i,exclusive:u,reverse:c}=a,l=o.shape.length;s.util.assert("float32"===o.dtype||"int32"===o.dtype,(()=>`cumsum does not support ${o.dtype} tensors in the WASM backend`));const d=s.backend_util.getAxesPermutation([i],l);let p=o;null!==d&&(p=g({inputs:{x:o},attrs:{perm:d},backend:n}));const h=s.backend_util.getInnerMostAxes(1,l)[0];s.backend_util.assertAxesAreInnerMostDims("cumsum",[h],l);const f=n.makeOutput(p.shape,p.dtype),m=p.shape[h],b=n.dataIdMap.get(p.dataId).id,x=n.dataIdMap.get(f.dataId).id;J(b,u?1:0,c?1:0,m,x,r[o.dtype]);let v=f;if(null!==d){v=g({inputs:{x:f},attrs:{perm:s.backend_util.getUndoAxesPermutation(d)},backend:n}),n.disposeData(p.dataId),n.disposeData(f.dataId)}return v}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let te;const ne={kernelName:s.DepthToSpace,backendName:"wasm",setupFunc:function(e){te=e.wasm.cwrap(s.DepthToSpace,null,["number","number","number","array","number","array","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{x:a}=n,{blockSize:o,dataFormat:i}=r;s.util.assert(o>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${o}`));const u=a.shape[0],c="NHWC"===i?a.shape[1]:a.shape[2],l="NHWC"===i?a.shape[2]:a.shape[3],d="NHWC"===i?a.shape[3]:a.shape[1],p=c*o,h=l*o,f=d/(o*o),m="NHWC"===i?[u,p,h,f]:[u,f,p,h],b=t.makeOutput(m,"float32"),g=t.dataIdMap.get(a.dataId).id,x=new Uint8Array(new Int32Array(s.util.computeStrides(a.shape)).buffer),v=new Uint8Array(new Int32Array(m).buffer),y=new Uint8Array(new Int32Array(s.util.computeStrides(m)).buffer),k=t.dataIdMap.get(b.dataId).id;return te(g,o,"NHWC"===i?1:0,x,a.shape.length-1,v,y,m.length,k),b}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let re;const ae={kernelName:s.DepthwiseConv2dNative,backendName:"wasm",setupFunc:function(e){re=e.wasm.cwrap(s.DepthwiseConv2dNative,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:o}=t,i=r.dataIdMap.get(a.dataId).id,u=r.dataIdMap.get(o.dataId).id,{strides:c,dilations:l,pad:d,dimRoundingMode:p}=n,h=null==l?[1,1]:l,f=s.backend_util.computeConv2DInfo(a.shape,o.shape,c,h,d,p,!0),m=f.filterHeight,b=f.filterWidth,g=f.padInfo.top,x=f.padInfo.right,v=f.padInfo.bottom,y=f.padInfo.left,k=f.dilationHeight,w=f.dilationWidth,I=f.strideHeight,S=f.strideWidth,_=f.inChannels,O=f.outChannels,T="SAME"===f.padInfo.type?1:0;if("channelsLast"!==f.dataFormat)throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);const C=r.makeOutput(f.outShape,"float32"),$=r.dataIdMap.get(C.dataId).id;return re(i,a.shape[0],a.shape[1],a.shape[2],u,m,b,g,x,v,y,T,k,w,I,S,_,O,$),C}},se=u(s.Elu),oe=l(s.Equal,!1,"bool"),ie=u(s.Exp);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ue(e){const{inputs:t,attrs:n,backend:r}=e,{input:a}=t,{dim:o}=n,i=a.shape.length,u=a.shape.slice();let c=o;return o<0&&(s.util.assert(-(i+1)<=o,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),c=i+o+1),u.splice(c,0,1),C({inputs:{x:a},backend:r,attrs:{shape:u}})}const ce={kernelName:s.ExpandDims,backendName:"wasm",kernelFunc:ue};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function le(e){const{attrs:{shape:t,value:n,dtype:r},backend:a}=e,s=a.makeOutput(t,r);return a.typedArrayFromHeap(s).fill(n),s}const de={kernelName:s.Fill,backendName:"wasm",kernelFunc:le};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let pe;const he={kernelName:s.FlipLeftRight,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,{image:r}=t,a=n.makeOutput(r.shape,r.dtype),s=n.dataIdMap.get(r.dataId).id,o=n.dataIdMap.get(a.dataId).id,[i,u,c,l]=r.shape;return pe(s,i,u,c,l,o),a},setupFunc:function(e){pe=e.wasm.cwrap(s.FlipLeftRight,null,["number","number","number","number","number","number"])}},fe=u(s.Floor),me=l(s.FloorDiv,!1);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
let be;const ge={kernelName:s.FusedBatchNorm,backendName:"wasm",setupFunc:function(e){be=e.wasm.cwrap(s.FusedBatchNorm,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{varianceEpsilon:a}=r,{x:o,mean:i,variance:u,offset:c,scale:l}=n,d=t.dataIdMap.get(o.dataId).id,p=t.dataIdMap.get(i.dataId).id,h=t.dataIdMap.get(u.dataId).id,f=null!=c?t.dataIdMap.get(c.dataId).id:0,m=null!=l?t.dataIdMap.get(l.dataId).id:0,b=t.makeOutput(o.shape,o.dtype);if(0===s.util.sizeFromShape(o.shape))return b;const g=t.dataIdMap.get(b.dataId).id;return be(d,p,h,f,m,a,g),b}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let xe;const ve={kernelName:s.FusedConv2D,backendName:"wasm",setupFunc:function(e){xe=e.wasm.cwrap(s.FusedConv2D,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:o,filter:i,bias:u,preluActivationWeights:c}=t,{strides:l,pad:d,dilations:p,dataFormat:h,dimRoundingMode:f,activation:m,leakyreluAlpha:b}=n,g=s.backend_util.computeConv2DInfo(o.shape,i.shape,l,p,d,f),x=a[m];if(null==x)throw new Error(`${m} activation not yet supported for FusedConv2D in the wasm backend.`);const v=r.dataIdMap.get(o.dataId).id,y=r.dataIdMap.get(i.dataId).id,k=g.outChannels;let w=0;if(null!=u){const e=r.dataIdMap.get(u.dataId);if(1!==e.shape.length)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==k)throw new Error(`FusedConv2D bias shape (${e.shape}) does not match the number of output channels (${k})`);w=e.id}const I=g.filterHeight,S=g.filterWidth,_=g.padInfo.top,O=g.padInfo.right,T=g.padInfo.bottom,C=g.padInfo.left,$=g.dilationHeight,E=g.dilationWidth,A=g.strideHeight,N=g.strideWidth,R=g.inChannels,F="SAME"===g.padInfo.type?1:0,M=g.batchSize,D=g.inHeight,j=g.inWidth;if("NHWC"!==h)throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${h}'. Please use 'NHWC'.`);const P=r.makeOutput(g.outShape,"float32"),B=r.dataIdMap.get(P.dataId).id,L=null==c?0:r.dataIdMap.get(c.dataId).id;return xe(v,M,D,j,y,I,S,w,_,O,T,C,F,$,E,A,N,R,k,x,L,b||0,B),P}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let ye;const ke={kernelName:s.FusedDepthwiseConv2D,backendName:"wasm",setupFunc:function(e){ye=e.wasm.cwrap(s.FusedDepthwiseConv2D,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:o,filter:i,bias:u,preluActivationWeights:c}=t,{strides:l,pad:d,dilations:p,dataFormat:h,dimRoundingMode:f,activation:m,leakyreluAlpha:b}=n,g=s.backend_util.computeConv2DInfo(o.shape,i.shape,l,p,d,f,!0),x=a[m];if(null==x)throw new Error(`${m} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);const v=r.dataIdMap.get(o.dataId).id,y=r.dataIdMap.get(i.dataId).id,k=g.outChannels;let w=0;if(null!=u){const e=r.dataIdMap.get(u.dataId);if(1!==e.shape.length)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==k)throw new Error(`FusedDepthwiseConv2D bias shape (${e.shape}) does not match the number of output channels (${k})`);w=e.id}const I=g.filterHeight,S=g.filterWidth,_=g.padInfo.top,O=g.padInfo.right,T=g.padInfo.bottom,C=g.padInfo.left,$=g.dilationHeight,E=g.dilationWidth,A=g.strideHeight,N=g.strideWidth,R=g.inChannels,F="SAME"===g.padInfo.type?1:0,M=g.batchSize,D=g.inHeight,j=g.inWidth;if("NHWC"!==h)throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${h}'. Please use 'NHWC'.`);const P=r.makeOutput(g.outShape,"float32"),B=r.dataIdMap.get(P.dataId).id,L=null==c?0:r.dataIdMap.get(c.dataId).id;return ye(v,M,D,j,y,I,S,w,_,O,T,C,F,$,E,A,N,R,k,x,L,b||0,B),P}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let we;const Ie={kernelName:s.GatherNd,backendName:"wasm",setupFunc:function(e){we=e.wasm.cwrap(s.GatherNd,null,["number","number","number","number","number","number","array","number"])},kernelFunc:function(e){const{backend:t,inputs:n}=e,{params:a,indices:o}=n,[i,u,c,l]=s.gather_util.prepareAndValidate(a,o),d=t.makeOutput(i,a.dtype);if(0===u)return d;const p=o.shape,h=p[p.length-1],f=t.dataIdMap.get(a.dataId).id,m=t.dataIdMap.get(o.dataId).id,b=new Uint8Array(new Int32Array(l).buffer),g=t.dataIdMap.get(d.dataId).id;return we(f,r[a.dtype],m,u,h,c,b,g),d}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Se;const _e={kernelName:s.GatherV2,backendName:"wasm",setupFunc:function(e){Se=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{x:o,indices:i}=n,{axis:u,batchDims:c}=a,l=s.util.parseAxisParam(u,o.shape)[0],d=s.backend_util.segment_util.collectGatherOpShapeInfo(o,i,l,c),p=C({inputs:{x:o},attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]},backend:t}),h=s.util.sizeFromShape(i.shape),f=C({inputs:{x:i},attrs:{shape:[d.batchSize,h/d.batchSize]},backend:t}),m=[d.batchSize,d.outerSize,h/d.batchSize,d.sliceSize],b=t.makeOutput(m,o.dtype);if(0===s.util.sizeFromShape(o.shape))return b;const g=p.shape.length-1,x=t.dataIdMap.get(p.dataId).id,v=t.dataIdMap.get(f.dataId).id,y=t.dataIdMap.get(b.dataId).id,k=new Uint8Array(new Int32Array(s.util.computeStrides(p.shape)).buffer),w=new Uint8Array(new Int32Array(s.util.computeStrides(m)).buffer);return Se(x,r[o.dtype],k,g,v,d.batchSize,w,y),t.disposeData(p.dataId),t.disposeData(f.dataId),b.shape=d.outputShape,b}},Oe=l(s.Greater,!1,"bool"),Te=l(s.GreaterEqual,!1,"bool");
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
let Ce;const $e={kernelName:s.LeakyRelu,backendName:"wasm",setupFunc:function(e){Ce=e.wasm.cwrap(s.LeakyRelu,null,["number","number","number"])},kernelFunc:function(e){const{inputs:{x:t},attrs:{alpha:n},backend:r}=e,a=r.dataIdMap.get(t.dataId).id,o=r.makeOutput(t.shape,t.dtype);if(0!==s.util.sizeFromShape(t.shape)){const e=r.dataIdMap.get(o.dataId).id;Ce(a,n,e)}return o}},Ee=l(s.Less,!1,"bool"),Ae=l(s.LessEqual,!1,"bool"),Ne=u(s.Log),Re=l(s.LogicalAnd,!1,"bool");
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
let Fe;const Me={kernelName:s.Max,backendName:"wasm",setupFunc:function(e){Fe=e.wasm.cwrap(s.Max,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{reductionIndices:a,keepDims:o}=r,{x:i}=n;let u=t.dataIdMap.get(i.dataId).id,c=i;const{transposed:l,axes:d,originalAxes:p,inputWasTransposed:h}=v(i,a,t);if(h){c=l,u=t.dataIdMap.get(l.dataId).id}const f=c.shape.length;s.backend_util.assertAxesAreInnerMostDims("max",d,f);const[m,b]=s.backend_util.computeOutAndReduceShapes(c.shape,d),g=s.util.sizeFromShape(b),x=t.makeOutput(m,i.dtype);if(0!==s.util.sizeFromShape(c.shape)){const e=t.dataIdMap.get(x.dataId).id;Fe(u,g,e)}if(h&&t.disposeData(l.dataId),o){const e=s.backend_util.expandShapeToKeepDim(x.shape,p);x.shape=e}return x}},De=l(s.Maximum,!1);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
let je;const Pe={kernelName:s.MaxPool,backendName:"wasm",setupFunc:function(e){je=e.wasm.cwrap(s.MaxPool,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,a=t.x,o=r.dataIdMap.get(a.dataId).id,{filterSize:i,strides:u,pad:c,dimRoundingMode:l}=n,d=s.backend_util.computePool2DInfo(a.shape,i,u,1,c,l),p=d.filterHeight,h=d.filterWidth,f=d.padInfo.top,m=d.padInfo.right,b=d.padInfo.bottom,g=d.padInfo.left,x=d.dilationHeight,v=d.dilationWidth,y=d.strideHeight,k=d.strideWidth,w=d.inChannels,I=d.outChannels;if("channelsLast"!==d.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${d.dataFormat}'. Please use 'channelsLast'.`);const S=r.makeOutput(d.outShape,"float32"),_=r.dataIdMap.get(S.dataId).id;return je(o,a.shape[0],a.shape[1],a.shape[2],p,h,f,m,b,g,x,v,y,k,w,I,_),S}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Be;const Le={kernelName:s.Mean,backendName:"wasm",setupFunc:function(e){Be=e.wasm.cwrap(s.Mean,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:o}=r,{x:i}=n,u=t.dataIdMap.get(i.dataId).id;let c=u,l=i;const{transposed:d,axes:p,originalAxes:h,inputWasTransposed:f}=v(i,a,t);let m=p;if(f){const e=t.dataIdMap.get(d.dataId).id;e!==u&&(l=d,c=e,m=s.backend_util.getInnerMostAxes(m.length,l.shape.length))}s.backend_util.assertAxesAreInnerMostDims("mean",m,l.shape.length);const[b,g]=s.backend_util.computeOutAndReduceShapes(l.shape,m),x=s.util.sizeFromShape(g);let y=l;"float32"!==l.dtype&&(y=D({backend:t,inputs:{x:l},attrs:{dtype:"float32"}}),c=t.dataIdMap.get(y.dataId).id);const k=t.makeOutput(b,"float32");if(0!==s.util.sizeFromShape(l.shape)){const e=t.dataIdMap.get(k.dataId).id;Be(c,x,e)}if(f&&t.disposeData(d.dataId),o){const e=s.backend_util.expandShapeToKeepDim(k.shape,h);k.shape=e}return"float32"!==l.dtype&&t.disposeData(y.dataId),k}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let We;const ze={kernelName:s.Min,backendName:"wasm",setupFunc:function(e){We=e.wasm.cwrap(s.Min,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:o}=r,{x:i}=n,u=t.dataIdMap.get(i.dataId).id;let c=u,l=i;const{transposed:d,axes:p,originalAxes:h,inputWasTransposed:f}=v(i,a,t);if(f){const e=t.dataIdMap.get(d.dataId).id;e!==u&&(l=d,c=e)}const m=l.shape.length;s.backend_util.assertAxesAreInnerMostDims("min",p,m);const[b,g]=s.backend_util.computeOutAndReduceShapes(l.shape,p),x=s.util.sizeFromShape(g),y=t.makeOutput(b,l.dtype);if(0!==s.util.sizeFromShape(l.shape)){const e=t.dataIdMap.get(y.dataId).id;We(c,x,e)}if(f&&t.disposeData(d.dataId),o){const e=s.backend_util.expandShapeToKeepDim(y.shape,h);y.shape=e}return y}},Ue=l(s.Minimum,!1);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
var Ve;let Ge;!function(e){e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric"}(Ve||(Ve={}));const He={kernelName:s.MirrorPad,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n,attrs:{paddings:a,mode:s}}=e,o=a.map(((e,n)=>e[0]+t.shape[n]+e[1])),i=n.dataIdMap.get(t.dataId).id,u=n.makeOutput(o,t.dtype),c=n.dataIdMap.get(u.dataId).id,l=new Uint8Array(new Int32Array(t.shape).buffer),d=a.map((e=>e[0])),p=a.map((e=>e[1])),h=new Uint8Array(new Int32Array(d).buffer),f=new Uint8Array(new Int32Array(p).buffer);return Ge(i,l,t.shape.length,r[t.dtype],h,f,Ve[s],c),u},setupFunc:function(e){Ge=e.wasm.cwrap(s.MirrorPad,null,["number","array","number","number","array","array","number","number"])}},qe=l(s.Multiply,!0),Ke=u(s.Neg);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Xe(e,t){const n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),r=n[0],a=n[1],s=n[2],o=n[3];return e.wasm._free(t),{pSelectedIndices:r,selectedSize:a,pSelectedScores:s,pValidOutputs:o}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Ye;const Ze={kernelName:s.NonMaxSuppressionV3,backendName:"wasm",setupFunc:function(e){Ye=e.wasm.cwrap(s.NonMaxSuppressionV3,"number",["number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:o}=r,{boxes:i,scores:u}=n,c=t.dataIdMap.get(i.dataId).id,l=t.dataIdMap.get(u.dataId).id,d=Ye(c,l,s,a,o),{pSelectedIndices:p,selectedSize:h,pSelectedScores:f,pValidOutputs:m}=Xe(t,d);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([h],"int32",p)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Qe;const Je={kernelName:s.NonMaxSuppressionV4,backendName:"wasm",setupFunc:function(e){Qe=e.wasm.cwrap(s.NonMaxSuppressionV4,"number",["number","number","number","number","number","bool"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:o,padToMaxOutputSize:i}=r,{boxes:u,scores:c}=n,l=t.dataIdMap.get(u.dataId).id,d=t.dataIdMap.get(c.dataId).id,p=Qe(l,d,s,a,o,i),{pSelectedIndices:h,selectedSize:f,pSelectedScores:m,pValidOutputs:b}=Xe(t,p);return t.wasm._free(m),[t.makeOutput([f],"int32",h),t.makeOutput([],"int32",b)]}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let et;const tt={kernelName:s.NonMaxSuppressionV5,backendName:"wasm",setupFunc:function(e){et=e.wasm.cwrap(s.NonMaxSuppressionV5,"number",["number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:o,softNmsSigma:i}=r,{boxes:u,scores:c}=n,l=t.dataIdMap.get(u.dataId).id,d=t.dataIdMap.get(c.dataId).id,p=et(l,d,s,a,o,i),{pSelectedIndices:h,selectedSize:f,pSelectedScores:m,pValidOutputs:b}=Xe(t,p);return t.wasm._free(b),[t.makeOutput([f],"int32",h),t.makeOutput([f],"float32",m)]}},nt=l(s.NotEqual,!1,"bool");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
let rt;const at={kernelName:s.OneHot,backendName:"wasm",setupFunc:function(e){rt=e.wasm.cwrap(s.OneHot,null,["number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:o,offValue:i}=r,u=n.makeOutput([...a.shape,s],"int32"),c=n.dataIdMap.get(u.dataId).id,l=n.dataIdMap.get(a.dataId).id;return rt(l,s,o,i,c),u}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const st={kernelName:s.OnesLike,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(1),r}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ot={kernelName:s.Pack,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return ue({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const o=t[0].shape,i=t[0].dtype;t.forEach((e=>{s.util.assertShapesMatch(o,e.shape,"All tensors passed to stack must have matching shapes"),s.util.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const u=[],c=z({inputs:t.map((e=>{const t=ue({inputs:{input:e},backend:n,attrs:{dim:a}});return u.push(t),t})),backend:n,attrs:{axis:a}});return u.forEach((e=>n.disposeData(e.dataId))),c}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let it;const ut={kernelName:s.PadV2,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n,attrs:{paddings:a,constantValue:o}}=e,i=a.map(((e,n)=>e[0]+t.shape[n]+e[1]));if(0===s.util.sizeFromShape(t.shape))return le({backend:n,attrs:{shape:i,value:o,dtype:t.dtype}});const u=n.dataIdMap.get(t.dataId).id,c=n.makeOutput(i,t.dtype),l=n.dataIdMap.get(c.dataId).id,d=new Uint8Array(new Int32Array(t.shape).buffer),p=a.map((e=>e[0])),h=a.map((e=>e[1])),f=new Uint8Array(new Int32Array(p).buffer),m=new Uint8Array(new Int32Array(h).buffer);return it(u,d,t.shape.length,r[t.dtype],f,m,o,l),c},setupFunc:function(e){it=e.wasm.cwrap(s.PadV2,null,["number","array","number","number","array","array","number","number"])}},ct=l(s.Pow,!1);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
let lt;const dt={kernelName:s.Prelu,backendName:"wasm",setupFunc:function(e){lt=e.wasm.cwrap(s.Prelu,null,["number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=n.dataIdMap.get(r.dataId).id,o=n.dataIdMap.get(a.dataId).id,i=n.makeOutput(r.shape,"float32"),u=n.dataIdMap.get(i.dataId).id;return lt(s,o,u),i}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let pt;const ht={kernelName:s.Prod,backendName:"wasm",setupFunc:function(e){pt=e.wasm.cwrap(s.Prod,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{axis:o,keepDims:i}=a,{x:u}=n,c=t.dataIdMap.get(u.dataId).id;let l=c,d=u;const{transposed:p,axes:h,originalAxes:f,inputWasTransposed:m}=v(u,o,t);let b=h;if(m){const e=t.dataIdMap.get(p.dataId).id;e!==c&&(d=p,l=e,b=s.backend_util.getInnerMostAxes(b.length,d.shape.length))}s.backend_util.assertAxesAreInnerMostDims("prod",b,d.shape.length);const[g,x]=s.backend_util.computeOutAndReduceShapes(d.shape,b),y=s.util.sizeFromShape(x),k=t.makeOutput(g,d.dtype);if(0!==s.util.sizeFromShape(d.shape)){const e=t.dataIdMap.get(k.dataId).id;pt(l,y,r[k.dtype],e)}if(m&&t.disposeData(p.dataId),i){const e=s.backend_util.expandShapeToKeepDim(k.shape,f);k.shape=e}return k}};var ft=n(73);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mt={kernelName:s.Range,backendName:"wasm",kernelFunc:e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:o}=n,i=Object(ft.a)(r,a,s,o),u=t.makeOutput([i.length],o);return t.typedArrayFromHeap(u).set(i),u}},bt=l(s.RealDiv,!0),gt=u(s.Relu),xt=u(s.Relu6);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
let vt;const yt={kernelName:s.ResizeBilinear,backendName:"wasm",setupFunc:function(e){vt=e.wasm.cwrap(s.ResizeBilinear,null,["number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{images:a}=n,{alignCorners:o,halfPixelCenters:i,size:u}=r,[c,l]=u,[d,p,h,f]=a.shape,m=[d,c,l,f];let b,g=t.dataIdMap.get(a.dataId);"float32"!==g.dtype&&(b=D({backend:t,inputs:{x:a},attrs:{dtype:"float32"}}),g=t.dataIdMap.get(b.dataId));const x=g.id,v=t.makeOutput(m,"float32");if(0===s.util.sizeFromShape(a.shape))return v;const y=t.dataIdMap.get(v.dataId).id;return vt(x,d,p,h,f,c,l,o?1:0,i?1:0,y),null!=b&&t.disposeData(b.dataId),v}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let kt;const wt={kernelName:s.Reverse,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:o}=r,i=s.util.parseAxisParam(o,a.shape);if(0===a.shape.length)return f({inputs:{x:a},backend:n});const u=n.makeOutput(a.shape,a.dtype),c=n.dataIdMap.get(a.dataId).id,l=n.dataIdMap.get(u.dataId).id,d=new Uint8Array(new Int32Array(i).buffer),p=new Uint8Array(new Int32Array(a.shape).buffer);kt(c,d,i.length,p,a.shape.length,l);const h=C({inputs:{x:u},attrs:{shape:a.shape},backend:n});return n.disposeData(u.dataId),h},setupFunc:function(e){kt=e.wasm.cwrap(s.Reverse,null,["number","array","number","array","number","number"])}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let It;const St={kernelName:s.RotateWithOffset,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{radians:o,fillValue:i,center:u}=r,c=n.makeOutput(a.shape,a.dtype),l=n.dataIdMap.get(a.dataId).id,d=n.dataIdMap.get(c.dataId).id,[p,h,f,m]=a.shape,[b,g]=s.backend_util.getImageCenter(u,h,f),x="number"==typeof i?[i,i,i,0===i?0:255]:[...i,255],v=new Uint8Array(new Int32Array(x).buffer);return It(l,p,h,f,m,o,b,g,v,x.length,d),c},setupFunc:function(e){It=e.wasm.cwrap(s.RotateWithOffset,null,["number","number","number","number","number","number","number","number","array","number","number"])}},_t=u(s.Round),Ot=u(s.Rsqrt);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
let Tt;const Ct={kernelName:s.ScatterNd,backendName:"wasm",setupFunc:function(e){Tt=e.wasm.cwrap(s.ScatterNd,null,["number","number","number","number","number","number","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{indices:o,updates:i}=n,{shape:u}=a,c=t.makeOutput(u,i.dtype);if(0===s.util.sizeFromShape(u))return c;const{sliceRank:l,numUpdates:d,sliceSize:p,strides:h,outputSize:f}=s.scatter_util.calculateShapes(i,o,u),m=t.dataIdMap.get(o.dataId).id,b=t.dataIdMap.get(i.dataId).id,g=new Uint8Array(new Int32Array(h).buffer),x=t.dataIdMap.get(c.dataId).id;return Tt(m,b,r[i.dtype],l,d,p,g,f,x),c}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let $t;const Et={kernelName:s.Select,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:o}=t,i=n.dataIdMap.get(r.dataId).id,u=n.dataIdMap.get(a.dataId).id,c=n.dataIdMap.get(o.dataId).id,l=n.makeOutput(a.shape,a.dtype),d=n.dataIdMap.get(l.dataId).id,p=r.shape.length,h=a.shape.length,f=0===p||p>1||1===h?1:s.util.sizeFromShape(a.shape.slice(1));return $t(i,u,c,f,d),l},setupFunc:function(e){$t=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let At;const Nt={kernelName:"Sigmoid",backendName:"wasm",setupFunc:function(e){At=e.wasm.cwrap(s.Sigmoid,null,["number","number"])},kernelFunc:function(e){const{backend:t,inputs:{x:n}}=e,r=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),o=t.dataIdMap.get(a.dataId).id;return 0===s.util.sizeFromShape(a.shape)||At(r,o),a}},Rt=u(s.Sin);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
let Ft;const Mt={kernelName:s.Softmax,backendName:"wasm",setupFunc:function(e){Ft=e.wasm.cwrap(s.Softmax,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:{logits:n},attrs:{dim:r}}=e,a=t.dataIdMap.get(n.dataId).id,o=t.makeOutput(n.shape,n.dtype),i=t.dataIdMap.get(o.dataId).id,u=n.shape[r],c=s.util.sizeFromShape(n.shape)/u;return 0===s.util.sizeFromShape(o.shape)||Ft(a,i,u,c),o}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dt={kernelName:s.SpaceToBatchND,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:o,paddings:i}=r,u=s.util.sizeFromShape(o),c=[[0,0]];c.push(...i);for(let e=1+o.length;e<a.shape.length;++e)c.push([0,0]);const l=ut.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:c,constantValue:0}}),d=s.backend_util.getReshaped(l.shape,o,u,!1),p=s.backend_util.getPermuted(d.length,o.length,!1),h=s.backend_util.getReshapedPermuted(l.shape,o,u,!1),f=C({inputs:{x:l},backend:n,attrs:{shape:d}}),m=g({inputs:{x:f},backend:n,attrs:{perm:p}}),b=C({inputs:{x:m},backend:n,attrs:{shape:h}});return n.disposeData(l.dataId),n.disposeData(f.dataId),n.disposeData(m.dataId),b}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jt={kernelName:s.SplitV,backendName:"wasm",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{numOrSizeSplits:o,axis:i}=n,u=s.util.parseAxisParam(i,a.shape)[0],c=s.backend_util.prepareSplitSize(a,o,u),l=new Array(a.shape.length).fill(0),d=a.shape.slice();return c.map((e=>{const t=[...d];t[u]=e;const n=R({inputs:{x:a},attrs:{begin:l,size:t},backend:r});return l[u]+=e,n}))}},Pt=u(s.Sqrt),Bt=u(s.Square),Lt=l(s.SquaredDifference,!0);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
let Wt;const zt={kernelName:s.Step,backendName:"wasm",setupFunc:function(e){Wt=e.wasm.cwrap(s.Step,null,["number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{alpha:a}=r,{x:s}=n,o=t.dataIdMap.get(s.dataId).id,i=t.makeOutput(s.shape,s.dtype),u=t.dataIdMap.get(i.dataId).id;return Wt(o,a,u),i}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Ut;const Vt={kernelName:s.StridedSlice,backendName:"wasm",setupFunc:function(e){Ut=e.wasm.cwrap(s.StridedSlice,null,["number","array","number","array","array","array","array","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{x:a}=n;let{begin:o,end:i,strides:u}=r;null==u&&(u=new Array(o.length));const{beginMask:c,endMask:l,ellipsisMask:d,newAxisMask:p,shrinkAxisMask:h}=r,f=s.backend_util.slice_util.maskToAxes(d);if(f.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==d&&0!==p)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==d&&0!==h)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const m=a.shape.length-o.length,b=s.backend_util.slice_util.maskToAxes(p),g=a.shape.slice();b.forEach((e=>{o[e]=0,i[e]=1,g.splice(e,0,1)}));const x=C({inputs:{x:a},attrs:{shape:g},backend:t}),{begin:v,end:y,strides:k}=s.backend_util.slice_util.getNormalizedAxes(x.shape,f,m,o,i,u,c,l,d);o=v,i=y,u=k;const w=s.backend_util.slice_util.maskToAxes(h);w.forEach((e=>{i[e]=o[e]+1,u[e]=1}));const I=s.backend_util.slice_util.computeOutShape(o,i,u),S=I.filter(((e,t)=>-1===w.indexOf(t)));if(u.every((e=>1===e))){const e=R({inputs:{x:x},attrs:{begin:o,size:I},backend:t});t.disposeData(x.dataId);const n=C({inputs:{x:e},attrs:{shape:S},backend:t});return t.disposeData(e.dataId),n}const _=t.makeOutput(S,"float32");if(!S.some((e=>0===e))){const e=t.dataIdMap.get(x.dataId).id,n=new Uint8Array(new Int32Array(s.util.computeStrides(x.shape)).buffer),r=new Uint8Array(new Int32Array(o).buffer),a=new Uint8Array(new Int32Array(i).buffer),c=new Uint8Array(new Int32Array(u).buffer),l=new Uint8Array(new Int32Array(S).buffer),d=new Uint8Array(new Int32Array(s.util.computeStrides(S)).buffer),p=t.dataIdMap.get(_.dataId).id;Ut(e,n,x.shape.length,r,a,c,l,d,S.length,p)}t.disposeData(x.dataId);const O=C({inputs:{x:_},attrs:{shape:S},backend:t});return t.disposeData(_.dataId),O}},Gt=l(s.Sub,!0);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
let Ht;const qt={kernelName:s.Sum,backendName:"wasm",setupFunc:function(e){Ht=e.wasm.cwrap(s.Sum,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:o}=r,{x:i}=n,u=t.dataIdMap.get(i.dataId).id;let c=u,l=i;const{transposed:d,axes:p,originalAxes:h,inputWasTransposed:f}=v(i,a,t);let m=p;if(f){const e=t.dataIdMap.get(d.dataId).id;e!==u&&(l=d,c=e,m=s.backend_util.getInnerMostAxes(m.length,l.shape.length))}s.backend_util.assertAxesAreInnerMostDims("sum",m,l.shape.length);const[b,g]=s.backend_util.computeOutAndReduceShapes(l.shape,m),x=s.util.sizeFromShape(g),y=t.makeOutput(b,l.dtype);if(0!==s.util.sizeFromShape(l.shape)){const e=t.dataIdMap.get(y.dataId).id;Ht(c,x,e)}if(f&&t.disposeData(d.dataId),o){const e=s.backend_util.expandShapeToKeepDim(y.shape,h);y.shape=e}return y}},Kt=u(s.Tan),Xt=u(s.Tanh);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
let Yt;const Zt={kernelName:s.Tile,backendName:"wasm",setupFunc:function(e){Yt=e.wasm.cwrap(s.Tile,null,["number","array","number","array","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,o=n.dataIdMap.get(s.dataId).id,{reps:i}=a,u=new Array(s.shape.length);for(let e=0;e<u.length;e++)u[e]=s.shape[e]*i[e];const c=new Uint8Array(new Int32Array(s.shape).buffer),l=new Uint8Array(new Int32Array(u).buffer),d=n.makeOutput(u,s.dtype),p=n.dataIdMap.get(d.dataId).id;return Yt(o,c,s.shape.length,l,u.length,r[d.dtype],p),d}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Qt;const Jt={kernelName:s.TopK,backendName:"wasm",setupFunc:function(e){Qt=e.wasm.cwrap(s.TopK,null,["number","array","number","number","number","bool","number","number"])},kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a}=e,{k:s,sorted:o}=n,i=t.dataIdMap.get(a.dataId).id,u=new Uint8Array(new Int32Array(a.shape).buffer),c=a.shape.slice();c[c.length-1]=s;const l=t.makeOutput(c,a.dtype),d=t.dataIdMap.get(l.dataId).id,p=t.makeOutput(c,"int32"),h=t.dataIdMap.get(p.dataId).id;return Qt(i,u,a.shape.length,r[a.dtype],s,o,d,h),[l,p]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
let en;const tn={kernelName:s.Transform,backendName:"wasm",setupFunc:function(e){en=e.wasm.cwrap(s.Transform,null,["number","number","bool","number","number","number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{image:a,transforms:o}=n,{interpolation:i,fillMode:u,fillValue:c,outputShape:l}=r,[d,p,h,f]=a.shape,[m,b]=null!=l?l:[p,h],g=[d,m,b,f],x=new Uint8Array(new Int32Array(s.util.computeStrides(a.shape)).buffer),v=t.makeOutput(g,a.dtype),y=t.dataIdMap.get(v.dataId).id,k=t.dataIdMap.get(a.dataId).id,w=t.dataIdMap.get(o.dataId).id,I="nearest"===i?1:2;let S;switch(u){default:S=1;break;case"reflect":S=2;break;case"wrap":S=3;break;case"nearest":S=4}return en(k,w,o.shape[0]>1,d,m,b,f,h,p,x,a.shape.length-1,I,S,c,y),v}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nn={kernelName:s.Unpack,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const o=a.shape[s],i=a.shape.length,u=new Array(i-1);let c=0;for(let e=0;e<i;e++)e!==s&&(u[c++]=a.shape[e]);const l=new Array(o),d=new Array(i).fill(0),p=a.shape.slice();p[s]=1;for(let e=0;e<l.length;e++)d[s]=e,l[e]=R({inputs:{x:a},attrs:{begin:d,size:p},backend:n});return l.map((({dataId:e,dtype:t})=>({dataId:e,dtype:t,shape:u})))}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rn={kernelName:s.ZerosLike,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(0),r}},an=[c,d,h,k,I,_,T,A,M,j,P,L,U,G,q,K,X,Q,ee,ne,ae,se,oe,ie,ce,de,he,fe,me,i,ge,ve,ke,Ie,_e,Oe,Te,m,$e,Ee,Ae,Ne,Re,Me,De,Pe,Le,ze,Ue,He,qe,Ke,Ze,Je,tt,nt,at,st,ot,ut,ct,dt,ht,mt,bt,gt,xt,$,yt,wt,St,Ot,_t,Ct,Et,Nt,Rt,F,Mt,Dt,jt,Pt,Bt,Lt,zt,Vt,Gt,qt,Kt,Xt,Zt,Jt,tn,x,nn,rn];
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */for(const e of an)Object(s.registerKernel)(e);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sn=Object(s.env)();sn.registerFlag("WASM_HAS_SIMD_SUPPORT",(async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])))),sn.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",(async()=>{if(sn.get("IS_NODE"))return!1;try{return(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(e){return!1}}));var on=n(92),un=n.n(on);var cn=n(97),ln=n.n(cn);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class dn extends s.KernelBackend{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.init(),this.dataIdMap=new s.DataStorage(this,Object(s.engine)())}write(e,t,n){const r={id:this.dataIdNextNumber++};return this.move(r,e,t,n,1),r}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){const t=s.util.now();e();return{kernelMs:s.util.now()-t}}move(e,t,n,r,a){const o=this.dataIdNextNumber++;if("string"===r){const s=t;return void this.dataIdMap.set(e,{id:o,stringBytes:s,shape:n,dtype:r,memoryOffset:null,refCount:a})}const i=s.util.sizeFromShape(n),u=i*s.util.bytesPerElement(r),c=this.wasm._malloc(u);this.dataIdMap.set(e,{id:o,memoryOffset:c,shape:n,dtype:r,refCount:a}),this.wasm.tfjs.registerTensor(o,i,c),null!=t&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,u),c)}async read(e){return this.readSync(e)}readSync(e){const{memoryOffset:t,dtype:n,shape:r,stringBytes:a}=this.dataIdMap.get(e);if("string"===n)return a;return function(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}(this.wasm.HEAPU8.slice(t,t+s.util.sizeFromShape(r)*s.util.bytesPerElement(n)).buffer,n)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){const n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){if(this.dataIdMap.has(e)){return this.dataIdMap.get(e).refCount}return 0}incRef(e){const t=this.dataIdMap.get(e);null!=t&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let r;if(null==n)r=this.write(null,e,t);else{const a=this.dataIdNextNumber++;r={id:a},this.dataIdMap.set(r,{id:a,memoryOffset:n,shape:e,dtype:t,refCount:1});const o=s.util.sizeFromShape(e);this.wasm.tfjs.registerTensor(a,o,n)}return{dataId:r,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){const r=this.wasm.HEAPU8.buffer,{memoryOffset:a}=this.dataIdMap.get(n),o=s.util.sizeFromShape(e);switch(t){case"float32":return new Float32Array(r,a,o);case"int32":return new Int32Array(r,a,o);case"bool":return new Uint8Array(r,a,o);default:throw new Error(`Unknown dtype ${t}`)}}}function pn(e,t,n){if(null!=mn)return mn;let r="tfjs-backend-wasm.wasm";return e&&t?r="tfjs-backend-wasm-threaded-simd.wasm":e&&(r="tfjs-backend-wasm-simd.wasm"),null!=gn&&null!=gn[r]?gn[r]:n+r}async function hn(){const[e,t]=await Promise.all([Object(s.env)().getAsync("WASM_HAS_SIMD_SUPPORT"),Object(s.env)().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise(((n,r)=>{const a={};var o;a.locateFile=(n,r)=>{if(n.endsWith(".worker.js")){const e=new Blob(['var Module={};function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;this.alert=threadAlert;Module["instantiateWasm"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module["wasmModule"],info);Module["wasmModule"]=null;receiveInstance(instance);return instance.exports};function moduleLoaded(){}this.onmessage=function(e){try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance;moduleLoaded()})}else if(e.data.cmd==="objectTransfer"){Module["PThread"].receiveObjectTransfer(e.data)}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0);var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module["establishStackSpace"](top,max);Module["_emscripten_tls_init"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].setThreadStatus(Module["_pthread_self"](),1);try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(!Module["getNoExitRuntime"]())Module["PThread"].threadExit(result)}catch(ex){if(ex==="Canceled!"){Module["PThread"].threadCancel()}else if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["getNoExitRuntime"]()){}else{Module["PThread"].threadExit(ex.status)}}else{Module["PThread"].threadExit(-2);throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["PThread"].threadCancel()}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);throw ex}};if(typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string"){self={location:{href:__filename}};var onmessage=this.onmessage;var nodeWorkerThreads=require("worker_threads");global.Worker=nodeWorkerThreads.Worker;var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var nodeFS=require("fs");var nodeRead=function(filename){return nodeFS.readFileSync(filename,"utf8")};function globalEval(x){global.require=require;global.Module=Module;eval.call(null,x)}importScripts=function(f){globalEval(nodeRead(f))};postMessage=function(msg){parentPort.postMessage(msg)};if(typeof performance==="undefined"){performance={now:function(){return Date.now()}}}}'],{type:"application/javascript"});return URL.createObjectURL(e)}return n.endsWith(".wasm")?pn(e,t,null!=bn?bn:r):r+n},vn&&(a.instantiateWasm=(o=pn(e,t,null!=bn?bn:""),(e,t)=>(s.util.fetch(o,{credentials:"same-origin"}).then((n=>{n.ok||e.env.a(`failed to load wasm binary file at '${o}'`),n.arrayBuffer().then((n=>{WebAssembly.instantiate(n,e).then((e=>{t(e.instance,e.module)}))}))})),{})));let i,u=!1;a.onAbort=()=>{if(u)return;if(xn)return;xn=!0;r({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"})},t&&e&&null==mn?(a.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+un.a.toString()],{type:"text/javascript"}),i=un()(a)):i=ln()(a),i.then((e=>{u=!0,xn=!1;e.tfjs={init:e.cwrap("init",null,[]),registerTensor:e.cwrap("register_tensor",null,["number","number","number"]),disposeData:e.cwrap("dispose_data",null,["number"]),dispose:e.cwrap("dispose",null,[])},n({wasm:e})}))}))}const fn=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"];let mn=null,bn=null,gn={},xn=!1,vn=!1;function yn(e,t=!1){if(xn)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if("string"==typeof e)bn=e;else{gn=e;const t=fn.filter((e=>null==gn[e]));if(t.length>0)throw new Error(`There were no entries found for the following binaries: ${t.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}vn=t}Object(s.registerBackend)("wasm",(async()=>{const{wasm:e}=await hn();return new dn(e)}),2)},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(45);class a{constructor(){}createContext(e={}){return new r.a(e)}}},function(e,t){e.exports=r;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function r(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function a(e){return!0===(e&&e.__isLong__)}r.prototype.__isLong__,Object.defineProperty(r.prototype,"__isLong__",{value:!0}),r.isLong=a;var s={},o={};function i(e,t){var n,r,a;return t?(a=0<=(e>>>=0)&&e<256)&&(r=o[e])?r:(n=c(e,(0|e)<0?-1:0,!0),a&&(o[e]=n),n):(a=-128<=(e|=0)&&e<128)&&(r=s[e])?r:(n=c(e,e<0?-1:0,!1),a&&(s[e]=n),n)}function u(e,t){if(isNaN(e))return t?x:g;if(t){if(e<0)return x;if(e>=f)return I}else{if(e<=-m)return S;if(e+1>=m)return w}return e<0?u(-e,t).neg():c(e%h|0,e/h|0,t)}function c(e,t,n){return new r(e,t,n)}r.fromInt=i,r.fromNumber=u,r.fromBits=c;var l=Math.pow;function d(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return d(e.substring(1),t,n).neg();for(var a=u(l(n,8)),s=g,o=0;o<e.length;o+=8){var i=Math.min(8,e.length-o),c=parseInt(e.substring(o,o+i),n);if(i<8){var p=u(l(n,i));s=s.mul(p).add(u(c))}else s=(s=s.mul(a)).add(u(c))}return s.unsigned=t,s}function p(e,t){return"number"==typeof e?u(e,t):"string"==typeof e?d(e,t):c(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}r.fromString=d,r.fromValue=p;var h=4294967296,f=h*h,m=f/2,b=i(1<<24),g=i(0);r.ZERO=g;var x=i(0,!0);r.UZERO=x;var v=i(1);r.ONE=v;var y=i(1,!0);r.UONE=y;var k=i(-1);r.NEG_ONE=k;var w=c(-1,2147483647,!1);r.MAX_VALUE=w;var I=c(-1,-1,!0);r.MAX_UNSIGNED_VALUE=I;var S=c(0,-2147483648,!1);r.MIN_VALUE=S;var _=r.prototype;_.toInt=function(){return this.unsigned?this.low>>>0:this.low},_.toNumber=function(){return this.unsigned?(this.high>>>0)*h+(this.low>>>0):this.high*h+(this.low>>>0)},_.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(S)){var t=u(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var a=u(l(e,6),this.unsigned),s=this,o="";;){var i=s.div(a),c=(s.sub(i.mul(a)).toInt()>>>0).toString(e);if((s=i).isZero())return c+o;for(;c.length<6;)c="0"+c;o=""+c+o}},_.getHighBits=function(){return this.high},_.getHighBitsUnsigned=function(){return this.high>>>0},_.getLowBits=function(){return this.low},_.getLowBitsUnsigned=function(){return this.low>>>0},_.getNumBitsAbs=function(){if(this.isNegative())return this.eq(S)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},_.isZero=function(){return 0===this.high&&0===this.low},_.eqz=_.isZero,_.isNegative=function(){return!this.unsigned&&this.high<0},_.isPositive=function(){return this.unsigned||this.high>=0},_.isOdd=function(){return 1==(1&this.low)},_.isEven=function(){return 0==(1&this.low)},_.equals=function(e){return a(e)||(e=p(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&(this.high===e.high&&this.low===e.low)},_.eq=_.equals,_.notEquals=function(e){return!this.eq(e)},_.neq=_.notEquals,_.ne=_.notEquals,_.lessThan=function(e){return this.comp(e)<0},_.lt=_.lessThan,_.lessThanOrEqual=function(e){return this.comp(e)<=0},_.lte=_.lessThanOrEqual,_.le=_.lessThanOrEqual,_.greaterThan=function(e){return this.comp(e)>0},_.gt=_.greaterThan,_.greaterThanOrEqual=function(e){return this.comp(e)>=0},_.gte=_.greaterThanOrEqual,_.ge=_.greaterThanOrEqual,_.compare=function(e){if(a(e)||(e=p(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},_.comp=_.compare,_.negate=function(){return!this.unsigned&&this.eq(S)?S:this.not().add(v)},_.neg=_.negate,_.add=function(e){a(e)||(e=p(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,s=65535&this.low,o=e.high>>>16,i=65535&e.high,u=e.low>>>16,l=0,d=0,h=0,f=0;return h+=(f+=s+(65535&e.low))>>>16,d+=(h+=r+u)>>>16,l+=(d+=n+i)>>>16,l+=t+o,c((h&=65535)<<16|(f&=65535),(l&=65535)<<16|(d&=65535),this.unsigned)},_.subtract=function(e){return a(e)||(e=p(e)),this.add(e.neg())},_.sub=_.subtract,_.multiply=function(e){if(this.isZero())return g;if(a(e)||(e=p(e)),n)return c(n.mul(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(S))return e.isOdd()?S:g;if(e.eq(S))return this.isOdd()?S:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(b)&&e.lt(b))return u(this.toNumber()*e.toNumber(),this.unsigned);var t=this.high>>>16,r=65535&this.high,s=this.low>>>16,o=65535&this.low,i=e.high>>>16,l=65535&e.high,d=e.low>>>16,h=65535&e.low,f=0,m=0,x=0,v=0;return x+=(v+=o*h)>>>16,m+=(x+=s*h)>>>16,x&=65535,m+=(x+=o*d)>>>16,f+=(m+=r*h)>>>16,m&=65535,f+=(m+=s*d)>>>16,m&=65535,f+=(m+=o*l)>>>16,f+=t*h+r*d+s*l+o*i,c((x&=65535)<<16|(v&=65535),(f&=65535)<<16|(m&=65535),this.unsigned)},_.mul=_.multiply,_.divide=function(e){if(a(e)||(e=p(e)),e.isZero())throw Error("division by zero");var t,r,s;if(n)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?c((this.unsigned?n.div_u:n.div_s)(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?x:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return x;if(e.gt(this.shru(1)))return y;s=x}else{if(this.eq(S))return e.eq(v)||e.eq(k)?S:e.eq(S)?v:(t=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?v:k:(r=this.sub(e.mul(t)),s=t.add(r.div(e)));if(e.eq(S))return this.unsigned?x:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=g}for(r=this;r.gte(e);){t=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var o=Math.ceil(Math.log(t)/Math.LN2),i=o<=48?1:l(2,o-48),d=u(t),h=d.mul(e);h.isNegative()||h.gt(r);)h=(d=u(t-=i,this.unsigned)).mul(e);d.isZero()&&(d=v),s=s.add(d),r=r.sub(h)}return s},_.div=_.divide,_.modulo=function(e){return a(e)||(e=p(e)),n?c((this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},_.mod=_.modulo,_.rem=_.modulo,_.not=function(){return c(~this.low,~this.high,this.unsigned)},_.and=function(e){return a(e)||(e=p(e)),c(this.low&e.low,this.high&e.high,this.unsigned)},_.or=function(e){return a(e)||(e=p(e)),c(this.low|e.low,this.high|e.high,this.unsigned)},_.xor=function(e){return a(e)||(e=p(e)),c(this.low^e.low,this.high^e.high,this.unsigned)},_.shiftLeft=function(e){return a(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?c(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):c(0,this.low<<e-32,this.unsigned)},_.shl=_.shiftLeft,_.shiftRight=function(e){return a(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?c(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):c(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},_.shr=_.shiftRight,_.shiftRightUnsigned=function(e){if(a(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?c(this.low>>>e|t<<32-e,t>>>e,this.unsigned):c(32===e?t:t>>>e-32,0,this.unsigned)},_.shru=_.shiftRightUnsigned,_.shr_u=_.shiftRightUnsigned,_.toSigned=function(){return this.unsigned?c(this.low,this.high,!1):this},_.toUnsigned=function(){return this.unsigned?this:c(this.low,this.high,!0)},_.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},_.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},_.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},r.fromBytes=function(e,t,n){return n?r.fromBytesLE(e,t):r.fromBytesBE(e,t)},r.fromBytesLE=function(e,t){return new r(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},r.fromBytesBE=function(e,t){return new r(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},function(e,t,n){(function(t,r,a,s){var o,i=(o=(o="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||t,function(e){function t(){return F.buffer!=j&&te(F.buffer),P}function i(){return F.buffer!=j&&te(F.buffer),B}function u(){return F.buffer!=j&&te(F.buffer),L}function c(){return F.buffer!=j&&te(F.buffer),W}function l(){return F.buffer!=j&&te(F.buffer),z}var d,p,h="undefined"!=typeof(e=e||{})?e:{};h.ready=new Promise((function(e,t){d=e,p=t}));var f,m={};for(f in h)h.hasOwnProperty(f)&&(m[f]=h[f]);var b=[],g=function(e,t){throw t},x=!1,v=!1,y=!1,k=!1;x="object"==typeof window,v="function"==typeof importScripts,y="object"==typeof r&&"object"==typeof r.versions&&"string"==typeof r.versions.node,k=!x&&!y&&!v;var w=h.ENVIRONMENT_IS_PTHREAD||!1;w&&(j=h.buffer);var I,S,_,O,T,C="";function $(e){return h.locateFile?h.locateFile(e,C):C+e}if(y){var E;C=v?n(48).dirname(C)+"/":a+"/",I=function(e,t){return O||(O=n(88)),T||(T=n(48)),e=T.normalize(e),O.readFileSync(e,t?null:"utf8")},_=function(e){var t=I(e,!0);return t.buffer||(t=new Uint8Array(t)),V(t.buffer),t},r.argv.length>1&&r.argv[1].replace(/\\/g,"/"),b=r.argv.slice(2),r.on("uncaughtException",(function(e){if(!(e instanceof ln))throw e})),r.on("unhandledRejection",ke),g=function(e){r.exit(e)},h.inspect=function(){return"[Emscripten Module object]"};try{E=n(120)}catch(e){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),e}s.Worker=E.Worker}else k?("undefined"!=typeof read&&(I=function(e){return read(e)}),_=function(e){var t;return"function"==typeof readbuffer?new Uint8Array(readbuffer(e)):(V("object"==typeof(t=read(e,"binary"))),t)},"undefined"!=typeof scriptArgs?b=scriptArgs:"undefined"!=typeof arguments&&(b=arguments),"function"==typeof quit&&(g=function(e){quit(e)}),"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)):(x||v)&&(v?C=self.location.href:"undefined"!=typeof document&&document.currentScript&&(C=document.currentScript.src),"undefined"!=typeof o&&o&&(C=o),C=0!==C.indexOf("blob:")?C.substr(0,C.lastIndexOf("/")+1):"",y?(I=function(e,t){return O||(O=n(88)),T||(T=n(48)),e=T.normalize(e),O.readFileSync(e,t?null:"utf8")},_=function(e){var t=I(e,!0);return t.buffer||(t=new Uint8Array(t)),V(t.buffer),t}):(I=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},v&&(_=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),S=function(e,t,n){var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)}));y&&"undefined"==typeof performance&&(s.performance=n(121).performance);var A,N=h.print||console.log.bind(console),R=h.printErr||console.warn.bind(console);for(f in m)m.hasOwnProperty(f)&&(h[f]=m[f]);m=null,h.arguments&&(b=h.arguments),h.thisProgram&&h.thisProgram,h.quit&&(g=h.quit),Atomics.load,Atomics.store,Atomics.compareExchange,h.wasmBinary&&(A=h.wasmBinary);var F,M,D=h.noExitRuntime||!0;"object"!=typeof WebAssembly&&ke("no native wasm support detected");var j,P,B,L,W,z,U=!1;function V(e,t){e||ke("Assertion failed: "+t)}function G(e){var t=h["_"+e];return V(t,"Cannot call unknown function "+e+", make sure it is exported"),t}function H(e,t,n,r,a){var s={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);Z(e,t=an(n),n)}return t},array:function(e){var t=an(e.length);return J(e,t),t}},o=G(e),i=[],u=0;if(r)for(var c=0;c<r.length;c++){var l=s[n[c]];l?(0===u&&(u=nn()),i[c]=l(r[c])):i[c]=r[c]}var d=o.apply(null,i);return d=function(e){return"string"===t?X(e):"boolean"===t?Boolean(e):e}(d),0!==u&&rn(u),d}function q(e,t,n,r){var a=(n=n||[]).every((function(e){return"number"===e}));return"string"!==t&&a&&!r?G(e):function(){return H(e,t,n,arguments)}}function K(e,t,n){for(var r=t+n,a="";!(t>=r);){var s=e[t++];if(!s)return a;if(128&s){var o=63&e[t++];if(192!=(224&s)){var i=63&e[t++];if((s=224==(240&s)?(15&s)<<12|o<<6|i:(7&s)<<18|o<<12|i<<6|63&e[t++])<65536)a+=String.fromCharCode(s);else{var u=s-65536;a+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else a+=String.fromCharCode((31&s)<<6|o)}else a+=String.fromCharCode(s)}return a}function X(e,t){return e?K(i(),e,t):""}function Y(e,t,n,r){if(!(r>0))return 0;for(var a=n,s=n+r-1,o=0;o<e.length;++o){var i=e.charCodeAt(o);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++o)),i<=127){if(n>=s)break;t[n++]=i}else if(i<=2047){if(n+1>=s)break;t[n++]=192|i>>6,t[n++]=128|63&i}else if(i<=65535){if(n+2>=s)break;t[n++]=224|i>>12,t[n++]=128|i>>6&63,t[n++]=128|63&i}else{if(n+3>=s)break;t[n++]=240|i>>18,t[n++]=128|i>>12&63,t[n++]=128|i>>6&63,t[n++]=128|63&i}}return t[n]=0,n-a}function Z(e,t,n){return Y(e,i(),t,n)}function Q(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);r>=55296&&r<=57343&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),r<=127?++t:t+=r<=2047?2:r<=65535?3:4}return t}function J(e,n){t().set(e,n)}function ee(e,t){return e%t>0&&(e+=t-e%t),e}function te(e){j=e,h.HEAP8=P=new Int8Array(e),h.HEAP16=new Int16Array(e),h.HEAP32=L=new Int32Array(e),h.HEAPU8=B=new Uint8Array(e),h.HEAPU16=new Uint16Array(e),h.HEAPU32=W=new Uint32Array(e),h.HEAPF32=new Float32Array(e),h.HEAPF64=z=new Float64Array(e)}var ne,re=h.INITIAL_MEMORY||16777216;if(w)F=h.wasmMemory,j=h.buffer;else if(h.wasmMemory)F=h.wasmMemory;else if(!((F=new WebAssembly.Memory({initial:re/65536,maximum:32768,shared:!0})).buffer instanceof SharedArrayBuffer))throw R("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),y&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");F&&(j=F.buffer),re=j.byteLength,te(j);var ae=[],se=[],oe=[],ie=[],ue=[];function ce(){if(!w){if(h.preRun)for("function"==typeof h.preRun&&(h.preRun=[h.preRun]);h.preRun.length;)fe(h.preRun.shift());Re(ae)}}function le(){w||Re(se)}function de(){w||Re(oe)}function pe(){}function he(){if(!w){if(h.postRun)for("function"==typeof h.postRun&&(h.postRun=[h.postRun]);h.postRun.length;)me(h.postRun.shift());Re(ue)}}function fe(e){ae.unshift(e)}function me(e){ue.unshift(e)}w||se.push({func:function(){zt()}});var be=0,ge=null,xe=null;function ve(e){V(!w,"addRunDependency cannot be used in a pthread worker"),be++,h.monitorRunDependencies&&h.monitorRunDependencies(be)}function ye(e){if(be--,h.monitorRunDependencies&&h.monitorRunDependencies(be),0==be&&(null!==ge&&(clearInterval(ge),ge=null),xe)){var t=xe;xe=null,t()}}function ke(e){h.onAbort&&h.onAbort(e),w&&console.error("Pthread aborting at "+(new Error).stack),R(e+=""),U=!0,e="abort("+e+"). Build with -s ASSERTIONS=1 for more info.";var t=new WebAssembly.RuntimeError(e);throw p(t),t}function we(e,t){return String.prototype.startsWith?e.startsWith(t):0===e.indexOf(t)}h.preloadedImages={},h.preloadedAudios={};var Ie="data:application/octet-stream;base64,";function Se(e){return we(e,Ie)}var _e="file://";function Oe(e){return we(e,_e)}var Te="tfjs-backend-wasm-threaded-simd.wasm";function Ce(e){try{if(e==Te&&A)return new Uint8Array(A);if(_)return _(e);throw"both async and sync fetching of the wasm failed"}catch(e){ke(e)}}function $e(){if(!A&&(x||v)){if("function"==typeof fetch&&!Oe(Te))return fetch(Te,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+Te+"'";return e.arrayBuffer()})).catch((function(){return Ce(Te)}));if(S)return new Promise((function(e,t){S(Te,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return Ce(Te)}))}function Ee(){var e={a:Wt};function t(e,t){var n=e.exports;if(h.asm=n,ne=h.asm.F,M=t,!w){var r=Be.unusedWorkers.length;Be.unusedWorkers.forEach((function(e){Be.loadWasmModuleToWorker(e,(function(){--r||ye()}))}))}}function n(e){t(e.instance,e.module)}function r(t){return $e().then((function(t){return WebAssembly.instantiate(t,e)})).then(t,(function(e){R("failed to asynchronously prepare wasm: "+e),ke(e)}))}if(w||ve(),h.instantiateWasm)try{return h.instantiateWasm(e,t)}catch(e){return R("Module.instantiateWasm callback failed with error: "+e),!1}return(A||"function"!=typeof WebAssembly.instantiateStreaming||Se(Te)||Oe(Te)||"function"!=typeof fetch?r(n):fetch(Te,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){return R("wasm streaming compile failed: "+e),R("falling back to ArrayBuffer instantiation"),r(n)}))}))).catch(p),{}}Se(Te)||(Te=$(Te));var Ae={10024:function(){throw"Canceled!"},10042:function(e,t){setTimeout((function(){Zt(e,t)}),0)}};function Ne(){Be.initRuntime()}function Re(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?ne.get(n)():ne.get(n)(t.arg):n(void 0===t.arg?null:t.arg)}else t(h)}}function Fe(e,n){if(e<=0||e>t().length||!0&e||n<0)return-28;if(0==n)return 0;n>=2147483647&&(n=1/0);var r=Atomics.load(u(),cn>>2),a=0;if(r==e&&Atomics.compareExchange(u(),cn>>2,r,0)==r&&(a=1,--n<=0))return 1;var s=Atomics.notify(u(),e>>2,n);if(s>=0)return s+a;throw"Atomics.notify returned an unexpected value "+s}function Me(e){if(w)throw"Internal Error! killThread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in killThread!";u()[e+12>>2]=0;var t=Be.pthreads[e];t.worker.terminate(),Be.freeThreadData(t),Be.runningWorkers.splice(Be.runningWorkers.indexOf(t.worker),1),t.worker.pthread=void 0}function De(e){if(w)throw"Internal Error! cancelThread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in cancelThread!";Be.pthreads[e].worker.postMessage({cmd:"cancel"})}function je(e){if(w)throw"Internal Error! cleanupThread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in cleanupThread!";var t=Be.pthreads[e];if(t){u()[e+12>>2]=0;var n=t.worker;Be.returnWorkerToPool(n)}}h._emscripten_futex_wake=Fe;var Pe,Be={unusedWorkers:[],runningWorkers:[],initMainThreadBlock:function(){for(var e=Math.min(4,Math.max(1,(navigator.hardwareConcurrency||1)/2)),t=0;t<e;++t)Be.allocateUnusedWorker()},initRuntime:function(){for(var e=Ut(228),t=0;t<57;++t)c()[e/4+t]=0;u()[e+12>>2]=e;var n=e+152;u()[n>>2]=n;var r=Ut(512);for(t=0;t<128;++t)c()[r/4+t]=0;Atomics.store(c(),e+100>>2,r),Atomics.store(c(),e+40>>2,e),tn(e,!v,1),Yt(e)},initWorker:function(){},pthreads:{},threadExitHandlers:[],setThreadStatus:function(){},runExitHandlers:function(){for(;Be.threadExitHandlers.length>0;)Be.threadExitHandlers.pop()();w&&qt()&&Kt()},runExitHandlersAndDeinitThread:function(e,t){Atomics.store(c(),e+56>>2,1),Atomics.store(c(),e+60>>2,0),Be.runExitHandlers(),Atomics.store(c(),e+4>>2,t),Atomics.store(c(),e+0>>2,1),Fe(e+0,2147483647),tn(0,0,0)},threadExit:function(e){var t=qt();t&&(Be.runExitHandlersAndDeinitThread(t,e),w&&postMessage({cmd:"exit"}))},threadCancel:function(){Be.runExitHandlersAndDeinitThread(qt(),-1),postMessage({cmd:"cancelDone"})},terminateAllThreads:function(){for(var e in Be.pthreads)(r=Be.pthreads[e])&&r.worker&&Be.returnWorkerToPool(r.worker);Be.pthreads={};for(var t=0;t<Be.unusedWorkers.length;++t)(n=Be.unusedWorkers[t]).terminate();for(Be.unusedWorkers=[],t=0;t<Be.runningWorkers.length;++t){var n,r=(n=Be.runningWorkers[t]).pthread;Be.freeThreadData(r),n.terminate()}Be.runningWorkers=[]},freeThreadData:function(e){if(e){if(e.threadInfoStruct){var t=u()[e.threadInfoStruct+100>>2];u()[e.threadInfoStruct+100>>2]=0,Vt(t),Vt(e.threadInfoStruct)}e.threadInfoStruct=0,e.allocatedOwnStack&&e.stackBase&&Vt(e.stackBase),e.stackBase=0,e.worker&&(e.worker.pthread=null)}},returnWorkerToPool:function(e){Be.runWithoutMainThreadQueuedCalls((function(){delete Be.pthreads[e.pthread.threadInfoStruct],Be.unusedWorkers.push(e),Be.runningWorkers.splice(Be.runningWorkers.indexOf(e),1),Be.freeThreadData(e.pthread),e.pthread=void 0}))},runWithoutMainThreadQueuedCalls:function(e){u()[un>>2]=0;try{e()}finally{u()[un>>2]=1}},receiveObjectTransfer:function(e){},loadWasmModuleToWorker:function(e,t){e.onmessage=function(n){var r=n.data,a=r.cmd;if(e.pthread&&(Be.currentProxiedOperationCallerThread=e.pthread.threadInfoStruct),r.targetThread&&r.targetThread!=qt()){var s=Be.pthreads[r.targetThread];return s?s.worker.postMessage(n.data,r.transferList):console.error('Internal error! Worker sent a message "'+a+'" to target pthread '+r.targetThread+", but that thread no longer exists!"),void(Be.currentProxiedOperationCallerThread=void 0)}if("processQueuedMainThreadWork"===a)Xt();else if("spawnThread"===a)Dt(n.data);else if("cleanupThread"===a)je(r.thread);else if("killThread"===a)Me(r.thread);else if("cancelThread"===a)De(r.thread);else if("loaded"===a)e.loaded=!0,t&&t(e),e.runPthread&&(e.runPthread(),delete e.runPthread);else if("print"===a)N("Thread "+r.threadId+": "+r.text);else if("printErr"===a)R("Thread "+r.threadId+": "+r.text);else if("alert"===a)alert("Thread "+r.threadId+": "+r.text);else if("exit"===a)e.pthread&&Atomics.load(c(),e.pthread.threadInfoStruct+64>>2)&&Be.returnWorkerToPool(e);else if("exitProcess"===a)try{pn(r.returnCode)}catch(n){if(n instanceof ln)return;throw n}else"cancelDone"===a?Be.returnWorkerToPool(e):"objectTransfer"===a?Be.receiveObjectTransfer(n.data):"setimmediate"===n.data.target?e.postMessage(n.data):R("worker sent an unknown command "+a);Be.currentProxiedOperationCallerThread=void 0},e.onerror=function(e){R("pthread sent an error! "+e.filename+":"+e.lineno+": "+e.message)},y&&(e.on("message",(function(t){e.onmessage({data:t})})),e.on("error",(function(t){e.onerror(t)})),e.on("exit",(function(e){}))),e.postMessage({cmd:"load",urlOrBlob:h.mainScriptUrlOrBlob||o,wasmMemory:F,wasmModule:M})},allocateUnusedWorker:function(){var e=$("tfjs-backend-wasm-threaded-simd.worker.js");Be.unusedWorkers.push(new Worker(e))},getNewWorker:function(){return 0==Be.unusedWorkers.length&&(Be.allocateUnusedWorker(),Be.loadWasmModuleToWorker(Be.unusedWorkers[0])),Be.unusedWorkers.length>0?Be.unusedWorkers.pop():null},busySpinWait:function(e){for(var t=performance.now()+e;performance.now()<t;);}};function Le(e,t){sn(e,t),rn(e)}function We(){return D}function ze(e,t){return ne.get(e)(t)}function Ue(e,t,n,r){ke("Assertion failed: "+X(e)+", at: "+[t?X(t):"unknown filename",n,r?X(r):"unknown function"])}function Ve(e,t){_main(e,t)}function Ge(e){return u()[Gt()>>2]=e,e}function He(e,t){if(w)return et(1,1,e,t)}function qe(e,t){if(e==t)postMessage({cmd:"processQueuedMainThreadWork"});else if(w)postMessage({targetThread:e,cmd:"processThreadQueue"});else{var n=Be.pthreads[e],r=n&&n.worker;if(!r)return;r.postMessage({cmd:"processThreadQueue"})}return 1}function Ke(){ke()}function Xe(e,t,n){var r=rt(t,n);return Ae[e].apply(null,r)}function Ye(e,t){}function Ze(e,n,r){if(e<=0||e>t().length||!0&e)return-28;if(x){if(Atomics.load(u(),e>>2)!=n)return-6;var a=performance.now(),s=a+r;for(Atomics.exchange(u(),cn>>2,e);;){if((a=performance.now())>s)return Atomics.exchange(u(),cn>>2,0),-73;if(0==Atomics.exchange(u(),cn>>2,0))break;if(Xt(),Atomics.load(u(),e>>2)!=n)return-6;Atomics.exchange(u(),cn>>2,e)}return 0}var o=Atomics.wait(u(),e>>2,n,r);if("timed-out"===o)return-73;if("not-equal"===o)return-6;if("ok"===o)return 0;throw"Atomics.wait returned an unexpected value "+o}function Qe(e,t,n){i().copyWithin(e,t,t+n)}function Je(){return y?n(122).cpus().length:navigator.hardwareConcurrency}function et(e,t){for(var n=arguments.length-2,r=nn(),a=n,s=an(8*a),o=s>>3,i=0;i<n;i++){var u=arguments[2+i];l()[o+i]=u}var c=Jt(e,a,s,t);return rn(r),c}h.establishStackSpace=Le,h.getNoExitRuntime=We,h.invokeEntryPoint=ze,Pe=y?function(){var e=r.hrtime();return 1e3*e[0]+e[1]/1e6}:w?function(){return performance.now()-h.__performance_now_clock_drift}:"undefined"!=typeof dateNow?dateNow:function(){return performance.now()};var tt=[],nt=[];function rt(e,t){var n;for(nt.length=0,t>>=2;n=i()[e++];){var r=n<105;r&&1&t&&t++,nt.push(r?l()[t++>>1]:u()[t]),++t}return nt}function at(e,t,n){tt.length=t;for(var r=n>>3,a=0;a<t;a++)tt[a]=l()[r+a];return(e<0?Ae[-e-1]:Lt[e]).apply(null,tt)}function st(){return i().length}function ot(e){try{return F.grow(e-j.byteLength+65535>>>16),te(F.buffer),1}catch(e){}}function it(e){var t=st();if(e<=t)return!1;var n=2147483648;if(e>n)return!1;for(var r=1;r<=4;r*=2){var a=t*(1+.2/r);if(a=Math.min(a,e+100663296),ot(Math.min(n,ee(Math.max(e,a),65536))))return!0}return!1}var ut={inEventHandler:0,removeAllEventListeners:function(){for(var e=ut.eventHandlers.length-1;e>=0;--e)ut._removeHandler(e);ut.eventHandlers=[],ut.deferredCalls=[]},registerRemoveEventListeners:function(){ut.removeEventListenersRegistered||(ie.push(ut.removeAllEventListeners),ut.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(e,t,n){function r(e,t){if(e.length!=t.length)return!1;for(var n in e)if(e[n]!=t[n])return!1;return!0}for(var a in ut.deferredCalls){var s=ut.deferredCalls[a];if(s.targetFunction==e&&r(s.argsList,n))return}ut.deferredCalls.push({targetFunction:e,precedence:t,argsList:n}),ut.deferredCalls.sort((function(e,t){return e.precedence<t.precedence}))},removeDeferredCalls:function(e){for(var t=0;t<ut.deferredCalls.length;++t)ut.deferredCalls[t].targetFunction==e&&(ut.deferredCalls.splice(t,1),--t)},canPerformEventHandlerRequests:function(){return ut.inEventHandler&&ut.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(ut.canPerformEventHandlerRequests())for(var e=0;e<ut.deferredCalls.length;++e){var t=ut.deferredCalls[e];ut.deferredCalls.splice(e,1),--e,t.targetFunction.apply(null,t.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(e,t){for(var n=0;n<ut.eventHandlers.length;++n)ut.eventHandlers[n].target!=e||t&&t!=ut.eventHandlers[n].eventTypeString||ut._removeHandler(n--)},_removeHandler:function(e){var t=ut.eventHandlers[e];t.target.removeEventListener(t.eventTypeString,t.eventListenerFunc,t.useCapture),ut.eventHandlers.splice(e,1)},registerOrRemoveHandler:function(e){var t=function(t){++ut.inEventHandler,ut.currentEventHandler=e,ut.runDeferredCalls(),e.handlerFunc(t),ut.runDeferredCalls(),--ut.inEventHandler};if(e.callbackfunc)e.eventListenerFunc=t,e.target.addEventListener(e.eventTypeString,t,e.useCapture),ut.eventHandlers.push(e),ut.registerRemoveEventListeners();else for(var n=0;n<ut.eventHandlers.length;++n)ut.eventHandlers[n].target==e.target&&ut.eventHandlers[n].eventTypeString==e.eventTypeString&&ut._removeHandler(n--)},queueEventHandlerOnThread_iiii:function(e,t,n,r,a){var s=nn(),o=an(12);u()[o>>2]=n,u()[o+4>>2]=r,u()[o+8>>2]=a,en(0,e,637534208,t,r,o),rn(s)},getTargetThreadForEventCallback:function(e){switch(e){case 1:return 0;case 2:return Be.currentProxiedOperationCallerThread;default:return e}},getNodeNameForTarget:function(e){return e?e==window?"#window":e==screen?"#screen":e&&e.nodeName?e.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function ct(e){var t=Q(e)+1,n=Ut(t);return Z(e,n,t),n}function lt(e,t,n,r){var a=nn(),s=an(12),o=0;t&&(o=ct(t)),u()[s>>2]=o,u()[s+4>>2]=n,u()[s+8>>2]=r,en(0,e,657457152,0,o,s),rn(a)}function dt(e,t,n,r){lt(e,t=t?X(t):"",n,r)}function pt(e){return e>2?X(e):e}var ht=[0,"undefined"!=typeof document?document:0,"undefined"!=typeof window?window:0];function ft(e){return e=pt(e),ht[e]||("undefined"!=typeof document?document.querySelector(e):void 0)}function mt(e){return ft(e)}function bt(e,t,n){var r=mt(e);if(!r)return-4;if(r.canvasSharedPtr&&(u()[r.canvasSharedPtr>>2]=t,u()[r.canvasSharedPtr+4>>2]=n),!r.offscreenCanvas&&r.controlTransferredOffscreen)return r.canvasSharedPtr?(dt(u()[r.canvasSharedPtr+8>>2],e,t,n),1):-4;r.offscreenCanvas&&(r=r.offscreenCanvas);var a=!1;if(r.GLctxObject&&r.GLctxObject.GLctx){var s=r.GLctxObject.GLctx.getParameter(2978);a=0===s[0]&&0===s[1]&&s[2]===r.width&&s[3]===r.height}return r.width=t,r.height=n,a&&r.GLctxObject.GLctx.viewport(0,0,t,n),0}function gt(e,t,n){return w?et(2,1,e,t,n):bt(e,t,n)}function xt(e,t,n){return mt(e)?bt(e,t,n):gt(e,t,n)}function vt(e){}function yt(e,t){}function kt(e){var t=e.getExtension("ANGLE_instanced_arrays");if(t)return e.vertexAttribDivisor=function(e,n){t.vertexAttribDivisorANGLE(e,n)},e.drawArraysInstanced=function(e,n,r,a){t.drawArraysInstancedANGLE(e,n,r,a)},e.drawElementsInstanced=function(e,n,r,a,s){t.drawElementsInstancedANGLE(e,n,r,a,s)},1}function wt(e){var t=e.getExtension("OES_vertex_array_object");if(t)return e.createVertexArray=function(){return t.createVertexArrayOES()},e.deleteVertexArray=function(e){t.deleteVertexArrayOES(e)},e.bindVertexArray=function(e){t.bindVertexArrayOES(e)},e.isVertexArray=function(e){return t.isVertexArrayOES(e)},1}function It(e){var t=e.getExtension("WEBGL_draw_buffers");if(t)return e.drawBuffers=function(e,n){t.drawBuffersWEBGL(e,n)},1}function St(e){return!!(e.multiDrawWebgl=e.getExtension("WEBGL_multi_draw"))}var _t={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},timerQueriesEXT:[],programInfos:{},stringCache:{},unpackAlignment:4,recordError:function(e){_t.lastError||(_t.lastError=e)},getNewId:function(e){for(var t=_t.counter++,n=e.length;n<t;n++)e[n]=null;return t},getSource:function(e,t,n,r){for(var a="",s=0;s<t;++s){var o=r?u()[r+4*s>>2]:-1;a+=X(u()[n+4*s>>2],o<0?void 0:o)}return a},createContext:function(e,t){var n=e.getContext("webgl",t);return n?_t.registerContext(n,t):0},registerContext:function(e,t){var n=Ut(8);u()[n+4>>2]=qt();var r={handle:n,attributes:t,version:t.majorVersion,GLctx:e};return e.canvas&&(e.canvas.GLctxObject=r),_t.contexts[n]=r,("undefined"==typeof t.enableExtensionsByDefault||t.enableExtensionsByDefault)&&_t.initExtensions(r),n},makeContextCurrent:function(e){return _t.currentContext=_t.contexts[e],h.ctx=$t=_t.currentContext&&_t.currentContext.GLctx,!(e&&!$t)},getContext:function(e){return _t.contexts[e]},deleteContext:function(e){_t.currentContext===_t.contexts[e]&&(_t.currentContext=null),"object"==typeof ut&&ut.removeAllHandlersOnTarget(_t.contexts[e].GLctx.canvas),_t.contexts[e]&&_t.contexts[e].GLctx.canvas&&(_t.contexts[e].GLctx.canvas.GLctxObject=void 0),Vt(_t.contexts[e].handle),_t.contexts[e]=null},initExtensions:function(e){if(e||(e=_t.currentContext),!e.initExtensionsDone){e.initExtensionsDone=!0;var t=e.GLctx;kt(t),wt(t),It(t),t.disjointTimerQueryExt=t.getExtension("EXT_disjoint_timer_query"),St(t),(t.getSupportedExtensions()||[]).forEach((function(e){e.indexOf("lose_context")<0&&e.indexOf("debug")<0&&t.getExtension(e)}))}},populateUniformTable:function(e){for(var t=_t.programs[e],n=_t.programInfos[e]={uniforms:{},maxUniformLength:0,maxAttributeLength:-1,maxUniformBlockNameLength:-1},r=n.uniforms,a=$t.getProgramParameter(t,35718),s=0;s<a;++s){var o=$t.getActiveUniform(t,s),i=o.name;n.maxUniformLength=Math.max(n.maxUniformLength,i.length+1),"]"==i.slice(-1)&&(i=i.slice(0,i.lastIndexOf("[")));var u=$t.getUniformLocation(t,i);if(u){var c=_t.getNewId(_t.uniforms);r[i]=[o.size,c],_t.uniforms[c]=u;for(var l=1;l<o.size;++l){var d=i+"["+l+"]";u=$t.getUniformLocation(t,d),c=_t.getNewId(_t.uniforms),_t.uniforms[c]=u}}}}},Ot=["default","low-power","high-performance"];function Tt(e,t){var n=t>>2,r=u()[n+6],a={alpha:!!u()[n+0],depth:!!u()[n+1],stencil:!!u()[n+2],antialias:!!u()[n+3],premultipliedAlpha:!!u()[n+4],preserveDrawingBuffer:!!u()[n+5],powerPreference:Ot[r],failIfMajorPerformanceCaveat:!!u()[n+7],majorVersion:u()[n+8],minorVersion:u()[n+9],enableExtensionsByDefault:u()[n+10],explicitSwapControl:u()[n+11],proxyContextToMainThread:u()[n+12],renderViaOffscreenBackBuffer:u()[n+13]},s=mt(e);return s?a.explicitSwapControl?0:_t.createContext(s,a):0}function Ct(e,t){return Tt(e,t)}var $t,Et={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=Et.buffers[e];0===t||10===t?((1===e?N:R)(K(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return Et.varargs+=4,u()[Et.varargs-4>>2]},getStr:function(e){return X(e)},get64:function(e,t){return e}};function At(e){return w?et(3,1,e):0}function Nt(e,t,n,r,a){if(w)return et(4,1,e,t,n,r,a)}function Rt(e,t,n,r){if(w)return et(5,1,e,t,n,r);for(var a=0,s=0;s<n;s++){for(var o=u()[t+8*s>>2],c=u()[t+(8*s+4)>>2],l=0;l<c;l++)Et.printChar(e,i()[o+l]);a+=c}return u()[r>>2]=a,0}function Ft(e){var t=Be.threadExitHandlers.pop();e&&t()}function Mt(e,t){Be.threadExitHandlers.push((function(){ne.get(e)(t)}))}function Dt(e){if(w)throw"Internal Error! spawnThread() can only ever be called from main application thread!";var t=Be.getNewWorker();if(void 0!==t.pthread)throw"Internal error!";if(!e.pthread_ptr)throw"Internal error, no pthread ptr!";Be.runningWorkers.push(t);for(var n=Ut(512),r=0;r<128;++r)u()[n+4*r>>2]=0;var a=e.stackBase+e.stackSize,s=Be.pthreads[e.pthread_ptr]={worker:t,stackBase:e.stackBase,stackSize:e.stackSize,allocatedOwnStack:e.allocatedOwnStack,threadInfoStruct:e.pthread_ptr},o=s.threadInfoStruct>>2;Atomics.store(c(),o+16,e.detached),Atomics.store(c(),o+25,n),Atomics.store(c(),o+10,s.threadInfoStruct),Atomics.store(c(),o+20,e.stackSize),Atomics.store(c(),o+19,a),Atomics.store(c(),o+26,e.stackSize),Atomics.store(c(),o+28,a),Atomics.store(c(),o+29,e.detached);var i=Ht()+40;Atomics.store(c(),o+43,i),t.pthread=s;var l={cmd:"run",start_routine:e.startRoutine,arg:e.arg,threadInfoStruct:e.pthread_ptr,stackBase:e.stackBase,stackSize:e.stackSize};t.runPthread=function(){l.time=performance.now(),t.postMessage(l,e.transferList)},t.loaded&&(t.runPthread(),delete t.runPthread)}function jt(e,t,n,r){if("undefined"==typeof SharedArrayBuffer)return R("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;if(!e)return R("pthread_create called with a null thread pointer!"),28;var a=[];if(w&&0===a.length)return Qt(687865856,e,t,n,r);var s=0,o=0,i=0;t&&-1!=t?(s=u()[t>>2],s+=81920,o=u()[t+8>>2],i=0!==u()[t+12>>2]):s=2097152;var l=0==o;l?o=on(16,s):V((o-=s)>0);for(var d=Ut(228),p=0;p<57;++p)c()[(d>>2)+p]=0;u()[e>>2]=d,u()[d+12>>2]=d;var h=d+152;u()[h>>2]=h;var f={stackBase:o,stackSize:s,allocatedOwnStack:l,detached:i,startRoutine:n,pthread_ptr:d,arg:r,transferList:a};return w?(f.cmd="spawnThread",postMessage(f,a)):Dt(f),0}function Pt(e){if(w)return et(6,1,e);switch(e){case 30:case 75:return 16384;case 85:return 131072;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return"object"==typeof navigator&&navigator.hardwareConcurrency||1}return Ge(28),-1}w||Be.initMainThreadBlock();var Bt,Lt=[null,He,gt,At,Nt,Rt,Pt],Wt={e:Ue,r:Ve,x:qe,b:Ke,y:Xe,j:Ye,c:Ze,d:Fe,f:Pe,p:Qe,z:Je,u:at,q:it,v:xt,i:vt,t:yt,w:Ct,m:At,n:Nt,g:Rt,o:Ne,a:F||h.wasmMemory,k:Ft,l:Mt,h:jt,s:Pt},zt=(Ee(),h.___wasm_call_ctors=function(){return(zt=h.___wasm_call_ctors=h.asm.A).apply(null,arguments)}),Ut=(h._init=function(){return(h._init=h.asm.B).apply(null,arguments)},h._register_tensor=function(){return(h._register_tensor=h.asm.C).apply(null,arguments)},h._dispose_data=function(){return(h._dispose_data=h.asm.D).apply(null,arguments)},h._dispose=function(){return(h._dispose=h.asm.E).apply(null,arguments)},h._Abs=function(){return(h._Abs=h.asm.G).apply(null,arguments)},h._Add=function(){return(h._Add=h.asm.H).apply(null,arguments)},h._AddN=function(){return(h._AddN=h.asm.I).apply(null,arguments)},h._All=function(){return(h._All=h.asm.J).apply(null,arguments)},h._Any=function(){return(h._Any=h.asm.K).apply(null,arguments)},h._ArgMax=function(){return(h._ArgMax=h.asm.L).apply(null,arguments)},h._AvgPool=function(){return(h._AvgPool=h.asm.M).apply(null,arguments)},h._BatchMatMul=function(){return(h._BatchMatMul=h.asm.N).apply(null,arguments)},h._Ceil=function(){return(h._Ceil=h.asm.O).apply(null,arguments)},h._ClipByValue=function(){return(h._ClipByValue=h.asm.P).apply(null,arguments)},h._Conv2D=function(){return(h._Conv2D=h.asm.Q).apply(null,arguments)},h._Conv2DBackpropInput=function(){return(h._Conv2DBackpropInput=h.asm.R).apply(null,arguments)},h._Cos=function(){return(h._Cos=h.asm.S).apply(null,arguments)},h._Cosh=function(){return(h._Cosh=h.asm.T).apply(null,arguments)},h._CropAndResize=function(){return(h._CropAndResize=h.asm.U).apply(null,arguments)},h._Cumsum=function(){return(h._Cumsum=h.asm.V).apply(null,arguments)},h._DepthToSpace=function(){return(h._DepthToSpace=h.asm.W).apply(null,arguments)},h._DepthwiseConv2dNative=function(){return(h._DepthwiseConv2dNative=h.asm.X).apply(null,arguments)},h._Elu=function(){return(h._Elu=h.asm.Y).apply(null,arguments)},h._Equal=function(){return(h._Equal=h.asm.Z).apply(null,arguments)},h._Exp=function(){return(h._Exp=h.asm._).apply(null,arguments)},h._FlipLeftRight=function(){return(h._FlipLeftRight=h.asm.$).apply(null,arguments)},h._Floor=function(){return(h._Floor=h.asm.aa).apply(null,arguments)},h._FloorDiv=function(){return(h._FloorDiv=h.asm.ba).apply(null,arguments)},h._FusedBatchNorm=function(){return(h._FusedBatchNorm=h.asm.ca).apply(null,arguments)},h._FusedConv2D=function(){return(h._FusedConv2D=h.asm.da).apply(null,arguments)},h._FusedDepthwiseConv2D=function(){return(h._FusedDepthwiseConv2D=h.asm.ea).apply(null,arguments)},h._Gather=function(){return(h._Gather=h.asm.fa).apply(null,arguments)},h._GatherNd=function(){return(h._GatherNd=h.asm.ga).apply(null,arguments)},h._Greater=function(){return(h._Greater=h.asm.ha).apply(null,arguments)},h._GreaterEqual=function(){return(h._GreaterEqual=h.asm.ia).apply(null,arguments)},h._LeakyRelu=function(){return(h._LeakyRelu=h.asm.ja).apply(null,arguments)},h._Less=function(){return(h._Less=h.asm.ka).apply(null,arguments)},h._LessEqual=function(){return(h._LessEqual=h.asm.la).apply(null,arguments)},h._Log=function(){return(h._Log=h.asm.ma).apply(null,arguments)},h._LogicalAnd=function(){return(h._LogicalAnd=h.asm.na).apply(null,arguments)},h._Max=function(){return(h._Max=h.asm.oa).apply(null,arguments)},h._MaxPool=function(){return(h._MaxPool=h.asm.pa).apply(null,arguments)},h._Maximum=function(){return(h._Maximum=h.asm.qa).apply(null,arguments)},h._Mean=function(){return(h._Mean=h.asm.ra).apply(null,arguments)},h._Min=function(){return(h._Min=h.asm.sa).apply(null,arguments)},h._Minimum=function(){return(h._Minimum=h.asm.ta).apply(null,arguments)},h._MirrorPad=function(){return(h._MirrorPad=h.asm.ua).apply(null,arguments)},h._Multiply=function(){return(h._Multiply=h.asm.va).apply(null,arguments)},h._Neg=function(){return(h._Neg=h.asm.wa).apply(null,arguments)},h._NonMaxSuppressionV3=function(){return(h._NonMaxSuppressionV3=h.asm.xa).apply(null,arguments)},h._NonMaxSuppressionV4=function(){return(h._NonMaxSuppressionV4=h.asm.ya).apply(null,arguments)},h._NonMaxSuppressionV5=function(){return(h._NonMaxSuppressionV5=h.asm.za).apply(null,arguments)},h._NotEqual=function(){return(h._NotEqual=h.asm.Aa).apply(null,arguments)},h._OneHot=function(){return(h._OneHot=h.asm.Ba).apply(null,arguments)},h._PadV2=function(){return(h._PadV2=h.asm.Ca).apply(null,arguments)},h._Pow=function(){return(h._Pow=h.asm.Da).apply(null,arguments)},h._Prelu=function(){return(h._Prelu=h.asm.Ea).apply(null,arguments)},h._Prod=function(){return(h._Prod=h.asm.Fa).apply(null,arguments)},h._RealDiv=function(){return(h._RealDiv=h.asm.Ga).apply(null,arguments)},h._Relu=function(){return(h._Relu=h.asm.Ha).apply(null,arguments)},h._Relu6=function(){return(h._Relu6=h.asm.Ia).apply(null,arguments)},h._ResizeBilinear=function(){return(h._ResizeBilinear=h.asm.Ja).apply(null,arguments)},h._Reverse=function(){return(h._Reverse=h.asm.Ka).apply(null,arguments)},h._RotateWithOffset=function(){return(h._RotateWithOffset=h.asm.La).apply(null,arguments)},h._Round=function(){return(h._Round=h.asm.Ma).apply(null,arguments)},h._Rsqrt=function(){return(h._Rsqrt=h.asm.Na).apply(null,arguments)},h._ScatterNd=function(){return(h._ScatterNd=h.asm.Oa).apply(null,arguments)},h._SelectV2=function(){return(h._SelectV2=h.asm.Pa).apply(null,arguments)},h._Sigmoid=function(){return(h._Sigmoid=h.asm.Qa).apply(null,arguments)},h._Sin=function(){return(h._Sin=h.asm.Ra).apply(null,arguments)},h._Softmax=function(){return(h._Softmax=h.asm.Sa).apply(null,arguments)},h._Sqrt=function(){return(h._Sqrt=h.asm.Ta).apply(null,arguments)},h._Square=function(){return(h._Square=h.asm.Ua).apply(null,arguments)},h._SquaredDifference=function(){return(h._SquaredDifference=h.asm.Va).apply(null,arguments)},h._Step=function(){return(h._Step=h.asm.Wa).apply(null,arguments)},h._StridedSlice=function(){return(h._StridedSlice=h.asm.Xa).apply(null,arguments)},h._Sub=function(){return(h._Sub=h.asm.Ya).apply(null,arguments)},h._Sum=function(){return(h._Sum=h.asm.Za).apply(null,arguments)},h._Tan=function(){return(h._Tan=h.asm._a).apply(null,arguments)},h._Tanh=function(){return(h._Tanh=h.asm.$a).apply(null,arguments)},h._Tile=function(){return(h._Tile=h.asm.ab).apply(null,arguments)},h._TopK=function(){return(h._TopK=h.asm.bb).apply(null,arguments)},h._Transform=function(){return(h._Transform=h.asm.cb).apply(null,arguments)},h._Transpose=function(){return(h._Transpose=h.asm.db).apply(null,arguments)},h.__FusedMatMul=function(){return(h.__FusedMatMul=h.asm.eb).apply(null,arguments)},h._malloc=function(){return(Ut=h._malloc=h.asm.fb).apply(null,arguments)}),Vt=h._free=function(){return(Vt=h._free=h.asm.gb).apply(null,arguments)},Gt=h.___errno_location=function(){return(Gt=h.___errno_location=h.asm.hb).apply(null,arguments)},Ht=h._emscripten_get_global_libc=function(){return(Ht=h._emscripten_get_global_libc=h.asm.ib).apply(null,arguments)},qt=h._pthread_self=function(){return(qt=h._pthread_self=h.asm.jb).apply(null,arguments)},Kt=h.___pthread_tsd_run_dtors=function(){return(Kt=h.___pthread_tsd_run_dtors=h.asm.kb).apply(null,arguments)},Xt=h._emscripten_main_thread_process_queued_calls=function(){return(Xt=h._emscripten_main_thread_process_queued_calls=h.asm.lb).apply(null,arguments)},Yt=(h._emscripten_current_thread_process_queued_calls=function(){return(h._emscripten_current_thread_process_queued_calls=h.asm.mb).apply(null,arguments)},h._emscripten_register_main_browser_thread_id=function(){return(Yt=h._emscripten_register_main_browser_thread_id=h.asm.nb).apply(null,arguments)}),Zt=h.__emscripten_do_dispatch_to_thread=function(){return(Zt=h.__emscripten_do_dispatch_to_thread=h.asm.ob).apply(null,arguments)},Qt=h._emscripten_sync_run_in_main_thread_4=function(){return(Qt=h._emscripten_sync_run_in_main_thread_4=h.asm.pb).apply(null,arguments)},Jt=h._emscripten_run_in_main_runtime_thread_js=function(){return(Jt=h._emscripten_run_in_main_runtime_thread_js=h.asm.qb).apply(null,arguments)},en=h.__emscripten_call_on_thread=function(){return(en=h.__emscripten_call_on_thread=h.asm.rb).apply(null,arguments)},tn=(h._emscripten_tls_init=function(){return(h._emscripten_tls_init=h.asm.sb).apply(null,arguments)},h.__emscripten_thread_init=function(){return(tn=h.__emscripten_thread_init=h.asm.tb).apply(null,arguments)}),nn=h.stackSave=function(){return(nn=h.stackSave=h.asm.ub).apply(null,arguments)},rn=h.stackRestore=function(){return(rn=h.stackRestore=h.asm.vb).apply(null,arguments)},an=h.stackAlloc=function(){return(an=h.stackAlloc=h.asm.wb).apply(null,arguments)},sn=h._emscripten_stack_set_limits=function(){return(sn=h._emscripten_stack_set_limits=h.asm.xb).apply(null,arguments)},on=h._memalign=function(){return(on=h._memalign=h.asm.yb).apply(null,arguments)},un=h.__emscripten_allow_main_runtime_queued_calls=10016,cn=h.__emscripten_main_thread_futex=11652;function ln(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function dn(e){if(e=e||b,!(be>0)){if(w)return d(h),le(),void postMessage({cmd:"loaded"});ce(),be>0||(h.setStatus?(h.setStatus("Running..."),setTimeout((function(){setTimeout((function(){h.setStatus("")}),1),t()}),1)):t())}function t(){Bt||(Bt=!0,h.calledRun=!0,U||(le(),de(),d(h),h.onRuntimeInitialized&&h.onRuntimeInitialized(),he()))}}function pn(e,t){if(!t||!D||0!==e){if(!t&&w)throw postMessage({cmd:"exitProcess",returnCode:e}),new ln(e);D||(Be.terminateAllThreads(),pe(),h.onExit&&h.onExit(e),U=!0),g(e,new ln(e))}}if(h.cwrap=q,h.PThread=Be,h.PThread=Be,h.wasmMemory=F,h.ExitStatus=ln,xe=function e(){Bt||dn(),Bt||(xe=e)},h.run=dn,h.preInit)for("function"==typeof h.preInit&&(h.preInit=[h.preInit]);h.preInit.length>0;)h.preInit.pop()();return w&&(D=!1,Be.initWorker()),dn(),e.ready});e.exports=i}).call(this,"/index.js",n(37),"/",n(36))},,function(e,t,n){"use strict";(function(e){n.d(t,"a",(function(){return a}));
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof e?e:e=>e();function a(){return new Promise((e=>r((()=>e()))))}}).call(this,n(118).setImmediate)},function(e,t,n){"use strict";var r=n(0);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a={},s={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function o(e){if(!(e in a)){const t=function(e){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e);if(t.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete a[e]}),!1),1===e)return t.getContext("webgl",s)||t.getContext("experimental-webgl",s);return t.getContext("webgl2",s)}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(e);if(null===t)return console.log("Could not get context for WebGL version",e),null;a[e]=t}const t=a[e];return t.isContextLost()?(delete a[e],o(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),a[e])}var i,u,c;function l(e,t){return[t,e]}function d(e){const t=r.util.sizeFromShape(e),n=Math.ceil(t/4);return r.util.sizeToSquarishShape(n)}function p(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function h(e,t){const n=e;let a,s,o,i,u,c,l,d,p,h;return 2===Object(r.env)().getNumber("WEBGL_VERSION")?(a=n.R32F,s=n.R16F,o=n.RGBA16F,i=n.RGBA32F,u=n.RED,l=4,d=1,p=n.HALF_FLOAT,h=n.FLOAT):(a=e.RGBA,s=e.RGBA,o=e.RGBA,i=n.RGBA,u=e.RGBA,l=4,d=4,p=null!=t?t.HALF_FLOAT_OES:null,h=e.FLOAT),c=e.RGBA,{internalFormatFloat:a,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:o,internalFormatPackedFloat:i,textureFormatFloat:u,downloadTextureFormat:c,downloadUnpackNumChannels:l,defaultNumChannels:d,textureTypeHalfFloat:p,textureTypeFloat:h}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f(e,t){const n=t();return Object(r.env)().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(i||(i={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(u||(u={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(c||(c={}));function m(e){return!!(Object(r.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function b(e,t){return _(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}function g(e,t){const n=_(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(f(e,(()=>e.shaderSource(n,t))),f(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw function(e,t){const n=x.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const a=+n[1],s=e.split("\n"),o=s.length.toString().length+2,i=s.map(((e,t)=>r.util.rightPad((t+1).toString(),o)+e));let u=0;for(let e=0;e<i.length;e++)u=Math.max(i[e].length,u);const c=i.slice(0,a-1),l=i.slice(a-1,a),d=i.slice(a);console.log(c.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${r.util.rightPad(l[0],u)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(d.join("\n"))}(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const x=/ERROR: [0-9]+:([0-9]+):/g;function v(e,t){if(f(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function y(e,t,n,r,a,s,o){const i=e.getAttribLocation(t,n);return-1!==i&&(f(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),f(e,(()=>e.vertexAttribPointer(i,a,e.FLOAT,!1,s,o))),f(e,(()=>e.enableVertexAttribArray(i))),!0)}function k(e,t,n,r){f(e,(()=>function(e,t,n){O(e,n),f(e,(()=>e.activeTexture(e.TEXTURE0+n))),f(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,r))),f(e,(()=>e.uniform1i(n,r)))}function w(e,t,n){f(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),f(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function I(e,t){f(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),f(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function S(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function _(e,t,n){const r=f(e,(()=>t()));if(null==r)throw new Error(n);return r}function O(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${n}]`}.`)}}function T(e,t=2){return r.util.sizeFromShape(e.slice(0,e.length-t))}function C(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function $(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[T(e),...C(e)]),t}function E(e){return e%2==0}function A(e,t){if(e=e.slice(-2),t=t.slice(-2),r.util.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(E(n)&&E(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&E(e[0])&&E(t[0])}let N,R;function F(e,t){return null!=e.getExtension(t)}function M(e){try{if(null!=o(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function D(e){if(0===e)return!1;const t=o(e);if(1!==e){if(F(t,"EXT_color_buffer_float"))return j(t);const e="EXT_color_buffer_half_float";if(F(t,e)){const n=t.getExtension(e);return function(e,t){const n=h(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);const a=1,s=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,a,s,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const o=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(o),i}(t,n)}return!1}if(!F(t,"OES_texture_float"))return!1;if(!F(t,"WEBGL_color_buffer_float"))return!1;return j(t)}function j(e){const t=h(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function P(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&r.util.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B=Object(r.env)();
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function L(){let e,t,n,a,s,o,i,u,c,l;return 2===Object(r.env)().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",a="in",s="texture",o="outputColor",i="out vec4 outputColor;",u="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",c="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",a="varying",s="texture2D",o="gl_FragColor",i="",u="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",c="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:a,texture2D:s,output:o,defineOutput:i,defineSpecialNaN:u,defineSpecialInf:c,defineRound:l}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W(e,t,n="index"){const a=r.util.computeStrides(t);return a.map(((t,r)=>`${`int ${e[r]} = ${n} / ${t}`}; ${r===a.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${t}`:`index -= ${e[r]} * ${t}`};`)).join("")}function z(e,t,n="index"){const a=r.util.computeStrides(t);return a.map(((t,r)=>`${`int ${e[r]} = ${n} / outShapeStrides[${r}]`}; ${r===a.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * outShapeStrides[${r}]`:`index -= ${e[r]} * outShapeStrides[${r}]`};`)).join("")}function U(e,t,n="index"){const r=function(e,t){const n=e.length,r=e.map((e=>`${t}[${e}]`)),a=new Array(n-1);a[n-2]=r[n-1];for(let e=n-3;e>=0;--e)a[e]=`(${a[e+1]} * ${r[e+1]})`;return a}(e.map(((e,t)=>t)),t);return r.map(((t,a)=>`${`int ${e[a]} = ${n} / ${r[a]}`}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${r[a]}`:`index -= ${e[a]} * ${r[a]}`};`)).join("")}function V(e){const t=r.util.computeStrides(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}B.registerFlag("HAS_WEBGL",(()=>B.getNumber("WEBGL_VERSION")>0)),B.registerFlag("WEBGL_VERSION",(()=>M(2)?2:M(1)?1:0)),B.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),B.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===B.get("WEBGL_VERSION"))),B.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),B.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),B.registerFlag("WEBGL_PACK",(()=>B.getBool("HAS_WEBGL"))),B.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>B.getBool("WEBGL_PACK"))),B.registerFlag("WEBGL_PACK_CLIP",(()=>B.getBool("WEBGL_PACK"))),B.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>B.getBool("WEBGL_PACK"))),B.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>B.getBool("WEBGL_PACK"))),B.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>B.getBool("WEBGL_PACK"))),B.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>B.getBool("WEBGL_PACK"))),B.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>B.getBool("WEBGL_PACK"))),B.registerFlag("WEBGL_PACK_REDUCE",(()=>B.getBool("WEBGL_PACK"))),B.registerFlag("WEBGL_LAZILY_UNPACK",(()=>B.getBool("WEBGL_PACK"))),B.registerFlag("WEBGL_CONV_IM2COL",(()=>B.getBool("WEBGL_PACK"))),B.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==N){const t=o(e);N=t.getParameter(t.MAX_TEXTURE_SIZE)}return N}(B.getNumber("WEBGL_VERSION")))),B.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==R){const t=o(e);R=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,R)}(B.getNumber("WEBGL_VERSION")))),B.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=B.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=o(e);return t=F(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:F(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),B.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>B.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!r.device_util.isMobile())),B.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=o(e);if(1===e){if(!F(t,"OES_texture_float"))return!1}else if(!F(t,"EXT_color_buffer_float"))return!1;return j(t)}(B.getNumber("WEBGL_VERSION")))),B.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!B.getBool("WEBGL_FORCE_F16_TEXTURES")&&B.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),B.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>D(B.getNumber("WEBGL_VERSION")))),B.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=B.getNumber("WEBGL_VERSION"))&&null!=o(e).fenceSync;var e})),B.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>B.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),B.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),B.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>r.device_util.isMobile()&&B.getBool("IS_CHROME")?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),B.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),B.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),B.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),B.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128));const G="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:H}=r.backend_util;
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q(e,t,n){const a=[];if(e.forEach((e=>{const t=r.util.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?a.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(a.push(`uniform sampler2D ${e.name};`),a.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=ae(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:a.push(`uniform int ${e.name}Shape;`);break;case 2:a.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:a.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:a.push(`uniform ivec4 ${e.name}Shape;`)}a.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:a.push("uniform int outShape;");break;case 2:a.push("uniform ivec2 outShape;"),a.push("uniform int outShapeStrides;");break;case 3:a.push("uniform ivec3 outShape;"),a.push("uniform ivec2 outShapeStrides;");break;case 4:a.push("uniform ivec4 outShape;"),a.push("uniform ivec3 outShapeStrides;")}a.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{a.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const s=a.join("\n"),o=e.map((e=>function(e,t,n=!1,a){let s="";s+=n?X(e,a):K(e,a);const o=e.shapeInfo.logicalShape,i=t.logicalShape;o.length<=i.length&&(s+=n?function(e,t){const n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),s="get"+a+"AtOutCoords",o=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,u=H(e.shapeInfo.logicalShape,t.logicalShape),c=re(i),l=i-o;let d;const p=["x","y","z","w","u","v"];d=0===o?"":i<2&&u.length>=1?"coords = 0;":u.map((e=>`coords.${p[e+l]} = 0;`)).join("\n");let h="";h=i<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+l]}`)).join(", ");let f="return outputValue;";const m=1===r.util.sizeFromShape(e.shapeInfo.logicalShape),b=1===r.util.sizeFromShape(t.logicalShape);if(1!==o||m||b){if(m&&!b)f=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(u.length){const e=o-2,t=o-1;u.indexOf(e)>-1&&u.indexOf(t)>-1?f="return vec4(outputValue.x);":u.indexOf(e)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":u.indexOf(t)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}}else f="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${c} coords = getOutputCoords();\n      ${d}\n      vec4 outputValue = get${a}(${h});\n      ${f}\n    }\n  `}(e,t):function(e,t){const n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),s="get"+a+"AtOutCoords",o=t.texShape,i=e.shapeInfo.texShape,u=e.shapeInfo.logicalShape.length,c=t.logicalShape.length;if(!e.shapeInfo.isUniform&&u===c&&null==e.shapeInfo.flatOffset&&r.util.arraysEqual(i,o))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const l=re(c),d=H(e.shapeInfo.logicalShape,t.logicalShape),p=c-u;let h;const f=["x","y","z","w","u","v"];h=0===u?"":c<2&&d.length>=1?"coords = 0;":d.map((e=>`coords.${f[e+p]} = 0;`)).join("\n");let m="";m=c<2&&u>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${f[t+p]}`)).join(", ");return`\n    float ${s}() {\n      ${l} coords = getOutputCoords();\n      ${h}\n      return get${a}(${m});\n    }\n  `}(e,t));return s}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),i=t.texShape,u=L(),c=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(u);let l,d,p=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${Y}\n    ${Z}\n    ${Q}\n  `}(u);t.isPacked?(l=function(e,t,n){switch(e.length){case 0:return ee();case 1:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(1===r[0])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `;if(1===r[1])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `;if(n)return"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ";return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(r.util.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${a[0]}, ${a[1]}));\n      }\n    `;const s=Math.ceil(e[1]/2);if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ";return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${a[0]}, ${a[1]}));\n\n      int index = resTexRC.x * ${a[1]} + resTexRC.y;\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[2]/2),s=a*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),s=a*Math.ceil(e[e.length-2]/2);let o=s,i="",u="b, r, c";for(let t=2;t<e.length-1;t++)o*=e[e.length-t-1],i=`\n      int b${t} = index / ${o};\n      index -= b${t} * ${o};\n    `+i,u=`b${t}, `+u;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${i}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec${e.length}(${u});\n    }\n  `}(e,t,n)}}(t.logicalShape,i,n.enableShapeUniforms),d=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(u)):(l=function(e,t,n){switch(e.length){case 0:return ee();case 1:return function(e,t,n){if(1===t[0])return n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `;if(1===t[1])return n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `;if(n)return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ";return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){if(r.util.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `;if(1===e[1])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `;if(1===e[0])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `;if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ";return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n){return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${z(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`}const r=W(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n){return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${z(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `}const r=W(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=W(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=W(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,i,n.enableShapeUniforms),d=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(u)),n.packedInputs&&(p+=J);return[p,c,d,s,l,o,n.userCode].join("\n")}function K(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[a,s]=e.shapeInfo.texShape;if(1===a&&1===s)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=te(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[i,u]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${i}, ${u}, ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${ne(e)}\n      }\n    `;const a=e.shapeInfo.texShape,s=a[0],o=a[1];if(1===o&&1===s)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=te(n);if(1===o)return t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${s}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(1===s)return t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${o}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(t)return`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${o}, index + ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,s="get"+a.charAt(0).toUpperCase()+a.slice(1),o=e.shapeInfo.texShape;if(null!=o&&r.util.arraysEqual(n,o)){if(t)return`\n      float ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `;const e=o[0];return`\n    float ${s}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${o[1]}.0, ${e}.0);\n      return sampleTexture(${a}, uv);\n    }\n  `}const{newShape:i,keptDims:u}=r.util.squeezeShape(n),c=i;if(c.length<n.length){const n=["row","col"];return`\n      ${K(se(e,c),t)}\n      float ${s}(int row, int col) {\n        return ${s}(${oe(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${ne(e)}\n      }\n    `;const l=o[0],d=o[1],p=te(a);if(1===d)return t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${p}), vec3(${a}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${a}TexShape[0]));\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${p}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${a}, uv);\n    }\n  `;if(1===l)return t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${p}), vec3(${a}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${a}TexShape[1]), 0.5);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${p}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${d}.0, 0.5);\n      return sampleTexture(${a}, uv);\n    }\n  `;if(t)return`\n      float ${s}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a}Shape[1] + col + ${p};\n        vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index);\n        return sampleTexture(${a}, uv);\n      }\n    `;return`\n  float ${s}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${p};\n    vec2 uv = uvFromFlat(${l}, ${d}, index);\n    return sampleTexture(${a}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,s="get"+a.charAt(0).toUpperCase()+a.slice(1),o=n[1]*n[2],i=n[2],{newShape:u,keptDims:c}=r.util.squeezeShape(n),l=u;if(l.length<n.length){const n=["row","col","depth"];return`\n        ${K(se(e,l),t)}\n        float ${s}(int row, int col, int depth) {\n          return ${s}(${oe(n,c)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${o}, ${i}, 1)));\n        ${ne(e)}\n      }\n    `;const d=e.shapeInfo.texShape,p=d[0],h=d[1],f=e.shapeInfo.flatOffset;if(h===o&&null==f)return t?`\n      float ${s}(int row, int col, int depth) {\n        int stride1 = ${a}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n        float ${s}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${h}.0, ${p}.0);\n          return sampleTexture(${a}, uv);\n        }\n      `;if(h===i&&null==f)return t?`\n      float ${s}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${a}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n    float ${s}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${p}.0);\n      return sampleTexture(${a}, uv);\n    }\n  `;const m=te(a);if(t)return`\n    float ${s}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${a}Shape[1] * ${a}Shape[2];\n      int stride1 = ${a}Shape[2];\n      int index = row * ${o} + col * ${i} + depth + ${m};\n      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index);\n      return sampleTexture(${a}, uv);\n    }\n    `;return`\n      float ${s}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${o} + col * ${i} + depth + ${m};\n        vec2 uv = uvFromFlat(${p}, ${h}, index);\n        return sampleTexture(${a}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,s="get"+a.charAt(0).toUpperCase()+a.slice(1),o=n[3],i=n[2]*o,u=n[1]*i,{newShape:c,keptDims:l}=r.util.squeezeShape(n);if(c.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${K(se(e,c),t)}\n      float ${s}(int row, int col, int depth, int depth2) {\n        return ${s}(${oe(n,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${u}, ${i}, ${o}, 1)));\n        ${ne(e)}\n      }\n    `;const d=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,h=p[0],f=p[1],m=`int stride2 = ${a}Shape[3];`,b=`int stride1 = ${a}Shape[2] * stride2;`,g=`int stride0 = ${a}Shape[1] * stride1;`;if(f===u&&null==d)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        ${m}\n        ${b}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${o}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${h}.0);\n        return sampleTexture(${a}, uv);\n      }\n    `;if(f===o&&null==d)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${a}Shape[1] * ${a}Shape[2], ${a}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${h}.0);\n        return sampleTexture(${a}, uv);\n      }\n    `;const x=te(a);if(t)return`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${m}\n      ${b}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index + ${x});\n      return sampleTexture(${a}, uv);\n    }\n  `;return`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${u} + col * ${i} +\n          depth * ${o} + depth2;\n      vec2 uv = uvFromFlat(${h}, ${f}, index + ${x});\n      return sampleTexture(${a}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[4],o=t[3]*s,i=t[2]*o,u=t[1]*i,{newShape:c,keptDims:l}=r.util.squeezeShape(t);if(c.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${K(se(e,c))}\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        return ${a}(${oe(t,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${u}, ${i}, ${o}, ${s})) +\n          depth3;\n        ${ne(e)}\n      }\n    `;const d=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,h=p[0],f=p[1];if(f===u&&null==d)return`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${o}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===s&&null==d)return`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const m=te(n);return`\n    float ${a}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${u} + col * ${i} + depth * ${o} +\n          depth2 * ${s} + depth3 + ${m};\n      vec2 uv = uvFromFlat(${h}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:o}=r.util.squeezeShape(t);if(s.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${K(se(e,s))}\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${a}(${oe(t,o)});\n      }\n    `}const i=t[5],u=t[4]*i,c=t[3]*u,l=t[2]*c,d=t[1]*l;if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${d}, ${l}, ${c}, ${u})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${ne(e)}\n      }\n    `;const p=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,f=h[0],m=h[1];if(m===d&&null==p)return`\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${l}, ${c}, ${u}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(m===i&&null==p)return`\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const b=te(n);return`\n    float ${a}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${d} + col * ${l} + depth * ${c} +\n          depth2 * ${u} + depth3 * ${i} + depth4 + ${b};\n      vec2 uv = uvFromFlat(${f}, ${m}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function X(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=L();return`\n    vec4 ${n}() {\n      return ${r.texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=L();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `;const o=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${o[0]}, ${o[1]}, index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,s="get"+a.charAt(0).toUpperCase()+a.slice(1),o=e.shapeInfo.texShape,i=o[0],u=o[1],c=L();if(null!=o&&r.util.arraysEqual(n,o))return t?`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);\n\n        return ${c.texture2D}(${a}, uv);\n      }\n    `:`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${u}.0, ${i}.0);\n\n        return ${c.texture2D}(${a}, uv);\n      }\n    `;if(t)return`\n    vec4 ${s}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${a}TexShape[0]) / 2.0), ceil(float(${a}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${a}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${c.texture2D}(${a}, uv);\n    }\n  `;const l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],d=Math.ceil(n[1]/2);return`\n    vec4 ${s}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${d}, ${l[0]}, ${l[1]}, row, col);\n      return ${c.texture2D}(${a}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,o=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){const r=[1,2],s=["b","row","col"];return`\n        ${X(se(e,n.slice(1)),t)}\n        vec4 ${a}(int b, int row, int col) {\n          return ${a}(${oe(s,r)});\n        }\n      `}const i=L();if(t)return`\n    vec4 ${a}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${i.texture2D}(${r}, uv);\n    }\n  `;const u=o[0],c=o[1],l=Math.ceil(n[2]/2),d=l*Math.ceil(n[1]/2);return`\n    vec4 ${a}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${u}, ${c}, ${d}, ${l}, b, row, col);\n      return ${i.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=L();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${n}, uv);\n    }\n  `;const s=e.shapeInfo.logicalShape,o=s.length,i=e.shapeInfo.texShape,u=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],c=u[0],l=u[1],d=Math.ceil(s[o-1]/2);let p=d*Math.ceil(s[o-2]/2),h="int b, int row, int col",f=`b * ${p} + (row / 2) * ${d} + (col / 2)`;for(let e=2;e<o-1;e++)h=`int b${e}, `+h,p*=s[o-e-1],f=`b${e} * ${p} + `+f;return`\n    vec4 ${r}(${h}) {\n      int index = ${f};\n      int texR = index / ${l};\n      int texC = index - texR * ${l};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${c});\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const Y="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Z="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Q="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",J="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function ee(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function te(e){return`offset${e}`}function ne(e){const t=e.name,n=r.util.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function re(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function ae(e,t,n){const{newShape:a,keptDims:s}=r.util.squeezeShape(t),o=t.length,i=e&&3===o&&1===t[0],u=i?t.slice(1):a,c=!e&&o>1&&!r.util.arraysEqual(t,n)&&a.length<o||i;return{useSqueezeShape:c,uniformShape:c?u:t,keptDims:s}}function se(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function oe(e,t){return t.map((t=>e[t])).join(", ")}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ie(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const a=e.logicalShape,s=t[n],o=s.shape;if(!r.util.arraysEqual(a,o))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${a} and ${o} must match`);if(e.isUniform&&s.isUniform)return;const i=e.texShape,u=s.isUniform?null:s.texData.texShape;if(!r.util.arraysEqual(i,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${u} must match`)}))}function ue(e){return Object(r.env)().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ce{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=i.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=L();this.outputShape=e,this.enableShapeUniforms=ue(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?z(["r","c","d"],e):W(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class le{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=i.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=L();this.outputShape=e,this.enableShapeUniforms=ue(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?z(["r","c","d"],e):W(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class de{constructor(e){this.variableNames=["A"],this.outTexUsage=u.DOWNLOAD;const t=L();this.outputShape=e,this.userCode=`\n      ${G}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pe{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=u.DOWNLOAD;const t=L();this.outputShape=e,this.userCode=`\n      ${G}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class he{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=L();this.outputShape=e,this.enableShapeUniforms=ue(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)"),this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":V(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / texShape[1];\n        int c = imod(flatIndex, texShape[1]);\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n        vec4 values = ${n.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${n.output} = vec4(${r}, 0., 0., 0.);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fe{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=L();this.outputShape=e,this.enableShapeUniforms=ue(this.outputShape.length);let r="",a="result";t&&(a="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let a=0;a<=1;a++){const s=2*t+a;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${a};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${s}] = values[0];\n            } else if (offset == 1) {\n              result[${s}] = values[1];\n            } else if (offset == 2) {\n              result[${s}] = values[2];\n            } else {\n              result[${s}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":V(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${a};\n        }\n    `}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function me(e){const t=L();return function(e,t){const n=_(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(f(e,(()=>e.shaderSource(n,t))),f(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function be(e){return function(e,t){const n=_(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return f(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),f(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function ge(e){return function(e,t){const n=_(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return f(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),f(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}function xe(e,t,n,a,s,o){!function(e,t){const n=Object(r.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const i=function(e){return _(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),u=e.TEXTURE_2D;return f(e,(()=>e.bindTexture(u,i))),f(e,(()=>e.texParameteri(u,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),f(e,(()=>e.texParameteri(u,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),f(e,(()=>e.texParameteri(u,e.TEXTURE_MIN_FILTER,e.NEAREST))),f(e,(()=>e.texParameteri(u,e.TEXTURE_MAG_FILTER,e.NEAREST))),f(e,(()=>e.texImage2D(u,0,a,t,n,0,s,o,null))),f(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),i}function ve(e){return e.internalFormatFloat}function ye(e){return e.internalFormatHalfFloat}function ke(e){return e.downloadTextureFormat}function we(e){return e.internalFormatPackedFloat}function Ie(e){return e.internalFormatPackedHalfFloat}function Se(e,t,n,r,a,s,o,i){const u=e,c=new Float32Array(function(e,t){const[n,r]=p(e,t);return n*r*4}(s,o));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,c),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),c}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class _e{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=Object(r.env)().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){a[e]=t}(t,e)):this.gl=o(t);let n="WEBGL_color_buffer_float";const s="EXT_color_buffer_half_float";if(1===Object(r.env)().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=b(this.gl,e),F(this.gl,t))this.textureHalfFloatExtension=b(this.gl,t);else if(Object(r.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),F(this.gl,s))this.colorBufferHalfFloatExtension=b(this.gl,s);else if(Object(r.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",F(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!F(this.gl,s))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(s)}this.vertexBuffer=be(this.gl),this.indexBuffer=ge(this.gl),this.framebuffer=function(e){return _(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=h(this.gl,this.textureHalfFloatExtension)}get debug(){return Object(r.env)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;f(e,(()=>e.finish())),f(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),f(e,(()=>e.deleteFramebuffer(this.framebuffer))),f(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),f(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),f(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=l(t,n);return xe(e,a,s,ve(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=l(t,n);return xe(e,a,s,ye(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=l(t,n);return xe(e,a,s,ke(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){f(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?f(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):f(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),f(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,a,s){let o,i,u;f(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),a instanceof Uint8Array?(o=new Uint8Array(n*r*4),i=e.UNSIGNED_BYTE,u=e.RGBA):(o=new Float32Array(n*r*4),i=e.FLOAT,u=s.internalFormatPackedFloat),o.set(a),f(e,(()=>e.texImage2D(e.TEXTURE_2D,0,u,n,r,0,e.RGBA,i,o))),f(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=p(t,n);return xe(e,a,s,Ie(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=p(t,n);return xe(e,a,s,we(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(I(this.gl,this.framebuffer),this.outputTexture=null),f(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,r){const[a,s]=l(t,n),o=new Uint8Array(t*n*4);return f(e,(()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,o))),new Float32Array(o.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return Se(this.gl,e,0,0,0,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n,r){const a=e.createBuffer();f(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a)));const s=16*t*n;return f(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ))),f(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),f(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),a}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Object(r.env)().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(a,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=a}else Object(r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Object(r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const r=new Float32Array(t*n*4);return f(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl,n=g(t,e);null==this.vertexShader&&(this.vertexShader=me(t));const r=function(e){return _(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);return f(t,(()=>t.attachShader(r,this.vertexShader))),f(t,(()=>t.attachShader(r,n))),function(e,t){if(f(e,(()=>e.linkProgram(t))),!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,r),this.debug&&v(t,r),this.vertexAttrsAreBound||(this.setProgram(r),this.vertexAttrsAreBound=function(e,t,n){return f(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),y(e,t,"clipSpacePos",n,3,20,0)&&y(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),r}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&f(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&v(this.gl,this.program),f(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return _(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),f(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),k(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,a]=p(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&v(this.gl,this.program),S(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),f(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),f(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=b(this.gl,2===Object(r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Object(r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Object(r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await r.util.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,Object(r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,Object(r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length;++t){if(!e[t]())break}return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||r.util.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),w(this.gl,e,this.framebuffer),this.debug&&S(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(w(this.gl,this.outputTexture,this.framebuffer),this.debug&&S(this.gl)):I(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;w(r,e,this.framebuffer),this.debug&&S(r),this.outputTexture=e,f(r,(()=>r.viewport(0,0,t,n))),f(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),f(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}var Oe=n(53);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:Te,bincountImpl:Ce,bincountReduceImpl:$e,ceilImpl:Ee,concatImpl:Ae,equalImpl:Ne,expImpl:Re,expm1Impl:Fe,floorImpl:Me,gatherNdImpl:De,gatherV2Impl:je,greaterImpl:Pe,greaterEqualImpl:Be,lessImpl:Le,lessEqualImpl:We,linSpaceImpl:ze,logImpl:Ue,maxImpl:Ve,maximumImpl:Ge,minimumImpl:He,multiplyImpl:qe,negImpl:Ke,notEqualImpl:Xe,prodImpl:Ye,rangeImpl:Ze,rsqrtImpl:Qe,sigmoidImpl:Je,simpleAbsImpl:et,sliceImpl:tt,sparseFillEmptyRowsImpl:nt,sparseReshapeImpl:rt,sparseSegmentReductionImpl:at,sqrtImpl:st,stridedSliceImpl:ot,stringNGramsImpl:it,stringSplitImpl:ut,stringToHashBucketFastImpl:ct,subImpl:lt,tileImpl:dt,topKImpl:pt,transposeImpl:ht,uniqueImpl:ft}=Oe;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mt(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function bt(e,t){return 1===t?[e]:mt(e,t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class gt{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;const t=e.length;if(0===t)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=bt("rc",t),r=re(t),a=function(e,t,n){if(1===e)return`rc > ${t[0]}`;let r="";for(let a=e-2;a<e;a++)r+=`${n[a]} >= ${t[a]}`,a<e-1&&(r+="||");return r}(t,e,n),s=function(e,t,n,r){if(1===e)return"";const a=r.slice(-2);return`\n    int r = ${a[0]};\n    int c = ${a[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${t};\n    bool rEdge = rp1 >= ${n};\n  `}(t,e[e.length-1],e[e.length-2],n),o=function(e,t){const n=e.length,r=function(e,t){const n=[];for(let r=0;r<=1;r++)for(let a=0;a<=1;a++){let s=`${0===r?"r":"rp1"}, ${0===a?"c":"cp1"}`;for(let n=2;n<e;n++)s=`${t[t.length-1-n]},`+s;n.push(s)}return n}(n,t);if(1===n)return`getA(rc),\n            rc + 1 >= ${e[0]} ? 0. : getA(rc + 1),\n            0, 0`;return`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(e,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${a}) {\n            setOutput(vec4(0));\n          } else {\n            ${s}\n\n            setOutput(vec4(${o}));\n          }\n        }\n      `}}}class xt{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=ue(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var r,a;
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */this.userCode=`\n      ${r=t,a=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${a?U(["r","c","d"],"inputShape"):W(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":V(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class vt{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=kt(t,n),a=wt(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const s=yt(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const e=this.freeTextures[a].shift();return this.usedTextures[a].push(e),e}let o;return r===c.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===c.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===c.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===c.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===c.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(o),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),o}releaseTexture(e,t,n,a){if(null==this.freeTextures)return;const s=kt(n,a),o=wt(t,s,a);o in this.freeTextures||(this.freeTextures[o]=[]);const i=yt(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,a),u=Object(r.env)().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==u&&this._numBytesAllocated>u?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=i):(this.freeTextures[o].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const c=this.usedTextures[o],l=c.indexOf(e);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");c.splice(l,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function yt(e,t,n,r,a){const s=function(e,t){switch(e){case c.PACKED_2X2_FLOAT32:return we(t);case c.PACKED_2X2_FLOAT16:return Ie(t);case c.UNPACKED_FLOAT32:return ve(t);case c.UNPACKED_FLOAT16:return ye(t);case c.PACKED_4X1_UNSIGNED_BYTE:return ke(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let o;if(a){const[t,n]=p(e[0],e[1]);o=t*n}else{const[t,n]=l(e[0],e[1]);o=t*n}const i=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;throw new Error(`Unknown internal format ${t}`)}(n,s);return o*i}function kt(e,t){if(e===u.UPLOAD)return c.PACKED_2X2_FLOAT32;if(e===u.RENDER||null==e)return function(e){return Object(r.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?c.PACKED_2X2_FLOAT32:c.UNPACKED_FLOAT32:e?c.PACKED_2X2_FLOAT16:c.UNPACKED_FLOAT16}(t);if(e===u.DOWNLOAD||e===u.PIXELS)return c.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function wt(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class It{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=ue(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const St="return abs(x);";const _t="return x;";class Ot{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=ue(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Tt{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;const t=e.length,n=bt("rc",t),r=re(t),a=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),o=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${o}));\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ct=r.kernel_impls.whereImpl,$t={};const Et=Object(r.env)().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class At extends r.KernelBackend{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Object(r.env)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==e){const e=o(Object(r.env)().getNumber("WEBGL_VERSION"));this.binaryCache=((t=Object(r.env)().getNumber("WEBGL_VERSION"))in $t||($t[t]={}),$t[t]),this.gpgpu=new _e(e),this.canvas=e.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;var t;this.textureManager=new vt(this.gpgpu),this.numMBBeforeWarning=null==Object(r.env)().global.screen?1024:Object(r.env)().global.screen.height*Object(r.env)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new r.DataStorage(this,Object(r.engine)())}nextDataId(){return At.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((Object(r.env)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Object(r.env)().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const a={id:this.nextDataId()};return this.texData.set(a,{shape:t,dtype:n,values:e,usage:u.UPLOAD,refCount:1}),a}refCount(e){if(this.texData.has(e)){return this.texData.get(e).refCount}return 0}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}move(e,t,n,a,s){if(Object(r.env)().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===a)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:a,values:t,usage:u.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:a,complexTensorInfos:s,slice:o,shape:i,isPacked:u}=t;if(null!=o){let t;t=u?new Ot(i,_t):new It(i,_t);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:a}],a),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===a)return n;const c=null!=this.activeTimers;let l,d;if(c&&(l=r.util.now()),"complex64"===a){const e=this.readSync(s.real.dataId),t=this.readSync(s.imag.dataId);d=r.backend_util.mergeRealAndImagArrays(e,t)}else d=this.getValuesFromTexture(e);return c&&(this.downloadWaitMs+=r.util.now()-l),this.convertAndCacheOnCPU(e,d)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:a,slice:s,dtype:o,complexTensorInfos:i,isPacked:u}=t;if(null!=s){let t;t=u?new Ot(a,_t):new It(a,_t);const n=this.runWebGLProgram(t,[{dataId:e,shape:a,dtype:o}],o),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if(!Object(r.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Object(r.env)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c,l,p=null;if("complex64"!==o&&Object(r.env)().get("WEBGL_BUFFER_SUPPORTED")){c=this.decode(e);const t=this.texData.get(c.dataId);p=this.gpgpu.createBufferFromTexture(t.texture,...d(a))}if(this.pendingRead.set(e,[]),"complex64"!==o&&await this.gpgpu.createAndWaitForFence(),"complex64"===o){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),t=e[0],n=e[1];l=r.backend_util.mergeRealAndImagArrays(t,n)}else if(null==p)l=this.getValuesFromTexture(e);else{const e=r.util.sizeFromShape(a);l=this.gpgpu.downloadFloat32MatrixFromBuffer(p,e)}if(null!=c&&this.disposeIntermediateTensorInfo(c),null!=p){const e=this.gpgpu.gl;f(e,(()=>e.deleteBuffer(p)))}const h=this.convertAndCacheOnCPU(e,l),m=this.pendingRead.get(e);return this.pendingRead.delete(e),m.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Object(r.engine)().removeDataId(e,this),this.pendingDeletes--),h}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>r.util.decodeString(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Object(r.buffer)(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!m(n)){if(Object(r.env)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:a}=this.texData.get(e),s=r.util.sizeFromShape(t);if(Object(r.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...d(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),a}const o=Object(r.env)().getBool("WEBGL_PACK")&&!0===a,i=o?$(t):t,u=o?new pe(i):new de(i),c=this.runWebGLProgram(u,[{shape:i,dtype:n,dataId:e}],"float32"),l=this.texData.get(c.dataId),p=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture,l.texShape[0],l.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(c),p}timerAvailable(){return Object(r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(e){const t=this.activeTimers,n=[];let a=!1;null==this.programTimersStack?(this.programTimersStack=n,a=!0):this.activeTimers.push(n),this.activeTimers=n,e();const s=r.util.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),o=r.util.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,a&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(Object(r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(s);i.kernelMs=r.util.sum(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:o[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Object(r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:r.util.now(),endMs:null}}endTimer(e){return Object(r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=r.util.now(),e)}async getQueryTime(e){if(Object(r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:a,isPacked:s,slice:o}=this.texData.get(e),i=o&&o.origDataId||e,u=this.dataRefCount.get(i);u>1?this.dataRefCount.set(i,u-1):(this.dataRefCount.delete(i),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,s)));const c=this.texData.get(e);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=Et){return Object(r.env)().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&r.util.sizeFromShape(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){r.backend_util.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return Ct(e.shape,t)}packedUnaryOp(e,t,n){const a=new Ot(e.shape,t),s=this.compileAndRun(a,[e],n);return Object(r.engine)().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=et(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Object(r.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,St,e.dtype);const t=new It(e.shape,St),n=this.compileAndRun(t,[e]);return Object(r.engine)().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&r.util.isString(n[0])){const s=n.map((e=>r.util.encodeString(e)));a=this.write(s,e,t)}else a=this.write(n,e,t);return this.texData.get(a).usage=null,{dataId:a,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:a}=this.makeTensorInfo(e,t,n);return Object(r.engine)().makeTensorFromDataId(a,e,t,this)}unpackTensor(e){const t=new Tt(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new gt(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[T(e.shape),...C(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[T(t),...C(t)],s=new xt(a,n),o=[n],i=this.runWebGLProgram(s,[r],e.dtype,o,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e){const t=this.texData.get(e),{isPacked:n,shape:r,dtype:a}=t,s=$(r);let o;const i=d(s);o=n?new le(s):new ce(s);const u=[i];return{dtype:a,shape:r,dataId:this.runWebGLProgram(o,[{shape:s,dtype:a,dataId:e}],a,u,!0).dataId}}runWebGLProgram(e,t,n,a,s=!1){const o=this.makeTensorInfo(e.outputShape,n),u=this.texData.get(o.dataId);if(e.packedOutput&&(u.isPacked=!0),e.outPackingScheme===i.DENSE){const t=d(e.outputShape);u.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(u.usage=e.outTexUsage),0===r.util.sizeFromShape(o.shape))return u.values=r.util.getTypedArrayFromDType(o.dtype,0),o;const c=[],l=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&r.util.sizeFromShape(t.shape)<=Object(r.env)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}else if(!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),c.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!A(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),c.push(t),n=this.texData.get(t.dataId),e.shape=r}return this.uploadToGPU(t.dataId),{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(o.dataId);const p={shape:o.shape,texData:u,isUniform:!1},h=function(e,t,n){let a="";t.concat(n).forEach((t=>{const s=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const o=t.texData.texShape,{useSqueezeShape:i,uniformShape:u,keptDims:c}=ae(e.packedInputs,t.shape,o);let l="",d="",p="";if(1===u.length&&e.packedInputs){const e=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];l=`${e[0]>1}_${e[1]>1}`}else if(2!==u.length||e.packedInputs){if(u.length>2&&!e.packedInputs){const e=r.util.computeStrides(u);p=`${e[0]===o[1]}_${e[e.length-1]===o[1]}`}}else d=`${u[0]>1}_${u[1]>1}`;const h=t.shape.length,f=2===u.length&&r.util.arraysEqual(t.shape,o),m=1===r.util.sizeFromShape(t.shape),b=r.backend_util.getBroadcastDims(t.shape,n.shape),g=!e.packedInputs&&h===n.shape.length&&r.util.arraysEqual(o,n.texData.texShape),x=e.packedInputs||u.length>2?"":`${o[0]>1}_${o[1]>1}`;a+=`${h}_${g}_${i?c:""}_${u.length}_${m}_${b}_${f}_${l}_${d}_${p}_${x}_${s}`}else{const e=t.isUniform?"uniform":t.texData.texShape;a+=`${t.shape}_${e}_${s}`}}));const s=e.userCode;let o=e.constructor.name;return o+="_"+a+"_"+s+`${Object(r.env)().getNumber("WEBGL_VERSION")}`,o}(e,l,p),f=this.getAndSaveBinary(h,(()=>function(e,t,n,a){const s=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),o=s.map((e=>e.shapeInfo)),i={logicalShape:a.shape,texShape:a.texData.texShape,isUniform:!1,isPacked:a.texData.isPacked,flatOffset:null},u=q(s,i,t),c=e.createProgram(u);let l=null;const d=e.getUniformLocation(c,"NAN",!1);1===Object(r.env)().getNumber("WEBGL_VERSION")&&(l=e.getUniformLocation(c,"INFINITY",!1));const p=!1,h={},f={},m={};for(let n=0;n<t.variableNames.length;n++){const r=t.variableNames[n];h[r]=e.getUniformLocation(c,r,p),h[`offset${r}`]=e.getUniformLocation(c,`offset${r}`,p),t.enableShapeUniforms&&(f[`${r}Shape`]=e.getUniformLocation(c,`${r}Shape`,p),m[`${r}TexShape`]=e.getUniformLocation(c,`${r}TexShape`,p))}let b,g,x;t.enableShapeUniforms&&(b=e.getUniformLocation(c,"outShape",p),x=e.getUniformLocation(c,"outShapeStrides",p),g=e.getUniformLocation(c,"outTexShape",p));const v=[];return t.customUniforms&&t.customUniforms.forEach(((t,n)=>{v[n]=e.getUniformLocation(c,t.name,p)})),{program:t,source:u,webGLProgram:c,uniformLocations:h,customUniformLocations:v,inShapeInfos:o,outShapeInfo:i,infLoc:l,nanLoc:d,inShapesLocations:f,inTexShapesLocations:m,outShapeLocation:b,outShapeStridesLocation:x,outTexShapeLocation:g}}(this.gpgpu,e,l,p))),m=null!=this.activeTimers;let b;m&&(b=this.startTimer()),function(e,t,n,a,s){t.program.enableShapeUniforms||(ie(t.inShapeInfos,n),ie([t.outShapeInfo],[a]));const o=a.texData.texture,i=a.texData.texShape;a.texData.isPacked?e.setOutputPackedMatrixTexture(o,i[0],i[1]):e.setOutputMatrixTexture(o,i[0],i[1]),e.setProgram(t.webGLProgram),1===Object(r.env)().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,a)=>{const s=t.program.variableNames[a],o=t.uniformLocations[s],i=t.uniformLocations[`offset${s}`],u=t.inShapesLocations[`${s}Shape`],c=t.inTexShapesLocations[`${s}TexShape`];if(u){const{uniformShape:r}=ae(t.program.packedInputs,n.shape,n.texData.texShape);switch(r.length){case 1:e.gl.uniform1iv(u,new Int32Array(r));break;case 2:e.gl.uniform2iv(u,new Int32Array(r));break;case 3:e.gl.uniform3iv(u,new Int32Array(r));break;case 4:e.gl.uniform4iv(u,new Int32Array(r))}}if(c&&e.gl.uniform2i(c,n.texData.texShape[0],n.texData.texShape[1]),null!=o)if(n.isUniform)if(r.util.sizeFromShape(n.shape)<2)e.gl.uniform1f(o,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(o,t)}else null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture,o,a)}));const u=t.outShapeLocation;if(u)switch(a.shape.length){case 1:e.gl.uniform1iv(u,new Int32Array(a.shape));break;case 2:e.gl.uniform2iv(u,new Int32Array(a.shape));break;case 3:e.gl.uniform3iv(u,new Int32Array(a.shape));break;case 4:e.gl.uniform4iv(u,new Int32Array(a.shape))}if(t.outShapeStridesLocation){const n=r.util.computeStrides(a.shape);switch(a.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,a.texData.texShape[0],a.texData.texShape[1]),t.program.customUniforms&&s&&t.program.customUniforms.forEach(((n,r)=>{const a=t.customUniformLocations[r],o=s[r];if("float"===n.type)e.gl.uniform1fv(a,o);else if("vec2"===n.type)e.gl.uniform2fv(a,o);else if("vec3"===n.type)e.gl.uniform3fv(a,o);else if("vec4"===n.type)e.gl.uniform4fv(a,o);else if("int"===n.type)e.gl.uniform1iv(a,o);else if("ivec2"===n.type)e.gl.uniform2iv(a,o);else if("ivec3"===n.type)e.gl.uniform3iv(a,o);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(a,o)}})),e.executeProgram()}(this.gpgpu,f,l,p,a),c.forEach((e=>this.disposeIntermediateTensorInfo(e))),m&&(b=this.endTimer(b),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(b)}));const g=Object(r.env)().get("WEBGL_FLUSH_THRESHOLD");if(g>0){const e=r.util.now();e-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!Object(r.env)().getBool("WEBGL_LAZILY_UNPACK")&&u.isPacked&&!1===s){const e=this.unpackTensor(o);return this.disposeIntermediateTensorInfo(o),e}return o}compileAndRun(e,t,n,r,a=!1){n=n||t[0].dtype;return this.runWebGLProgram(e,t,n,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!Object(r.env)().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Object(r.tidy)((()=>{if(!Object(r.env)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=Object(r.env)().getBool("DEBUG");Object(r.env)().set("DEBUG",!1);const t=this.abs(Object(r.scalar)(1e-8)).dataSync()[0];if(Object(r.env)().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:a,values:s,texture:o,usage:i,isPacked:c}=t;if(null!=o)return;const l=null!=this.activeTimers;let d;l&&(d=r.util.now());let h=t.texShape;if(null==h&&(h=function(e,t=!1){let n=Object(r.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?r.util.nearestLargerEven(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=r.util.squeezeShape(e);e=t.newShape}let a=r.util.sizeFromShape(e);if(e.length<=1&&a<=n)return[1,a];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=T(e);let n=2,s=2;return e.length&&([n,s]=C(e)),a=t*(n/2)*(s/2),r.util.sizeToSquarishShape(a).map((e=>2*e))}return r.util.sizeToSquarishShape(a)}(n,c),t.texShape=h),null!=s){const e=$(n);let o,i=h[1],f=h[0];const m=s instanceof Uint8Array;c?([i,f]=p(h[0],h[1]),o=new fe(e,m)):o=new he(e,m);const b=this.makeTensorInfo([f,i],a);this.texData.get(b.dataId).usage=m?u.PIXELS:u.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(b.dataId),i,f,s);const g=[[f,i]],x=!0,v=this.runWebGLProgram(o,[b],a,g,x),y=this.texData.get(v.dataId);t.texture=y.texture,t.texShape=y.texShape,t.isPacked=y.isPacked,t.usage=y.usage,this.disposeIntermediateTensorInfo(b),this.texData.delete(v.dataId),t.values=null,l&&(this.uploadWaitMs+=r.util.now()-d)}else{const e=this.acquireTexture(h,i,a,c);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*r.util.bytesPerElement(t)}}At.nextDataId=0,
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
r.device_util.isBrowser()&&Object(r.registerBackend)("webgl",(()=>new At),2);class Nt{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=r.backend_util.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=ue(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rt{constructor(e,t,n,a=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r.backend_util.assertAndGetBroadcastShape(t,n);const s=this.outputShape.length;this.enableShapeUniforms=ue(s);let o="";if(a)if(0===s||1===r.util.sizeFromShape(this.outputShape))o="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{if(o=`\n          ${re(s)} coords = getOutputCoords();\n        `,1===s)this.enableShapeUniforms?o+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":o+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=bt("coords",s);this.enableShapeUniforms?o+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= outShape[${s} - 2];\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= outShape[${s} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:o+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${o}\n\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ft(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const Mt={kernelName:r.Identity,backendName:"webgl",kernelFunc:Ft};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dt(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),o=n.texData.get(s.dataId),i=Ft({inputs:{x:r},backend:n}),u=Ft({inputs:{x:a},backend:n});return o.complexTensorInfos={real:i,imag:u},s}const jt={kernelName:r.Complex,backendName:"webgl",kernelFunc:Dt},Pt="return (a < 0.) ? b * a : a;",Bt="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lt={kernelName:r.LeakyRelu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{alpha:o}=a,i=n.makeTensorInfo([],"float32",r.util.createScalarValue(o,"float32")),u=Object(r.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Rt(Bt,s.shape,i.shape):new Nt(Pt,s.shape,i.shape),c=n.runWebGLProgram(u,[s,i],s.dtype);return n.disposeIntermediateTensorInfo(i),c}},Wt="return (a < 0.) ? b * a : a;",zt="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ut={kernelName:r.Prelu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a,alpha:s}=t,o=Object(r.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Rt(zt,a.shape,s.shape):new Nt(Wt,a.shape,s.shape);return n.runWebGLProgram(o,[a,s],a.dtype)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vt({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:a}){return({inputs:s,backend:o})=>{const{x:i}=s,u=o,c=a||i.dtype;if(u.shouldExecuteOnCPU([i])&&null!=n){const e=u.texData.get(i.dataId),t=n(e.values,c);return u.makeTensorInfo(i.shape,c,t)}let l;return l=Object(r.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new Ot(i.shape,t):new It(i.shape,e),u.runWebGLProgram(l,[i],c)}}function Gt({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:a=!1,cpuKernelImpl:s,dtype:o}){return({inputs:i,backend:u})=>{const{a:c,b:l}=i,d=u;if(a&&"complex64"===c.dtype){const t=d.texData.get(c.dataId),n=d.texData.get(l.dataId),[a,s]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,a]=t,s={dataId:n.dataId,dtype:n.dtype,shape:c.shape},o={dataId:a.dataId,dtype:a.dtype,shape:l.shape},i=new Nt(e,c.shape,l.shape);return d.runWebGLProgram(i,[s,o],Object(r.upcastType)(n.dtype,a.dtype))})),o=Dt({inputs:{real:a,imag:s},backend:d});return d.disposeIntermediateTensorInfo(a),d.disposeIntermediateTensorInfo(s),o}const p=o||Object(r.upcastType)(c.dtype,l.dtype);if(("string"===c.dtype||"string"===l.dtype||d.shouldExecuteOnCPU([c,l]))&&null!=s){const e=d.texData.get(c.dataId).values,t=d.texData.get(l.dataId).values,n="string"===c.dtype?r.backend_util.fromUint8ToStringArray(e):e,a="string"===c.dtype?r.backend_util.fromUint8ToStringArray(t):t,[o,i]=s(c.shape,l.shape,n,a,p),u=d.makeTensorInfo(i,p);return d.texData.get(u.dataId).values=o,u}let h;return h=Object(r.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new Rt(t,c.shape,l.shape,n):new Nt(e,c.shape,l.shape),d.runWebGLProgram(h,[c,l],p)}}function Ht(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?zt:Wt;if("leakyrelu"===e)return t?Bt:Pt;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qt{constructor(e,t,n,r=!1,a=!1,s=!1,o=null,i=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=ue(this.outputShape.length);const c=r?e[1]:e[2],l=Math.ceil(c/2),d=r?"i * 2, rc.y":"rc.y, i * 2",p=a?"rc.z, i * 2":"i * 2, rc.z",h=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",b="";o&&(m=i?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${o}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${o}\n        }`:`vec4 activation(vec4 x) {\n          ${o}\n        }`,b="result = activation(result);");const g=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let x="rc.x",v="rc.x";e[0]<t[0]?x=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(v=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${l}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${l}; i++) {\n          int batchA = ${x};\n          int batchB = ${v};\n          vec4 a = getMatrixA(batchA, ${d});\n          vec4 b = getMatrixB(batchB, ${p});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${h[0]} * ${f[0]});\n          result += (${h[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${g}\n\n        ${b}\n\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kt="return areal * breal - aimag * bimag;",Xt="return areal * bimag + aimag * breal;";class Yt{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=r.backend_util.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zt="return a * b;";function Qt(e){const{inputs:t,backend:n}=e,{a:a,b:s}=t,o=r.backend_util.upcastType(a.dtype,s.dtype);if("complex64"===a.dtype){const e=n.texData.get(a.dataId),t=n.texData.get(s.dataId),r=new Yt(Kt,a.shape,s.shape),o=new Yt(Xt,a.shape,s.shape),i=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:a.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],u=n.runWebGLProgram(r,i,"float32"),c=n.runWebGLProgram(o,i,"float32"),l=Dt({inputs:{real:u,imag:c},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),l}if(n.shouldExecuteOnCPU([a,s])){const e=n.texData.get(a.dataId),t=n.texData.get(s.dataId),[r,i]=qe(a.shape,s.shape,e.values,t.values,o),u=n.makeTensorInfo(i,o);return n.texData.get(u.dataId).values=r,u}let i;return i=Object(r.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Rt(Zt,a.shape,s.shape):new Nt(Zt,a.shape,s.shape),n.runWebGLProgram(i,[a,s],o)}const Jt={kernelName:r.Multiply,backendName:"webgl",kernelFunc:Qt};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function en(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{shape:o}=a,i=n,u=r.util.sizeFromShape(s.shape),c=r.util.inferFromImplicitShape(o,u),l=r.util.sizeFromShape(c);r.util.assert(u===l,(()=>`The new shape (${c}) has ${l} elements and the old shape (${s.shape}) has ${u} elements. The new shape and old shape must have the same number of elements.`));const d=i.texData.get(s.dataId);return!d.isPacked||A(s.shape,c)||null!==d.texture&&A(d.shape,c)?(i.incRef(s.dataId),{dataId:s.dataId,shape:c,dtype:s.dtype}):function(e,t,n){const r=[T(e.shape),...C(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},s=[T(t),...C(t)],o=new xt(s,r),i=[r],u=n.runWebGLProgram(o,[a],e.dtype,i,!0);return{dataId:u.dataId,shape:t,dtype:u.dtype}}(s,c,i)}const tn={kernelName:r.Reshape,backendName:"webgl",kernelFunc:en};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nn{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:s,outSize:o}=e;this.outputShape=[a,o];const i=4*Math.floor(n/4),u=n%4;let c="sumValue += dot(values, ones);";if(null!=t){const e=1/t;c=`sumValue += dot(values * ${r.util.isInt(e)?e.toPrecision(2):e}, ones);`}let l="";s%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${c}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===u}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${c}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${c}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${c}\n        }\n        setOutput(sumValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rn{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let o="0.0",i="";"prod"===t?o="1.0":"min"===t?(o="1.0 / 1e-20",i="min"):"max"===t&&(o="-1.0 / 1e-20",i="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const c=4*Math.floor(n/4),l=n%4;let d=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${i}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${i}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,p="vec4";"all"===t?(o="1.0",d="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===t&&(o="0.0",d="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let h="";a%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${o};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${h}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${o});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${c}; i += 4) {\n          int inIdx = inOffset + i;\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${d}\n        }\n\n        int inIdx = inOffset + ${c};\n        if (${1===l}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${2===l}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${3===l}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${d}\n        }\n        setOutput(${u});\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function an(e,t,n,a){const s=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],a=r.backend_util.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:a,outSize:Math.ceil(n/a)})}return t}(e.shape);let o=e;for(let r=0;r<s.length;r++){const{inSize:i,windowSize:u,outSize:c}=s[r];let l,d;l="mean"===n?0===r?new nn({windowSize:u,inSize:i,batchSize:e.shape[0],outSize:c},i):new nn({windowSize:u,inSize:i,batchSize:e.shape[0],outSize:c}):new rn({windowSize:u,inSize:i,batchSize:e.shape[0],outSize:c},n),d=o,o=a.runWebGLProgram(l,[o],t),d.dataId!==e.dataId&&a.disposeIntermediateTensorInfo(d)}return o}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sn{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=re(this.rank),a=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}}class on{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=re(this.rank),a=mt("rc",this.rank),s=new Array(this.rank);for(let e=0;e<t.length;e++)s[t[e]]=a[e];const o=`vec2(${s.slice(-2).join()})`,i=`++${a[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${s.join()}), ${o})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${i}) {\n        result[1] = ${u};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${i}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function un(e,t,n){const a=Object(r.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new on(e.shape,t):new sn(e.shape,t);return n.runWebGLProgram(a,[e],e.dtype)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function cn(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:o,keepDims:i}=a;return function(e,t,n,a){const s=t,o=e.shape.length,i=r.util.parseAxisParam(s,e.shape);let u=i;const c=r.backend_util.getAxesPermutation(u,o),l=null!=c;let d=e;l&&(d=un(e,c,a),u=r.backend_util.getInnerMostAxes(u.length,o)),r.backend_util.assertAxesAreInnerMostDims("sum",u,o);const[p,h]=r.backend_util.computeOutAndReduceShapes(d.shape,u);let f=p;n&&(f=r.backend_util.expandShapeToKeepDim(p,i));const m=r.util.sizeFromShape(h),b=en({inputs:{x:d},attrs:{shape:[r.util.sizeFromShape(e.shape)/m,m]},backend:a}),g=an(b,Object(r.sumOutType)(e.dtype),"sum",a),x=en({inputs:{x:g},attrs:{shape:f},backend:a});return a.disposeIntermediateTensorInfo(b),a.disposeIntermediateTensorInfo(g),l&&a.disposeIntermediateTensorInfo(d),x}(s,o,i,n)}const ln={kernelName:r.Sum,backendName:"webgl",kernelFunc:cn};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dn(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{perm:s}=r,o=n,i=a.shape.length,u=new Array(i);for(let e=0;e<u.length;e++)u[e]=a.shape[s[e]];let c;if(o.shouldExecuteOnCPU([a])){const e=o.texData.get(a.dataId).values,t=ht(e,a.shape,a.dtype,s,u);c=o.makeTensorInfo(u,a.dtype);o.texData.get(c.dataId).values=t}else c=un(a,s,o);return c}const pn={kernelName:r.Transpose,backendName:"webgl",kernelFunc:dn};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hn({a:e,b:t,transposeA:n,transposeB:a,backend:s,bias:o=null,preluActivationWeights:i=null,leakyreluAlpha:u=0,activation:c=null}){const l=e.shape.length,d=t.shape.length,p=n?e.shape[l-2]:e.shape[l-1],h=a?t.shape[d-1]:t.shape[d-2],f=n?e.shape[l-1]:e.shape[l-2],m=a?t.shape[d-2]:t.shape[d-1],b=e.shape.slice(0,-2),g=t.shape.slice(0,-2),x=r.util.sizeFromShape(b),v=r.util.sizeFromShape(g),y=x===v||1===x||1===v;r.util.assert(l>=2&&d>=2&&y,(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${b}) and (${g}).`));const k=(x>v?e.shape.slice(0,-2):t.shape.slice(0,-2)).concat([f,m]);r.util.assert(p===h,(()=>`Error in matMul: inner shapes (${p}) and (${h}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${a} must match.`));const w=n?[x,p,f]:[x,f,p],I=a?[v,m,h]:[v,h,m],S=en({inputs:{x:e},backend:s,attrs:{shape:w}}),_=en({inputs:{x:t},backend:s,attrs:{shape:I}}),O=[S,_],T=Math.max(x,v),C=n?S.shape[1]:S.shape[2],$=null!=o,E=null!=i,A="leakyrelu"===c,N=null!=c?Ht(c,!0):null;let R;if((1===f||1===m)&&C>1e3&&!1===($||E||A||null!=N)){let e=S,t=_;n&&(e=dn({inputs:{x:S},backend:s,attrs:{perm:[0,2,1]}}),O.push(e)),a&&(t=dn({inputs:{x:_},backend:s,attrs:{perm:[0,2,1]}}),O.push(t));const r=1===m;let o=e;1!==m&&(o=en({inputs:{x:e},backend:s,attrs:{shape:[T,C,1]}}),O.push(o));const i=1===m?2:1;let u=t;r&&(u=en({inputs:{x:t},backend:s,attrs:{shape:[T,1,C]}}),O.push(u));const c=Qt({inputs:{a:o,b:u},backend:s});R=cn({inputs:{x:c},backend:s,attrs:{axis:i,keepDims:!0}}),O.push(c)}else{const c=Object(r.upcastType)(e.dtype,t.dtype),l=new qt(w,I,[T,f,m],n,a,$,N,E,A),d=[S,_];if(null!=o&&d.push(o),E&&d.push(i),A){const e=s.makeTensorInfo([],"float32",r.util.createScalarValue(u,"float32"));d.push(e),O.push(e)}R=s.runWebGLProgram(l,d,c)}const F=en({inputs:{x:R},backend:s,attrs:{shape:k}});O.push(R);for(const e of O)s.disposeIntermediateTensorInfo(e);return F}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fn={kernelName:r._FusedMatMul,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:s,bias:o,preluActivationWeights:i}=t,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:d}=r;return hn({a:a,b:s,transposeA:u,transposeB:c,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:d,activation:l})}},mn="return abs(x);";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bn={kernelName:r.Abs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])&&"complex64"!==a.dtype){const e=n.texData.get(a.dataId),t=et(e.values);return n.makeTensorInfo(a.shape,a.dtype,t)}let s;return s=Object(r.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Ot(a.shape,mn):new It(a.shape,mn),n.runWebGLProgram(s,[a],a.dtype)}},gn=Vt({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),xn={kernelName:r.Acos,backendName:"webgl",kernelFunc:gn},vn=Vt({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),yn={kernelName:r.Acosh,backendName:"webgl",kernelFunc:vn},kn="return a + b;",wn=Gt({opSnippet:kn,packedOpSnippet:kn,supportsComplex:!0,cpuKernelImpl:Te}),In={kernelName:r.Add,backendName:"webgl",kernelFunc:wn};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Sn{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _n{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const On={kernelName:r.AddN,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a}=t,s=n;if(1===s.length)return Ft({inputs:{x:s[0]},backend:a});if(s.length>Object(r.env)().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(s.length/2),n=e({inputs:s.slice(0,t),backend:a}),r=e({inputs:s.slice(t),backend:a});return e({inputs:[n,r],backend:a})}const o=s.map((e=>e.dtype)).reduce(((e,t)=>Object(r.upcastType)(e,t))),i=s.map((e=>e.shape)),u=Object(r.env)().getBool("WEBGL_PACK")?new _n(s[0].shape,i):new Sn(s[0].shape,i);return a.runWebGLProgram(u,s,o)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tn={kernelName:r.All,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:o,keepDims:i}=a,u=s.shape.length,c=r.util.parseAxisParam(o,s.shape);let l=c;const d=r.backend_util.getAxesPermutation(l,u);let p=s;null!=d&&(p=dn({inputs:{x:s},backend:n,attrs:{perm:d}}),l=r.backend_util.getInnerMostAxes(l.length,u)),r.backend_util.assertAxesAreInnerMostDims("all",l,u);const[h,f]=r.backend_util.computeOutAndReduceShapes(p.shape,l),m=en({inputs:{x:p},backend:n,attrs:{shape:[-1,r.util.sizeFromShape(f)]}}),b=an(m,m.dtype,"all",n);let g;if(i){g=en({inputs:{x:b},backend:n,attrs:{shape:r.backend_util.expandShapeToKeepDim(h,c)}})}else g=en({inputs:{x:b},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),null!=d&&n.disposeIntermediateTensorInfo(p),g}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cn={kernelName:r.Any,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:o,keepDims:i}=a,u=s.shape.length,c=r.util.parseAxisParam(o,s.shape);let l=c;const d=r.backend_util.getAxesPermutation(l,u);let p=s;null!=d&&(p=dn({inputs:{x:s},backend:n,attrs:{perm:d}}),l=r.backend_util.getInnerMostAxes(l.length,u)),r.backend_util.assertAxesAreInnerMostDims("any",l,u);const[h,f]=r.backend_util.computeOutAndReduceShapes(p.shape,l),m=en({inputs:{x:p},backend:n,attrs:{shape:[-1,r.util.sizeFromShape(f)]}}),b=an(m,m.dtype,"any",n);let g;if(i){g=en({inputs:{x:b},backend:n,attrs:{shape:r.backend_util.expandShapeToKeepDim(h,c)}})}else g=en({inputs:{x:b},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),null!=d&&n.disposeIntermediateTensorInfo(p),g}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $n{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:a,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];const o="max"===t?">":"<",i=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${i};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${o} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class En{constructor(e,t,n,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,r.util.assert(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const s=e[e.length-1],o=Math.ceil(s/t);this.outputShape=e.slice(0,-1),o>1&&this.outputShape.push(o),a||this.variableNames.push("bestIndicesA");const i=this.outputShape,u=i.length,c=re(u),l=bt("coords",u);let d,p;if(1===o){p=u+1;const e=re(p);d=`\n        ${e} sourceLocR = ${e}(${l.join()}, 0);\n        ++${l[u-1]};\n        ${e} sourceLocG = ${e}(${l.join()}, 0);\n        ++${l[u-2]};\n        ${e} sourceLocA = ${e}(${l.join()}, 0);\n        --${l[u-1]};\n        ${e} sourceLocB = ${e}(${l.join()}, 0);\n        --${l[u-2]};`}else p=u,d=`\n        ${c} sourceLocR = coords;\n        ++${l[u-1]};\n        ${c} sourceLocG = coords;\n        ++${l[u-2]};\n        ${c} sourceLocA = coords;\n        --${l[u-1]};\n        ${c} sourceLocB = coords;\n        --${l[u-2]};`;const h=["x","y","z","w","u","v"].slice(0,p),f="."+h[p-1],m=h.map((e=>"int "+e)),b=bt("sourceLocR",p-1).concat("inIdx.r"),g=bt("sourceLocG",p-1).concat("inIdx.g"),x=bt("sourceLocB",p-1).concat("inIdx.b"),v=bt("sourceLocA",p-1).concat("inIdx.a"),y="max"===n?"greaterThan":"lessThan",k=a?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${x.join()}),\n                             getBestIndicesAChannel(${v.join()})));`,w=`vec4(\n            getAChannel(${b.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${x.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${v.join()}) : 0.)`,I=a?"":`\n      float getBestIndicesAChannel(${m.join()}) {\n        return getChannel(getBestIndicesA(${h.join()}),\n                                          vec2(${h.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${m.join()}) {\n        return getChannel(getA(${h.join()}),\n                               vec2(${h.slice(-2).join()}));\n      }\n      ${I}\n      void main() {\n        ${c} coords = getOutputCoords();\n        bool hasNextCol = ${l[u-1]} < ${i[u-1]-1};\n        bool hasNextRow = ${l[u-2]} < ${i[u-2]-1};\n        ${d}\n        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},\n          sourceLocB${f}, sourceLocA${f}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${k}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${y}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function An(e,t,n,a=null){let s=t.shape[0],o=t.shape[1];null!=a&&(s=a.shape[0],o=a.shape[1]);const i=r.backend_util.computeOptimalWindowSize(o),u={windowSize:i,inSize:o,batchSize:s,outSize:Math.ceil(o/i)},c=new $n(u,n,null==a),l=[t];null!=a&&l.push(a);const d=e.runWebGLProgram(c,l,"int32");if(1===d.shape[1])return d;const p=An(e,t,n,d);return e.disposeIntermediateTensorInfo(d),p}function Nn(e,t,n,a=null){const s=null!=a?a.shape:t.shape,o=s[s.length-1],i=r.backend_util.computeOptimalWindowSize(o),u=new En(s,i,n,null==a),c=null==a?[t]:[t,a],l=e.runWebGLProgram(u,c,"int32");if(l.shape.length===t.shape.length){const r=Nn(e,t,n,l);return e.disposeIntermediateTensorInfo(l),r}return l}function Rn(e,t,n,a){const s=[n];if(r.backend_util.assertAxesAreInnerMostDims("arg"+a.charAt(0).toUpperCase()+a.slice(1),s,t.shape.length),!Object(r.env)().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],o=e.texData.get(t.dataId);let i=t;null!==o&&o.isPacked&&(i=e.unpackTensor(t),n.push(i));const[u,c]=r.backend_util.computeOutAndReduceShapes(i.shape,s),l=r.util.sizeFromShape(c),d=en({inputs:{x:i},backend:e,attrs:{shape:[-1,l]}});n.push(d);const p=An(e,d,a);n.push(p);const h=en({inputs:{x:p},backend:e,attrs:{shape:u}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),h}return Nn(e,t,a)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fn={kernelName:r.ArgMax,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:o}=a;let i=r.util.parseAxisParam(o,s.shape);const u=r.backend_util.getAxesPermutation(i,s.shape.length);let c=s;const l=[];null!=u&&(c=dn({inputs:{x:s},backend:n,attrs:{perm:u}}),l.push(c),i=r.backend_util.getInnerMostAxes(i.length,c.shape.length)),r.backend_util.assertAxesAreInnerMostDims("argMax",[i[0]],c.shape.length);const d=Rn(n,c,i[0],"max");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mn={kernelName:r.ArgMin,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:o}=a;let i=r.util.parseAxisParam(o,s.shape);const u=r.backend_util.getAxesPermutation(i,s.shape.length);let c=s;const l=[];null!=u&&(c=dn({inputs:{x:s},backend:n,attrs:{perm:u}}),l.push(c),i=r.backend_util.getInnerMostAxes(i.length,c.shape.length)),r.backend_util.assertAxesAreInnerMostDims("argMin",[i[0]],c.shape.length);const d=Rn(n,c,i[0],"min");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},Dn=Vt({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),jn={kernelName:r.Asin,backendName:"webgl",kernelFunc:Dn},Pn=Vt({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),Bn={kernelName:r.Asinh,backendName:"webgl",kernelFunc:Pn},Ln=Vt({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),Wn={kernelName:r.Atan,backendName:"webgl",kernelFunc:Ln},zn=Gt({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Un={kernelName:r.Atan2,backendName:"webgl",kernelFunc:zn},Vn=Vt({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),Gn={kernelName:r.Atanh,backendName:"webgl",kernelFunc:Vn};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Hn{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,o=e.strideHeight,i=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,l=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=e.padInfo.top,h=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,b=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let g="0.0";if(f||(g="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${o}, ${i});\n        const ivec2 pads = ivec2(${p}, ${h});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${l};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d};\n                wC += ${c}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?m:b:`wR * ${d} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(x="avgValue / count");const v=4*Math.floor(s/4),y=s%4,k=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${o}, ${i});\n      const ivec2 pads = ivec2(${p}, ${h});\n      const float initializationValue = ${g};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${g});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${l};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${v}; wC += 4) {\n            int xC = xCCorner + wC * ${c};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              getValue(batch, xR, xC + 2 * ${c}, d),\n              getValue(batch, xR, xC + 3 * ${c}, d)\n            );\n\n            ${k}\n          }\n\n          int xC = xCCorner + ${v};\n          if (${1===y}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${k}\n          } else if (${2===y}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${k}\n          } else if (${3===y}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              getValue(batch, xR, xC + 2 * ${c}, d),\n              initializationValue\n            );\n\n            ${k}\n          }\n        }\n        setOutput(${x});\n      }\n    `}}class qn{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,o=e.strideDepth,i=e.strideHeight,u=e.strideWidth,c=e.dilationDepth,l=e.dilationHeight,d=e.dilationWidth,p=e.effectiveFilterDepth,h=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,b=e.padInfo.top,g=e.padInfo.left;this.outputShape=e.outShape;const x="avg"===t;let v="0.0";if(x||(v="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${o}, ${i}, ${u});\n        const ivec3 pads = ivec3(${m}, ${b}, ${g});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${p};\n              wD += ${c}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${h};\n                wR += ${l}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${d}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${h} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let y=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(y="avgValue / count");const k=4*Math.floor(s/4),w=s%4,I=`\n      if (${x}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${o}, ${i}, ${u});\n      const ivec3 pads = ivec3(${m}, ${b}, ${g});\n      const float initializationValue = ${v};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${v});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${c}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h};\n            wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${k}; wC += 4) {\n              int xC = xCCorner + wC * ${d};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${d}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${k};\n            if (${1===w}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===w}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===w}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${y});\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kn={kernelName:r.AvgPool,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t;P(s,"avgPool");const{filterSize:o,strides:i,pad:u,dimRoundingMode:c}=a;r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=r.backend_util.computePool2DInfo(s.shape,o,i,1,u,c);if(1===l.filterWidth&&1===l.filterHeight&&r.util.arraysEqual(l.inShape,l.outShape))return Ft({inputs:{x:s},backend:n});const d=new Hn(l,"avg",!1);return n.runWebGLProgram(d,[s],"float32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xn={kernelName:r.AvgPool3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{filterSize:o,strides:i,pad:u,dimRoundingMode:c,dataFormat:l}=a,d=r.backend_util.computePool3DInfo(s.shape,o,i,[1,1,1],u,c,l),p=new qn(d,"avg",!1);return n.runWebGLProgram(p,[s],"float32")}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yn{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=i-1-e.padInfo.top,l=u-1-e.padInfo.left,d=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${c}, ${l});\n      const float avgMultiplier = float(${d});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${i};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${o}) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Zn{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,l=e.effectiveFilterDepth,d=e.effectiveFilterHeight,p=e.effectiveFilterWidth,h=l-1-e.padInfo.front,f=d-1-e.padInfo.top,m=p-1-e.padInfo.left,b=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${h}, ${f}, ${m});\n      const float avgMultiplier = float(${b});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${l};\n            wD += ${i}) {\n          float dyD = float(dyDCorner + wD) / ${a}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${d};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${p};\n                wC += ${c}) {\n              float dyC = float(dyCCorner + wC) / ${o}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qn={kernelName:r.AvgPool3DGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,input:o}=t,i=o,{filterSize:u,strides:c,pad:l,dimRoundingMode:d}=a,p=r.backend_util.computePool3DInfo(i.shape,u,c,[1,1,1],l,d),h=new Zn(p);return n.runWebGLProgram(h,[s],i.dtype)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jn={kernelName:r.AvgPoolGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,input:o}=t,i=o;P([s,o],"avgPoolGrad");const{filterSize:u,strides:c,pad:l}=a,d=r.backend_util.computePool2DInfo(i.shape,u,c,1,l),p=new Yn(d);return n.runWebGLProgram(p,[s],i.dtype)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const er={kernelName:r.BatchMatMul,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:s}=t,{transposeA:o,transposeB:i}=r;return hn({a:a,b:s,transposeA:o,transposeB:i,backend:n})}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tr{constructor(e,t,n,a,s,o){this.outputShape=[],this.variableNames=["x","mean","variance"],r.backend_util.assertAndGetBroadcastShape(e,t),r.backend_util.assertAndGetBroadcastShape(e,n);let i="0.0";null!=a&&(r.backend_util.assertAndGetBroadcastShape(e,a),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let u="1.0";null!=s&&(r.backend_util.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${u};\n        float inv = scale * inversesqrt(variance + float(${o}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nr{constructor(e,t,n,a,s,o){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],r.backend_util.assertAndGetBroadcastShape(e,t),r.backend_util.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";null!=a&&(r.backend_util.assertAndGetBroadcastShape(e,a),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let u="vec4(1.0)";null!=s&&(r.backend_util.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${u};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${o}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rr={kernelName:r.FusedBatchNorm,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,mean:s,variance:o,offset:i,scale:u}=e;r.util.assert(s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),r.util.assert(null==i||s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),r.util.assert(null==u||s.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:c}=n;null==c&&(c=.001);const l=[a,s,o];let d=null;null!=i&&(d=i.shape,l.push(i));let p=null;null!=u&&(p=u.shape,l.push(u));const h=Object(r.env)().getBool("WEBGL_PACK_NORMALIZATION")?new nr(a.shape,s.shape,o.shape,d,p,c):new tr(a.shape,s.shape,o.shape,d,p,c);return t.runWebGLProgram(h,l,l[0].dtype)}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class ar{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=re(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return sr.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(this.rank);let r;r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${sr[t]} = start[${t}] + coords.${sr[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const sr=["x","y","z","w","u","v"];class or{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=re(this.rank),n=bt("coords",this.rank),r=bt("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,o=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,i=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${o}\n        ${i}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ir(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{begin:o,size:i}=a,[u,c]=r.slice_util.parseSliceParams(s,o,i);if(r.slice_util.assertParamsValid(s,u,c),0===r.util.sizeFromShape(c))return n.makeTensorInfo(c,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||"string"===s.dtype){const e=n.texData.get(s.dataId),t=tt(e.values,u,c,s.shape,s.dtype);return n.makeTensorInfo(c,s.dtype,t)}const{isPacked:l}=n.texData.get(s.dataId),d=r.slice_util.isSliceContinous(s.shape,u,c);if(l||!d){const e=Object(r.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new or(c):new ar(c),t=[u];return n.runWebGLProgram(e,[s],s.dtype,t)}return n.uploadToGPU(s.dataId),function(e,t,n,a){const s=a.texData.get(e.dataId),o=a.makeTensorInfo(n,e.dtype),i=a.texData.get(o.dataId);Object.assign(i,s),i.refCount=1,i.shape=n,i.dtype=e.dtype;let u=r.slice_util.computeFlatOffset(t,r.util.computeStrides(e.shape));s.slice&&(u+=s.slice.flatOffset),i.slice={flatOffset:u,origDataId:s.slice&&s.slice.origDataId||e.dataId};const c=a.dataRefCount.get(i.slice.origDataId)||1;return a.dataRefCount.set(i.slice.origDataId,c+1),o}(s,u,c,n)}const ur={kernelName:r.Slice,backendName:"webgl",kernelFunc:ir},cr={kernelName:r.BatchToSpaceND,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{blockShape:o,crops:i}=a;r.util.assert(s.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const u=o.reduce(((e,t)=>e*t)),c=r.backend_util.getReshaped(s.shape,o,u),l=r.backend_util.getPermuted(c.length,o.length),d=r.backend_util.getReshapedPermuted(s.shape,o,u),p=r.backend_util.getSliceBeginCoords(i,o.length),h=r.backend_util.getSliceSize(d,i,o.length),f=[],m=en({inputs:{x:s},backend:n,attrs:{shape:c}}),b=dn({inputs:{x:m},backend:n,attrs:{perm:l}}),g=en({inputs:{x:b},backend:n,attrs:{shape:d}}),x=ir({inputs:{x:g},backend:n,attrs:{begin:p,size:h}});return f.push(m),f.push(b),f.push(g),f.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lr={kernelName:r.Bincount,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:o}=r,i=n.readSync(a.dataId),u=n.readSync(s.dataId),c=Ce(i,u,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,c)}},dr=Gt({opSnippet:"return float(a != b);",cpuKernelImpl:Xe,dtype:"bool"}),pr={kernelName:r.NotEqual,backendName:"webgl",kernelFunc:dr};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function hr(e){const{inputs:t,backend:n}=e,{input:r}=t;return Ft({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const fr={kernelName:r.Real,backendName:"webgl",kernelFunc:hr};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mr={kernelName:r.Cast,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function e(t){const{inputs:n,backend:a,attrs:s}=t,{x:o}=n,{dtype:i}=s;if("complex64"===i){if("complex64"===o.dtype)return Ft({inputs:{x:o},backend:a});const t=r.zeros(o.shape),n=e({inputs:{x:o},backend:a,attrs:{dtype:"float32"}}),s=Dt({inputs:{real:n,imag:t},backend:a});return t.dispose(),a.disposeIntermediateTensorInfo(n),s}if("complex64"===o.dtype){const t=hr({inputs:{input:o},backend:a}),n=e({inputs:{x:t},backend:a,attrs:{dtype:i}});return a.disposeIntermediateTensorInfo(t),n}if(!r.util.hasEncodingLoss(o.dtype,i)){const e=Ft({inputs:{x:o},backend:a});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i)return function(e,t){const n=new It(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(o,a);if("bool"===i){const e=a.makeTensorInfo([],"bool",r.util.getTypedArrayFromDType("bool",1)),t=dr({inputs:{a:o,b:e},backend:a});return a.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${i}`)}},br="return ceil(x);",gr=Vt({opSnippet:br,packedOpSnippet:br,cpuKernelImpl:Ee}),xr={kernelName:r.Ceil,backendName:"webgl",kernelFunc:gr};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class vr{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yr{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kr={kernelName:r.ClipByValue,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{clipValueMin:o,clipValueMax:i}=a;let u;u=Object(r.env)().getBool("WEBGL_PACK_CLIP")?new yr(s.shape):new vr(s.shape);const c=[[o],[i]];return n.runWebGLProgram(u,[s],s.dtype,c)}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wr{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ir(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const Sr={kernelName:r.ComplexAbs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),s=new wr(r.shape),o=[Ir(r,a.complexTensorInfos.real),Ir(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,o,o[0].dtype)}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _r{constructor(e){this.outputShape=[],this.outputShape=r.backend_util.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}const a=t.length,s=t[t.length-1];n.push(`else setOutput(getT${a}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Or{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=r.backend_util.computeOutShape(e,t);const n=this.outputShape,a=n.length,s=re(a),o=bt("coords",a),i=["x","y","z","w","u","v"].slice(0,a);this.variableNames=e.map(((e,t)=>`T${t}`));const u=new Array(e.length-1);u[0]=e[0][t];for(let n=1;n<u.length;n++)u[n]=u[n-1]+e[n][t];const c=i[t],l=i.slice(-2),d=i.join();let p=`if (${c} < ${u[0]}) {\n        return getChannel(\n            getT0(${d}), vec2(${l.join()}));\n        }`;for(let e=1;e<u.length;e++){const t=u[e-1];p+=`\n        if (${c} < ${u[e]}  && ${c} >= ${u[e-1]}) {\n          return getChannel(\n            getT${e}(${Tr(i,c,t)}),\n            vec2(${Tr(l,c,t)}));\n        }`}const h=u.length,f=u[u.length-1];p+=`\n        return getChannel(\n          getT${h}(${Tr(i,c,f)}),\n          vec2(${Tr(l,c,f)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${p}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${o}), 0., 0., 0.);\n\n        ${o[a-1]} = ${o[a-1]} + 1;\n        if (${o[a-1]} < ${n[a-1]}) {\n          result.g = getValue(${o});\n        }\n\n        ${o[a-2]} = ${o[a-2]} + 1;\n        if (${o[a-2]} < ${n[a-2]}) {\n          result.a = getValue(${o});\n        }\n\n        ${o[a-1]} = ${o[a-1]} - 1;\n        if (${o[a-2]} < ${n[a-2]} &&\n            ${o[a-1]} < ${n[a-1]}) {\n          result.b = getValue(${o});\n        }\n        setOutput(result);\n      }\n    `}}function Tr(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cr(e){const{inputs:t,backend:n}=e,{input:r}=t;return Ft({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const $r={kernelName:r.Imag,backendName:"webgl",kernelFunc:Cr};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Er(e,t,n){const a=e[0].dtype;if("complex64"===a){const r=e.map((e=>hr({inputs:{input:e},backend:n}))),a=e.map((e=>Cr({inputs:{input:e},backend:n}))),s=Er(r,t,n),o=Er(a,t,n),i=Dt({inputs:{real:s,imag:o},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),a.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),i}let s=n.shouldExecuteOnCPU(e);if("string"===a&&(s=!0),s){const s=e.map((e=>{const a=r.util.sizeFromShape(e.shape.slice(t));return en({inputs:{x:e},backend:n,attrs:{shape:[-1,a]}})})),o=s.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=r.backend_util.computeOutShape(s.map((e=>e.shape)),1),u=1===s[0].shape[0],c=Ae(o,i,a,u),l=r.backend_util.computeOutShape(e.map((e=>e.shape)),t),d=n.makeTensorInfo(l,a,c);return s.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}if(e.length>Object(r.env)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(e.length/2),a=Er(e.slice(0,r),t,n),s=Er(e.slice(r),t,n),o=Er([a,s],t,n);return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),o}if(Object(r.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const r=new Or(e.map((e=>e.shape)),t);return n.runWebGLProgram(r,e,a)}const{tensors2D:o,outShape:i}=function(e,t,n){const a=r.backend_util.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>en({inputs:{x:e},attrs:{shape:[-1,r.util.sizeFromShape(e.shape.slice(t))]},backend:n}))),outShape:a}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(e,t,n),u=new _r(o.map((e=>e.shape))),c=n.runWebGLProgram(u,o,a);o.forEach((e=>n.disposeIntermediateTensorInfo(e)));const l=en({inputs:{x:c},attrs:{shape:i},backend:n});return n.disposeIntermediateTensorInfo(c),l}function Ar(e){const{inputs:t,backend:n,attrs:a}=e,{axis:s}=a,o=r.util.parseAxisParam(s,t[0].shape)[0],i=r.backend_util.computeOutShape(t.map((e=>e.shape)),o);if(0===r.util.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);const u=t.filter((e=>r.util.sizeFromShape(e.shape)>0));if(1===u.length)return Ft({inputs:{x:u[0]},backend:n});const c=u.map((e=>e.shape));return r.backend_util.assertParamsConsistent(c,o),Er(u,o,n)}const Nr={kernelName:r.Concat,backendName:"webgl",kernelFunc:Ar};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rr{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.padInfo.top,o=e.padInfo.left,i=e.strideHeight,u=e.strideWidth,c=e.dilationHeight,l=e.dilationWidth,d=e.filterHeight,p=e.filterWidth,h=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,b=m?1:2,g=m?2:3,x=m?3:1;let v="",y="";n&&(v=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,y="result = activation(result);");const k=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${v}\n\n      const ivec2 strides = ivec2(${i}, ${u});\n      const ivec2 pads = ivec2(${s}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${x}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${b}], coords[${g}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${d}; wR++) {\n          int xR = xRCorner + wR * ${c};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${l};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${h}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${h}) *\n                    getW(wR, wC, ${h}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${h}, xR, xC) *\n                    getW(wR, wC, ${h}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${h}, d2),\n                getW(wR, wC, ${h} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${h}),\n                  getX(batch, xR, xC, ${h} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${h}, xR, xC),\n                  getX(batch, ${h} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${h}, d2),\n                getW(wR, wC, ${h} + 1, d2),\n                getW(wR, wC, ${h} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${h}),\n                  getX(batch, xR, xC, ${h} + 1),\n                  getX(batch, xR, xC, ${h} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${h}, xR, xC),\n                  getX(batch, ${h} + 1, xR, xC),\n                  getX(batch, ${h} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${k}\n        ${y}\n        setOutput(result);\n      }\n    `}}class Fr{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,l=e.filterDepth,d=e.filterHeight,p=e.filterWidth,h=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${s}, ${o});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${l}; wF++) {\n          int xF = xFCorner + wF * ${i};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p}; wC++) {\n              int xC = xCCorner + wC * ${c};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${h}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${h}) *\n                  getW(wF, wR, wC, ${h}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${h}),\n                  getX(batch, xF, xR, xC, ${h} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${h}, d2),\n                  getW(wF, wR, wC, ${h} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${h}),\n                  getX(batch, xF, xR, xC, ${h} + 1),\n                  getX(batch, xF, xR, xC, ${h} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${h}, d2),\n                  getW(wF, wR, wC, ${h} + 1, d2),\n                  getW(wF, wR, wC, ${h} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Mr{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=ue(this.outputShape.length);const{dataFormat:n}=t,r=L(),a="channelsLast"===n,s=a?0:1,o=a?1:2,i=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`;let u="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)u+=`\n          blockIndex = rc.y + ${t};\n          pos = rc.x + ${e};\n\n          ${i}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${s}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${o}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${a}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${u}\n\n        ${r.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dr({x:e,filter:t,convInfo:n,backend:a,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:u=null}){const c=e.shape,l=a.texData.get(e.dataId),d=n.inChannels,p=c[0]*c[1]*c[2],h=n.outChannels,f="channelsLast"===n.dataFormat;let m;const b=[];if(!((1===p||1===h)&&d>1e3)&&l.isPacked&&f&&null!=l.texture&&c[2]%2!=0&&r.util.arraysEqual(l.shape.slice(-3),c.slice(-3))){const d=c[0]*c[1]*(c[2]+1),p={dataId:e.dataId,shape:[1,d,n.inChannels],dtype:e.dtype},h=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,r.util.assert(A(l.shape,p.shape),(()=>`packed reshape ${l.shape} to ${p.shape} isn't free`));const f=en({inputs:{x:t},backend:a,attrs:{shape:[1,n.inChannels,n.outChannels]}});b.push(f);const g=hn({a:p,b:f,backend:a,transposeA:false,transposeB:false,bias:s,activation:u,preluActivationWeights:o,leakyreluAlpha:i}),x=a.texData.get(g.dataId);r.util.assert(x.isPacked,(()=>"batchMatMul result is expected to be packed")),l.shape=h,x.shape=n.outShape,m=Ft({inputs:{x:g},backend:a}),m.shape=n.outShape,b.push(g)}else{const r=en({inputs:{x:e},backend:a,attrs:{shape:[1,f?c[0]*c[1]*c[2]:c[0]*c[2]*c[3],n.inChannels]}}),l=en({inputs:{x:t},backend:a,attrs:{shape:[1,n.inChannels,n.outChannels]}}),d=hn({a:r,b:l,transposeA:false,transposeB:false,backend:a,bias:s,activation:u,preluActivationWeights:o,leakyreluAlpha:i});m=en({inputs:{x:d},backend:a,attrs:{shape:n.outShape}}),b.push(r),b.push(l),b.push(d)}for(const e of b)a.disposeIntermediateTensorInfo(e);return m}function jr({x:e,filter:t,convInfo:n,backend:a,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:u=null}){const{filterWidth:c,filterHeight:l,inChannels:d,outWidth:p,outHeight:h,dataFormat:f}=n,m="channelsLast"===f,b=c*l*d,g=h*p,x=[b,g],v=[],y=en({inputs:{x:e},backend:a,attrs:{shape:e.shape.slice(1)}}),k=en({inputs:{x:t},backend:a,attrs:{shape:[1,b,r.util.sizeFromShape(t.shape)/b]}});v.push(y),v.push(k);const w=new Mr(x,n),I=[y.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],S=a.runWebGLProgram(w,[y],"float32",I),_=en({inputs:{x:S},backend:a,attrs:{shape:[1,x[0],x[1]]}});v.push(S),v.push(_);const O=null!=s,T=null!=o,C="leakyrelu"===u,$=u?Ht(u,!0):null,E=new qt(_.shape,k.shape,[1,g,n.outChannels],!0,!1,O,$,T,C),A=[_,k];if(s&&A.push(s),T&&A.push(o),C){const e=a.makeTensorInfo([],"float32",r.util.createScalarValue(i,"float32"));A.push(e),v.push(e)}const N=a.runWebGLProgram(E,A,"float32"),R=en({inputs:{x:N},backend:a,attrs:{shape:m?[1,h,p,n.outChannels]:[1,n.outChannels,h,p]}});v.push(N);for(const e of v)a.disposeIntermediateTensorInfo(e);return R}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pr={kernelName:r.Conv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:o}=t,{strides:i,pad:u,dataFormat:c,dilations:l,dimRoundingMode:d}=a,p=r.backend_util.convertConv2DDataFormat(c),h=r.backend_util.computeConv2DInfo(s.shape,o.shape,i,l,u,d,!1,p);let f;if(1!==h.filterHeight||1!==h.filterWidth||1!==h.dilationHeight||1!==h.dilationWidth||1!==h.strideHeight||1!==h.strideWidth||"SAME"!==h.padInfo.type&&"VALID"!==h.padInfo.type)if(Object(r.env)().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])f=jr({x:s,filter:o,convInfo:h,backend:n});else{const e=new Rr(h);f=n.runWebGLProgram(e,[s,o],"float32")}else f=Dr({x:s,filter:o,convInfo:h,backend:n});const m=en({inputs:{x:f},backend:n,attrs:{shape:h.outShape}});return n.disposeIntermediateTensorInfo(f),m}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Br{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${s}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Lr{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s="channelsLast"===e.dataFormat,o=t-1-e.padInfo.top,i=n-1-e.padInfo.left,u=s?1:2,c=s?2:3,l=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${o}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${l}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${c}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Wr{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,o=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${a};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${o};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class zr{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=t-1-e.padInfo.front,u=n-1-e.padInfo.top,c=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${i}, ${u}, ${c});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${a}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${o}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ur={kernelName:r.Conv2DBackpropFilter,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,dy:o}=t,{strides:i,pad:u,dataFormat:c,dimRoundingMode:l,filterShape:d}=a,p=r.backend_util.convertConv2DDataFormat(c),h=r.backend_util.computeConv2DInfo(s.shape,d,i,1,u,l,!1,p),f=new Br(h);return n.runWebGLProgram(f,[s,o],"float32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vr={kernelName:r.Conv2DBackpropInput,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,filter:o}=t,{inputShape:i,strides:u,pad:c,dataFormat:l,dimRoundingMode:d}=a,p=r.backend_util.convertConv2DDataFormat(l),h=r.backend_util.computeConv2DInfo(i,o.shape,u,1,c,d,!1,p),f=new Lr(h);return n.runWebGLProgram(f,[s,o],"float32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gr={kernelName:r.Conv3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:o}=t,{strides:i,pad:u,dilations:c}=a,l=r.backend_util.computeConv3DInfo(s.shape,o.shape,i,c,u),d=new Fr(l);return n.runWebGLProgram(d,[s,o],"float32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hr={kernelName:r.Conv3DBackpropFilterV2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,dy:o}=t,{strides:i,pad:u,filterShape:c}=a,l=r.backend_util.computeConv3DInfo(s.shape,c,i,1,u),d=new Wr(l);return n.runWebGLProgram(d,[s,o],"float32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qr={kernelName:r.Conv3DBackpropInputV2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,filter:o}=t,{pad:i,strides:u,inputShape:c}=a,l=r.backend_util.computeConv3DInfo(c,o.shape,u,1,i),d=new zr(l);return n.runWebGLProgram(d,[s,o],"float32")}},Kr=Vt({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),Xr={kernelName:r.Cos,backendName:"webgl",kernelFunc:Kr},Yr=Vt({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),Zr={kernelName:r.Cosh,backendName:"webgl",kernelFunc:Yr};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Qr{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,o,i,u]=e,[c]=t,[l,d]=n;this.outputShape=[c,l,d,u];const p="bilinear"===r?1:0,[h,f]=[o-1+".0",i-1+".0"],[m,b,g]=l>1?[""+(o-1)/(l-1),"(y2-y1) * height_ratio",`y1*${h} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${h}`],[x,v,y]=d>1?[""+(i-1)/(d-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${x});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${b};\n        float width_scale = ${v};\n\n        float in_y = ${g};\n        if( in_y < 0.0 || in_y > ${h} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${y};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${p} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jr={kernelName:r.CropAndResize,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:o}=t,{cropSize:i,method:u,extrapolationValue:c}=r,l=new Qr(a.shape,s.shape,i,u,c);return n.runWebGLProgram(l,[a,s,o],"float32")}};class ea{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=e;const r=e.length,a=t?"0.0":`getX(${ta(r,"coords")})`,s=e[e.length-1];let o="",i="";t?(o=n?"end != "+(s-1):"end != 0",i=n?"end + 1":"end - 1"):(o=n?`end + pow2 < ${s}`:"end >= pow2",i=n?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${re(r)} coords = getOutputCoords();\n        int end = ${na(r,"coords")};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${o}) {\n          int idx = ${i};\n          ${na(r,"coords")} = idx;\n          val += getX(${ta(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}}function ta(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function na(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ra={kernelName:r.Cumsum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:o,exclusive:i,reverse:u}=a,c=s.shape.length,l=r.backend_util.getAxesPermutation([o],c);let d=s;null!=l&&(d=dn({inputs:{x:s},backend:n,attrs:{perm:l}}));const p=r.backend_util.getInnerMostAxes(1,c)[0];if(p!==c-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${s.shape.length-1} but got axis=${o}`);const h=d.shape[p];let f=Ft({inputs:{x:d},backend:n});for(let e=0;e<=Math.ceil(Math.log2(h))-1;e++){const t=new ea(d.shape,!1,u),r=[[e]],a=f;f=n.runWebGLProgram(t,[f],f.dtype,r),n.disposeIntermediateTensorInfo(a)}if(i){const e=new ea(d.shape,i,u),t=f;f=n.runWebGLProgram(e,[f],f.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=l){const e=dn({inputs:{x:f},backend:n,attrs:{perm:r.backend_util.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(d),e}return f}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aa={kernelName:r.DenseBincount,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:o,binaryOutput:i}=r;if(1===a.shape.length){const e=n.readSync(a.dataId),t=n.readSync(s.dataId),r=Ce(e,t,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,r)}if(2===a.shape.length){const e=n.bufferSync(a),t=n.bufferSync(s),r=$e(e,t,o,i);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sa{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oa={kernelName:r.DepthToSpace,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{blockSize:o,dataFormat:i}=a;r.util.assert(o>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${o}`));const u=s.shape[0],c="NHWC"===i?s.shape[1]:s.shape[2],l="NHWC"===i?s.shape[2]:s.shape[3],d="NHWC"===i?s.shape[3]:s.shape[1],p=c*o,h=l*o,f=d/(o*o),m=new sa("NHWC"===i?[u,p,h,f]:[u,f,p,h],o,i);return n.runWebGLProgram(m,[s],s.dtype)}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ia{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=ue(this.outputShape.length);const s=e.filterHeight,o=e.filterWidth,i=e.outChannels/e.inChannels;let u="",c="";n&&(u=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,c="result = activation(result);");const l=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${u}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${i};\n        int q = d2 - d1 * ${i};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${s}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${o}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${l}\n        ${c}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ua{constructor(e,t=!1,n=null,a=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=ue(this.outputShape.length);const o=e.outChannels/e.inChannels,i=e.padInfo.left,u=e.strideWidth,c=e.dilationWidth,l=e.filterHeight,d=e.filterWidth,p=d;let h="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<d;e++)h+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;for(let e=0;e<l;e++){for(let e=0;e<d;e++)h+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;h+=`\n        xR = xRCorner + ${e} * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      `;for(let t=0;t<(p+1)/2;t++){const n=2*t;if(h+=`\n          xC = xCCorner + ${n*c};\n          `,1===u){if(n<d&&(i%2==1?(h+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                  xTexelC${n} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${n}.zw = vec2(0.0);\n                  }\n                  xTexelC${n}Ready = 1;\n                }\n              `,h+=1===c&&n>0?`\n                xC${n} = vec4(xTexelC${n-2}.zw, xTexelC${n}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${n} = vec4(previous.zw, xTexelC${n}.xy);\n                  } else {\n                    xC${n} = vec4(0.0, 0.0, xTexelC${n}.xy);\n                  }\n                  `):h+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                  xTexelC${n} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${n}.zw = vec2(0.0);\n                  }\n                  xTexelC${n}Ready = 1;\n                }\n\n                xC${n} = xTexelC${n};\n                `,n+1<d)){const e=i%2==0?r.util.nearestLargerEven(c):c;c%2==0&&i%2==1||c%2!=0&&i%2!=1?(h+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                    xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${n+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${n+1}Ready = 1;\n                  }\n                  `,c>1&&(h+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                      xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${n}Ready = 1;\n                    }\n                    `),h+=`\n                  xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.xy);\n                  `):h+=1===e?`\n                    xC${n+1} = xTexelC${n};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                      xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${n+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${n+1}Ready = 1;\n                    }\n\n                    xC${n+1} = xTexelC${n+1};\n                    `}}else n<d&&(i%2==1?(h+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                  xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${n}.zw = vec2(0.0);\n                  }\n                  xTexelC${n}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${n+1}Ready == 0) {\n                  xTexelC${n+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${n+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${n+1}Ready = 1;\n                }\n\n                xC${n} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n              `,n+1<d&&(h+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${n+1} = vec4(xTexelC${n+1}.xy, final.xy);\n                `)):(h+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                  xTexelC${n} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${n}.zw = vec2(0.0);\n                  }\n                  xTexelC${n}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                  xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${n+1}.zw = vec2(0.);\n                  }\n                  xTexelC${n+1}Ready = 1;\n                }\n\n                xC${n} = vec4(\n                  xTexelC${n}.xy, xTexelC${n+1}.xy);\n              `,n+1<d&&(h+=`\n                  xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n                `)));n<d&&(h+=`\n            wTexel = getW(${e}, ${n}, d1, q);\n            dotProd += xC${n} * vec4(wTexel.xz, wTexel.xz);\n          `,n+1<d&&(h+=`\n              wTexel = getW(${e}, ${n+1}, d1, q);\n              dotProd += xC${n+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}h+="\n        }\n      "}let f="",m="";n&&(f=a?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,m="result = activation(result);");const b=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${f}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${h}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${b}\n        ${m}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ca={kernelName:r.DepthwiseConv2dNative,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:o}=t,{strides:i,pad:u,dilations:c,dimRoundingMode:l}=a;let d=c;null==d&&(d=[1,1]),r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(i,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`));const p=r.backend_util.computeConv2DInfo(s.shape,o.shape,i,d,u,l,!0);let h;h=Object(r.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels==1?new ua(p):new ia(p);const f=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];return n.runWebGLProgram(h,[s,o],"float32",f)}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class la{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class da{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,o=n-1-e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${i}; dm++) {\n              int d2 = d1 * ${i} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pa={kernelName:r.DepthwiseConv2dNativeBackpropFilter,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,dy:o}=t,{strides:i,dilations:u,pad:c,dimRoundingMode:l,filterShape:d}=a,p=r.backend_util.computeConv2DInfo(s.shape,d,i,u,c,l,!0),h=new la(p);return n.runWebGLProgram(h,[s,o],"float32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ha={kernelName:r.DepthwiseConv2dNativeBackpropInput,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,filter:o}=t,{strides:i,dilations:u,pad:c,dimRoundingMode:l,inputShape:d}=a,p=r.backend_util.computeConv2DInfo(d,o.shape,i,u,c,l,!0),h=new da(p);return n.runWebGLProgram(h,[s,o],"float32")}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fa{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ma={kernelName:r.Diag,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,s=[...a.shape,...a.shape],o=r.util.sizeFromShape(a.shape),i=en({inputs:{x:a},backend:n,attrs:{shape:[o]}}),u=new fa(o),c=n.runWebGLProgram(u,[i],i.dtype),l=en({inputs:{x:c},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),l}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ba{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:o,filterWidth:i,dilationHeight:u,dilationWidth:c}=e,{top:l,left:d}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${s});\n      const ivec2 pads = ivec2(${l}, ${d});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${o}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${i}; w++) {\n              int wIn = wBeg + w * ${c};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ga={kernelName:r.Dilation2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:o}=t,{strides:i,pad:u,dilations:c}=a,l=r.backend_util.computeDilation2DInfo(s.shape,o.shape,i,u,"NHWC",c);let d;const p=new ba(l);d=n.runWebGLProgram(p,[s,o],"float32");const h=en({inputs:{x:d},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(d),h}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xa={kernelName:r.Einsum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{equation:s}=a,o=t,{allDims:i,summedDims:u,idDims:c}=r.backend_util.decodeEinsumEquation(s,o.length);r.backend_util.checkEinsumDimSizes(i.length,c,o);const{path:l,steps:d}=r.backend_util.getEinsumComputePath(u,c),p=d.length;let h=null,f=i.length;const m=[];for(let e=0;e<p;++e){for(const t of d[e]){const{permutationIndices:e,expandDims:a}=r.backend_util.getEinsumPermutation(f,c[t]);let s;r.backend_util.isIdentityPermutation(e)?s=o[t]:(s=dn({inputs:{x:o[t]},backend:n,attrs:{perm:e}}),m.push(s));const i=s.shape.slice();for(let e=0;e<a.length;++e)i.splice(a[e],0,1);r.util.arraysEqual(s.shape,i)||(s=en({inputs:{x:s},backend:n,attrs:{shape:i}}),m.push(s)),null===h?h=s:(h=Qt({inputs:{a:s,b:h},backend:n}),m.push(h))}e<p-1&&(l[e]>=0&&(h=cn({inputs:{x:h},backend:n,attrs:{axis:l[e]-(i.length-f),keepDims:!1}}),m.push(h)),f--)}for(const e of m)e!==h&&n.disposeIntermediateTensorInfo(e);return h}},va=Vt({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),ya={kernelName:r.Elu,backendName:"webgl",kernelFunc:va},ka={kernelName:r.EluGrad,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:a,y:s}=t,o=Object(r.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Rt("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",a.shape,s.shape):new Nt("return (b >= 1.0) ? a : a * (b + 1.0);",a.shape,s.shape);return n.runWebGLProgram(o,[a,s],a.dtype)}},wa=Gt({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:Ne}),Ia={kernelName:r.Equal,backendName:"webgl",kernelFunc:wa},Sa=Vt({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${r.backend_util.ERF_P};\n  float a1 = ${r.backend_util.ERF_A1};\n  float a2 = ${r.backend_util.ERF_A2};\n  float a3 = ${r.backend_util.ERF_A3};\n  float a4 = ${r.backend_util.ERF_A4};\n  float a5 = ${r.backend_util.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),_a={kernelName:r.Erf,backendName:"webgl",kernelFunc:Sa},Oa="return exp(x);",Ta=Vt({opSnippet:Oa,packedOpSnippet:Oa,cpuKernelImpl:Re}),Ca={kernelName:r.Exp,backendName:"webgl",kernelFunc:Ta};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function $a(e){const{inputs:t,attrs:n,backend:a}=e,{dim:s}=n,{input:o}=t,i=o.shape.length,u=o.shape.slice();let c=s;return s<0&&(r.util.assert(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),c=i+s+1),u.splice(c,0,1),en({inputs:{x:o},backend:a,attrs:{shape:u}})}const Ea={kernelName:r.ExpandDims,backendName:"webgl",kernelFunc:$a},Aa="return exp(x) - 1.0;",Na=Vt({opSnippet:Aa,packedOpSnippet:Aa,cpuKernelImpl:Fe}),Ra={kernelName:r.Expm1,backendName:"webgl",kernelFunc:Na};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Fa{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const a=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=n?`${r}.0`:"1.0";let o;if("real"===e)o="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);o="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${a};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${o}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${s};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ma(e,t,n){const a=n.texData.get(e.dataId),s=r.util.sizeFromShape(e.shape),o=e.shape[e.shape.length-1],i=en({inputs:{x:e},backend:n,attrs:{shape:[s/o,o]}}),u=i.shape,c=new Fa("real",u,t),l=new Fa("imag",u,t),d=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:u},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:u}],p=n.runWebGLProgram(c,d,"float32"),h=n.runWebGLProgram(l,d,"float32"),f=Dt({inputs:{real:p,imag:h},backend:n});n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h);const m=en({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(f),m}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Da={kernelName:r.FFT,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return Ma(r,!1,n)}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ja{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pa(e){const{backend:t,attrs:n}=e,{shape:a,value:s}=n;let{dtype:o}=n;if(o=o||r.util.inferDtype(s),"string"===o){const e=r.util.getArrayFromDType(o,r.util.sizeFromShape(a));return e.fill(s),t.makeTensorInfo(a,o,e)}{const e=new ja(a,s),n=[[s]];return t.runWebGLProgram(e,[],o,n)}}const Ba={kernelName:r.Fill,backendName:"webgl",kernelFunc:Pa};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class La{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wa={kernelName:r.FlipLeftRight,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,a=new La(n.shape);return r.runWebGLProgram(a,[n],n.dtype)}},za="return floor(x);",Ua=Vt({opSnippet:za,packedOpSnippet:za,cpuKernelImpl:Me}),Va={kernelName:r.Floor,backendName:"webgl",kernelFunc:Ua},Ga=Gt({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),Ha={kernelName:r.FloorDiv,backendName:"webgl",kernelFunc:Ga};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class qa{constructor(e){this.variableNames=["A"];const t=L(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ka{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=L(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xa={kernelName:r.FromPixels,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e;let{pixels:s}=t;const{numChannels:o}=a,i="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,c="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,[l,d]=i?[s.videoWidth,s.videoHeight]:[s.width,s.height],p=[d,l],h=[d,l,o];(c||i)&&(null==Ya&&(Ya=document.createElement("canvas").getContext("2d")),Ya.canvas.width=l,Ya.canvas.height=d,Ya.drawImage(s,0,0,l,d),s=Ya.canvas);const f=n.makeTensorInfo(p,"int32");n.texData.get(f.dataId).usage=u.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(f.dataId),s);const m=Object(r.env)().getBool("WEBGL_PACK")?new Ka(h):new qa(h),b=n.runWebGLProgram(m,[f],"int32");return n.disposeData(f.dataId),b}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */};let Ya;const Za={kernelName:r.FusedConv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:o,bias:i,preluActivationWeights:u}=t,{strides:c,pad:l,dataFormat:d,dilations:p,dimRoundingMode:h,activation:f,leakyreluAlpha:m}=a,b=r.backend_util.convertConv2DDataFormat(d),g=r.backend_util.computeConv2DInfo(s.shape,o.shape,c,p,l,h,!1,b);let x;const v=[];if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(Object(r.env)().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])x=jr({x:s,filter:o,convInfo:g,backend:n,bias:i,activation:f,preluActivationWeights:u,leakyreluAlpha:m});else{const e=null!=i,t=null!=u,a="leakyrelu"===f,c=f?Ht(f,!1):null,l=new Rr(g,e,c,t,a),d=[s,o];if(i&&d.push(i),u&&d.push(u),a){const e=n.makeTensorInfo([],"float32",r.util.createScalarValue(m,"float32"));d.push(e),v.push(e)}x=n.runWebGLProgram(l,d,"float32")}else x=Dr({x:s,filter:o,convInfo:g,backend:n,bias:i,activation:f,preluActivationWeights:u,leakyreluAlpha:m});const y=en({inputs:{x:x},backend:n,attrs:{shape:g.outShape}});return v.push(x),v.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qa={kernelName:r.FusedDepthwiseConv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:o,bias:i,preluActivationWeights:u}=t,{strides:c,pad:l,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=a,m=[];let b=d;null==b&&(b=[1,1]),r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(c,b),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${c} and dilations '${b}'`));const g=r.backend_util.computeConv2DInfo(s.shape,o.shape,c,b,l,p,!0),x=Object(r.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,v=h?Ht(h,x):null,y=[s,o],k=null!=i,w=null!=u,I="leakyrelu"===h;if(k&&y.push(i),w&&y.push(u),I){const e=n.makeTensorInfo([],"float32",r.util.createScalarValue(f,"float32"));y.push(e),m.push(e)}let S;S=x?new ua(g,k,v,w,I):new ia(g,k,v,w,I);const _=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],O=n.runWebGLProgram(S,y,"float32",_);return m.forEach((e=>n.disposeIntermediateTensorInfo(e))),O}};class Ja{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const r=re(t.length),a=re(n.length),s=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${s};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const es={kernelName:r.GatherNd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:s}=t,o=s.shape,i=o[o.length-1],u=r.util.sizeFromShape(a.shape),[c,l,d,p]=r.backend_util.prepareAndValidate(a,s),h=en({inputs:{x:s},backend:n,attrs:{shape:[l,i]}}),f=en({inputs:{x:a},backend:n,attrs:{shape:[r.util.sizeFromShape(a.shape)/d,d]}});if(n.shouldExecuteOnCPU([a,s])||"string"===a.dtype){const e=n.readSync(s.dataId),t=n.bufferSync(a),r=De(e,t,a.dtype,l,i,d,p,a.shape,u);return n.makeTensorInfo(c,a.dtype,r.values)}const m=new Ja(i,p,[l,d]),b=n.runWebGLProgram(m,[f,h],f.dtype),g=en({inputs:{x:b},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(b),g}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ts{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=re(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let t=0;t<e.length;t++)2===t?r.push("int(getIndices(resRC.x, resRC.z))"):r.push(`${n[t]}`);return r.join()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}function ns(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,indices:o}=t,{axis:i,batchDims:u}=a,c=r.util.parseAxisParam(i,s.shape)[0],l=r.backend_util.segment_util.collectGatherOpShapeInfo(s,o,c,u),d=r.util.sizeFromShape(o.shape),p=[],h=en({inputs:{x:s},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),f=en({inputs:{x:o},backend:n,attrs:{shape:[l.batchSize,d/l.batchSize]}});p.push(h),p.push(f);const m=[l.batchSize,l.outerSize,d/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([s,o])||"string"===s.dtype){const e=n.bufferSync(f),t=n.bufferSync(h),r=je(t,e,m);return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(l.outputShape,r.dtype,r.values)}const b=new ts(h.shape,m),g=n.runWebGLProgram(b,[h,f],h.dtype);p.push(g);const x=en({inputs:{x:g},backend:n,attrs:{shape:l.outputShape}});return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}const rs={kernelName:r.GatherV2,backendName:"webgl",kernelFunc:ns},as=Gt({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:Pe,dtype:"bool"}),ss={kernelName:r.Greater,backendName:"webgl",kernelFunc:as},os=Gt({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:Be}),is={kernelName:r.GreaterEqual,backendName:"webgl",kernelFunc:os};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const us={kernelName:r.IFFT,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n}=e,{input:r}=t;return Ma(r,!0,n)}},cs=Vt({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),ls={kernelName:r.IsFinite,backendName:"webgl",kernelFunc:cs},ds=Vt({opSnippet:"return float(isinf(x));",dtype:"bool"}),ps={kernelName:r.IsInf,backendName:"webgl",kernelFunc:ds},hs=Vt({opSnippet:"return float(isnan(x));",dtype:"bool"}),fs={kernelName:r.IsNan,backendName:"webgl",kernelFunc:hs},ms=Gt({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:Le,dtype:"bool"}),bs={kernelName:r.Less,backendName:"webgl",kernelFunc:ms},gs=Gt({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:We,dtype:"bool"}),xs={kernelName:r.LessEqual,backendName:"webgl",kernelFunc:gs};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vs={kernelName:r.LinSpace,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,o=ze(r,a,s);return t.makeTensorInfo([o.length],"float32",o)}},ys=Vt({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:Ue}),ks={kernelName:r.Log,backendName:"webgl",kernelFunc:ys},ws=Vt({opSnippet:"return log(1.0 + x);"}),Is={kernelName:r.Log1p,backendName:"webgl",kernelFunc:ws},Ss=Gt({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),_s={kernelName:r.LogicalAnd,backendName:"webgl",kernelFunc:Ss},Os=Vt({opSnippet:"return float(!(x >= 1.0));"}),Ts={kernelName:r.LogicalNot,backendName:"webgl",kernelFunc:Os},Cs=Gt({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),$s={kernelName:r.LogicalOr,backendName:"webgl",kernelFunc:Cs};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Es{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];const s=t,o=e[3]-1;let i;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;i=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${o}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${i};\n        setOutput(val);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class As{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=t,o=e[3]-1;let i;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;i=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${o}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${i};\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ns={kernelName:r.LRN,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{depthRadius:o,bias:i,alpha:u,beta:c}=a,l=Object(r.env)().getBool("WEBGL_PACK_NORMALIZATION")?new As(s.shape,o,i,u,c):new Es(s.shape,o,i,u,c);return n.runWebGLProgram(l,[s],s.dtype)}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Rs{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fs={kernelName:r.LRNGrad,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:o}=t,{depthRadius:i,bias:u,alpha:c,beta:l}=r,d=new Rs(a.shape,i,u,c,l);return n.runWebGLProgram(d,[a,s,o],a.dtype)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ms(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{reductionIndices:o,keepDims:i}=a,u=s.shape.length,c=r.util.parseAxisParam(o,s.shape);let l=c;const d=r.backend_util.getAxesPermutation(l,u),p=null!=d,h=n.shouldExecuteOnCPU([s]);let f=s;if(p){if(h){const e=n.texData.get(f.dataId).values,t=new Array(u);for(let e=0;e<t.length;e++)t[e]=s.shape[d[e]];const r=ht(e,s.shape,s.dtype,d,t);f=n.makeTensorInfo(t,s.dtype);n.texData.get(f.dataId).values=r}else f=un(s,d,n);l=r.backend_util.getInnerMostAxes(l.length,u)}r.backend_util.assertAxesAreInnerMostDims("max",l,u);const[m,b]=r.backend_util.computeOutAndReduceShapes(f.shape,l);let g,x=m;if(i&&(x=r.backend_util.expandShapeToKeepDim(m,c)),h){const e=n.texData.get(f.dataId).values,t=Ve(e,r.util.sizeFromShape(b),x,s.dtype);g=n.makeTensorInfo(x,s.dtype);n.texData.get(g.dataId).values=t}else g=
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t,n,a){const s=r.util.sizeFromShape(t),o=en({inputs:{x:e},attrs:{shape:[r.util.sizeFromShape(e.shape)/s,s]},backend:a}),i=an(o,e.dtype,"max",a),u=en({inputs:{x:i},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(o),a.disposeIntermediateTensorInfo(i),u}(f,b,x,n);return p&&n.disposeIntermediateTensorInfo(f),g}const Ds={kernelName:r.Max,backendName:"webgl",kernelFunc:Ms},js=Gt({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:Ge}),Ps={kernelName:r.Maximum,backendName:"webgl",kernelFunc:js};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bs={kernelName:r.MaxPool,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t;P(s,"maxPool");const{filterSize:o,strides:i,pad:u,dimRoundingMode:c}=a;r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=r.backend_util.computePool2DInfo(s.shape,o,i,1,u,c);if(1===l.filterWidth&&1===l.filterHeight&&r.util.arraysEqual(l.inShape,l.outShape))return Ft({inputs:{x:s},backend:n});const d=new Hn(l,"max",!1);return n.runWebGLProgram(d,[s],s.dtype)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ls={kernelName:r.MaxPool3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{filterSize:o,strides:i,pad:u,dataFormat:c,dimRoundingMode:l}=a,d=r.backend_util.computePool3DInfo(s.shape,o,i,[1,1,1],u,l,c),p=new qn(d,"max",!1);return n.runWebGLProgram(p,[s],s.dtype)}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ws{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,o=a-1-e.padInfo.top,i=s-1-e.padInfo.left,u=a*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${o}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class zs{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterDepth,u=e.effectiveFilterHeight,c=e.effectiveFilterWidth,l=i-1-e.padInfo.front,d=u-1-e.padInfo.top,p=c-1-e.padInfo.left,h=i*u*c-1;this.userCode=`\n      const ivec3 pads = ivec3(${l}, ${d}, ${p});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${i};\n           wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${c};\n                wC += ${o}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${h} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${c} +\n                  wR * ${c} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Us={kernelName:r.MaxPool3DGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,input:o}=t,i=o,{filterSize:u,strides:c,pad:l,dimRoundingMode:d}=a,p=r.backend_util.computePool3DInfo(i.shape,u,c,[1,1,1],l,d),h=new qn(p,"max",!0),f=n.runWebGLProgram(h,[i],i.dtype),m=new zs(p),b=n.runWebGLProgram(m,[s,f],i.dtype);return n.disposeIntermediateTensorInfo(f),b}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vs={kernelName:r.MaxPoolGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,input:o,output:i}=t,u=o;P([o,i],"maxPoolGrad");const{filterSize:c,strides:l,pad:d,dimRoundingMode:p}=a,h=r.backend_util.computePool2DInfo(u.shape,c,l,1,d,p),f=new Hn(h,"max",!0),m=n.runWebGLProgram(f,[u],u.dtype),b=new Ws(h),g=n.runWebGLProgram(b,[s,m],u.dtype);return n.disposeIntermediateTensorInfo(m),g}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Gs={kernelName:r.MaxPoolWithArgmax,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:a}=e,{filterSize:s,strides:o,pad:i,includeBatchInIndex:u}=t,c=n;r.util.assert(4===a.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${a.shape.length}.`));const l=[1,1];r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(o,l),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${l}'`));const d=r.backend_util.computePool2DInfo(a.shape,s,o,l,i),[p,h]=function(e,t,n,r){let a=new Hn(n,"max",!1);const s=r.runWebGLProgram(a,[e],"float32");return a=new Hn(n,"max",!0,!0,t),[s,r.runWebGLProgram(a,[e],"float32")]}(a,u,d,c);return[p,h]}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Hs={kernelName:r.Mean,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:a}=e,{keepDims:s,axis:o}=t,i=n,u=a.shape.length,c=r.util.parseAxisParam(o,a.shape);let l=c;const d=r.backend_util.getAxesPermutation(l,u),p=null!=d,h=i.shouldExecuteOnCPU([a]),f=[];let m=a;if(p){if(h){const e=i.texData.get(m.dataId).values,t=new Array(u);for(let e=0;e<t.length;e++)t[e]=a.shape[d[e]];const n=ht(e,a.shape,a.dtype,d,t);m=i.makeTensorInfo(t,a.dtype);i.texData.get(m.dataId).values=n}else m=un(a,d,i);f.push(m),l=r.backend_util.getInnerMostAxes(l.length,u)}r.backend_util.assertAxesAreInnerMostDims("sum",l,u);const[b,g]=r.backend_util.computeOutAndReduceShapes(m.shape,l);let x=b;s&&(x=r.backend_util.expandShapeToKeepDim(b,c));const v=function(e,t,n,a){const s=r.util.sizeFromShape(t),o=en({inputs:{x:e},attrs:{shape:[r.util.sizeFromShape(e.shape)/s,s]},backend:a}),i=an(o,"float32","mean",a),u=en({inputs:{x:i},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(o),a.disposeIntermediateTensorInfo(i),u}(m,g,x,i);for(const e of f)i.disposeIntermediateTensorInfo(e);return v}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qs={kernelName:r.Min,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:o,keepDims:i}=a,u=s.shape.length,c=r.util.parseAxisParam(o,s.shape);let l=c;const d=r.backend_util.getAxesPermutation(l,u);let p=s;null!=d&&(p=dn({inputs:{x:s},backend:n,attrs:{perm:d}}),l=r.backend_util.getInnerMostAxes(l.length,s.shape.length)),r.backend_util.assertAxesAreInnerMostDims("min",l,u);const[h,f]=r.backend_util.computeOutAndReduceShapes(p.shape,l),m=en({inputs:{x:p},backend:n,attrs:{shape:[-1,r.util.sizeFromShape(f)]}}),b=an(m,m.dtype,"min",n);let g;if(i){g=en({inputs:{x:b},backend:n,attrs:{shape:r.backend_util.expandShapeToKeepDim(h,c)}})}else g=en({inputs:{x:b},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),null!=d&&n.disposeIntermediateTensorInfo(p),g}},Ks=Gt({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:He}),Xs={kernelName:r.Minimum,backendName:"webgl",kernelFunc:Ks};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Ys{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=re(r),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${o});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${i}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${o};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zs{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=re(r),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=bt("rc",r),u=bt("source",r),c=`${i[r-1]} < ${this.outputShape[r-1]}`,l=1===r?"source":`vec2(${u.slice(-2).join()})`,d="reflect"===n?0:1;let p="";if(1===r){const e=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${d};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${d};\n        }\n        source -= start;\n      `;p=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${l});\n        ${i[r-1]} += 1;\n        if(${c}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${l});\n        }\n      `}else{const e=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${d}) +\n                gte * ((end - 1) * 2 - source + ${d});\n        source -= start;\n      `;p=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${l});\n        ${i[r-1]} += 1;\n        if(${c}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${l});\n        }\n        rc = outputLoc;\n        ${i[r-2]} += 1;\n        if(${i[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${l});\n          ${i[r-1]} += 1;\n          if(${c}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${l});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${o});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qs={kernelName:r.MirrorPad,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a}=e,{paddings:s,mode:o}=n,i=Object(r.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Zs(a.shape,s,o):new Ys(a.shape,s,o);return t.runWebGLProgram(i,[a],a.dtype)}},Js=Gt({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),eo={kernelName:r.Mod,backendName:"webgl",kernelFunc:Js};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class to{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const no=Gt({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),ro={kernelName:r.RealDiv,backendName:"webgl",kernelFunc:no},ao="return a - b;",so=Gt({opSnippet:ao,packedOpSnippet:ao,supportsComplex:!0,cpuKernelImpl:lt}),oo={kernelName:r.Sub,backendName:"webgl",kernelFunc:so};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function io(e){const{inputs:t,backend:n,attrs:a}=e,{logits:s}=t,{dim:o}=a,i=r.util.parseAxisParam([o],s.shape),u=Ms({inputs:{x:s},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),c=r.backend_util.expandShapeToKeepDim(u.shape,i),l=en({inputs:{x:u},backend:n,attrs:{shape:c}}),d=so({inputs:{a:s,b:l},backend:n}),p=Ta({inputs:{x:d},backend:n}),h=cn({inputs:{x:p},backend:n,attrs:{axis:i,keepDims:!1}}),f=en({inputs:{x:h},backend:n,attrs:{shape:c}}),m=no({inputs:{a:p,b:f},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),m}const uo={kernelName:r.Softmax,backendName:"webgl",kernelFunc:io};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const co={kernelName:r.Multinomial,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:o,normalized:i}=r,u=i?a:io({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),c=u.shape[0],l=u.shape[1],d=new to(c,l,s),p=[[o]],h=n.runWebGLProgram(d,[u],"int32",p);return i||n.disposeIntermediateTensorInfo(u),h}},lo="return -x;";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const po={kernelName:r.Neg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])){const e=n.texData.get(a.dataId),[t,r]=Ke(e.values,a.shape,a.dtype);return n.makeTensorInfo(r,a.dtype,t)}let s;return s=Object(r.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Ot(a.shape,lo):new It(a.shape,lo),n.runWebGLProgram(s,[a],a.dtype)}},ho=r.kernel_impls.nonMaxSuppressionV3Impl;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fo={kernelName:r.NonMaxSuppressionV3,backendName:"webgl",kernelFunc:function(e){r.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:s,scores:o}=t,{maxOutputSize:i,iouThreshold:u,scoreThreshold:c}=a,l=n.readSync(s.dataId),d=n.readSync(o.dataId),{selectedIndices:p}=ho(l,d,i,u,c);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}},mo=r.kernel_impls.nonMaxSuppressionV4Impl;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bo={kernelName:r.NonMaxSuppressionV4,backendName:"webgl",kernelFunc:function(e){r.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:s,scores:o}=t,{maxOutputSize:i,iouThreshold:u,scoreThreshold:c,padToMaxOutputSize:l}=a,d=n.readSync(s.dataId),p=n.readSync(o.dataId),{selectedIndices:h,validOutputs:f}=mo(d,p,i,u,c,l);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}},go=r.kernel_impls.nonMaxSuppressionV5Impl;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xo={kernelName:r.NonMaxSuppressionV5,backendName:"webgl",kernelFunc:function(e){r.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:s,scores:o}=t,{maxOutputSize:i,iouThreshold:u,scoreThreshold:c,softNmsSigma:l}=a,d=n.readSync(s.dataId),p=n.readSync(o.dataId),h=i,f=u,m=c,b=l,{selectedIndices:g,selectedScores:x}=go(d,p,h,f,m,b);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([x.length],"float32",new Float32Array(x))]}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vo{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yo={kernelName:r.OneHot,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{indices:s}=t,{depth:o,onValue:i,offValue:u}=a,c=r.util.sizeFromShape(s.shape),l=new vo(c,o,i,u),d=en({inputs:{x:s},backend:n,attrs:{shape:[c]}}),p=n.runWebGLProgram(l,[d],s.dtype);n.disposeIntermediateTensorInfo(d);const h=en({inputs:{x:p},backend:n,attrs:{shape:[...s.shape,o]}});return n.disposeIntermediateTensorInfo(p),h}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ko(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=hr({inputs:{input:r},backend:n}),t=ko({inputs:{x:e},backend:n}),a=Cr({inputs:{input:r},backend:n}),s=ko({inputs:{x:a},backend:n}),o=Dt({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),o}return Pa({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const wo={kernelName:r.ZerosLike,backendName:"webgl",kernelFunc:ko};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Io={kernelName:r.OnesLike,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){const t=hr({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=Cr({inputs:{input:a},backend:r}),o=ko({inputs:{x:s},backend:r}),i=Dt({inputs:{real:n,imag:o},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(o),i}return Pa({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r})}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const So={kernelName:r.Pack,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{axis:s}=a;if(1===t.length)return $a({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const o=t[0].shape,i=t[0].dtype;t.forEach((e=>{r.util.assertShapesMatch(o,e.shape,"All tensors passed to stack must have matching shapes"),r.util.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const u=[],c=Ar({inputs:t.map((e=>{const t=$a({inputs:{input:e},backend:n,attrs:{dim:s}});return u.push(t),t})),backend:n,attrs:{axis:s}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _o{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=re(r),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${o});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${i}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${o};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Oo{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=re(r),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=bt("rc",r),u=bt("source",r),c=`${i[r-1]} < ${this.outputShape[r-1]}`,l=1===r?"source":`vec2(${u.slice(-2).join()})`,d=[`${a} rc = outputLoc;`,`${i[r-1]} += 1;\n       if(${c}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${i[r-2]} += 1;\n       if(${i[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${i[r-1]} += 1;\n         if(${c}) {`],p=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let h="";for(let e=0,t=1===r?2:4;e<t;e++)h+=`\n        ${d[e]}\n        if (${p}) {\n          result[${e}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${e}] = getChannel(getX(${u.join()}), ${l});\n        }\n      `;h+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${o});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${h}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const To=e=>{const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{paddings:o,constantValue:i}=a;if(0===r.util.sizeFromShape(s.shape)){return Pa({backend:n,attrs:{shape:o.map(((e,t)=>e[0]+s.shape[t]+e[1])),value:i,dtype:s.dtype}})}const u=Object(r.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Oo(s.shape,o,i):new _o(s.shape,o,i),c=[[i]];return n.runWebGLProgram(u,[s],s.dtype,c)},Co={kernelName:r.PadV2,backendName:"webgl",kernelFunc:To},$o=Gt({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Eo={kernelName:r.Pow,backendName:"webgl",kernelFunc:$o};const Ao={kernelName:r.Prod,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:o,keepDims:i}=a,u=s.shape.length,c=[],l=r.util.parseAxisParam(o,s.shape);let d=l;const p=r.backend_util.getAxesPermutation(d,u);let h,f=s;if(null!=p&&(f=dn({inputs:{x:s},backend:n,attrs:{perm:p}}),d=r.backend_util.getInnerMostAxes(d.length,u),c.push(f)),r.backend_util.assertAxesAreInnerMostDims("prod",d,u),n.shouldExecuteOnCPU([f])){const e=n.texData.get(f.dataId).values,{outVals:t,outShape:r,outDtype:a}=Ye(f.shape,f.dtype,e,d);h=n.makeTensorInfo(r,a,t)}else{const[e,t]=r.backend_util.computeOutAndReduceShapes(f.shape,d),a=r.util.sizeFromShape(t),o=en({inputs:{x:f},backend:n,attrs:{shape:[-1,a]}}),i=an(o,Object(r.sumOutType)(s.dtype),"prod",n);h=en({inputs:{x:i},backend:n,attrs:{shape:e}}),c.push(o),c.push(i)}if(i){c.push(h);const e=r.backend_util.expandShapeToKeepDim(h.shape,l);h=en({inputs:{x:h},backend:n,attrs:{shape:e}})}return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},No=e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:o}=n,i=Ze(r,a,s,o);return t.makeTensorInfo([i.length],o,i)},Ro={kernelName:r.Range,backendName:"webgl",kernelFunc:No},Fo=Vt({opSnippet:"return 1.0 / x;"}),Mo={kernelName:r.Reciprocal,backendName:"webgl",kernelFunc:Fo},Do=Vt({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),jo={kernelName:r.Relu,backendName:"webgl",kernelFunc:Do},Po=Vt({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),Bo={kernelName:r.Relu6,backendName:"webgl",kernelFunc:Po};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Lo{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,o,i,u]=e;this.outputShape=[s,t,n,u];const c=[r&&t>1?o-1:o,r&&n>1?i-1:i],l=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${c[0]/l[0]},\n          ${c[1]/l[1]});\n      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Wo{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,o,i,u]=e;this.outputShape=[s,t,n,u];const c=[r&&t>1?o-1:o,r&&n>1?i-1:i],l=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${c[0]/l[0]},\n          ${c[1]/l[1]},\n          ${c[1]/l[1]});\n      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,\n                                     ${i}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zo={kernelName:r.ResizeBilinear,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:s}=t,{alignCorners:o,halfPixelCenters:i,size:u}=a,[c,l]=u,d=Object(r.env)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Wo(s.shape,c,l,o,i):new Lo(s.shape,c,l,o,i);return n.runWebGLProgram(d,[s],"float32")}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Uo{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,o]=e,i=[n&&s>1?r-1:r,n&&o>1?a-1:a],u=[n&&s>1?s-1:s,n&&o>1?o-1:o],c=i[0]/u[0],l=i[1]/u[1],d=1/c,p=1/l,h=2*Math.ceil(d)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${c});\n        const float widthScale = float(${l});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${h});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${o}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vo={kernelName:r.ResizeBilinearGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:o}=r,i=new Uo(s.shape,a.shape,o);return n.runWebGLProgram(i,[s],s.dtype)}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Go{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,o,i,u]=e;this.outputShape=[s,t,n,u];const c=[r&&t>1?o-1:o,r&&n>1?i-1:i],l=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";let p;p=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${c[0]/l[0]},\n          ${c[1]/l[1]});\n      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ho{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,o,i,u]=e;this.outputShape=[s,t,n,u];const c=[r&&t>1?o-1:o,r&&n>1?i-1:i],l=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";let p;p=a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${c[0]/l[0]},\n          ${c[1]/l[1]},\n          ${c[1]/l[1]});\n      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,\n                                     ${i}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qo={kernelName:r.ResizeNearestNeighbor,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:s}=t,{alignCorners:o,halfPixelCenters:i,size:u}=a,[c,l]=u,d=Object(r.env)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Ho(s.shape,c,l,o,i):new Go(s.shape,c,l,o,i);return n.runWebGLProgram(d,[s],s.dtype)}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ko{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,o]=e,i=[n&&s>1?r-1:r,n&&o>1?a-1:a],u=[n&&s>1?s-1:s,n&&o>1?o-1:o],c=i[0]/u[0],l=i[1]/u[1],d=1/c,p=1/l,h=2*Math.ceil(d)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${c});\n        const float widthScale = float(${l});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${h});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${o}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${i[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${i[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xo={kernelName:r.ResizeNearestNeighborGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:o}=r,i=new Ko(s.shape,a.shape,o);return n.runWebGLProgram(i,[s],s.dtype)}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yo{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),a=re(n);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zo{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=bt("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,o=re(n);function i(n){const r=e.map(((r,a)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(a,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${o} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return i(e)}(r.slice())};\n          if(${a}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",i(e)}(r.slice())};\n          }\n          if(${s}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",i(e)}(r.slice())};\n            if(${a}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",i(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qo={kernelName:r.Reverse,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{dims:o}=a,i=s.shape.length,u=r.util.parseAxisParam(o,s.shape);if(0===i)return Ft({inputs:{x:s},backend:n});const c=Object(r.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Zo(s.shape,u):new Yo(s.shape,u);return n.runWebGLProgram(c,[s],s.dtype)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jo{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let a="";a="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ei={kernelName:r.RotateWithOffset,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:a}=e,{radians:s,fillValue:o,center:i}=t,u=n,c=new Jo(a.shape,o),[l,d]=r.backend_util.getImageCenter(i,a.shape[1],a.shape[2]),p=[[l,d,Math.sin(s),Math.cos(s)]];return u.runWebGLProgram(c,[a],a.dtype,p)}},ti=Vt({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),ni={kernelName:r.Round,backendName:"webgl",kernelFunc:ti},ri=Vt({opSnippet:"return inversesqrt(x);",cpuKernelImpl:Qe}),ai={kernelName:r.Rsqrt,backendName:"webgl",kernelFunc:ri};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class si{constructor(e,t,n,r,a,s,o=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const i=re(a.length),u=re(s.length);let c="";1===n?c="i":2===n&&(c="i, j");const l=`getIndices(${c})`;let d="";1===r?d="i":2===r&&(d="i, coords[1]");const p=`getUpdates(${d})`,h=t>1?"strides[j]":"strides";this.userCode=`\n        ${i} strides = ${i}(${a});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${l});\n              flattenedIndex += index * ${h};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oi={kernelName:r.ScatterNd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:s,updates:o}=t,{shape:i}=a,{sliceRank:u,numUpdates:c,sliceSize:l,strides:d,outputSize:p}=r.backend_util.calculateShapes(o,s,i),h=[p/l,l];if(0===p)return n.makeTensorInfo(i,s.dtype);const f=en({inputs:{x:s},backend:n,attrs:{shape:[c,u]}}),m=en({inputs:{x:o},backend:n,attrs:{shape:[c,l]}}),b=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new si(c,u,f.shape.length,m.shape.length,d,h),x=n.runWebGLProgram(g,[m,f,b],m.dtype),v=en({inputs:{x:x},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(b),v}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ii{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],o=[];for(let r=0;r<t.length;r++)o.push(`${n[r]}`),r<e&&s.push(`${n[r]}`);r=s.join(),a=o.join()}const s=re(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ui={kernelName:r.Select,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:a,t:s,e:o}=t,i=new ii(a.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(i,[a,s,o],Object(r.upcastType)(s.dtype,o.dtype))}},ci=Vt({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${r.backend_util.SELU_SCALEALPHA};\n  float scale = ${r.backend_util.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),li={kernelName:r.Selu,backendName:"webgl",kernelFunc:ci},di="return 1.0 / (1.0 + exp(-1.0 * x));",pi=Vt({opSnippet:di,packedOpSnippet:di,cpuKernelImpl:Je}),hi={kernelName:r.Sigmoid,backendName:"webgl",kernelFunc:pi},fi=Vt({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),mi={kernelName:r.Sign,backendName:"webgl",kernelFunc:fi},bi=Vt({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),gi={kernelName:r.Sin,backendName:"webgl",kernelFunc:bi},xi=Vt({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),vi={kernelName:r.Sinh,backendName:"webgl",kernelFunc:xi},yi=Vt({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),ki={kernelName:r.Softplus,backendName:"webgl",kernelFunc:yi},wi={kernelName:r.SpaceToBatchND,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{blockShape:o,paddings:i}=a;r.util.assert(s.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const u=o.reduce(((e,t)=>e*t)),c=[[0,0]];c.push(...i);for(let e=1+o.length;e<s.shape.length;++e)c.push([0,0]);const l=[],d=To({inputs:{x:s},backend:n,attrs:{paddings:c,constantValue:0}}),p=r.backend_util.getReshaped(d.shape,o,u,!1),h=r.backend_util.getPermuted(p.length,o.length,!1),f=r.backend_util.getReshapedPermuted(d.shape,o,u,!1),m=en({inputs:{x:d},backend:n,attrs:{shape:p}}),b=dn({inputs:{x:m},backend:n,attrs:{perm:h}}),g=en({inputs:{x:b},backend:n,attrs:{shape:f}});return l.push(d),l.push(m),l.push(b),l.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ii={kernelName:r.SparseFillEmptyRows,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:o}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n         ${a.shape}`);if(0!==o.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${o.shape}`);const i=n.readSync(r.dataId),u=n.readSync(a.dataId),c=n.readSync(s.dataId),l=n.readSync(o.dataId)[0],[d,p,h,f,m]=nt(i,r.shape,r.dtype,u,a.dtype,c,l);return[n.makeTensorInfo(p,r.dtype,d),n.makeTensorInfo([p[0]],a.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Si={kernelName:r.SparseReshape,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const o=Array.from(n.readSync(a.dataId)),i=n.readSync(r.dataId),u=Array.from(n.readSync(s.dataId)),[c,l,d]=rt(i,r.shape,r.dtype,o,u);return[n.makeTensorInfo(l,r.dtype,c),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _i={kernelName:r.SparseSegmentMean,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${s.shape}`);const o=n.readSync(r.dataId),i=n.readSync(a.dataId),u=n.readSync(s.dataId),[c,l]=at(o,r.shape,r.dtype,i,u,!0);return n.makeTensorInfo(l,r.dtype,c)}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oi={kernelName:r.SparseSegmentSum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${s.shape}`);const o=n.readSync(r.dataId),i=n.readSync(a.dataId),u=n.readSync(s.dataId),[c,l]=at(o,r.shape,r.dtype,i,u);return n.makeTensorInfo(l,r.dtype,c)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ti={kernelName:r.SparseToDense,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sparseIndices:s,sparseValues:o,defaultValue:i}=t,{outputShape:u}=a,{sliceRank:c,numUpdates:l,strides:d,outputSize:p}=r.backend_util.calculateShapes(o,s,u),h=new si(l,c,s.shape.length,o.shape.length,d,[p,1],!1),f=n.runWebGLProgram(h,[o,s,i],o.dtype),m=en({inputs:{x:f},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(f),m}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ci={kernelName:r.SplitV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{numOrSizeSplits:o,axis:i}=a,u=r.util.parseAxisParam(i,s.shape)[0],c=r.backend_util.prepareSplitSize(s,o,u),l=s.shape.length,d=new Array(l).fill(0),p=s.shape.slice();return c.map((e=>{const t=[...p];t[u]=e;const r=ir({inputs:{x:s},backend:n,attrs:{begin:d,size:t}});return d[u]+=e,r}))}},$i="return sqrt(x);",Ei=Vt({opSnippet:$i,packedOpSnippet:$i,cpuKernelImpl:st}),Ai={kernelName:r.Sqrt,backendName:"webgl",kernelFunc:Ei},Ni=Vt({opSnippet:"return x * x;"}),Ri={kernelName:r.Square,backendName:"webgl",kernelFunc:Ni},Fi="return (a - b) * (a - b);",Mi=Gt({opSnippet:Fi,packedOpSnippet:Fi}),Di={kernelName:r.SquaredDifference,backendName:"webgl",kernelFunc:Mi};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ji={kernelName:r.Step,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function({inputs:e,attrs:t,backend:n}){const{x:r}=e,a=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,s=new It(r.shape,a);return n.runWebGLProgram(s,[r],r.dtype)}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pi{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,a=re(n.length),s=re(n.length);let o="";if(1===r)o="coords * strides + begin";else{let e=0;o=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${a} begin = ${a}(${e});\n      ${a} strides = ${a}(${t});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${o}));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bi={kernelName:r.StridedSlice,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{begin:o,end:i,strides:u,beginMask:c,endMask:l,ellipsisMask:d,newAxisMask:p,shrinkAxisMask:h}=a,{nonStrided:f,$begin:m,$strides:b,size:g,newShape:x,outShape:v}=r.slice_util.sliceInfo(s.shape,o,i,u,c,l,d,p,h),y=en({inputs:{x:s},backend:n,attrs:{shape:x}});let k;if(f){const e=ir({inputs:{x:y},backend:n,attrs:{begin:m,size:g}});k=en({inputs:{x:e},backend:n,attrs:{shape:v}}),n.disposeIntermediateTensorInfo(e)}else if(v.some((e=>0===e)))k=n.makeTensorInfo(v,s.dtype,[]);else{if(n.shouldExecuteOnCPU([y])){const e=n.texData.get(y.dataId).values,t=Object(r.buffer)(y.shape,y.dtype,e),a=ot(v,t,b,m);k=n.makeTensorInfo(v,y.dtype,a.values)}else{const e=new Pi(m,b,v);k=n.runWebGLProgram(e,[y],y.dtype)}}const w=en({inputs:{x:k},backend:n,attrs:{shape:v}});return n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(k),w}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Li={kernelName:r.StringNGrams,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:o,rightPad:i,padWidth:u,preserveShortSequences:c}=r,{data:l,dataSplits:d}=t,p=n.readSync(l.dataId),h=n.readSync(d.dataId),[f,m]=it(p,h,a,s,o,i,u,c);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wi={kernelName:r.StringSplit,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:o}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==o.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);const i=n.readSync(s.dataId),u=n.readSync(o.dataId)[0],[c,l,d]=ut(i,u,a),p=l.length;return[n.makeTensorInfo([p,2],"int32",c),n.makeTensorInfo([p],"string",l),n.makeTensorInfo([2],"int32",new Int32Array(d))]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zi={kernelName:r.StringToHashBucketFast,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const o=n.readSync(s.dataId),i=ct(o,a);return n.makeTensorInfo(s.shape,"int32",i)}},Ui=Vt({opSnippet:"return tan(x);"}),Vi={kernelName:r.Tan,backendName:"webgl",kernelFunc:Ui},Gi=Vt({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),Hi={kernelName:r.Tanh,backendName:"webgl",kernelFunc:Gi};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class qi{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=re(this.rank),a=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}function Ki(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{reps:o}=a;if("string"===s.dtype||s.shape.length>5){const e=n.readSync(s.dataId),t="string"===s.dtype?e.map((e=>r.util.decodeString(e))):e,a=Object(r.buffer)(s.shape,s.dtype,t),i=dt(a,o);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new qi(s.shape,o);return n.runWebGLProgram(i,[s],s.dtype)}const Xi={kernelName:r.Tile,backendName:"webgl",kernelFunc:Ki};class Yi{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class Zi{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qi(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function Ji(e){let t=1;for(;t<e;)t*=2;return t}const eu={kernelName:r.TopK,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{k:o,sorted:i}=a,u=Object(r.env)().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),c=Object(r.env)().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=s.shape,d=l[l.length-1];if(n.shouldExecuteOnCPU([s])||d<u||o>c){const e=n.readSync(s.dataId),[t,r]=pt(e,l,s.dtype,o,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===o)return l[l.length-1]=0,[n.makeTensorInfo(l,s.dtype,[]),n.makeTensorInfo(l,"int32",[])];if(1===d)return[s,Pa({attrs:{shape:l,dtype:"int32",value:0},backend:n})];const p=n.texData.get(s.dataId),h=null!==p&&p.isPacked,f=h?n.unpackTensor(s):s,m=r.util.sizeFromShape(l)/d,b=en({inputs:{x:f},attrs:{shape:[m,d]},backend:n});h&&Qi(n,f);const g=Ji(o),x=Ji(d);let v=null;const y=()=>null===v?[b,b]:[b,v],k=(e,t,r)=>{const a=y(),s=new Yi(r),o=[[d],[null===v?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],i=v;v=n.runWebGLProgram(s,a,"int32",o),Qi(n,i)};for(let e=1;e<g;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)k(t,n,[m,x])}for(let e=x;e>g;e/=2){const t=y(),r=new Zi([m,e/2]),a=[[d],[null===v?1:0],[g]],s=v;v=n.runWebGLProgram(r,t,"int32",a),Qi(n,s);const o=g/2,i=2*o;for(let e=o;e>=1;e/=2)k(i,e,v.shape)}let w=v;v=ir({inputs:{x:v},backend:n,attrs:{begin:0,size:[m,o]}}),Qi(n,w);let I=ns({inputs:{x:b,indices:v},backend:n,attrs:{axis:1,batchDims:1}});Qi(n,b);const S=l.slice(0,-1);S.push(o),w=v,v=en({inputs:{x:v},attrs:{shape:S},backend:n}),Qi(n,w);const _=I;return I=en({inputs:{x:I},attrs:{shape:S},backend:n}),Qi(n,_),[I,v]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tu{constructor(e,t,n,r,a,s){this.variableNames=["Image","Transforms"],this.outputShape=s;const o="nearest"===n?1:2;let i;switch(r){default:i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${i} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${o} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nu={kernelName:r.Transform,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:s}=t,{interpolation:o,fillMode:i,fillValue:u,outputShape:c}=r,[l,d,p,h]=a.shape,[f,m]=null!=c?c:[d,p],b=new tu(d,p,o,i,u,[l,f,m,h]);return n.runWebGLProgram(b,[a,s],"float32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ru={kernelName:r.Unique,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;P(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const o=r.readSync(s.dataId),{outputValues:i,outputShape:u,indices:c}=ft(o,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,i),r.makeTensorInfo([c.length],"int32",c)]}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const au={kernelName:r.Unpack,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const o=a,i=o.shape.length,u=a.shape[s],c=new Array(i-1);let l=0;for(let e=0;e<i;e++)e!==s&&(c[l++]=o.shape[e]);const d=[],p=new Array(i).fill(0),h=o.shape.slice();h[s]=1;const f=new Array(u);for(let e=0;e<f.length;e++){p[s]=e;const t=ir({inputs:{x:o},backend:n,attrs:{begin:p,size:h}}),r=en({inputs:{x:t},backend:n,attrs:{shape:c}});f[e]=r,d.push(t)}return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class su{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,o=s*Math.ceil(a/n);this.outputShape=[r,o];const i=4*Math.floor(n/4),u=n%4,c="\n        sumValue += dot(values, segFilter);\n    ";let l="";a%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let d="";a%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${d}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${c}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${c}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${c}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${c}\n        }\n        setOutput(sumValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ou=[Ns,Fs,fn,bn,xn,yn,In,On,Tn,Cn,Fn,Mn,jn,Bn,Un,Wn,Gn,Xn,Kn,Qn,Jn,er,rr,cr,lr,mr,xr,kr,Sr,jt,Nr,Ur,Vr,Pr,Hr,qr,Gr,Xr,Zr,Jr,ra,aa,oa,pa,ha,ca,ma,ga,xa,ya,ka,Ia,_a,Ca,Ea,Ra,Da,Ba,Wa,Va,Ha,Xa,Za,Qa,es,rs,ss,is,Mt,us,$r,ls,ps,fs,Lt,bs,xs,vs,Is,ks,_s,Ts,$s,Ds,Ls,Bs,Us,Vs,Gs,Ps,Hs,qs,Xs,Qs,eo,co,Jt,po,fo,bo,xo,pr,yo,Io,So,Co,Eo,Ut,Ao,Ro,fr,ro,Mo,Bo,jo,tn,zo,Vo,qo,Xo,Qo,ei,ni,ai,oi,ui,li,hi,mi,gi,vi,ur,uo,ki,wi,Ii,Si,_i,Oi,Ti,Ci,Ai,Ri,Di,ji,Bi,Li,Wi,zi,oo,ln,Vi,Hi,Xi,eu,nu,pn,ru,au,{kernelName:r.UnsortedSegmentSum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,segmentIds:o}=t,{numSegments:i}=a,u=s.shape.length,c=[];let l=0;const d=r.backend_util.getAxesPermutation([l],u);let p=s;null!=d&&(p=dn({inputs:{x:s},backend:n,attrs:{perm:d}}),c.push(p),l=r.backend_util.getInnerMostAxes(1,u)[0]);const h=r.backend_util.segment_util.computeOutShape(p.shape,l,i),f=r.util.sizeFromShape([p.shape[l]]),m=en({inputs:{x:p},backend:n,attrs:{shape:[-1,f]}});c.push(m);const b=Object(r.sumOutType)(s.dtype),g=(e,t,a,s,o)=>{const i=e.shape[0],u=e.shape[1],l=r.backend_util.segment_util.segOpComputeOptimalWindowSize(u,o),d=new su({windowSize:l,inSize:u,batchSize:i,numSegments:o},t),p=n.compileAndRun(d,[e,a],s);if(c.push(p),p.shape[1]===o)return p;const h=No({backend:n,attrs:{start:0,stop:o,step:1,dtype:"float32"}}),f=Ki({inputs:{x:h},backend:n,attrs:{reps:[u/l]}});c.push(h),c.push(f);return g(p,t,f,s,o)},x=en({inputs:{x:g(m,"unsortedSegmentSum",o,b,i)},backend:n,attrs:{shape:h}});let v=x;if(null!=d){c.push(x);const e=r.backend_util.getUndoAxesPermutation(d);v=dn({inputs:{x:v},backend:n,attrs:{perm:e}})}return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),v}},wo];
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */for(const e of ou)Object(r.registerKernel)(e);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */},function(e,t,n){"use strict";var r=n(0),a=n(7);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const s=r.kernel_impls.whereImpl;class o extends r.KernelBackend{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new r.DataStorage(this,Object(r.engine)())}nextDataId(){return o.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,Object(r.env)().get("IS_NODE")&&r.backend_util.warn("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const a={id:this.nextDataId()};return this.data.set(a,{values:e,dtype:n,refCount:1}),a}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&r.util.isString(n[0])){const s=n.map((e=>r.util.encodeString(e)));a=this.write(s,e,t)}else a=this.write(n,e,t);return{dataId:a,shape:e,dtype:t}}refCount(e){if(this.data.has(e)){return this.data.get(e).refCount}return 0}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,r,a){this.data.set(e,{values:t,dtype:r,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){const e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return r.backend_util.mergeRealAndImagArrays(e,t)}return this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>r.util.decodeString(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Object(r.buffer)(e.shape,e.dtype,n)}makeOutput(e,t,n){const a=this.write(e,t,n);return Object(r.engine)().makeTensorFromDataId(a,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=r.util.now();e();return{kernelMs:r.util.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Object(a.a)([e],"where");const t=this.readSync(e.dataId);return s(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}o.nextDataId=0,
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(r.registerBackend)("cpu",(()=>new o),1);var i=n(8);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u=Object(i.a)(r.Elu,(e=>e>=0?e:Math.exp(e)-1)),c={kernelName:r.Elu,backendName:"cpu",kernelFunc:u};var l=n(19);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{alpha:i}=s;Object(a.a)([o],"leakyRelu");const u=r.util.sizeFromShape(o.shape),c=n.data.get(o.dataId).values,l=r.util.getTypedArrayFromDType("float32",u);for(let e=0;e<c.length;e++)l[e]=c[e]<0?i*c[e]:c[e];return n.makeTensorInfo(o.shape,"float32",l)}const p={kernelName:r.LeakyRelu,backendName:"cpu",kernelFunc:d};var h=n(12);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f=Object(h.a)(((e,t)=>e<0?t*e:e));function m(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t;Object(a.a)([r,s],"prelu");const o=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,[u,c]=f(r.shape,s.shape,o,i,r.dtype);return n.makeTensorInfo(c,r.dtype,u)}const b={kernelName:r.Prelu,backendName:"cpu",kernelFunc:m},g=Object(i.a)(r.Relu,(e=>Math.max(0,e))),x={kernelName:r.Relu,backendName:"cpu",kernelFunc:g},v=Object(i.a)(r.Relu6,(e=>Math.min(Math.max(0,e),6))),y={kernelName:r.Relu6,backendName:"cpu",kernelFunc:v};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var k=n(43);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w(e,t,n,r,a){if("linear"===n)return Object(l.a)({inputs:{x:t},backend:e});if("relu"===n)return g({inputs:{x:t},backend:e});if("elu"===n)return u({inputs:{x:t},backend:e});if("relu6"===n)return v({inputs:{x:t},backend:e});if("prelu"===n)return m({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return d({inputs:{x:t},backend:e,attrs:{alpha:a}});if("sigmoid"===n)return Object(k.a)({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}var I=n(27);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{shape:o}=a,i=r.util.sizeFromShape(s.shape),u=r.util.inferFromImplicitShape(o,i),c=r.util.sizeFromShape(u);r.util.assert(i===c,(()=>`The new shape (${u}) has ${c} elements and the old shape (${s.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(s.dataId);const l=n.data.get(s.dataId);if(null!=l.complexTensorInfos){const e=l.complexTensorInfos.real,t=l.complexTensorInfos.imag;e.shape=u,t.shape=u}return{dataId:s.dataId,shape:u,dtype:s.dtype}}const _={kernelName:r.Reshape,backendName:"cpu",kernelFunc:S};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O(e){const{inputs:t,backend:n,attrs:s}=e,{a:o,b:i}=t,{transposeA:u,transposeB:c}=s;Object(a.a)([o,i],"matMul");const l=o.shape.length,d=i.shape.length,p=u?o.shape[l-2]:o.shape[l-1],h=c?i.shape[d-1]:i.shape[d-2],f=u?o.shape[l-1]:o.shape[l-2],m=c?i.shape[d-2]:i.shape[d-1],b=o.shape.slice(0,-2),g=i.shape.slice(0,-2),x=r.util.sizeFromShape(b),v=r.util.sizeFromShape(g),y=x===v||1===x||1===v;r.util.assert(l>=2&&d>=2&&y,(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${b}) and (${g}).`));const k=(x>v?o.shape.slice(0,-2):i.shape.slice(0,-2)).concat([f,m]);r.util.assert(p===h,(()=>`Error in matMul: inner shapes (${p}) and (${h}) of Tensors with shapes ${o.shape} and ${i.shape} and transposeA=${u} and transposeB=${c} must match.`));const w=c?[v,m,h]:[v,h,m],I=S({inputs:{x:o},backend:n,attrs:{shape:u?[x,p,f]:[x,f,p]}}),_=S({inputs:{x:i},backend:n,attrs:{shape:w}}),O=u?I.shape[1]:I.shape[2],T=u?I.shape[2]:I.shape[1],C=c?_.shape[1]:_.shape[2],$=Math.max(x,v),E=n.data.get(I.dataId).values,A=n.data.get(_.dataId).values,N=r.util.computeStrides(I.shape),R=r.util.computeStrides(_.shape),[F,M,D]=u?[N[0],1,N[1]]:[N[0],N[1],1],[j,P,B]=c?[1,R[1],R[0]]:[R[1],1,R[0]],L=T*C,W=Object(r.buffer)([$,T,C],I.dtype),z=W.values,U=n.blockSize;for(let e=0;e<$;e++)for(let t=0;t<T;t+=U)for(let n=0;n<C;n+=U)for(let r=0;r<O;r+=U){const a=Math.min(t+U,T),s=Math.min(n+U,C),o=Math.min(r+U,O);for(let i=t;i<a;i++)for(let t=n;t<s;t++){let n=0;for(let a=r;a<o;a++){const r=Math.min(e,x-1)*F,s=Math.min(e,v-1)*B;n+=E[r+i*M+a*D]*A[a*j+t*P+s]}z[e*L+(i*C+t)]+=n}}return n.disposeIntermediateTensorInfo(I),n.disposeIntermediateTensorInfo(_),n.makeTensorInfo(k,W.dtype,W.values)}const T={kernelName:r.BatchMatMul,backendName:"cpu",kernelFunc:O};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C={kernelName:r._FusedMatMul,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:s,bias:o,preluActivationWeights:i}=t,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:d}=r;let p,h,f;const m=[];p=O({inputs:{a:a,b:s},attrs:{transposeA:u,transposeB:c},backend:n}),o&&(h=Object(I.a)({inputs:{a:p,b:o},backend:n}),m.push(p),p=h),l&&(f=w(n,p,l,i,d),m.push(p),p=f);for(const e of m)n.disposeIntermediateTensorInfo(e);return p}};var $=n(54);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E=Object(i.a)(r.Acos,(e=>Math.acos(e))),A={kernelName:r.Acos,backendName:"cpu",kernelFunc:E},N=Object(i.a)(r.Acosh,(e=>Math.acosh(e))),R={kernelName:r.Acosh,backendName:"cpu",kernelFunc:N};const F={kernelName:r.AddN,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n}=e,s=t;Object(a.a)(t,"addN");const o=s.map((e=>n.data.get(e.dataId).values)),i=Object(r.buffer)(s[0].shape,s[0].dtype),u=i.values;for(let e=0;e<s.length;e++){const t=o[e];for(let e=0;e<u.length;e++)u[e]+=t[e]}return n.makeTensorInfo(i.shape,i.dtype,i.values)}};var M=n(17);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D={kernelName:r.All,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{axis:i,keepDims:u}=s;Object(a.a)(o,"all");const c=r.util.parseAxisParam(i,o.shape);let l=c;const d=r.backend_util.getAxesPermutation(l,o.shape.length);let p=o;null!=d&&(p=Object(M.a)({inputs:{x:o},backend:n,attrs:{perm:d}}),l=r.backend_util.getInnerMostAxes(l.length,o.shape.length)),r.backend_util.assertAxesAreInnerMostDims("all",l,p.shape.length);const[h,f]=r.backend_util.computeOutAndReduceShapes(p.shape,l),m=r.util.sizeFromShape(f),b=r.util.makeZerosTypedArray(r.util.sizeFromShape(h),p.dtype),g=n.data.get(p.dataId).values;for(let e=0;e<b.length;++e){const t=e*m;let n=g[t];for(let e=0;e<m;++e){const r=g[t+e];n=n&&r}b[e]=n}null!=d&&n.disposeIntermediateTensorInfo(p);const x=n.makeTensorInfo(h,p.dtype,b);if(u){const e=S({inputs:{x:x},backend:n,attrs:{shape:r.backend_util.expandShapeToKeepDim(h,c)}});return n.disposeIntermediateTensorInfo(x),e}return x}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j={kernelName:r.Any,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{axis:i,keepDims:u}=s;Object(a.a)(o,"any");const c=r.util.parseAxisParam(i,o.shape);let l=c;const d=r.backend_util.getAxesPermutation(l,o.shape.length);let p=o;null!=d&&(p=Object(M.a)({inputs:{x:o},backend:n,attrs:{perm:d}}),l=r.backend_util.getInnerMostAxes(l.length,o.shape.length)),r.backend_util.assertAxesAreInnerMostDims("any",l,p.shape.length);const[h,f]=r.backend_util.computeOutAndReduceShapes(p.shape,l),m=r.util.sizeFromShape(f),b=r.util.makeZerosTypedArray(r.util.sizeFromShape(h),p.dtype),g=n.data.get(p.dataId).values;for(let e=0;e<b.length;++e){const t=e*m;let n=g[t];for(let e=0;e<m;++e){const r=g[t+e];n=n||r}b[e]=n}null!=d&&n.disposeIntermediateTensorInfo(p);const x=n.makeTensorInfo(h,p.dtype,b);if(u){const e=S({inputs:{x:x},backend:n,attrs:{shape:r.backend_util.expandShapeToKeepDim(h,c)}});return n.disposeIntermediateTensorInfo(x),e}return x}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P={kernelName:r.ArgMax,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{axis:i}=s;Object(a.a)(o,"argMax");let u=r.util.parseAxisParam(i,o.shape);const c=r.backend_util.getAxesPermutation(u,o.shape.length);let l=o;const d=[];null!=c&&(l=Object(M.a)({inputs:{x:o},backend:n,attrs:{perm:c}}),d.push(l),u=r.backend_util.getInnerMostAxes(u.length,l.shape.length)),u=[u[0]],r.backend_util.assertAxesAreInnerMostDims("argMax",u,l.shape.length);const[p,h]=r.backend_util.computeOutAndReduceShapes(l.shape,u),f=r.util.sizeFromShape(p),m=r.util.makeZerosTypedArray(f,"int32"),b=r.util.sizeFromShape(h),g=n.data.get(l.dataId).values;for(let e=0;e<m.length;++e){const t=e*b;let n=g[t],r=0;for(let e=0;e<b;++e){const a=g[t+e];a>n&&(n=a,r=e)}m[e]=r}return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(p,"int32",m)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B={kernelName:r.ArgMin,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{axis:i}=s;Object(a.a)(o,"argMin");let u=r.util.parseAxisParam(i,o.shape);const c=r.backend_util.getAxesPermutation(u,o.shape.length);let l=o;const d=[];null!=c&&(l=Object(M.a)({inputs:{x:o},backend:n,attrs:{perm:c}}),d.push(l),u=r.backend_util.getInnerMostAxes(u.length,l.shape.length)),u=[u[0]],r.backend_util.assertAxesAreInnerMostDims("argMin",u,l.shape.length);const[p,h]=r.backend_util.computeOutAndReduceShapes(l.shape,u),f=r.util.sizeFromShape(p),m=r.util.makeZerosTypedArray(f,"int32"),b=r.util.sizeFromShape(h),g=n.data.get(l.dataId).values;for(let e=0;e<m.length;++e){const t=e*b;let n=g[t],r=0;for(let e=0;e<b;++e){const a=g[t+e];a<n&&(n=a,r=e)}m[e]=r}return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(p,"int32",m)}},L=Object(i.a)(r.Asin,(e=>Math.asin(e))),W={kernelName:r.Asin,backendName:"cpu",kernelFunc:L},z=Object(i.a)(r.Asinh,(e=>Math.asinh(e))),U={kernelName:r.Asinh,backendName:"cpu",kernelFunc:z},V=Object(i.a)(r.Atan,(e=>Math.atan(e))),G={kernelName:r.Atan,backendName:"cpu",kernelFunc:V};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var H=n(13);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q=Object(h.a)(((e,t)=>Math.atan2(e,t))),K=Object(H.a)(r.Atan2,q),X={kernelName:r.Atan2,backendName:"cpu",kernelFunc:K},Y=Object(i.a)(r.Atanh,(e=>Math.atanh(e))),Z={kernelName:r.Atanh,backendName:"cpu",kernelFunc:Y};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Q(e,t,n,a,s,o){const i=s.strideHeight,u=s.strideWidth,c=s.dilationHeight,l=s.dilationWidth,d=s.effectiveFilterHeight,p=s.effectiveFilterWidth,h=s.padInfo.top,f=s.padInfo.left,m="max"===o?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,b=Object(r.buffer)(s.outShape,n),g=b.values,x=s.outShape[1]*s.outShape[2]*s.outShape[3],v=s.outShape[2]*s.outShape[3],y=s.outShape[3];for(let t=0;t<s.batchSize;++t){const n=t*x,r=t*a[0];for(let t=0;t<s.inChannels;++t)for(let b=0;b<s.outHeight;++b){const x=b*i-h,k=Math.max(0,x),w=Math.min(s.inHeight,d+x),I=n+b*v;for(let n=0;n<s.outWidth;++n){const i=n*u-f,d=Math.max(0,i),h=Math.min(s.inWidth,p+i);let b=m,x=0,v=0;for(let n=k;n<w;n+=c){const s=r+n*a[1];for(let n=d;n<h;n+=l){const r=e[s+n*a[2]+t];"max"===o&&r>b?b=r:"avg"===o&&(x+=r,v++)}if(isNaN(b))break}g[I+n*y+t]="avg"===o?x/v:b}}}return b}function J(e,t,n,a,s=!1,o=!1){const i=Object(r.buffer)(a.outShape,"int32"),u=a.strideHeight,c=a.strideWidth,l=a.dilationHeight,d=a.dilationWidth,p=a.effectiveFilterHeight,h=a.effectiveFilterWidth,f=a.padInfo.top,m=a.padInfo.left,b=Object(r.buffer)(t,n,e);for(let e=0;e<a.batchSize;++e)for(let t=0;t<a.inChannels;++t)for(let n=0;n<a.outHeight;++n){const r=n*u-f;let g=r;for(;g<0;)g+=l;const x=Math.min(a.inHeight,p+r);for(let u=0;u<a.outWidth;++u){const p=u*c-m;let f=p;for(;f<0;)f+=d;const v=Math.min(a.inWidth,h+p);let y=Number.NEGATIVE_INFINITY,k=-1;for(let n=g;n<x;n+=l){const i=n-r;for(let r=f;r<v;r+=d){const u=r-p,c=b.get(e,n,r,t);c>y&&(y=c,k=s?o?((e*a.inHeight+n)*a.inWidth+r)*a.inChannels+t:(n*a.inWidth+r)*a.inChannels+t:i*h+u)}}i.set(k,e,n,u,t)}}return i}function ee(e,t,n,a,s,o){const i=s.strideDepth,u=s.strideHeight,c=s.strideWidth,l=s.dilationDepth,d=s.dilationHeight,p=s.dilationWidth,h=s.effectiveFilterDepth,f=s.effectiveFilterHeight,m=s.effectiveFilterWidth,b=s.padInfo.front,g=s.padInfo.top,x=s.padInfo.left,v="max"===o?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,y=Object(r.buffer)(s.outShape,n),k=y.values,w=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],I=s.outShape[2]*s.outShape[3]*s.outShape[4],S=s.outShape[3]*s.outShape[4],_=s.outShape[4];for(let t=0;t<s.batchSize;++t){const n=t*w,r=t*a[0];for(let t=0;t<s.inChannels;++t)for(let y=0;y<s.outDepth;++y){const w=y*i-b;let O=w;for(;O<0;)O+=l;const T=Math.min(s.inDepth,h+w),C=n+y*I;for(let n=0;n<s.outHeight;++n){const i=n*u-g;let h=i;for(;h<0;)h+=d;const b=Math.min(s.inHeight,f+i),y=C+n*S;for(let n=0;n<s.outWidth;++n){const i=n*c-x;let u=i;for(;u<0;)u+=p;const f=Math.min(s.inWidth,m+i),g=y+n*_;let w=v,I=0,S=0;for(let n=O;n<T;n+=l){const s=r+n*a[1];for(let n=h;n<b;n+=d){const r=s+n*a[2];for(let n=u;n<f;n+=p){const s=e[r+n*a[3]+t];if("max"===o&&s>w?w=s:"avg"===o&&(I+=s,S++),isNaN(w))break}if(isNaN(w))break}if(isNaN(w))break}k[g+t]="avg"===o?I/S:w}}}}return y}const te={kernelName:r.AvgPool,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t;Object(a.a)(o,"avgPool");const{filterSize:i,strides:u,pad:c,dimRoundingMode:d}=s;r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(u,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${u} and dilations '1'`));const p=r.backend_util.computePool2DInfo(o.shape,i,u,1,c,d);let h;if(1===p.filterWidth&&1===p.filterHeight&&r.util.arraysEqual(p.inShape,p.outShape))h=Object(l.a)({inputs:{x:o},backend:n});else{const e=n.data.get(o.dataId).values,t=r.util.computeStrides(o.shape),a=Q(e,o.shape,o.dtype,t,p,"avg");h=n.makeTensorInfo(p.outShape,o.dtype,a.values)}return h}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ne={kernelName:r.AvgPool3D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{filterSize:i,strides:u,pad:c,dimRoundingMode:l,dataFormat:d}=s;Object(a.a)(o,"avgPool3d");const p=r.backend_util.computePool3DInfo(o.shape,i,u,1,c,l,d),h=ee(n.data.get(o.dataId).values,o.shape,o.dtype,r.util.computeStrides(o.shape),p,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const re={kernelName:r.AvgPool3DGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:o,input:i}=t,{filterSize:u,strides:c,pad:l,dimRoundingMode:d}=s;Object(a.a)([o,i],"avgPool3DGrad");const p=r.backend_util.computePool3DInfo(i.shape,u,c,1,l,d),h=p.strideDepth,f=p.strideHeight,m=p.strideWidth,b=p.filterDepth,g=p.filterHeight,x=p.filterWidth,v=p.dilationDepth,y=p.dilationHeight,k=p.dilationWidth,w=p.effectiveFilterDepth,I=p.effectiveFilterHeight,S=p.effectiveFilterWidth,_=w-1-p.padInfo.front,O=S-1-p.padInfo.left,T=I-1-p.padInfo.top,C=Object(r.buffer)(i.shape,"float32"),$=1/(b*g*x),E=n.bufferSync(o);for(let e=0;e<p.batchSize;++e)for(let t=0;t<p.inChannels;++t)for(let n=0;n<p.inDepth;++n)for(let r=0;r<p.inHeight;++r)for(let a=0;a<p.inWidth;++a){const s=n-_,o=r-T,i=a-O;let u=0;for(let n=0;n<w;n+=v){const r=(s+n)/h;if(!(r<0||r>=p.outDepth||Math.floor(r)!==r))for(let n=0;n<I;n+=y){const a=(o+n)/f;if(!(a<0||a>=p.outHeight||Math.floor(a)!==a))for(let n=0;n<S;n+=k){const s=(i+n)/m;if(s<0||s>=p.outWidth||Math.floor(s)!==s)continue;u+=E.get(e,r,a,s,t)}}}C.set(u*$,e,n,r,a,t)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ae={kernelName:r.AvgPoolGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:o,input:i}=t,u=i;Object(a.a)([o,i],"avgPoolGrad");const{filterSize:c,strides:l,pad:d}=s,p=r.backend_util.computePool2DInfo(u.shape,c,l,1,d),h=p.strideHeight,f=p.strideWidth,m=p.filterHeight,b=p.filterWidth,g=p.dilationHeight,x=p.dilationWidth,v=p.effectiveFilterHeight,y=p.effectiveFilterWidth,k=y-1-p.padInfo.left,w=v-1-p.padInfo.top,I=Object(r.buffer)(u.shape,"float32"),S=1/(m*b),_=n.data.get(o.dataId).values,O=Object(r.buffer)(o.shape,"float32",_);for(let e=0;e<p.batchSize;++e)for(let t=0;t<p.inChannels;++t)for(let n=0;n<p.inHeight;++n)for(let r=0;r<p.inWidth;++r){const a=n-w,s=r-k;let o=0;for(let n=0;n<v;n+=g){const r=(a+n)/h;if(!(r<0||r>=p.outHeight||Math.floor(r)!==r))for(let n=0;n<y;n+=x){const a=(s+n)/f;if(a<0||a>=p.outWidth||Math.floor(a)!==a)continue;o+=O.get(e,r,a,t)}}I.set(o*S,e,n,r,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const se={kernelName:r.FusedBatchNorm,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o,scale:i,offset:u,mean:c,variance:l}=t;r.util.assert(c.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),r.util.assert(null==u||c.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),r.util.assert(null==i||c.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),Object(a.a)([o,c,l,i,u],"batchNorm");let{varianceEpsilon:d}=s;null==d&&(d=.001);const p=n.data.get(o.dataId).values,h=n.data.get(c.dataId).values,f=n.data.get(l.dataId).values,m=i?n.data.get(i.dataId).values:new Float32Array([1]),b=u?n.data.get(u.dataId).values:new Float32Array([0]),g=new Float32Array(p.length),x=b.length,v=m.length,y=f.length,k=h.length;let w=0,I=0,S=0,_=0;for(let e=0;e<p.length;++e)g[e]=b[w++]+(p[e]-h[I++])*m[S++]/Math.sqrt(f[_++]+d),w>=x&&(w=0),I>=k&&(I=0),S>=v&&(S=0),_>=y&&(_=0);return n.makeTensorInfo(o.shape,o.dtype,g)}};var oe=n(22);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ie={kernelName:r.BatchToSpaceND,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{blockShape:i,crops:u}=s;Object(a.a)([o],"batchToSpaceND");const c=i.reduce(((e,t)=>e*t)),l=r.backend_util.getReshaped(o.shape,i,c),d=r.backend_util.getPermuted(l.length,i.length),p=r.backend_util.getReshapedPermuted(o.shape,i,c),h=r.backend_util.getSliceBeginCoords(u,i.length),f=r.backend_util.getSliceSize(p,u,i.length),m=S({inputs:{x:o},backend:n,attrs:{shape:l}}),b=Object(M.a)({inputs:{x:m},backend:n,attrs:{perm:d}}),g=S({inputs:{x:b},backend:n,attrs:{shape:p}}),x=Object(oe.a)({inputs:{x:g},backend:n,attrs:{begin:h,size:f}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(g),x}};var ue=n(33);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ce={kernelName:r.Bincount,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:o}=r,i=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,c=Object(ue.a)(i,u,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,c)}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const le={kernelName:r.BroadcastArgs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:a,s1:s}=t,o=n.data.get(a.dataId).values,i=n.data.get(s.dataId).values,u=r.backend_util.assertAndGetBroadcastShape(Array.from(o),Array.from(i));return n.makeTensorInfo([u.length],"int32",Int32Array.from(u))}};var de=n(29),pe=n(55);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const he=Object(i.a)(r.ClipByValue,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),fe={kernelName:r.ClipByValue,backendName:"cpu",kernelFunc:he};var me=n(18);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const be={kernelName:r.ComplexAbs,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,a=new Float32Array(r.util.sizeFromShape(t.shape)),s=n.data.get(t.dataId),o=s.complexTensorInfos.real,i=s.complexTensorInfos.imag,u=n.data.get(o.dataId).values,c=n.data.get(i.dataId).values;for(let e=0;e<u.length;e++){const t=u[e],n=c[e];a[e]=Math.hypot(t,n)}return n.makeOutput(a,t.shape,"float32")}};var ge=n(56);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xe(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}const ve={kernelName:r.Imag,backendName:"cpu",kernelFunc:xe};var ye=n(25);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ke(e){const{inputs:t,backend:n,attrs:a}=e,{axis:s}=a,o=r.util.parseAxisParam(s,t[0].shape)[0];let i=r.backend_util.computeOutShape(t.map((e=>e.shape)),o);if(0===r.util.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);const u=t.filter((e=>r.util.sizeFromShape(e.shape)>0));if(1===u.length)return Object(l.a)({inputs:{x:u[0]},backend:n});const c=u.map((e=>e.shape));if(r.backend_util.assertParamsConsistent(c,o),"complex64"===u[0].dtype){const e=u.map((e=>Object(ye.a)({inputs:{input:e},backend:n}))),t=u.map((e=>xe({inputs:{input:e},backend:n}))),r=ke({inputs:e,backend:n,attrs:{axis:o}}),a=ke({inputs:t,backend:n,attrs:{axis:o}}),s=Object(me.a)({inputs:{real:r,imag:a},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),s}const d=u.map((e=>{const t=r.util.sizeFromShape(e.shape.slice(o));return S({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),p=d.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=r.backend_util.computeOutShape(d.map((e=>e.shape)),1);const h=1===d[0].shape[0],f=Object(ge.a)(p,i,t[0].dtype,h),m=r.backend_util.computeOutShape(u.map((e=>e.shape)),o),b=n.makeTensorInfo(m,t[0].dtype,f);return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}const we={kernelName:r.Concat,backendName:"cpu",kernelFunc:ke};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ie(e){const{inputs:t,backend:n,attrs:s}=e,{x:o,filter:i}=t,{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:p}=s;Object(a.a)([o,i],"conv2d");const h=r.backend_util.convertConv2DDataFormat(l),f=r.backend_util.computeConv2DInfo(o.shape,i.shape,u,d,c,p,!1,h),m=f.filterHeight,b=f.filterWidth,g=f.dilationHeight,x=f.dilationWidth,v=f.padInfo.left,y=f.padInfo.top,k="channelsLast"===f.dataFormat,w=new r.TensorBuffer(f.outShape,o.dtype),I=r.util.computeStrides(o.shape),S=r.util.computeStrides(i.shape),_=I[0],O=k?I[1]:I[2],T=k?I[2]:1,C=k?1:I[1],$=w.strides[0],E=k?w.strides[1]:w.strides[2],A=k?w.strides[2]:1,N=k?1:w.strides[1],R=n.data.get(o.dataId).values,F=n.data.get(i.dataId).values,M=w.values;for(let e=0;e<f.batchSize;++e){const t=e*_,n=e*$;for(let e=0;e<f.outHeight;++e){const r=n+e*E,a=e*f.strideHeight-y;for(let e=0;e<m;++e){const n=a+e*g;if(n<0||n>=f.inHeight)continue;const s=e*S[0],o=t+n*O;for(let e=0;e<f.outWidth;++e){const t=r+e*A,n=e*f.strideWidth-v;for(let e=0;e<b;++e){const r=n+e*x;if(r<0||r>=f.inWidth)continue;const a=o+r*T;let i=s+e*S[1];for(let e=0;e<f.inChannels;++e){const n=R[a+e*C];for(let e=0;e<f.outChannels;++e)M[t+e*N]+=n*F[i+e];i+=f.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,M)}const Se={kernelName:r.Conv2D,backendName:"cpu",kernelFunc:Ie};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _e={kernelName:r.Conv2DBackpropFilter,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o,dy:i}=t,{strides:u,pad:c,dataFormat:l,dimRoundingMode:d,filterShape:p}=s;Object(a.a)([o,i],"conv2dBackpropFilter");const h=r.backend_util.convertConv2DDataFormat(l),f=r.backend_util.computeConv2DInfo(o.shape,p,u,1,c,d,!1,h),{strideHeight:m,strideWidth:b,filterHeight:g,filterWidth:x}=f,v="channelsLast"===f.dataFormat,y=new r.TensorBuffer(f.filterShape,"float32"),k=f.padInfo.left,w=f.padInfo.top,I=n.data.get(o.dataId).values,S=n.data.get(i.dataId).values,_=new r.TensorBuffer(o.shape,o.dtype,I),O=new r.TensorBuffer(i.shape,i.dtype,S);for(let e=0;e<g;++e){const t=Math.max(0,Math.ceil((w-e)/m)),n=Math.min(f.outHeight,(f.inHeight+w-e)/m);for(let r=0;r<x;++r){const a=Math.max(0,Math.ceil((k-r)/b)),s=Math.min(f.outWidth,(f.inWidth+k-r)/b);for(let o=0;o<f.inChannels;++o)for(let i=0;i<f.outChannels;++i){let u=0;for(let c=0;c<f.batchSize;++c)for(let l=t;l<n;++l){const t=e+l*m-w;for(let e=a;e<s;++e){const n=r+e*b-k;u+=v?_.get(c,t,n,o)*O.get(c,l,e,i):_.get(c,o,t,n)*O.get(c,i,l,e)}}y.set(u,e,r,o,i)}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oe={kernelName:r.Conv2DBackpropInput,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:o,filter:i}=t,{inputShape:u,strides:c,pad:l,dataFormat:d,dimRoundingMode:p}=s;Object(a.a)([o,i],"conv2dBackpropInput");const h=r.util.computeStrides(i.shape),f=r.util.computeStrides(o.shape);let m=r.backend_util.convertConv2DDataFormat(d);const b=r.backend_util.computeConv2DInfo(u,i.shape,c,1,l,p,!1,m),g=new r.TensorBuffer(b.inShape,"float32"),x=g.values,v=n.data.get(o.dataId).values,y=n.data.get(i.dataId).values,[k,w,I]=h,{batchSize:S,filterHeight:_,filterWidth:O,inChannels:T,inHeight:C,inWidth:$,outChannels:E,outHeight:A,outWidth:N,strideHeight:R,strideWidth:F}=b;m=b.dataFormat;const M=_-1-b.padInfo.top,D=O-1-b.padInfo.left,j="channelsLast"===m,P=g.strides[0],B=j?g.strides[1]:g.strides[2],L=j?g.strides[2]:1,W=j?1:g.strides[1],z=f[0],U=j?f[1]:f[2],V=j?f[2]:1,G=j?1:f[1];for(let e=0;e<S;++e)for(let t=0;t<T;++t)for(let n=0;n<C;++n){const r=n-M,a=Math.max(0,Math.ceil(r/R)),s=Math.min(A,(_+r)/R);for(let o=0;o<$;++o){const i=o-D,u=Math.max(0,Math.ceil(i/F)),c=Math.min(N,(O+i)/F);let l=0;for(let n=a;n<s;++n){const a=n*R-r;for(let r=u;r<c;++r){const s=z*e+U*n+V*r,o=k*(_-1-a)+w*(O-1-(r*F-i))+I*t;for(let e=0;e<E;++e){l+=v[s+G*e]*y[o+e]}}}x[P*e+B*n+L*o+W*t]=l}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Te={kernelName:r.Conv3D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o,filter:i}=t,{strides:u,pad:c,dilations:l}=s;Object(a.a)([o,i],"conv3d");const d=r.backend_util.computeConv3DInfo(o.shape,i.shape,u,l,c),{filterDepth:p,filterHeight:h,filterWidth:f,dilationDepth:m,dilationHeight:b,dilationWidth:g,padInfo:x}=d,v=x.front,y=x.left,k=x.top,w=new r.TensorBuffer(d.outShape,o.dtype),I=n.data.get(o.dataId).values,S=n.data.get(i.dataId).values,_=w.values,O=r.util.computeStrides(o.shape),T=r.util.computeStrides(i.shape);for(let e=0;e<d.batchSize;++e){const t=e*O[0],n=e*w.strides[0];for(let e=0;e<d.outDepth;++e){const r=n+e*w.strides[1],a=e*d.strideDepth-v;for(let e=0;e<p;++e){const n=a+e*m;if(n<0||n>=d.inDepth)continue;const s=e*T[0],o=t+n*O[1];for(let e=0;e<d.outHeight;++e){const t=r+e*w.strides[2],n=e*d.strideHeight-k;for(let e=0;e<h;++e){const r=n+e*b;if(r<0||r>=d.inHeight)continue;const a=s+e*T[1],i=o+r*O[2];for(let e=0;e<d.outWidth;++e){const n=t+e*d.outChannels,r=e*d.strideWidth-y;for(let e=0;e<f;++e){const t=r+e*g;if(t<0||t>=d.inWidth)continue;const s=a+e*T[2],o=i+t*d.inChannels;let u=s;for(let e=0;e<d.inChannels;++e){const t=I[o+e];for(let e=0;e<d.outChannels;++e)_[n+e]+=t*S[u+e];u+=d.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ce={kernelName:r.Conv3DBackpropFilterV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o,dy:i}=t,{strides:u,pad:c,filterShape:l}=s;Object(a.a)([o,i],"conv3dBackpropFilterV2");const d=r.util.computeStrides(o.shape),p=r.util.computeStrides(i.shape),h=r.backend_util.computeConv3DInfo(o.shape,l,u,1,c),f=h.strideDepth,m=h.strideHeight,b=h.strideWidth,g=h.filterDepth,x=h.filterHeight,v=h.filterWidth,y=new r.TensorBuffer(h.filterShape,"float32"),k=y.values,[w,I,S,_]=y.strides,O=n.data.get(i.dataId).values,[T,C,$,E]=p,A=n.data.get(o.dataId).values,[N,R,F,M]=d,D=h.padInfo.front,j=h.padInfo.left,P=h.padInfo.top;for(let e=0;e<g;++e){const t=Math.max(0,Math.ceil((D-e)/f)),n=Math.min(h.outDepth,(h.inDepth+D-e)/f),r=e*w;for(let a=0;a<x;++a){const s=Math.max(0,Math.ceil((P-a)/m)),o=Math.min(h.outHeight,(h.inHeight+P-a)/m),i=a*I+r;for(let r=0;r<v;++r){const u=Math.max(0,Math.ceil((j-r)/b)),c=Math.min(h.outWidth,(h.inWidth+j-r)/b),l=r*S+i;for(let i=0;i<h.inChannels;++i){const d=i*_+l;for(let l=0;l<h.outChannels;++l){let p=0;for(let d=0;d<h.batchSize;++d){const h=d*N,g=d*T;for(let d=t;d<n;++d){const t=(e+d*f-D)*R+h,n=d*C+g;for(let e=s;e<o;++e){const s=(a+e*m-P)*F+t,o=e*$+n;for(let e=u;e<c;++e){const t=e*E+o;p+=A[(r+e*b-j)*M+s+i]*O[t+l]}}}}k[d+l]=p}}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $e={kernelName:r.Conv3DBackpropInputV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:o,filter:i}=t,{pad:u,strides:c,inputShape:l}=s;Object(a.a)([o],"conv3dBackpropInputV2");const d=r.util.computeStrides(o.shape),p=r.util.computeStrides(i.shape),h=r.backend_util.computeConv3DInfo(l,i.shape,c,1,u),f=new r.TensorBuffer(h.inShape,"float32"),m=f.values,[b,g,x,v]=f.strides,y=n.data.get(o.dataId).values,[k,w,I,S]=d,_=n.data.get(i.dataId).values,[O,T,C,$]=p,{batchSize:E,filterDepth:A,filterHeight:N,filterWidth:R,inChannels:F,inDepth:M,inHeight:D,inWidth:j,outChannels:P,outDepth:B,outHeight:L,outWidth:W,strideDepth:z,strideHeight:U,strideWidth:V}=h,G=A-1-h.padInfo.front,H=N-1-h.padInfo.top,q=R-1-h.padInfo.left;for(let e=0;e<E;++e)for(let t=0;t<F;++t)for(let n=0;n<M;++n){const r=n-G,a=Math.max(0,Math.ceil(r/z)),s=Math.min(B,(A+r)/z);for(let o=0;o<D;++o){const i=o-H,u=Math.max(0,Math.ceil(i/U)),c=Math.min(L,(N+i)/U);for(let l=0;l<j;++l){const d=l-q,p=Math.max(0,Math.ceil(d/V)),h=Math.min(W,(R+d)/V);let f=0;for(let n=a;n<s;++n){const a=n*z-r;for(let r=u;r<c;++r){const s=r*U-i;for(let o=p;o<h;++o){const i=k*e+w*n+I*r+S*o,u=O*(A-1-a)+T*(N-1-s)+C*(R-1-(o*V-d))+$*t;for(let e=0;e<P;++e){f+=y[i+e]*_[u+e]}}}}m[b*e+g*n+x*o+v*l+t]=f}}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},Ee=Object(i.a)(r.Cos,(e=>Math.cos(e))),Ae={kernelName:r.Cos,backendName:"cpu",kernelFunc:Ee},Ne=Object(i.a)(r.Cosh,(e=>Math.cosh(e))),Re={kernelName:r.Cosh,backendName:"cpu",kernelFunc:Ne};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fe={kernelName:r.CropAndResize,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:a}=e,{image:s,boxes:o,boxInd:i}=t,{cropSize:u,method:c,extrapolationValue:l}=a,[d,p,h,f]=s.shape,m=o.shape[0],[b,g]=u,x=Object(r.buffer)([m,b,g,f],"float32"),v=n.data.get(o.dataId).values,y=n.data.get(i.dataId).values,k=n.data.get(s.dataId).values,w=r.util.computeStrides(s.shape),I=r.util.computeStrides(x.shape);for(let e=0;e<m;e++){const t=4*e,n=v[t],r=v[t+1],a=v[t+2],s=v[t+3],o=y[e];if(o>=d)continue;const i=b>1?(a-n)*(p-1)/(b-1):0,u=g>1?(s-r)*(h-1)/(g-1):0;for(let t=0;t<b;t++){const d=b>1?n*(p-1)+t*i:.5*(n+a)*(p-1);if(d<0||d>p-1)for(let n=0;n<g;n++)for(let r=0;r<f;r++){const a=r+n*I[2]+t*I[1]+e*I[0];x.values[a]=l}else if("bilinear"===c){const n=Math.floor(d),a=Math.ceil(d),i=d-n;for(let c=0;c<g;c++){const d=g>1?r*(h-1)+c*u:.5*(r+s)*(h-1);if(d<0||d>h-1){for(let n=0;n<f;n++){const r=n+c*I[2]+t*I[1]+e*I[0];x.values[r]=l}continue}const p=Math.floor(d),m=Math.ceil(d),b=d-p;for(let r=0;r<f;r++){let s=r+p*w[2]+n*w[1]+o*w[0];const u=k[s];s=r+m*w[2]+n*w[1]+o*w[0];const l=k[s];s=r+p*w[2]+a*w[1]+o*w[0];const d=k[s];s=r+m*w[2]+a*w[1]+o*w[0];const h=u+(l-u)*b,f=d+(k[s]-d)*b;s=r+c*I[2]+t*I[1]+e*I[0],x.values[s]=h+(f-h)*i}}}else for(let n=0;n<g;++n){const a=g>1?r*(h-1)+n*u:.5*(r+s)*(h-1);if(a<0||a>h-1){for(let r=0;r<f;r++){const a=r+n*I[2]+t*I[1]+e*I[0];x.values[a]=l}continue}const i=Math.round(a),c=Math.round(d);for(let r=0;r<f;r++){const a=r+i*w[2]+c*w[1]+o*w[0],s=r+n*I[2]+t*I[1]+e*I[0];x.values[s]=k[a]}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Me={kernelName:r.Cumsum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{axis:i,exclusive:u,reverse:c}=s;Object(a.a)(o,"cumsum");const l=r.backend_util.getAxesPermutation([i],o.shape.length);let d=o;null!=l&&(d=Object(M.a)({inputs:{x:o},backend:n,attrs:{perm:l}}));const p=r.backend_util.getInnerMostAxes(1,o.shape.length)[0];if(p!==d.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${d.shape.length-1} but got axis=${p}`);const h=Object(r.upcastType)(d.dtype,"int32"),f=r.util.makeZerosTypedArray(r.util.sizeFromShape(d.shape),h),m=n.data.get(d.dataId).values,b=d.shape[d.shape.length-1],g=c?(e,t)=>e+b-t-1:(e,t)=>e+t;for(let e=0;e<m.length;e+=b)for(let t=0;t<b;t++){const n=g(e,t);if(0===t)f[n]=u?0:m[n];else{const r=g(e,t-1);f[n]=u?m[r]+f[r]:m[n]+f[r]}}const x=n.makeTensorInfo(d.shape,h,f);if(null!=l){const e=r.backend_util.getUndoAxesPermutation(l),t=Object(M.a)({inputs:{x:x},backend:n,attrs:{perm:e}});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(d),t}return x}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const De={kernelName:r.DenseBincount,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:o,binaryOutput:i}=r;if(1===a.shape.length){const e=n.data.get(a.dataId).values,t=n.data.get(s.dataId).values,r=Object(ue.a)(e,t,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,r)}if(2===a.shape.length){const e=n.bufferSync(a),t=n.bufferSync(s),r=Object(ue.b)(e,t,o,i);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const je={kernelName:r.DepthToSpace,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{blockSize:o,dataFormat:i}=a;r.util.assert("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`)),r.util.assert(o>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${o}`));const u=s.shape[0],c=s.shape[1],l=s.shape[2],d=s.shape[3],p=c*o,h=l*o,f=d/(o*o),m=n.data.get(s.dataId).values,b=new Float32Array(u*p*h*f);let g=0;for(let e=0;e<u;++e)for(let t=0;t<p;++t){const n=Math.floor(t/o),r=t%o;for(let t=0;t<h;++t){const a=Math.floor(t/o),s=(r*o+t%o)*f;for(let t=0;t<f;++t){const r=t+s+d*(a+l*(n+c*e));b[g++]=m[r]}}}return n.makeTensorInfo([u,p,h,f],s.dtype,b)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pe(e){const{inputs:t,backend:n,attrs:s}=e,{x:o,filter:i}=t,{strides:u,pad:c,dilations:l,dimRoundingMode:d}=s;Object(a.a)([o,i],"depthwiseConv2DNative");const p=r.util.computeStrides(o.shape),h=r.util.computeStrides(i.shape);let f=l;null==f&&(f=[1,1]),r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(u,f),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${f}'`));const m=r.backend_util.computeConv2DInfo(o.shape,i.shape,u,f,c,d,!0),{filterHeight:b,filterWidth:g,dilationHeight:x,dilationWidth:v,padInfo:y}=m,k=y.left,w=y.top,I=m.outChannels/m.inChannels,S=new r.TensorBuffer(m.outShape,o.dtype),_=n.data.get(o.dataId).values,O=n.data.get(i.dataId).values,T=S.values;for(let e=0;e<m.batchSize;++e){const t=e*p[0],n=e*S.strides[0];for(let e=0;e<m.outHeight;++e){const r=n+e*S.strides[1],a=e*m.strideHeight-w;for(let e=0;e<b;++e){const n=a+e*x;if(n<0||n>=m.inHeight)continue;const s=e*h[0],o=t+n*p[1];for(let e=0;e<m.outWidth;++e){const t=r+e*S.strides[2],n=e*m.strideWidth-k;for(let e=0;e<g;++e){const r=n+e*v;if(r<0||r>=m.inWidth)continue;const a=s+e*h[1],i=o+r*m.inChannels;let u=t,c=a;for(let e=0;e<m.inChannels;++e){const t=_[i+e];for(let e=0;e<I;++e)T[u+e]+=t*O[c+e];u+=I,c+=I}}}}}}return n.makeTensorInfo(S.shape,S.dtype,S.values)}const Be={kernelName:r.DepthwiseConv2dNative,backendName:"cpu",kernelFunc:Pe};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Le={kernelName:r.DepthwiseConv2dNativeBackpropFilter,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o,dy:i}=t,{strides:u,dilations:c,pad:l,dimRoundingMode:d,filterShape:p}=s;Object(a.a)([o,i],"depthwiseConv2dNativeBackpropFilter");const h=r.backend_util.computeConv2DInfo(o.shape,p,u,c,l,d,!0),{strideHeight:f,strideWidth:m,filterHeight:b,filterWidth:g}=h,x=new r.TensorBuffer(h.filterShape,"float32"),v=h.padInfo.left,y=h.padInfo.top,k=h.outChannels/h.inChannels,w=n.data.get(o.dataId).values,I=new r.TensorBuffer(o.shape,o.dtype,w),S=n.data.get(i.dataId).values,_=new r.TensorBuffer(i.shape,i.dtype,S);for(let e=0;e<b;++e){const t=Math.max(0,Math.ceil((y-e)/f)),n=Math.min(h.outHeight,(h.inHeight+y-e)/f);for(let r=0;r<g;++r){const a=Math.max(0,Math.ceil((v-r)/m)),s=Math.min(h.outWidth,(h.inWidth+v-r)/m);for(let o=0;o<h.outChannels;++o){const i=Math.trunc(o/k),u=o%k;let c=0;for(let u=0;u<h.batchSize;++u)for(let l=t;l<n;++l){const t=e+l*f-y;for(let e=a;e<s;++e){const n=r+e*m-v;c+=I.get(u,t,n,i)*_.get(u,l,e,o)}}x.set(c,e,r,i,u)}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const We={kernelName:r.DepthwiseConv2dNativeBackpropInput,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:o,filter:i}=t,{strides:u,dilations:c,pad:l,dimRoundingMode:d,inputShape:p}=s;Object(a.a)([o,i],"depthwiseConv2DNativeBackpropInput");const h=r.util.computeStrides(o.shape),f=r.util.computeStrides(i.shape),m=r.backend_util.computeConv2DInfo(p,i.shape,u,c,l,d,!0),b=new r.TensorBuffer(m.inShape,"float32"),g=b.values,[x,v,y]=b.strides,k=n.data.get(o.dataId).values,[w,I,S]=h,_=n.data.get(i.dataId).values,[O,T,C]=f,{batchSize:$,filterHeight:E,filterWidth:A,inChannels:N,inHeight:R,inWidth:F,outChannels:M,outHeight:D,outWidth:j,strideHeight:P,strideWidth:B}=m,L=E-1-m.padInfo.top,W=A-1-m.padInfo.left,z=M/N;for(let e=0;e<$;++e)for(let t=0;t<N;++t)for(let n=0;n<R;++n){const r=n-L,a=Math.max(0,Math.ceil(r/P)),s=Math.min(D,(E+r)/P);for(let o=0;o<F;++o){const i=o-W,u=Math.max(0,Math.ceil(i/B)),c=Math.min(j,(A+i)/B);let l=0;for(let n=a;n<s;++n){const a=n*P-r;for(let r=u;r<c;++r){const s=w*e+I*n+S*r,o=O*(E-1-a)+T*(A-1-(r*B-i))+C*t;for(let e=0;e<z;++e){l+=k[s+(t*z+e)]*_[o+e]}}}g[x*e+v*n+y*o+t]=l}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ze={kernelName:r.Diag,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,s=r.util.sizeFromShape(a.shape),o=n.data.get(a.dataId).values,i=Object(r.buffer)([s,s],a.dtype),u=i.values;for(let e=0;e<o.length;e++)u[e*s+e]=o[e];const c=[...a.shape,...a.shape];return n.makeTensorInfo(c,i.dtype,i.values)}},Ue={kernelName:r.Dilation2D,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,filter:s}=e,{strides:o,pad:i,dilations:u}=n,c=t,l=c.data.get(a.dataId).values,d=a.shape.length,p=c.data.get(s.dataId).values,h=s.shape.length,{batchSize:f,inHeight:m,inWidth:b,inChannels:g,outHeight:x,outWidth:v,padInfo:y,strideHeight:k,strideWidth:w,filterHeight:I,filterWidth:S,dilationHeight:_,dilationWidth:O,outShape:T}=r.backend_util.computeDilation2DInfo(a.shape,s.shape,o,i,"NHWC",u),C=r.util.sizeFromShape(T),$=T.length,E=r.util.getArrayFromDType(a.dtype,C);for(let e=0;e<f;++e)for(let t=0;t<x;++t){const n=t*k-y.top;for(let o=0;o<v;++o){const i=o*w-y.left;for(let u=0;u<g;++u){let c=Number.MIN_SAFE_INTEGER;for(let t=0;t<I;++t){const o=n+t*_;if(o>=0&&o<m)for(let n=0;n<S;++n){const f=i+n*O;if(f>=0&&f<b){const i=r.util.locToIndex([e,o,f,u],d,r.util.computeStrides(a.shape)),m=r.util.locToIndex([t,n,u],h,r.util.computeStrides(s.shape)),b=l[i]+p[m];b>c&&(c=b)}}}E[r.util.locToIndex([e,t,o,u],$,r.util.computeStrides(T))]=c}}}return{dataId:c.write(r.util.toTypedArray(E,a.dtype),T,a.dtype),shape:T,dtype:a.dtype}}},Ve={kernelName:r.Dilation2DBackpropFilter,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,filter:s,dy:o}=e,{strides:i,pad:u,dilations:c}=n,l=t,d=r.util.toNestedArray(a.shape,l.data.get(a.dataId).values),p=r.util.toNestedArray(s.shape,l.data.get(s.dataId).values),{batchSize:h,inHeight:f,inWidth:m,inChannels:b,outHeight:g,outWidth:x,padInfo:v,strideHeight:y,strideWidth:k,filterHeight:w,filterWidth:I,dilationHeight:S,dilationWidth:_,outShape:O}=r.backend_util.computeDilation2DInfo(a.shape,s.shape,i,u,"NHWC",c);r.util.assert(o.rank===O.length,(()=>`Error in ${r.Dilation2DBackpropFilter}, dy must have the same rank as output ${O.length}, but got ${o.rank}`));const T=r.util.toNestedArray(O,l.data.get(o.dataId).values),C=r.util.makeZerosNestedTypedArray(s.shape,s.dtype);for(let e=0;e<h;++e)for(let t=0;t<g;++t){const n=t*y-v.top;for(let r=0;r<x;++r){const a=r*k-v.left;for(let s=0;s<b;++s){let o=Number.MIN_SAFE_INTEGER,i=0,u=0;for(let t=0;t<w;++t){const r=n+t*S;if(r>=0&&r<f)for(let n=0;n<I;++n){const c=a+n*_;if(c>=0&&c<m){const a=d[e][r][c][s]+p[t][n][s];a>o&&(o=a,i=t,u=n)}}}C[i][u][s]+=T[e][t][r][s]}}}return{dataId:l.write(r.util.toTypedArray(C,a.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},Ge={kernelName:r.Dilation2DBackpropInput,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,filter:s,dy:o}=e,{strides:i,pad:u,dilations:c}=n,l=t,d=r.util.toNestedArray(a.shape,l.data.get(a.dataId).values),p=r.util.toNestedArray(s.shape,l.data.get(s.dataId).values),{batchSize:h,inHeight:f,inWidth:m,inChannels:b,outHeight:g,outWidth:x,padInfo:v,strideHeight:y,strideWidth:k,filterHeight:w,filterWidth:I,dilationHeight:S,dilationWidth:_,outShape:O}=r.backend_util.computeDilation2DInfo(a.shape,s.shape,i,u,"NHWC",c);r.util.assert(o.rank===O.length,(()=>`Error in ${r.Dilation2DBackpropInput}, dy must have the same rank as output ${O.length}, but got ${o.rank}`));const T=r.util.toNestedArray(O,l.data.get(o.dataId).values),C=r.util.makeZerosNestedTypedArray(a.shape,a.dtype);for(let e=0;e<h;++e)for(let t=0;t<g;++t){const n=t*y-v.top;for(let r=0;r<x;++r){const a=r*k-v.left;for(let s=0;s<b;++s){let o=Number.MIN_SAFE_INTEGER,i=n<0?0:n,u=a<0?0:a;for(let t=0;t<w;++t){const r=n+t*S;if(r>=0&&r<f)for(let n=0;n<I;++n){const c=a+n*_;if(c>=0&&c<m){const a=d[e][r][c][s]+p[t][n][s];a>o&&(o=a,i=r,u=c)}}}C[e][i][u][s]+=T[e][t][r][s]}}}return{dataId:l.write(r.util.toTypedArray(C,a.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var He=n(28),qe=n(86);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ke(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{axis:i,keepDims:u}=s;let c;Object(a.a)(o,"sum"),c="bool"===o.dtype?Object(de.a)({inputs:{x:o},backend:n,attrs:{dtype:"int32"}}):Object(l.a)({inputs:{x:o},backend:n});const d=c.shape.length,p=r.util.parseAxisParam(i,c.shape),h=r.backend_util.getAxesPermutation(p,d);let f=p,m=c;null!=h&&(m=Object(M.a)({inputs:{x:c},backend:n,attrs:{perm:h}}),f=r.backend_util.getInnerMostAxes(f.length,d)),r.backend_util.assertAxesAreInnerMostDims("sum",f,m.shape.length);const[b,g]=r.backend_util.computeOutAndReduceShapes(m.shape,f),x=r.backend_util.upcastType(m.dtype,"int32");let v=Object(qe.a)(n,b,x);const y=r.util.sizeFromShape(g),k=n.data.get(v.dataId).values,w=n.data.get(m.dataId).values;for(let e=0;e<k.length;++e){const t=e*y;let n=0;for(let e=0;e<y;++e)n+=w[t+e];k[e]=n}if(u){const e=v;v=S({inputs:{x:v},backend:n,attrs:{shape:r.backend_util.expandShapeToKeepDim(v.shape,p)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(c),null!=h&&n.disposeIntermediateTensorInfo(m),v}const Xe={kernelName:r.Sum,backendName:"cpu",kernelFunc:Ke};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ye={kernelName:r.Einsum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{equation:s}=a,o=t,{allDims:i,summedDims:u,idDims:c}=r.backend_util.decodeEinsumEquation(s,o.length);r.backend_util.checkEinsumDimSizes(i.length,c,o);const{path:l,steps:d}=r.backend_util.getEinsumComputePath(u,c),p=d.length;let h=null,f=i.length;const m=[];for(let e=0;e<p;++e){for(const t of d[e]){const{permutationIndices:e,expandDims:a}=r.backend_util.getEinsumPermutation(f,c[t]);let s;r.backend_util.isIdentityPermutation(e)?s=o[t]:(s=Object(M.a)({inputs:{x:o[t]},backend:n,attrs:{perm:e}}),m.push(s));const i=s.shape.slice();for(let e=0;e<a.length;++e)i.splice(a[e],0,1);r.util.arraysEqual(s.shape,i)||(s=S({inputs:{x:s},backend:n,attrs:{shape:i}}),m.push(s)),null===h?h=s:(h=Object(He.a)({inputs:{a:s,b:h},backend:n}),m.push(h))}e<p-1&&(l[e]>=0&&(h=Ke({inputs:{x:h},backend:n,attrs:{axis:l[e]-(i.length-f),keepDims:!1}}),m.push(h)),f--)}for(const e of m)e!==h&&n.disposeIntermediateTensorInfo(e);return h}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ze={kernelName:r.EluGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:s,y:o}=t;Object(a.a)([s,o],"eluGrad");const i=new Float32Array(r.util.sizeFromShape(o.shape)),u=n.data.get(o.dataId).values,c=n.data.get(s.dataId).values;for(let e=0;e<u.length;++e){const t=u[e];i[e]=t>=1?c[e]:c[e]*(t+1)}return n.makeTensorInfo(o.shape,"float32",i)}};var Qe=n(40);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Je=r.backend_util.ERF_P,et=r.backend_util.ERF_A1,tt=r.backend_util.ERF_A2,nt=r.backend_util.ERF_A3,rt=r.backend_util.ERF_A4,at=r.backend_util.ERF_A5,st=Object(i.a)(r.Erf,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+Je*n);return t*(1-((((at*r+rt)*r+nt)*r+tt)*r+et)*r*Math.exp(-n*n))})),ot={kernelName:r.Erf,backendName:"cpu",kernelFunc:st};var it=n(41);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ut(e){const{inputs:t,backend:n,attrs:a}=e,{input:s}=t,{dim:o}=a,i=s.shape.length,u=s.shape.slice();let c=o;return o<0&&(r.util.assert(-(i+1)<=o,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),c=i+o+1),u.splice(c,0,1),S({inputs:{x:s},backend:n,attrs:{shape:u}})}const ct={kernelName:r.ExpandDims,backendName:"cpu",kernelFunc:ut};var lt=n(57);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dt=Object(h.a)(((e,t)=>e/t)),pt=Object(H.a)(r.RealDiv,dt),ht={kernelName:r.RealDiv,backendName:"cpu",kernelFunc:pt};var ft=n(34);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mt(e,t,n){const a=e.shape,s=a[0],o=a[1],i=n.data.get(e.dataId),u=i.complexTensorInfos.real,c=i.complexTensorInfos.imag,l=[s,o],d=r.util.sizeFromShape(l),p=r.util.getTypedArrayFromDType("float32",d),h=r.util.getTypedArrayFromDType("float32",d);for(let e=0;e<s;e++){const a=Object(oe.a)({inputs:{x:u},backend:n,attrs:{begin:[e,0],size:[1,o]}}),s=Object(oe.a)({inputs:{x:c},backend:n,attrs:{begin:[e,0],size:[1,o]}}),i=Object(me.a)({inputs:{real:a,imag:s},backend:n}),{real:l,imag:d}=bt(i,t,n),f=r.backend_util.mergeRealAndImagArrays(l,d);for(let t=0;t<o;t++){const n=r.backend_util.getComplexWithIndex(f,t);p[e*o+t]=n.real,h[e*o+t]=n.imag}n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i)}const f=n.makeTensorInfo(l,"float32",p),m=n.makeTensorInfo(l,"float32",h),b=Object(me.a)({inputs:{real:f,imag:m},backend:n});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),b}function bt(e,t,n){const a=r.util.sizeFromShape(e.shape),s=n.data.get(e.dataId),o=n.data.get(s.complexTensorInfos.real.dataId).values,i=n.data.get(s.complexTensorInfos.imag.dataId).values;if(0==((u=a)&u-1)){const s=gt(o,i,a,t,n),u=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(u,"float32",s.real),t=n.makeTensorInfo(u,"float32",s.imag),o=n.makeTensorInfo([],"float32",r.util.createScalarValue(a,"float32")),i=Object(l.a)({inputs:{x:o},backend:n}),c=ht.kernelFunc({inputs:{a:e,b:o},backend:n}),d=ht.kernelFunc({inputs:{a:t,b:i},backend:n}),p=n.data.get(c.dataId).values,h=n.data.get(d.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(d),{real:p,imag:h}}return s}{const e=function(e,t,n){const a=new Float32Array(2*t);for(let s=0;s<t;s++){let o=0,i=0;for(let a=0;a<t;a++){const u=r.backend_util.exponent(s*a,t,n),c=r.backend_util.getComplexWithIndex(e,a);o+=c.real*u.real-c.imag*u.imag,i+=c.real*u.imag+c.imag*u.real}n&&(o/=t,i/=t),r.backend_util.assignToTypedArray(a,o,i,s)}return a}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(r.backend_util.mergeRealAndImagArrays(o,i),a,t);return r.backend_util.splitRealAndImagArrays(e)}var u}function gt(e,t,n,a,s){if(1===n)return{real:e,imag:t};const o=r.backend_util.mergeRealAndImagArrays(e,t),i=n/2,u=r.backend_util.complexWithEvenIndex(o),c=u.real,l=u.imag,d=[c.length],p=s.makeTensorInfo(d,"float32",c),h=s.makeTensorInfo(d,"float32",l),f=Object(me.a)({inputs:{real:p,imag:h},backend:s}),m=r.backend_util.complexWithOddIndex(o),b=m.real,g=m.imag,x=[b.length],v=s.makeTensorInfo(x,"float32",b),y=s.makeTensorInfo(x,"float32",g),k=Object(me.a)({inputs:{real:v,imag:y},backend:s}),w=gt(c,l,i,a,s),S=w.real,_=w.imag,O=[S.length],T=s.makeTensorInfo(O,"float32",S),C=s.makeTensorInfo(O,"float32",_),$=Object(me.a)({inputs:{real:T,imag:C},backend:s}),E=gt(b,g,i,a,s),A=E.real,N=E.imag,R=[A.length],F=s.makeTensorInfo(R,"float32",A),M=s.makeTensorInfo(R,"float32",N),D=Object(me.a)({inputs:{real:F,imag:M},backend:s}),j=r.backend_util.exponents(n,a),P=[j.real.length],B=s.makeTensorInfo(P,"float32",j.real),L=s.makeTensorInfo(P,"float32",j.imag),W=Object(me.a)({inputs:{real:B,imag:L},backend:s}),z=Object(He.a)({inputs:{a:W,b:D},backend:s}),U=Object(I.a)({inputs:{a:$,b:z},backend:s}),V=Object(ft.a)({inputs:{a:$,b:z},backend:s}),G=Object(ye.a)({inputs:{input:U},backend:s}),H=Object(ye.a)({inputs:{input:V},backend:s}),q=xe({inputs:{input:U},backend:s}),K=xe({inputs:{input:V},backend:s}),X=ke({inputs:[G,H],backend:s,attrs:{axis:0}}),Y=ke({inputs:[q,K],backend:s,attrs:{axis:0}}),Z=s.data.get(X.dataId).values,Q=s.data.get(Y.dataId).values;return s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(f),s.disposeIntermediateTensorInfo(v),s.disposeIntermediateTensorInfo(y),s.disposeIntermediateTensorInfo(k),s.disposeIntermediateTensorInfo(T),s.disposeIntermediateTensorInfo(C),s.disposeIntermediateTensorInfo($),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(M),s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(K),s.disposeIntermediateTensorInfo(X),s.disposeIntermediateTensorInfo(Y),{real:Z,imag:Q}}const xt={kernelName:r.FFT,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t,s=r.util.sizeFromShape(a.shape),o=a.shape[a.shape.length-1],i=S({inputs:{x:a},backend:n,attrs:{shape:[s/o,o]}}),u=mt(i,!1,n),c=S({inputs:{x:u},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),c}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vt(e){const{backend:t,attrs:n}=e,{shape:a,value:s,dtype:o}=n,i=o||r.util.inferDtype(s),u=r.util.getArrayFromDType(i,r.util.sizeFromShape(a));return function(e,t,n){e.fill(t)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(u,s),t.makeTensorInfo(a,i,u)}const yt={kernelName:r.Fill,backendName:"cpu",kernelFunc:vt};const kt={kernelName:r.FlipLeftRight,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:a}=e,s=n,o=r.util.getTypedArrayFromDType(a.dtype,r.util.sizeFromShape(a.shape)),[i,u,c,l]=a.shape,d=s.data.get(a.dataId).values;for(let e=0;e<i;e++){const t=e*c*u*l;for(let e=0;e<u;e++){const n=e*(c*l);for(let e=0;e<c;e++){const r=e*l;for(let a=0;a<l;a++){const s=Math.round(c-e-1),i=t+n+r+a;let u=d[i];if(s>=0&&s<c){u=d[t+n+s*l+a]}o[i]=u}}}}return{dataId:s.write(o,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}};var wt=n(58);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const It=Object(h.a)(((e,t)=>Math.floor(e/t))),St=Object(H.a)(r.FloorDiv,It,null,"int32"),_t={kernelName:r.FloorDiv,backendName:"cpu",kernelFunc:St};const Ot={kernelName:r.FusedConv2D,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:o,preluActivationWeights:i}=t,{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=r;let m=Ie({inputs:{x:a,filter:s},backend:n,attrs:{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:p}});if(o){const e=m;m=Object(I.a)({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(e)}if(h){const e=m;m=w(n,m,h,i,f),n.disposeIntermediateTensorInfo(e)}return m}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tt={kernelName:r.FusedDepthwiseConv2D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:o,preluActivationWeights:i}=t,{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=r;let m=Pe({inputs:{x:a,filter:s},backend:n,attrs:{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:p}});if(o){const e=m;m=Object(I.a)({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(e)}if(h){const e=m;m=w(n,m,h,i,f),n.disposeIntermediateTensorInfo(e)}return m}};var Ct=n(59);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $t={kernelName:r.GatherNd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:s}=t,o=r.util.sizeFromShape(a.shape),i=s.shape,u=i[i.length-1],[c,l,d,p]=r.backend_util.prepareAndValidate(a,s);if(0===l)return n.makeTensorInfo(c,a.dtype,[]);const h=n.data.get(s.dataId).values,f=n.bufferSync(a),m=Object(Ct.a)(h,f,a.dtype,l,u,d,p,a.shape,o);return n.makeTensorInfo(c,a.dtype,m.values)}};var Et=n(60);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const At={kernelName:r.GatherV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o,indices:i}=t,{axis:u,batchDims:c}=s;Object(a.a)([o,i],"gatherV2");let l=c;null==c&&(l=0);const d=r.util.sizeFromShape(i.shape),p=r.util.parseAxisParam(u,o.shape)[0],h=r.backend_util.segment_util.collectGatherOpShapeInfo(o,i,p,l),f=S({inputs:{x:o},backend:n,attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]}}),m=S({inputs:{x:i},backend:n,attrs:{shape:[h.batchSize,d/h.batchSize]}}),b=[h.batchSize,h.outerSize,d/h.batchSize,h.sliceSize],g=n.bufferSync(m),x=n.bufferSync(f),v=Object(Et.a)(x,g,b);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(h.outputShape,v.dtype,v.values)}};var Nt=n(61),Rt=n(62);const Ft={kernelName:r.IFFT,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n}=e,{input:a}=t,s=r.util.sizeFromShape(a.shape),o=a.shape[a.shape.length-1],i=S({inputs:{x:a},backend:n,attrs:{shape:[s/o,o]}}),u=mt(i,!0,n),c=S({inputs:{x:u},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),c}},Mt=Object(i.a)(r.IsFinite,(e=>Number.isFinite(e)?1:0),"bool"),Dt={kernelName:r.IsFinite,backendName:"cpu",kernelFunc:Mt},jt=Object(i.a)(r.IsInf,(e=>Math.abs(e)===1/0?1:0),"bool"),Pt={kernelName:r.IsInf,backendName:"cpu",kernelFunc:jt},Bt=Object(i.a)(r.IsNan,(e=>Number.isNaN(e)?1:0),"bool"),Lt={kernelName:r.IsNan,backendName:"cpu",kernelFunc:Bt};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Wt=n(63),zt=n(64),Ut=n(65);const Vt={kernelName:r.LinSpace,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,o=Object(Ut.a)(r,a,s);return t.makeTensorInfo([o.length],"float32",o)}};var Gt=n(66);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ht=Object(i.a)(r.Log1p,(e=>Math.log1p(e))),qt={kernelName:r.Log1p,backendName:"cpu",kernelFunc:Ht},Kt=Object(h.a)(((e,t)=>e&&t)),Xt=Object(H.a)(r.LogicalAnd,Kt,null,"bool"),Yt={kernelName:r.LogicalAnd,backendName:"cpu",kernelFunc:Xt},Zt=Object(i.a)(r.LogicalNot,(e=>e?0:1),"bool"),Qt={kernelName:r.LogicalNot,backendName:"cpu",kernelFunc:Zt},Jt=Object(h.a)(((e,t)=>e||t)),en=Object(H.a)(r.LogicalOr,Jt,null,"bool"),tn={kernelName:r.LogicalOr,backendName:"cpu",kernelFunc:en};const nn={kernelName:r.LRN,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{depthRadius:i,bias:u,alpha:c,beta:l}=s;Object(a.a)(o,"LRN");const d=o.shape[3],p=d-1,h=n.data.get(o.dataId).values,f=r.util.sizeFromShape(o.shape),m=new Float32Array(f);function b(e){const t=e%d;let n=e-t+Math.max(0,t-i);const r=e-t+Math.min(t+i,p);let a=0;for(;n<=r;n++){const e=h[n];a+=e*e}return a}for(let e=0;e<f;e++){const t=b(e),n=h[e]*Math.pow(u+c*t,-l);m[e]=n}return n.makeTensorInfo(o.shape,o.dtype,m)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rn={kernelName:r.LRNGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o,y:i,dy:u}=t,{depthRadius:c,bias:l,alpha:d,beta:p}=s;Object(a.a)(u,"LRNGrad");const h=r.util.sizeFromShape(u.shape),f=u.shape[3],m=n.data.get(u.dataId).values,b=n.data.get(o.dataId).values,g=n.data.get(i.dataId).values,x=new Float32Array(h),v=h;for(let e=0;e<v;e++){const t=e%f,n=e-t+Math.max(0,t-c),r=e-t+Math.min(f,t+c+1);let a=0;for(let e=n;e<r;e++)a+=Math.pow(b[e],2);a=d*a+l;for(let t=n;t<r;t++){let n=-2*d*p*b[t]*g[e]/a;e===t&&(n+=Math.pow(a,-p)),n*=m[e],x[t]+=n}}return n.makeTensorInfo(u.shape,o.dtype,x)}};var an=n(67),sn=n(42);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function on(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{reductionIndices:i,keepDims:u}=s,c=n;let l=o.shape;const d=l.length,p=r.util.parseAxisParam(i,l);let h=p;const f=r.backend_util.getAxesPermutation(h,d);let m=c.data.get(o.dataId).values;if(null!=f){const e=new Array(d);for(let t=0;t<e.length;t++)e[t]=l[f[t]];m=Object(sn.a)(m,l,o.dtype,f,e),h=r.backend_util.getInnerMostAxes(h.length,d),l=e}Object(a.a)(o,"max"),r.backend_util.assertAxesAreInnerMostDims("max",h,d);const[b,g]=r.backend_util.computeOutAndReduceShapes(l,h),x=r.util.sizeFromShape(g),v=Object(an.a)(m,x,b,o.dtype),y=c.write(v,b,o.dtype);let k=b;if(u){k=r.backend_util.expandShapeToKeepDim(b,p)}return{dataId:y,shape:k,dtype:o.dtype}}const un={kernelName:r.Max,backendName:"cpu",kernelFunc:on};var cn=n(68);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ln={kernelName:r.MaxPool,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t;Object(a.a)(o,"maxPool");const{filterSize:i,strides:u,pad:c,dimRoundingMode:d}=s;r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(u,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${u} and dilations '1'`));const p=r.backend_util.computePool2DInfo(o.shape,i,u,1,c,d);let h;if(1===p.filterWidth&&1===p.filterHeight&&r.util.arraysEqual(p.inShape,p.outShape))h=Object(l.a)({inputs:{x:o},backend:n});else{const e=n.data.get(o.dataId).values,t=r.util.computeStrides(o.shape),a=Q(e,o.shape,o.dtype,t,p,"max");h=n.makeTensorInfo(p.outShape,o.dtype,a.values)}return h}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dn={kernelName:r.MaxPool3D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{filterSize:i,strides:u,pad:c,dimRoundingMode:l,dataFormat:d}=s;Object(a.a)(o,"maxPool3d");const p=r.backend_util.computePool3DInfo(o.shape,i,u,1,c,l,d),h=ee(n.data.get(o.dataId).values,o.shape,o.dtype,r.util.computeStrides(o.shape),p,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pn={kernelName:r.MaxPool3DGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:o,input:i}=t,{filterSize:u,strides:c,pad:l,dimRoundingMode:d}=s;Object(a.a)([o,i],"maxPool3DGrad");const p=r.backend_util.computePool3DInfo(i.shape,u,c,1,l,d),h=function(e,t){const n=Object(r.buffer)(t.outShape,"int32"),a=t.strideDepth,s=t.strideHeight,o=t.strideWidth,i=t.dilationDepth,u=t.dilationHeight,c=t.dilationWidth,l=t.effectiveFilterDepth,d=t.effectiveFilterHeight,p=t.effectiveFilterWidth,h=t.padInfo.front,f=t.padInfo.top,m=t.padInfo.left;for(let r=0;r<t.batchSize;++r)for(let b=0;b<t.inChannels;++b)for(let g=0;g<t.outDepth;++g){const x=g*a-h;let v=x;for(;v<0;)v+=i;const y=Math.min(t.inDepth,l+x);for(let a=0;a<t.outHeight;++a){const l=a*s-f;let h=l;for(;h<0;)h+=u;const k=Math.min(t.inHeight,d+l);for(let s=0;s<t.outWidth;++s){const f=s*o-m;let w=f;for(;w<0;)w+=c;const I=Math.min(t.inWidth,p+f);let S=Number.NEGATIVE_INFINITY,_=-1;for(let t=v;t<y;t+=i){const n=t-x;for(let a=h;a<k;a+=u){const s=a-l;for(let o=w;o<I;o+=c){const i=o-f,u=e.get(r,t,a,o,b);u>=S&&(S=u,_=n*d*p+s*d+i)}}}n.set(_,r,g,a,s,b)}}}return n}(n.bufferSync(i),p),f=p.strideDepth,m=p.strideHeight,b=p.strideWidth,g=p.dilationDepth,x=p.dilationHeight,v=p.dilationWidth,y=p.effectiveFilterDepth,k=p.effectiveFilterHeight,w=p.effectiveFilterWidth,I=y-1-p.padInfo.front,S=w-1-p.padInfo.left,_=k-1-p.padInfo.top,O=Object(r.buffer)(i.shape,"float32"),T=n.bufferSync(o);for(let e=0;e<p.batchSize;++e)for(let t=0;t<p.inChannels;++t)for(let n=0;n<p.inDepth;++n)for(let r=0;r<p.inHeight;++r)for(let a=0;a<p.inWidth;++a){const s=n-I,o=r-_,i=a-S;let u=0;for(let n=0;n<y;n+=g){const r=(s+n)/f;if(!(r<0||r>=p.outDepth||Math.floor(r)!==r))for(let a=0;a<k;a+=x){const s=(o+a)/m;if(!(s<0||s>=p.outHeight||Math.floor(s)!==s))for(let o=0;o<w;o+=v){const c=(i+o)/b;if(c<0||c>=p.outWidth||Math.floor(c)!==c)continue;const l=y*k*w-1-h.get(e,r,s,c,t)===n*k*w+a*w+o?1:0;if(0===l)continue;u+=T.get(e,r,s,c,t)*l}}}O.set(u,e,n,r,a,t)}return n.makeTensorInfo(O.shape,O.dtype,O.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hn={kernelName:r.MaxPoolGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:o,input:i,output:u}=t,c=i;Object(a.a)([i,u],"maxPoolGrad");const{filterSize:l,strides:d,pad:p,dimRoundingMode:h}=s,f=r.backend_util.computePool2DInfo(c.shape,l,d,1,p,h),m=n.data.get(c.dataId).values,b=Object(r.buffer)(f.outShape,c.dtype,J(m,c.shape,c.dtype,f).values),g=f.strideHeight,x=f.strideWidth,v=f.dilationHeight,y=f.dilationWidth,k=f.effectiveFilterHeight,w=f.effectiveFilterWidth,I=w-1-f.padInfo.left,S=k-1-f.padInfo.top,_=Object(r.buffer)(c.shape,"float32"),O=n.data.get(o.dataId).values,T=Object(r.buffer)(o.shape,"float32",O);for(let e=0;e<f.batchSize;++e)for(let t=0;t<f.inChannels;++t)for(let n=0;n<f.inHeight;++n)for(let r=0;r<f.inWidth;++r){const a=n-S,s=r-I;let o=0;for(let n=0;n<k;n+=v){const r=(a+n)/g;if(!(r<0||r>=f.outHeight||Math.floor(r)!==r))for(let a=0;a<w;a+=y){const i=(s+a)/x;if(i<0||i>=f.outWidth||Math.floor(i)!==i)continue;const u=k*w-1-b.get(e,r,i,t)===n*w+a?1:0;if(0===u)continue;o+=T.get(e,r,i,t)*u}}_.set(o,e,n,r,t)}return n.makeTensorInfo(_.shape,_.dtype,_.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const fn={kernelName:r.MaxPoolWithArgmax,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{filterSize:o,strides:i,pad:u,includeBatchInIndex:c}=t,l=n;Object(a.a)(s,"MaxPoolWithArgmax");const d=l.data.get(s.dataId).values,p=r.backend_util.computePool2DInfo(s.shape,o,i,[1,1],u),[h,f]=function(e,t,n,a,s){const o=Q(e,0,n,r.util.computeStrides(t),s,"max"),i=J(e,t,n,s,!0,a);return[o.values,i.values]}(d,s.shape,s.dtype,c,p),m=l.write(h,p.outShape,s.dtype),b=l.write(f,p.outShape,s.dtype);return[{dataId:m,shape:p.outShape,dtype:s.dtype},{dataId:b,shape:p.outShape,dtype:"int32"}]}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mn={kernelName:r.Mean,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:o,keepDims:i}=a,u=r.util.parseAxisParam(o,s.shape),c=r.backend_util.computeOutAndReduceShapes(s.shape,u)[1],l=r.util.sizeFromShape(c),d=[],p=n.makeTensorInfo([],"float32",new Float32Array([l]));d.push(p);const h=Object(de.a)({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});d.push(h);const f=pt({inputs:{a:h,b:p},backend:n});d.push(f);const m=Ke({inputs:{x:f},backend:n,attrs:{axis:o,keepDims:i}});return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),m}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bn={kernelName:r.Min,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{axis:i,keepDims:u}=s;Object(a.a)(o,"min");const c=r.util.parseAxisParam(i,o.shape);let l=c;const d=r.backend_util.getAxesPermutation(l,o.shape.length);let p=o;null!=d&&(p=Object(M.a)({inputs:{x:o},backend:n,attrs:{perm:d}}),l=r.backend_util.getInnerMostAxes(l.length,o.shape.length)),r.backend_util.assertAxesAreInnerMostDims("min",l,p.shape.length);const[h,f]=r.backend_util.computeOutAndReduceShapes(p.shape,l),m=r.util.sizeFromShape(f),b=r.util.makeZerosTypedArray(r.util.sizeFromShape(h),p.dtype),g=n.data.get(p.dataId).values;for(let e=0;e<b.length;++e){const t=e*m;let n=g[t];for(let e=0;e<m;++e){const r=g[t+e];(Number.isNaN(r)||r<n)&&(n=r)}b[e]=n}null!=d&&n.disposeIntermediateTensorInfo(p);const x=n.makeTensorInfo(h,p.dtype,b);if(u){const e=S({inputs:{x:x},backend:n,attrs:{shape:r.backend_util.expandShapeToKeepDim(h,c)}});return n.disposeIntermediateTensorInfo(x),e}return x}};var gn=n(69);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xn={kernelName:r.MirrorPad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{paddings:i,mode:u}=s;Object(a.a)(o,"mirrorPad");const c=i.map(((e,t)=>e[0]+o.shape[t]+e[1])),l=i.map((e=>e[0])),d=i.map(((e,t)=>e[0]+o.shape[t])),p="reflect"===u?0:1,h=n.data.get(o.dataId).values,f=o.shape.length,m=r.util.computeStrides(o.shape),b=r.util.sizeFromShape(c),g=c.length,x=r.util.computeStrides(c),v=r.util.getTypedArrayFromDType(o.dtype,b);for(let e=0;e<b;e++){let t=r.util.indexToLoc(e,g,x);for(let e=0;e<g;e++)t[e]<l[e]?t[e]=2*l[e]-t[e]-p:t[e]>=d[e]&&(t[e]=2*(d[e]-1)-t[e]+p);t=t.map(((e,t)=>e-l[t]));const n=r.util.locToIndex(t,f,m);v[e]=h[n]}return{dataId:n.write(v,c,o.dtype),shape:c,dtype:o.dtype}}},vn=Object(h.a)(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),yn=Object(H.a)(r.Mod,vn),kn={kernelName:r.Mod,backendName:"cpu",kernelFunc:yn};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var wn=n(46);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function In(e){const{inputs:t,backend:n,attrs:a}=e,{logits:s}=t,{dim:o}=a,i=s.shape.length;let u=o;if(-1===u&&(u=i-1),u!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${u}`);const c=r.util.parseAxisParam([u],s.shape),l=on({inputs:{x:s},backend:n,attrs:{reductionIndices:c,keepDims:!1}}),d=r.backend_util.expandShapeToKeepDim(l.shape,c),p=S({inputs:{x:l},backend:n,attrs:{shape:d}}),h=Object(ft.a)({inputs:{a:s,b:p},backend:n}),f=Object(it.a)({inputs:{x:h},backend:n}),m=Ke({inputs:{x:f},backend:n,attrs:{axis:c,keepDims:!1}}),b=S({inputs:{x:m},backend:n,attrs:{shape:d}}),g=pt({inputs:{a:f,b:b},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),g}const Sn={kernelName:r.Softmax,backendName:"cpu",kernelFunc:In};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _n={kernelName:r.Multinomial,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{logits:o}=t,{numSamples:i,seed:u,normalized:c}=s;Object(a.a)(o,"multinomial");const l=c?o:In({inputs:{logits:o},backend:n,attrs:{dim:-1}}),d=l.shape[0],p=l.shape[1],h=n.data.get(l.dataId).values,f=[d,i],m=r.util.makeZerosTypedArray(r.util.sizeFromShape(f),"int32");for(let e=0;e<d;++e){const t=e*p,n=new Float32Array(p-1);n[0]=h[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+h[t+e];const r=wn.alea(u.toString()),a=e*i;for(let e=0;e<i;++e){const t=r();m[a+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){m[a+e]=r;break}}}return c||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(f,"int32",m)}};var On=n(70);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tn=r.kernel_impls.nonMaxSuppressionV3Impl;const Cn={kernelName:r.NonMaxSuppressionV3,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:o}=t,{maxOutputSize:i,iouThreshold:u,scoreThreshold:c}=r;Object(a.a)(s,"NonMaxSuppression");const l=n.data.get(s.dataId).values,d=n.data.get(o.dataId).values,{selectedIndices:p}=Tn(l,d,i,u,c);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}},$n=r.kernel_impls.nonMaxSuppressionV4Impl;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const En={kernelName:r.NonMaxSuppressionV4,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:o}=t,{maxOutputSize:i,iouThreshold:u,scoreThreshold:c,padToMaxOutputSize:l}=r;Object(a.a)(s,"NonMaxSuppressionPadded");const d=n.data.get(s.dataId).values,p=n.data.get(o.dataId).values,{selectedIndices:h,validOutputs:f}=$n(d,p,i,u,c,l);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}},An=r.kernel_impls.nonMaxSuppressionV5Impl;
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nn={kernelName:r.NonMaxSuppressionV5,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:o}=t,{maxOutputSize:i,iouThreshold:u,scoreThreshold:c,softNmsSigma:l}=r;Object(a.a)(s,"NonMaxSuppressionWithScore");const d=n.data.get(s.dataId).values,p=n.data.get(o.dataId).values,h=i,f=u,m=c,b=l,{selectedIndices:g,selectedScores:x}=An(d,p,h,f,m,b);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([x.length],"float32",new Float32Array(x))]}};var Rn=n(71);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fn={kernelName:r.OneHot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:o}=t,{depth:i,onValue:u,offValue:c}=s;Object(a.a)(o,"oneHot");const l=r.util.sizeFromShape(o.shape),d=new Float32Array(l*i);d.fill(c);const p=n.data.get(o.dataId).values;for(let e=0;e<l;++e)p[e]>=0&&p[e]<i&&(d[e*i+p[e]]=u);return n.makeTensorInfo([...o.shape,i],"int32",d)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mn(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=Object(ye.a)({inputs:{input:r},backend:n}),t=Mn({inputs:{x:e},backend:n}),a=xe({inputs:{input:r},backend:n}),s=Mn({inputs:{x:a},backend:n}),o=Object(me.a)({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),o}return vt({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const Dn={kernelName:r.ZerosLike,backendName:"cpu",kernelFunc:Mn};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jn={kernelName:r.OnesLike,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===a.dtype){const t=Object(ye.a)({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=xe({inputs:{input:a},backend:r}),o=Mn({inputs:{x:s},backend:r}),i=Object(me.a)({inputs:{real:n,imag:o},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(o),i}return vt({backend:r,attrs:{shape:a.shape,value:1,dtype:a.dtype}})}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pn(e){const{inputs:t,backend:n,attrs:a}=e,{axis:s}=a;if(1===t.length)return ut({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const o=t[0].shape,i=t[0].dtype;t.forEach((e=>{r.util.assertShapesMatch(o,e.shape,"All tensors passed to stack must have matching shapes"),r.util.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const u=[],c=ke({inputs:t.map((e=>{const t=ut({inputs:{input:e},backend:n,attrs:{dim:s}});return u.push(t),t})),backend:n,attrs:{axis:s}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const Bn={kernelName:r.Pack,backendName:"cpu",kernelFunc:Pn};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ln={kernelName:r.PadV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{paddings:i,constantValue:u}=s;Object(a.a)(o,"pad");const c=i.map(((e,t)=>e[0]+o.shape[t]+e[1])),l=i.map((e=>e[0])),d=n.data.get(o.dataId).values,p=r.util.sizeFromShape(o.shape),h=o.shape.length,f=r.util.computeStrides(o.shape),m=r.util.sizeFromShape(c),b=c.length,g=r.util.computeStrides(c),x=r.util.getTypedArrayFromDType(o.dtype,m);0!==u&&x.fill(u);for(let e=0;e<p;e++){const t=r.util.indexToLoc(e,h,f).map(((e,t)=>e+l[t]));x[r.util.locToIndex(t,b,g)]=d[e]}return{dataId:n.write(x,c,o.dtype),shape:c,dtype:o.dtype}}},Wn=Object(h.a)(((e,t)=>Math.pow(e,t))),zn=Object(H.a)(r.Pow,Wn),Un={kernelName:r.Pow,backendName:"cpu",kernelFunc:zn};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Vn=n(72),Gn=n(73);const Hn={kernelName:r.Range,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,dtype:s,step:o}=n,i=Object(Gn.a)(r,a,o,s);return t.makeTensorInfo([i.length],s,i)}},qn=Object(i.a)(r.Reciprocal,(e=>1/e)),Kn={kernelName:r.Reciprocal,backendName:"cpu",kernelFunc:qn};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xn={kernelName:r.ResizeBilinear,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:s}=e,{images:o}=t,{alignCorners:i,halfPixelCenters:u,size:c}=s;Object(a.a)(o,"resizeBilinear");const l=r.util.computeStrides(o.shape),[d,p]=c,[h,f,m,b]=o.shape,g=n.data.get(o.dataId).values,x=new Float32Array(r.util.sizeFromShape([h,d,p,b])),v=[i&&d>1?f-1:f,i&&p>1?m-1:m],y=[i&&d>1?d-1:d,i&&p>1?p-1:p];let k=0;const w=v[0]/y[0],I=v[1]/y[1];for(let e=0;e<h;e++)for(let t=0;t<d;t++){let n;n=u?w*(t+.5)-.5:w*t;const r=Math.max(0,Math.floor(n)),a=n-r,s=Math.min(f-1,Math.ceil(n)),o=e*l[0]+r*l[1],i=e*l[0]+s*l[1];for(let e=0;e<p;e++){let t;t=u?I*(e+.5)-.5:I*e;const n=Math.max(0,Math.floor(t)),r=t-n,s=Math.min(m-1,Math.ceil(t)),c=o+n*l[2],d=i+n*l[2],p=o+s*l[2],h=i+s*l[2];for(let e=0;e<b;e++){const t=g[c+e],n=g[d+e],s=t+(g[p+e]-t)*r,o=s+(n+(g[h+e]-n)*r-s)*a;x[k++]=o}}}return n.makeTensorInfo([h,d,p,b],"float32",x)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yn={kernelName:r.ResizeBilinearGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:o,dy:i}=t,{alignCorners:u}=s;Object(a.a)([i,o],"resizeBilinearGrad");const c=r.util.computeStrides(o.shape),[l,d,p,h]=o.shape,[,f,m]=i.shape,b=new Float32Array(l*d*p*h),g=[u&&f>1?d-1:d,u&&m>1?p-1:p],x=[u&&f>1?f-1:f,u&&m>1?m-1:m],v=g[0]/x[0],y=g[1]/x[1],k=n.data.get(i.dataId).values;let w=0;for(let e=0;e<l;e++){const t=e*c[0];for(let e=0;e<f;e++){const n=e*v,r=Math.floor(n),a=Math.min(Math.ceil(n),d-1),s=t+r*c[1],o=t+a*c[1],i=n-r,u=1-i;for(let e=0;e<m;e++){const t=e*y,n=Math.floor(t),r=Math.min(Math.ceil(t),p-1),a=t-n,l=1-a,d=s+n*c[2],f=s+r*c[2],m=o+n*c[2],g=o+r*c[2],x=u*l,v=u*a,I=i*l,S=i*a;for(let e=0;e<h;e++){const t=k[w++];b[d+e]+=t*x,b[f+e]+=t*v,b[m+e]+=t*I,b[g+e]+=t*S}}}}return n.makeTensorInfo([l,p,d,h],"float32",b)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zn={kernelName:r.ResizeNearestNeighbor,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:o}=t,{alignCorners:i,halfPixelCenters:u,size:c}=s;Object(a.a)(o,"resizeNearestNeighbor");const l=r.util.computeStrides(o.shape),[d,p]=c,[h,f,m,b]=o.shape,g=n.data.get(o.dataId).values,x=new Float32Array(h*d*p*b),v=[i&&d>1?f-1:f,i&&p>1?m-1:m],y=[i&&d>1?d-1:d,i&&p>1?p-1:p],k=v[0]/y[0],w=v[1]/y[1];let I=0;for(let e=0;e<h;e++){const t=e*l[0];for(let e=0;e<d;e++){const n=u?k*(e+.5):k*e;let r=Math.min(f-1,i?Math.round(n):Math.floor(n));u&&(r=Math.max(0,r));const a=t+r*l[1];for(let e=0;e<p;e++){const t=u?w*(e+.5):w*e;let n=Math.min(m-1,i?Math.round(t):Math.floor(t));u&&(n=Math.max(0,n));const r=a+n*l[2];for(let e=0;e<b;e++){const t=g[r+e];x[I++]=t}}}}return n.makeTensorInfo([h,d,p,b],o.dtype,x)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qn={kernelName:r.ResizeNearestNeighborGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:o,dy:i}=t,{alignCorners:u}=s;Object(a.a)([i,o],"resizeNearestNeighborGrad");const c=r.util.computeStrides(o.shape),l=r.util.computeStrides(i.shape),[d,p,h,f]=o.shape,[,m,b]=i.shape,g=new Float32Array(d*p*h*f),x=n.data.get(i.dataId).values,v=[u&&m>1?p-1:p,u&&b>1?h-1:h],y=[u&&m>1?m-1:m,u&&b>1?b-1:b],k=v[0]/y[0],w=v[1]/y[1],I=1/k,S=1/w,_=2*Math.ceil(I)+2,O=2*Math.ceil(S)+2;for(let e=0;e<d;e++){const t=e*c[0];for(let e=0;e<p;e++){const n=t+e*c[1],r=Math.floor(e*I),a=Math.floor(r-_/2);for(let r=0;r<h;r++){const s=n+r*c[2],o=Math.floor(r*S),i=Math.floor(o-O/2);for(let n=0;n<f;n++){let o=0;for(let s=0;s<_;s++){const c=s+a;if(c<0||c>=m)continue;const d=t+c*l[1],f=c*k;if(e===Math.min(p-1,u?Math.round(f):Math.floor(f)))for(let e=0;e<O;e++){const t=e+i;if(t<0||t>=b)continue;const a=d+t*l[2],s=t*w;r===Math.min(h-1,u?Math.round(s):Math.floor(s))&&(o+=x[a+n])}}g[s+n]=o}}}}return n.makeTensorInfo(o.shape,o.dtype,g)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jn={kernelName:r.Reverse,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{dims:i}=s;Object(a.a)(o,"reverse");const u=o.shape.length,c=r.util.parseAxisParam(i,o.shape);if(0===u)return Object(l.a)({inputs:{x:o},backend:n});const d=new r.TensorBuffer(o.shape,o.dtype),p=n.bufferSync(o);for(let e=0;e<d.size;e++){const t=d.indexToLoc(e),n=t.slice();c.forEach((e=>n[e]=o.shape[e]-1-n[e])),d.set(p.get(...n),...t)}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},er={kernelName:r.RotateWithOffset,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:a}=e,{radians:s,fillValue:o,center:i}=t,u=n,c=r.util.getTypedArrayFromDType(a.dtype,r.util.sizeFromShape(a.shape)),[l,d,p,h]=a.shape,[f,m]=r.backend_util.getImageCenter(i,d,p),b=Math.sin(s),g=Math.cos(s),x=u.data.get(a.dataId).values;for(let e=0;e<l;e++){const t=e*p*d*h;for(let e=0;e<d;e++){const n=e*(p*h);for(let r=0;r<p;r++){const a=r*h;for(let s=0;s<h;s++){const i=[l,e,r,s],u=i[2],v=i[1];let y=(u-f)*g-(v-m)*b,k=(u-f)*b+(v-m)*g;y=Math.round(y+f),k=Math.round(k+m);let w=o;if("number"!=typeof o&&(w=3===s?255:o[s]),y>=0&&y<p&&k>=0&&k<d){w=x[t+k*(p*h)+y*h+s]}c[t+n+a+s]=w}}}}return{dataId:u.write(c,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},tr=Object(i.a)(r.Round,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),nr={kernelName:r.Round,backendName:"cpu",kernelFunc:tr};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var rr=n(74);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ar(e,t,n,a,s,o,i,u,c,l){const d=[a/s,s],p=e.values,h=t.values;if(0===a)return Object(r.buffer)(n,t.dtype);const f=Object(r.buffer)(d,t.dtype);f.values.fill(c);for(let e=0;e<o;e++){const r=[];let o=0;for(let t=0;t<i;t++){const n=p[e*i+t];r.push(n),o+=n*u[t]}if(o<0||o>=a/s)throw new Error(`Invalid indices: ${r} does not index into ${n}`);for(let n=0;n<s;n++)l?f.values[o*s+n]+=h[e*s+n]:f.values[o*s+n]=0===t.rank?h[0]:h[e*s+n]}return f}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sr={kernelName:r.ScatterNd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:s,updates:o}=t,{shape:i}=a,{sliceRank:u,numUpdates:c,sliceSize:l,strides:d,outputSize:p}=r.backend_util.calculateShapes(o,s,i),h=ar(n.bufferSync(s),n.bufferSync(o),i,p,l,c,u,d,0,!0);return n.makeTensorInfo(i,h.dtype,h.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const or={kernelName:r.Select,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:s,t:o,e:i}=t;Object(a.a)([s,o,i],"select");const u=s.shape.length,c=n.data.get(s.dataId).values,l=n.data.get(o.dataId).values,d=n.data.get(i.dataId).values,p=Object(r.upcastType)(o.dtype,i.dtype),h=r.util.makeZerosTypedArray(r.util.sizeFromShape(o.shape),p);let f=0;const m=0===u||u>1||1===o.shape.length?1:r.util.sizeFromShape(o.shape.slice(1));for(let e=0;e<c.length;e++)for(let t=0;t<m;t++)1===c[e]?h[f++]=l[e]:h[f++]=d[e];return n.makeTensorInfo(o.shape,p,h)}},ir=r.backend_util.SELU_SCALEALPHA,ur=r.backend_util.SELU_SCALE,cr=Object(i.a)(r.Selu,(e=>e>=0?ur*e:ir*(Math.exp(e)-1))),lr={kernelName:r.Selu,backendName:"cpu",kernelFunc:cr},dr=Object(i.a)(r.Sign,(e=>e<0?-1:e>0?1:0)),pr={kernelName:r.Sign,backendName:"cpu",kernelFunc:dr},hr=Object(i.a)(r.Sin,(e=>Math.sin(e))),fr={kernelName:r.Sin,backendName:"cpu",kernelFunc:hr},mr=Object(i.a)(r.Sinh,(e=>Math.sinh(e))),br={kernelName:r.Sinh,backendName:"cpu",kernelFunc:mr},gr=Math.log(1.1920928955078125e-7)+2,xr=Object(i.a)(r.Softplus,(e=>{const t=e>-gr,n=e<gr,r=Math.exp(e);let a;return a=n?r:t?e:Math.log(1+r),a})),vr={kernelName:r.Softplus,backendName:"cpu",kernelFunc:xr};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yr={kernelName:r.SpaceToBatchND,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{blockShape:i,paddings:u}=s;Object(a.a)([o],"spaceToBatchND");const c=r.util.sizeFromShape(i),l=[[0,0]];l.push(...u);for(let e=1+i.length;e<o.shape.length;++e)l.push([0,0]);const d=Ln.kernelFunc({inputs:{x:o},backend:n,attrs:{paddings:l,constantValue:0}}),p=r.backend_util.getReshaped(d.shape,i,c,!1),h=r.backend_util.getPermuted(p.length,i.length,!1),f=r.backend_util.getReshapedPermuted(d.shape,i,c,!1),m=S({inputs:{x:d},backend:n,attrs:{shape:p}}),b={x:m},g={perm:h},x=Object(M.a)({inputs:b,backend:n,attrs:g}),v=S({inputs:{x:x},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(x),v}};var kr=n(75);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wr={kernelName:r.SparseFillEmptyRows,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:o}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n        ${a.shape}`);if(0!==o.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${o.shape}`);const i=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,c=n.data.get(s.dataId).values,l=n.data.get(o.dataId).values[0],[d,p,h,f,m]=Object(kr.a)(i,r.shape,r.dtype,u,a.dtype,c,l);return[n.makeTensorInfo(p,r.dtype,d),n.makeTensorInfo([p[0]],a.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};var Ir=n(76);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sr={kernelName:r.SparseReshape,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const o=Array.from(n.data.get(a.dataId).values),i=n.data.get(r.dataId).values,u=Array.from(n.data.get(s.dataId).values),[c,l,d]=Object(Ir.a)(i,r.shape,r.dtype,o,u);return[n.makeTensorInfo(l,r.dtype,c),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}};var _r=n(44);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Or={kernelName:r.SparseSegmentMean,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${s.shape}`);const o=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,[c,l]=Object(_r.a)(o,r.shape,r.dtype,i,u,!0);return n.makeTensorInfo(l,r.dtype,c)}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tr={kernelName:r.SparseSegmentSum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${s.shape}`);const o=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,[c,l]=Object(_r.a)(o,r.shape,r.dtype,i,u);return n.makeTensorInfo(l,r.dtype,c)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cr={kernelName:r.SparseToDense,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sparseIndices:s,sparseValues:o,defaultValue:i}=t,{outputShape:u}=a,{sliceRank:c,numUpdates:l,sliceSize:d,strides:p,outputSize:h}=r.backend_util.calculateShapes(o,s,u),f=ar(n.bufferSync(s),n.bufferSync(o),u,h,d,l,c,p,n.data.get(i.dataId).values[0],!1);return n.makeTensorInfo(u,f.dtype,f.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $r={kernelName:r.SplitV,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{numOrSizeSplits:o,axis:i}=a,u=r.util.parseAxisParam(i,s.shape)[0],c=r.backend_util.prepareSplitSize(s,o,u),l=new Array(s.shape.length).fill(0),d=s.shape.slice();return c.map((e=>{const t=[...d];t[u]=e;const r=Object(oe.a)({inputs:{x:s},backend:n,attrs:{begin:l,size:t}});return l[u]+=e,r}))}};var Er=n(77);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ar={kernelName:r.Square,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;Object(a.a)(n,"square");const s=r.data.get(n.dataId).values,o=new Float32Array(s.length);for(let e=0;e<s.length;++e){const t=s[e];o[e]=t*t}return{dataId:r.write(o,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};var Nr=n(78);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rr=Object(i.a)(r.Step,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),Fr={kernelName:r.Step,backendName:"cpu",kernelFunc:Rr};var Mr=n(79);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dr={kernelName:r.StridedSlice,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{begin:i,end:u,strides:c,beginMask:l,endMask:d,ellipsisMask:p,newAxisMask:h,shrinkAxisMask:f}=s;Object(a.a)(o,"stridedSlice");const{nonStrided:m,$begin:b,$strides:g,size:x,newShape:v,outShape:y}=r.slice_util.sliceInfo(o.shape,i,u,c,l,d,p,h,f),k=S({inputs:{x:o},backend:n,attrs:{shape:v}});let w;if(m){const e=Object(oe.a)({inputs:{x:k},backend:n,attrs:{begin:b,size:x}});w=S({inputs:{x:e},backend:n,attrs:{shape:y}}),n.disposeIntermediateTensorInfo(e)}else if(y.some((e=>0===e)))w=n.makeTensorInfo(y,o.dtype,[]);else{const e=n.bufferSync(k),t=Object(Mr.a)(y,e,g,b);w=n.makeTensorInfo(t.shape,t.dtype,t.values)}const I=S({inputs:{x:w},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(k),n.disposeIntermediateTensorInfo(w),I}};var jr=n(80);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pr={kernelName:r.StringNGrams,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:o,rightPad:i,padWidth:u,preserveShortSequences:c}=r,{data:l,dataSplits:d}=t,p=n.data.get(l.dataId).values,h=n.data.get(d.dataId).values,[f,m]=Object(jr.a)(p,h,a,s,o,i,u,c);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}};var Br=n(81);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lr={kernelName:r.StringSplit,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:o}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==o.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);const i=n.data.get(s.dataId).values,u=n.data.get(o.dataId).values[0],[c,l,d]=Object(Br.a)(i,u,a),p=l.length;return[n.makeTensorInfo([p,2],"int32",c),n.makeTensorInfo([p],"string",l),n.makeTensorInfo([2],"int32",new Int32Array(d))]}};var Wr=n(82);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zr={kernelName:r.StringToHashBucketFast,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const o=n.data.get(s.dataId).values,i=Object(Wr.a)(o,a);return n.makeTensorInfo(s.shape,"int32",i)}},Ur=Object(i.a)(r.Tan,(e=>Math.tan(e))),Vr={kernelName:r.Tan,backendName:"cpu",kernelFunc:Ur},Gr=Object(i.a)(r.Tanh,(e=>Math.tanh(e))),Hr={kernelName:r.Tanh,backendName:"cpu",kernelFunc:Gr};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var qr=n(83);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kr={kernelName:r.Tile,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:o}=r;Object(a.a)(s,"tile");const i=Object(qr.a)(n.bufferSync(s),o);return n.makeTensorInfo(i.shape,i.dtype,i.values)}};var Xr=n(84);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yr={kernelName:r.TopK,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:o,sorted:i}=r;Object(a.a)(s,"topk");const u=n.data.get(s.dataId).values,[c,l]=Object(Xr.a)(u,s.shape,s.dtype,o,i);return[n.makeTensorInfo(c.shape,c.dtype,c.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zr={kernelName:r.Transform,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{image:s,transforms:o}=t,{interpolation:i,fillMode:u,fillValue:c,outputShape:l}=n,[d,p,h,f]=s.shape,[m,b]=null!=l?l:[p,h],g=[d,m,b,f],x=r.util.computeStrides(s.shape),v=x[0],y=x[1],k=x[2],w=r.util.getTypedArrayFromDType(s.dtype,r.util.sizeFromShape(g));w.fill(c);const I=a.data.get(s.dataId).values,S=a.data.get(o.dataId).values;for(let e=0;e<d;++e){const t=1===o.shape[0]?S:S.subarray(8*e,8*e+8);for(let n=0;n<m;++n)for(let r=0;r<b;++r)for(let a=0;a<f;++a){let s;const o=t[6]*r+t[7]*n+1;if(0===o)continue;const l=(t[0]*r+t[1]*n+t[2])/o,d=(t[3]*r+t[4]*n+t[5])/o,f=Qr(l,h,u),m=Qr(d,p,u);switch(i){case"nearest":s=ea(I,p,h,v,y,k,e,m,f,a,c);break;case"bilinear":s=ta(I,p,h,v,y,k,e,m,f,a,c);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}w[e*v+n*y+r*k+a]=s}return a.makeTensorInfo(g,s.dtype,w)}return{dataId:a.write(w,g,s.dtype),shape:s.shape,dtype:s.dtype}}};function Qr(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return r.util.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return r.util.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return r.util.clamp(0,e,t-1)}(e,t);default:return function(e,t){return e}(e)}}function Jr(e,t,n,r,a,s,o,i,u,c,l){return 0<=i&&i<t&&0<=u&&u<n?e[o*r+i*a+u*s+c]:l}function ea(e,t,n,r,a,s,o,i,u,c,l){return Jr(e,t,n,r,a,s,o,Math.round(i),Math.round(u),c,l)}function ta(e,t,n,r,a,s,o,i,u,c,l){const d=Math.floor(i),p=Math.floor(u),h=d+1,f=p+1;return(h-i)*((f-u)*Jr(e,t,n,r,a,s,o,d,p,c,l)+(u-p)*Jr(e,t,n,r,a,s,o,d,f,c,l))+(i-d)*((f-u)*Jr(e,t,n,r,a,s,o,h,p,c,l)+(u-p)*Jr(e,t,n,r,a,s,o,h,f,c,l))}var na=n(85);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ra={kernelName:r.Unique,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:o}=t;Object(a.a)(o,"unique");const i=r.data.get(o.dataId).values,{outputValues:u,outputShape:c,indices:l}=Object(na.a)(i,s,o.shape,o.dtype);return[r.makeTensorInfo(c,o.dtype,u),r.makeTensorInfo([l.length],"int32",l)]}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aa={kernelName:r.Unpack,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const o=a.shape.length,i=a.shape[s],u=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==s&&(u[c++]=a.shape[e]);const l=new Array(o).fill(0),d=a.shape.slice();d[s]=1;const p=new Array(i);for(let e=0;e<p.length;e++){l[s]=e;const t=Object(oe.a)({inputs:{x:a},backend:n,attrs:{begin:l,size:d}});p[e]=S({inputs:{x:t},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(t)}return p}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sa={kernelName:r.UnsortedSegmentSum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o,segmentIds:i}=t,{numSegments:u}=s;Object(a.a)(o,"unsortedSegmentSum");const c=[],l=[],d=o.shape.length-i.shape.length;let p=i;for(let e=0;e<d;++e){const t=ut({inputs:{input:p},backend:n,attrs:{dim:e+1}});p=t,l.push(t)}for(let e=0;e<u;++e){const t=r.util.createScalarValue(e,"int32"),a=n.makeTensorInfo([],"int32",t),s=Object(Qe.a)({inputs:{a:a,b:p},backend:n}),i=Object(de.a)({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),u=Object(He.a)({inputs:{a:i,b:o},backend:n}),d=Ke({inputs:{x:u},backend:n,attrs:{axis:0,keepDims:!1}});c.push(d),l.push(a),l.push(s),l.push(i),l.push(u),l.push(d)}const h=Pn({inputs:c,backend:n,attrs:{axis:0}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},oa=[C,$.a,A,R,I.b,F,D,j,P,B,W,U,G,X,Z,te,ne,re,ae,T,se,ie,ce,le,de.b,pe.a,fe,me.b,be,we,_e,Oe,Se,Ce,$e,Te,Ae,Re,Fe,Me,De,je,Be,Le,We,ze,Ue,Ge,Ve,ht,Ye,c,Ze,Qe.b,ot,it.b,ct,lt.a,xt,yt,kt,wt.a,_t,Ot,Tt,$t,At,Nt.a,Rt.a,l.b,Ft,ve,Dt,Pt,Lt,p,Wt.a,zt.a,Vt,Gt.a,qt,Yt,Qt,tn,nn,rn,cn.a,ln,dn,pn,hn,fn,un,mn,bn,gn.a,xn,kn,_n,He.b,On.a,Cn,En,Nn,Rn.a,Fn,jn,Bn,Ln,Un,b,Vn.a,Hn,ye.b,Kn,x,y,_,Xn,Yn,Zn,Qn,Jn,er,nr,rr.a,sr,or,lr,k.b,pr,fr,br,oe.b,Sn,vr,yr,wr,Sr,Or,Tr,Cr,$r,Er.a,Ar,Nr.a,Fr,Dr,Pr,Lr,zr,ft.b,Xe,Vr,Hr,Kr,Yr,M.b,Zr,ra,aa,sa,Dn];
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */for(const e of oa)Object(r.registerKernel)(e);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */},function(e,t,n){(function(t,r,a){var s,o=(s=(s="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||t,function(e){var t,o,i="undefined"!=typeof(e=e||{})?e:{};i.ready=new Promise((function(e,n){t=e,o=n}));var u,c={};for(u in i)i.hasOwnProperty(u)&&(c[u]=i[u]);var l=[],d=!1,p=!1,h=!1,f=!1;d="object"==typeof window,p="function"==typeof importScripts,h="object"==typeof r&&"object"==typeof r.versions&&"string"==typeof r.versions.node,f=!d&&!h&&!p;var m,b,g,x,v,y="";function k(e){return i.locateFile?i.locateFile(e,y):y+e}h?(y=p?n(48).dirname(y)+"/":a+"/",m=function(e,t){return x||(x=n(88)),v||(v=n(48)),e=v.normalize(e),x.readFileSync(e,t?null:"utf8")},g=function(e){var t=m(e,!0);return t.buffer||(t=new Uint8Array(t)),T(t.buffer),t},r.argv.length>1&&r.argv[1].replace(/\\/g,"/"),l=r.argv.slice(2),r.on("uncaughtException",(function(e){if(!(e instanceof Me))throw e})),r.on("unhandledRejection",se),i.inspect=function(){return"[Emscripten Module object]"}):f?("undefined"!=typeof read&&(m=function(e){return read(e)}),g=function(e){var t;return"function"==typeof readbuffer?new Uint8Array(readbuffer(e)):(T("object"==typeof(t=read(e,"binary"))),t)},"undefined"!=typeof scriptArgs?l=scriptArgs:"undefined"!=typeof arguments&&(l=arguments),"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)):(d||p)&&(p?y=self.location.href:"undefined"!=typeof document&&document.currentScript&&(y=document.currentScript.src),s&&(y=s),y=0!==y.indexOf("blob:")?y.substr(0,y.lastIndexOf("/")+1):"",m=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},p&&(g=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),b=function(e,t,n){var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)});var w,I,S=i.print||console.log.bind(console),_=i.printErr||console.warn.bind(console);for(u in c)c.hasOwnProperty(u)&&(i[u]=c[u]);c=null,i.arguments&&(l=i.arguments),i.thisProgram&&i.thisProgram,i.quit&&i.quit,i.wasmBinary&&(w=i.wasmBinary),i.noExitRuntime,"object"!=typeof WebAssembly&&se("no native wasm support detected");var O=!1;function T(e,t){e||se("Assertion failed: "+t)}function C(e){var t=i["_"+e];return T(t,"Cannot call unknown function "+e+", make sure it is exported"),t}function $(e,t,n,r,a){var s={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);B(e,t=Fe(n),n)}return t},array:function(e){var t=Fe(e.length);return L(e,t),t}},o=C(e),i=[],u=0;if(r)for(var c=0;c<r.length;c++){var l=s[n[c]];l?(0===u&&(u=Ne()),i[c]=l(r[c])):i[c]=r[c]}var d=o.apply(null,i);return d=function(e){return"string"===t?j(e):"boolean"===t?Boolean(e):e}(d),0!==u&&Re(u),d}function E(e,t,n,r){var a=(n=n||[]).every((function(e){return"number"===e}));return"string"!==t&&a&&!r?C(e):function(){return $(e,t,n,arguments)}}var A,N,R,F,M="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function D(e,t,n){for(var r=t+n,a=t;e[a]&&!(a>=r);)++a;if(a-t>16&&e.subarray&&M)return M.decode(e.subarray(t,a));for(var s="";t<a;){var o=e[t++];if(128&o){var i=63&e[t++];if(192!=(224&o)){var u=63&e[t++];if((o=224==(240&o)?(15&o)<<12|i<<6|u:(7&o)<<18|i<<12|u<<6|63&e[t++])<65536)s+=String.fromCharCode(o);else{var c=o-65536;s+=String.fromCharCode(55296|c>>10,56320|1023&c)}}else s+=String.fromCharCode((31&o)<<6|i)}else s+=String.fromCharCode(o)}return s}function j(e,t){return e?D(R,e,t):""}function P(e,t,n,r){if(!(r>0))return 0;for(var a=n,s=n+r-1,o=0;o<e.length;++o){var i=e.charCodeAt(o);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++o)),i<=127){if(n>=s)break;t[n++]=i}else if(i<=2047){if(n+1>=s)break;t[n++]=192|i>>6,t[n++]=128|63&i}else if(i<=65535){if(n+2>=s)break;t[n++]=224|i>>12,t[n++]=128|i>>6&63,t[n++]=128|63&i}else{if(n+3>=s)break;t[n++]=240|i>>18,t[n++]=128|i>>12&63,t[n++]=128|i>>6&63,t[n++]=128|63&i}}return t[n]=0,n-a}function B(e,t,n){return P(e,R,t,n)}function L(e,t){N.set(e,t)}function W(e,t){return e%t>0&&(e+=t-e%t),e}function z(e){A=e,i.HEAP8=N=new Int8Array(e),i.HEAP16=new Int16Array(e),i.HEAP32=F=new Int32Array(e),i.HEAPU8=R=new Uint8Array(e),i.HEAPU16=new Uint16Array(e),i.HEAPU32=new Uint32Array(e),i.HEAPF32=new Float32Array(e),i.HEAPF64=new Float64Array(e)}i.INITIAL_MEMORY;var U,V=[],G=[],H=[],q=[];function K(){if(i.preRun)for("function"==typeof i.preRun&&(i.preRun=[i.preRun]);i.preRun.length;)Q(i.preRun.shift());me(V)}function X(){me(G)}function Y(){me(H)}function Z(){if(i.postRun)for("function"==typeof i.postRun&&(i.postRun=[i.postRun]);i.postRun.length;)J(i.postRun.shift());me(q)}function Q(e){V.unshift(e)}function J(e){q.unshift(e)}G.push({func:function(){Ee()}});var ee=0,te=null,ne=null;function re(e){ee++,i.monitorRunDependencies&&i.monitorRunDependencies(ee)}function ae(e){if(ee--,i.monitorRunDependencies&&i.monitorRunDependencies(ee),0==ee&&(null!==te&&(clearInterval(te),te=null),ne)){var t=ne;ne=null,t()}}function se(e){i.onAbort&&i.onAbort(e),_(e+=""),O=!0,e="abort("+e+"). Build with -s ASSERTIONS=1 for more info.";var t=new WebAssembly.RuntimeError(e);throw o(t),t}function oe(e,t){return String.prototype.startsWith?e.startsWith(t):0===e.indexOf(t)}i.preloadedImages={},i.preloadedAudios={};var ie="data:application/octet-stream;base64,";function ue(e){return oe(e,ie)}var ce="file://";function le(e){return oe(e,ce)}var de="tfjs-backend-wasm.wasm";function pe(e){try{if(e==de&&w)return new Uint8Array(w);if(g)return g(e);throw"both async and sync fetching of the wasm failed"}catch(e){se(e)}}function he(){if(!w&&(d||p)){if("function"==typeof fetch&&!le(de))return fetch(de,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+de+"'";return e.arrayBuffer()})).catch((function(){return pe(de)}));if(b)return new Promise((function(e,t){b(de,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return pe(de)}))}function fe(){var e={a:$e};function t(e,t){var n=e.exports;i.asm=n,z((I=i.asm.i).buffer),U=i.asm.o,ae()}function n(e){t(e.instance)}function r(t){return he().then((function(t){return WebAssembly.instantiate(t,e)})).then(t,(function(e){_("failed to asynchronously prepare wasm: "+e),se(e)}))}if(re(),i.instantiateWasm)try{return i.instantiateWasm(e,t)}catch(e){return _("Module.instantiateWasm callback failed with error: "+e),!1}return(w||"function"!=typeof WebAssembly.instantiateStreaming||ue(de)||le(de)||"function"!=typeof fetch?r(n):fetch(de,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){return _("wasm streaming compile failed: "+e),_("falling back to ArrayBuffer instantiation"),r(n)}))}))).catch(o),{}}function me(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?U.get(n)():U.get(n)(t.arg):n(void 0===t.arg?null:t.arg)}else t(i)}}function be(){se()}function ge(e,t,n){R.copyWithin(e,t,t+n)}function xe(){return R.length}function ve(e){try{return I.grow(e-A.byteLength+65535>>>16),z(I.buffer),1}catch(e){}}function ye(e){var t=xe(),n=2147483648;if(e>n)return!1;for(var r=1;r<=4;r*=2){var a=t*(1+.2/r);if(a=Math.min(a,e+100663296),ve(Math.min(n,W(Math.max(e,a),65536))))return!0}return!1}ue(de)||(de=k(de));var ke={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=ke.buffers[e];0===t||10===t?((1===e?S:_)(D(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return ke.varargs+=4,F[ke.varargs-4>>2]},getStr:function(e){return j(e)},get64:function(e,t){return e}};function we(e){return 0}function Ie(e,t,n,r,a){}function Se(e,t,n,r){for(var a=0,s=0;s<n;s++){for(var o=F[t+8*s>>2],i=F[t+(8*s+4)>>2],u=0;u<i;u++)ke.printChar(e,R[o+u]);a+=i}return F[r>>2]=a,0}function _e(){return 6}function Oe(e){return F[Ae()>>2]=e,e}function Te(e){switch(e){case 30:case 75:return 16384;case 85:return 131072;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return"object"==typeof navigator&&navigator.hardwareConcurrency||1}return Oe(28),-1}var Ce,$e={a:be,d:ge,e:ye,f:we,c:Ie,b:Se,g:_e,h:Te},Ee=(fe(),i.___wasm_call_ctors=function(){return(Ee=i.___wasm_call_ctors=i.asm.j).apply(null,arguments)}),Ae=(i._init=function(){return(i._init=i.asm.k).apply(null,arguments)},i._register_tensor=function(){return(i._register_tensor=i.asm.l).apply(null,arguments)},i._dispose_data=function(){return(i._dispose_data=i.asm.m).apply(null,arguments)},i._dispose=function(){return(i._dispose=i.asm.n).apply(null,arguments)},i._Abs=function(){return(i._Abs=i.asm.p).apply(null,arguments)},i._Add=function(){return(i._Add=i.asm.q).apply(null,arguments)},i._AddN=function(){return(i._AddN=i.asm.r).apply(null,arguments)},i._All=function(){return(i._All=i.asm.s).apply(null,arguments)},i._Any=function(){return(i._Any=i.asm.t).apply(null,arguments)},i._ArgMax=function(){return(i._ArgMax=i.asm.u).apply(null,arguments)},i._AvgPool=function(){return(i._AvgPool=i.asm.v).apply(null,arguments)},i._BatchMatMul=function(){return(i._BatchMatMul=i.asm.w).apply(null,arguments)},i._Ceil=function(){return(i._Ceil=i.asm.x).apply(null,arguments)},i._ClipByValue=function(){return(i._ClipByValue=i.asm.y).apply(null,arguments)},i._Conv2D=function(){return(i._Conv2D=i.asm.z).apply(null,arguments)},i._Conv2DBackpropInput=function(){return(i._Conv2DBackpropInput=i.asm.A).apply(null,arguments)},i._Cos=function(){return(i._Cos=i.asm.B).apply(null,arguments)},i._Cosh=function(){return(i._Cosh=i.asm.C).apply(null,arguments)},i._CropAndResize=function(){return(i._CropAndResize=i.asm.D).apply(null,arguments)},i._Cumsum=function(){return(i._Cumsum=i.asm.E).apply(null,arguments)},i._DepthToSpace=function(){return(i._DepthToSpace=i.asm.F).apply(null,arguments)},i._DepthwiseConv2dNative=function(){return(i._DepthwiseConv2dNative=i.asm.G).apply(null,arguments)},i._Elu=function(){return(i._Elu=i.asm.H).apply(null,arguments)},i._Equal=function(){return(i._Equal=i.asm.I).apply(null,arguments)},i._Exp=function(){return(i._Exp=i.asm.J).apply(null,arguments)},i._FlipLeftRight=function(){return(i._FlipLeftRight=i.asm.K).apply(null,arguments)},i._Floor=function(){return(i._Floor=i.asm.L).apply(null,arguments)},i._FloorDiv=function(){return(i._FloorDiv=i.asm.M).apply(null,arguments)},i._FusedBatchNorm=function(){return(i._FusedBatchNorm=i.asm.N).apply(null,arguments)},i._FusedConv2D=function(){return(i._FusedConv2D=i.asm.O).apply(null,arguments)},i._FusedDepthwiseConv2D=function(){return(i._FusedDepthwiseConv2D=i.asm.P).apply(null,arguments)},i._Gather=function(){return(i._Gather=i.asm.Q).apply(null,arguments)},i._GatherNd=function(){return(i._GatherNd=i.asm.R).apply(null,arguments)},i._Greater=function(){return(i._Greater=i.asm.S).apply(null,arguments)},i._GreaterEqual=function(){return(i._GreaterEqual=i.asm.T).apply(null,arguments)},i._LeakyRelu=function(){return(i._LeakyRelu=i.asm.U).apply(null,arguments)},i._Less=function(){return(i._Less=i.asm.V).apply(null,arguments)},i._LessEqual=function(){return(i._LessEqual=i.asm.W).apply(null,arguments)},i._Log=function(){return(i._Log=i.asm.X).apply(null,arguments)},i._LogicalAnd=function(){return(i._LogicalAnd=i.asm.Y).apply(null,arguments)},i._Max=function(){return(i._Max=i.asm.Z).apply(null,arguments)},i._MaxPool=function(){return(i._MaxPool=i.asm._).apply(null,arguments)},i._Maximum=function(){return(i._Maximum=i.asm.$).apply(null,arguments)},i._Mean=function(){return(i._Mean=i.asm.aa).apply(null,arguments)},i._Min=function(){return(i._Min=i.asm.ba).apply(null,arguments)},i._Minimum=function(){return(i._Minimum=i.asm.ca).apply(null,arguments)},i._MirrorPad=function(){return(i._MirrorPad=i.asm.da).apply(null,arguments)},i._Multiply=function(){return(i._Multiply=i.asm.ea).apply(null,arguments)},i._Neg=function(){return(i._Neg=i.asm.fa).apply(null,arguments)},i._NonMaxSuppressionV3=function(){return(i._NonMaxSuppressionV3=i.asm.ga).apply(null,arguments)},i._NonMaxSuppressionV4=function(){return(i._NonMaxSuppressionV4=i.asm.ha).apply(null,arguments)},i._NonMaxSuppressionV5=function(){return(i._NonMaxSuppressionV5=i.asm.ia).apply(null,arguments)},i._NotEqual=function(){return(i._NotEqual=i.asm.ja).apply(null,arguments)},i._OneHot=function(){return(i._OneHot=i.asm.ka).apply(null,arguments)},i._PadV2=function(){return(i._PadV2=i.asm.la).apply(null,arguments)},i._Pow=function(){return(i._Pow=i.asm.ma).apply(null,arguments)},i._Prelu=function(){return(i._Prelu=i.asm.na).apply(null,arguments)},i._Prod=function(){return(i._Prod=i.asm.oa).apply(null,arguments)},i._RealDiv=function(){return(i._RealDiv=i.asm.pa).apply(null,arguments)},i._Relu=function(){return(i._Relu=i.asm.qa).apply(null,arguments)},i._Relu6=function(){return(i._Relu6=i.asm.ra).apply(null,arguments)},i._ResizeBilinear=function(){return(i._ResizeBilinear=i.asm.sa).apply(null,arguments)},i._Reverse=function(){return(i._Reverse=i.asm.ta).apply(null,arguments)},i._RotateWithOffset=function(){return(i._RotateWithOffset=i.asm.ua).apply(null,arguments)},i._Round=function(){return(i._Round=i.asm.va).apply(null,arguments)},i._Rsqrt=function(){return(i._Rsqrt=i.asm.wa).apply(null,arguments)},i._ScatterNd=function(){return(i._ScatterNd=i.asm.xa).apply(null,arguments)},i._SelectV2=function(){return(i._SelectV2=i.asm.ya).apply(null,arguments)},i._Sigmoid=function(){return(i._Sigmoid=i.asm.za).apply(null,arguments)},i._Sin=function(){return(i._Sin=i.asm.Aa).apply(null,arguments)},i._Softmax=function(){return(i._Softmax=i.asm.Ba).apply(null,arguments)},i._Sqrt=function(){return(i._Sqrt=i.asm.Ca).apply(null,arguments)},i._Square=function(){return(i._Square=i.asm.Da).apply(null,arguments)},i._SquaredDifference=function(){return(i._SquaredDifference=i.asm.Ea).apply(null,arguments)},i._Step=function(){return(i._Step=i.asm.Fa).apply(null,arguments)},i._StridedSlice=function(){return(i._StridedSlice=i.asm.Ga).apply(null,arguments)},i._Sub=function(){return(i._Sub=i.asm.Ha).apply(null,arguments)},i._Sum=function(){return(i._Sum=i.asm.Ia).apply(null,arguments)},i._Tan=function(){return(i._Tan=i.asm.Ja).apply(null,arguments)},i._Tanh=function(){return(i._Tanh=i.asm.Ka).apply(null,arguments)},i._Tile=function(){return(i._Tile=i.asm.La).apply(null,arguments)},i._TopK=function(){return(i._TopK=i.asm.Ma).apply(null,arguments)},i._Transform=function(){return(i._Transform=i.asm.Na).apply(null,arguments)},i._Transpose=function(){return(i._Transpose=i.asm.Oa).apply(null,arguments)},i.__FusedMatMul=function(){return(i.__FusedMatMul=i.asm.Pa).apply(null,arguments)},i._malloc=function(){return(i._malloc=i.asm.Qa).apply(null,arguments)},i._free=function(){return(i._free=i.asm.Ra).apply(null,arguments)},i.___errno_location=function(){return(Ae=i.___errno_location=i.asm.Sa).apply(null,arguments)}),Ne=i.stackSave=function(){return(Ne=i.stackSave=i.asm.Ta).apply(null,arguments)},Re=i.stackRestore=function(){return(Re=i.stackRestore=i.asm.Ua).apply(null,arguments)},Fe=i.stackAlloc=function(){return(Fe=i.stackAlloc=i.asm.Va).apply(null,arguments)};function Me(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function De(e){function n(){Ce||(Ce=!0,i.calledRun=!0,O||(X(),Y(),t(i),i.onRuntimeInitialized&&i.onRuntimeInitialized(),Z()))}e=e||l,ee>0||(K(),ee>0||(i.setStatus?(i.setStatus("Running..."),setTimeout((function(){setTimeout((function(){i.setStatus("")}),1),n()}),1)):n()))}if(i.cwrap=E,ne=function e(){Ce||De(),Ce||(ne=e)},i.run=De,i.preInit)for("function"==typeof i.preInit&&(i.preInit=[i.preInit]);i.preInit.length>0;)i.preInit.pop()();return De(),e.ready});e.exports=o}).call(this,"/index.js",n(37),"/")},,,,function(e,t,n){e.exports=n(102)},function(e,t,n){"use strict";n.r(t),function(e){var t=n(90),r=n(45),a=n(87),s=n(51),o=n(11);null==navigator.ml&&(navigator.ml=new t.a),null==e.ML&&(e.ML=t.a),null==e.MLContext&&(e.MLContext=r.a),null==e.MLGraphBuilder&&(e.MLGraphBuilder=s.c),null==e.MLGraph&&(e.MLGraph=a.a),null==e.MLOperand&&(e.MLOperand=o.c)}.call(this,n(36))},function(e,t,n){"use strict";(function(e){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <http://feross.org>
 * @license  MIT
 */
var r=n(104),a=n(105),s=n(106);function o(){return u.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function i(e,t){if(o()<t)throw new RangeError("Invalid typed array length");return u.TYPED_ARRAY_SUPPORT?(e=new Uint8Array(t)).__proto__=u.prototype:(null===e&&(e=new u(t)),e.length=t),e}function u(e,t,n){if(!(u.TYPED_ARRAY_SUPPORT||this instanceof u))return new u(e,t,n);if("number"==typeof e){if("string"==typeof t)throw new Error("If encoding is specified then the first argument must be a string");return d(this,e)}return c(this,e,t,n)}function c(e,t,n,r){if("number"==typeof t)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer?function(e,t,n,r){if(t.byteLength,n<0||t.byteLength<n)throw new RangeError("'offset' is out of bounds");if(t.byteLength<n+(r||0))throw new RangeError("'length' is out of bounds");t=void 0===n&&void 0===r?new Uint8Array(t):void 0===r?new Uint8Array(t,n):new Uint8Array(t,n,r);u.TYPED_ARRAY_SUPPORT?(e=t).__proto__=u.prototype:e=p(e,t);return e}(e,t,n,r):"string"==typeof t?function(e,t,n){"string"==typeof n&&""!==n||(n="utf8");if(!u.isEncoding(n))throw new TypeError('"encoding" must be a valid string encoding');var r=0|f(t,n),a=(e=i(e,r)).write(t,n);a!==r&&(e=e.slice(0,a));return e}(e,t,n):function(e,t){if(u.isBuffer(t)){var n=0|h(t.length);return 0===(e=i(e,n)).length||t.copy(e,0,0,n),e}if(t){if("undefined"!=typeof ArrayBuffer&&t.buffer instanceof ArrayBuffer||"length"in t)return"number"!=typeof t.length||(r=t.length)!=r?i(e,0):p(e,t);if("Buffer"===t.type&&s(t.data))return p(e,t.data)}var r;throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(e,t)}function l(e){if("number"!=typeof e)throw new TypeError('"size" argument must be a number');if(e<0)throw new RangeError('"size" argument must not be negative')}function d(e,t){if(l(t),e=i(e,t<0?0:0|h(t)),!u.TYPED_ARRAY_SUPPORT)for(var n=0;n<t;++n)e[n]=0;return e}function p(e,t){var n=t.length<0?0:0|h(t.length);e=i(e,n);for(var r=0;r<n;r+=1)e[r]=255&t[r];return e}function h(e){if(e>=o())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+o().toString(16)+" bytes");return 0|e}function f(e,t){if(u.isBuffer(e))return e.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(e)||e instanceof ArrayBuffer))return e.byteLength;"string"!=typeof e&&(e=""+e);var n=e.length;if(0===n)return 0;for(var r=!1;;)switch(t){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":case void 0:return W(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return z(e).length;default:if(r)return W(e).length;t=(""+t).toLowerCase(),r=!0}}function m(e,t,n){var r=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return E(this,t,n);case"utf8":case"utf-8":return O(this,t,n);case"ascii":return C(this,t,n);case"latin1":case"binary":return $(this,t,n);case"base64":return _(this,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return A(this,t,n);default:if(r)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),r=!0}}function b(e,t,n){var r=e[t];e[t]=e[n],e[n]=r}function g(e,t,n,r,a){if(0===e.length)return-1;if("string"==typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),n=+n,isNaN(n)&&(n=a?0:e.length-1),n<0&&(n=e.length+n),n>=e.length){if(a)return-1;n=e.length-1}else if(n<0){if(!a)return-1;n=0}if("string"==typeof t&&(t=u.from(t,r)),u.isBuffer(t))return 0===t.length?-1:x(e,t,n,r,a);if("number"==typeof t)return t&=255,u.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?a?Uint8Array.prototype.indexOf.call(e,t,n):Uint8Array.prototype.lastIndexOf.call(e,t,n):x(e,[t],n,r,a);throw new TypeError("val must be string, number or Buffer")}function x(e,t,n,r,a){var s,o=1,i=e.length,u=t.length;if(void 0!==r&&("ucs2"===(r=String(r).toLowerCase())||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(e.length<2||t.length<2)return-1;o=2,i/=2,u/=2,n/=2}function c(e,t){return 1===o?e[t]:e.readUInt16BE(t*o)}if(a){var l=-1;for(s=n;s<i;s++)if(c(e,s)===c(t,-1===l?0:s-l)){if(-1===l&&(l=s),s-l+1===u)return l*o}else-1!==l&&(s-=s-l),l=-1}else for(n+u>i&&(n=i-u),s=n;s>=0;s--){for(var d=!0,p=0;p<u;p++)if(c(e,s+p)!==c(t,p)){d=!1;break}if(d)return s}return-1}function v(e,t,n,r){n=Number(n)||0;var a=e.length-n;r?(r=Number(r))>a&&(r=a):r=a;var s=t.length;if(s%2!=0)throw new TypeError("Invalid hex string");r>s/2&&(r=s/2);for(var o=0;o<r;++o){var i=parseInt(t.substr(2*o,2),16);if(isNaN(i))return o;e[n+o]=i}return o}function y(e,t,n,r){return U(W(t,e.length-n),e,n,r)}function k(e,t,n,r){return U(function(e){for(var t=[],n=0;n<e.length;++n)t.push(255&e.charCodeAt(n));return t}(t),e,n,r)}function w(e,t,n,r){return k(e,t,n,r)}function I(e,t,n,r){return U(z(t),e,n,r)}function S(e,t,n,r){return U(function(e,t){for(var n,r,a,s=[],o=0;o<e.length&&!((t-=2)<0);++o)r=(n=e.charCodeAt(o))>>8,a=n%256,s.push(a),s.push(r);return s}(t,e.length-n),e,n,r)}function _(e,t,n){return 0===t&&n===e.length?r.fromByteArray(e):r.fromByteArray(e.slice(t,n))}function O(e,t,n){n=Math.min(e.length,n);for(var r=[],a=t;a<n;){var s,o,i,u,c=e[a],l=null,d=c>239?4:c>223?3:c>191?2:1;if(a+d<=n)switch(d){case 1:c<128&&(l=c);break;case 2:128==(192&(s=e[a+1]))&&(u=(31&c)<<6|63&s)>127&&(l=u);break;case 3:s=e[a+1],o=e[a+2],128==(192&s)&&128==(192&o)&&(u=(15&c)<<12|(63&s)<<6|63&o)>2047&&(u<55296||u>57343)&&(l=u);break;case 4:s=e[a+1],o=e[a+2],i=e[a+3],128==(192&s)&&128==(192&o)&&128==(192&i)&&(u=(15&c)<<18|(63&s)<<12|(63&o)<<6|63&i)>65535&&u<1114112&&(l=u)}null===l?(l=65533,d=1):l>65535&&(l-=65536,r.push(l>>>10&1023|55296),l=56320|1023&l),r.push(l),a+=d}return function(e){var t=e.length;if(t<=T)return String.fromCharCode.apply(String,e);var n="",r=0;for(;r<t;)n+=String.fromCharCode.apply(String,e.slice(r,r+=T));return n}(r)}t.Buffer=u,t.SlowBuffer=function(e){+e!=e&&(e=0);return u.alloc(+e)},t.INSPECT_MAX_BYTES=50,u.TYPED_ARRAY_SUPPORT=void 0!==e.TYPED_ARRAY_SUPPORT?e.TYPED_ARRAY_SUPPORT:function(){try{var e=new Uint8Array(1);return e.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===e.foo()&&"function"==typeof e.subarray&&0===e.subarray(1,1).byteLength}catch(e){return!1}}(),t.kMaxLength=o(),u.poolSize=8192,u._augment=function(e){return e.__proto__=u.prototype,e},u.from=function(e,t,n){return c(null,e,t,n)},u.TYPED_ARRAY_SUPPORT&&(u.prototype.__proto__=Uint8Array.prototype,u.__proto__=Uint8Array,"undefined"!=typeof Symbol&&Symbol.species&&u[Symbol.species]===u&&Object.defineProperty(u,Symbol.species,{value:null,configurable:!0})),u.alloc=function(e,t,n){return function(e,t,n,r){return l(t),t<=0?i(e,t):void 0!==n?"string"==typeof r?i(e,t).fill(n,r):i(e,t).fill(n):i(e,t)}(null,e,t,n)},u.allocUnsafe=function(e){return d(null,e)},u.allocUnsafeSlow=function(e){return d(null,e)},u.isBuffer=function(e){return!(null==e||!e._isBuffer)},u.compare=function(e,t){if(!u.isBuffer(e)||!u.isBuffer(t))throw new TypeError("Arguments must be Buffers");if(e===t)return 0;for(var n=e.length,r=t.length,a=0,s=Math.min(n,r);a<s;++a)if(e[a]!==t[a]){n=e[a],r=t[a];break}return n<r?-1:r<n?1:0},u.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},u.concat=function(e,t){if(!s(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return u.alloc(0);var n;if(void 0===t)for(t=0,n=0;n<e.length;++n)t+=e[n].length;var r=u.allocUnsafe(t),a=0;for(n=0;n<e.length;++n){var o=e[n];if(!u.isBuffer(o))throw new TypeError('"list" argument must be an Array of Buffers');o.copy(r,a),a+=o.length}return r},u.byteLength=f,u.prototype._isBuffer=!0,u.prototype.swap16=function(){var e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var t=0;t<e;t+=2)b(this,t,t+1);return this},u.prototype.swap32=function(){var e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var t=0;t<e;t+=4)b(this,t,t+3),b(this,t+1,t+2);return this},u.prototype.swap64=function(){var e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var t=0;t<e;t+=8)b(this,t,t+7),b(this,t+1,t+6),b(this,t+2,t+5),b(this,t+3,t+4);return this},u.prototype.toString=function(){var e=0|this.length;return 0===e?"":0===arguments.length?O(this,0,e):m.apply(this,arguments)},u.prototype.equals=function(e){if(!u.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===u.compare(this,e)},u.prototype.inspect=function(){var e="",n=t.INSPECT_MAX_BYTES;return this.length>0&&(e=this.toString("hex",0,n).match(/.{2}/g).join(" "),this.length>n&&(e+=" ... ")),"<Buffer "+e+">"},u.prototype.compare=function(e,t,n,r,a){if(!u.isBuffer(e))throw new TypeError("Argument must be a Buffer");if(void 0===t&&(t=0),void 0===n&&(n=e?e.length:0),void 0===r&&(r=0),void 0===a&&(a=this.length),t<0||n>e.length||r<0||a>this.length)throw new RangeError("out of range index");if(r>=a&&t>=n)return 0;if(r>=a)return-1;if(t>=n)return 1;if(this===e)return 0;for(var s=(a>>>=0)-(r>>>=0),o=(n>>>=0)-(t>>>=0),i=Math.min(s,o),c=this.slice(r,a),l=e.slice(t,n),d=0;d<i;++d)if(c[d]!==l[d]){s=c[d],o=l[d];break}return s<o?-1:o<s?1:0},u.prototype.includes=function(e,t,n){return-1!==this.indexOf(e,t,n)},u.prototype.indexOf=function(e,t,n){return g(this,e,t,n,!0)},u.prototype.lastIndexOf=function(e,t,n){return g(this,e,t,n,!1)},u.prototype.write=function(e,t,n,r){if(void 0===t)r="utf8",n=this.length,t=0;else if(void 0===n&&"string"==typeof t)r=t,n=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t|=0,isFinite(n)?(n|=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}var a=this.length-t;if((void 0===n||n>a)&&(n=a),e.length>0&&(n<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");for(var s=!1;;)switch(r){case"hex":return v(this,e,t,n);case"utf8":case"utf-8":return y(this,e,t,n);case"ascii":return k(this,e,t,n);case"latin1":case"binary":return w(this,e,t,n);case"base64":return I(this,e,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return S(this,e,t,n);default:if(s)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),s=!0}},u.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var T=4096;function C(e,t,n){var r="";n=Math.min(e.length,n);for(var a=t;a<n;++a)r+=String.fromCharCode(127&e[a]);return r}function $(e,t,n){var r="";n=Math.min(e.length,n);for(var a=t;a<n;++a)r+=String.fromCharCode(e[a]);return r}function E(e,t,n){var r=e.length;(!t||t<0)&&(t=0),(!n||n<0||n>r)&&(n=r);for(var a="",s=t;s<n;++s)a+=L(e[s]);return a}function A(e,t,n){for(var r=e.slice(t,n),a="",s=0;s<r.length;s+=2)a+=String.fromCharCode(r[s]+256*r[s+1]);return a}function N(e,t,n){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>n)throw new RangeError("Trying to access beyond buffer length")}function R(e,t,n,r,a,s){if(!u.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>a||t<s)throw new RangeError('"value" argument is out of bounds');if(n+r>e.length)throw new RangeError("Index out of range")}function F(e,t,n,r){t<0&&(t=65535+t+1);for(var a=0,s=Math.min(e.length-n,2);a<s;++a)e[n+a]=(t&255<<8*(r?a:1-a))>>>8*(r?a:1-a)}function M(e,t,n,r){t<0&&(t=4294967295+t+1);for(var a=0,s=Math.min(e.length-n,4);a<s;++a)e[n+a]=t>>>8*(r?a:3-a)&255}function D(e,t,n,r,a,s){if(n+r>e.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function j(e,t,n,r,s){return s||D(e,0,n,4),a.write(e,t,n,r,23,4),n+4}function P(e,t,n,r,s){return s||D(e,0,n,8),a.write(e,t,n,r,52,8),n+8}u.prototype.slice=function(e,t){var n,r=this.length;if((e=~~e)<0?(e+=r)<0&&(e=0):e>r&&(e=r),(t=void 0===t?r:~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),t<e&&(t=e),u.TYPED_ARRAY_SUPPORT)(n=this.subarray(e,t)).__proto__=u.prototype;else{var a=t-e;n=new u(a,void 0);for(var s=0;s<a;++s)n[s]=this[s+e]}return n},u.prototype.readUIntLE=function(e,t,n){e|=0,t|=0,n||N(e,t,this.length);for(var r=this[e],a=1,s=0;++s<t&&(a*=256);)r+=this[e+s]*a;return r},u.prototype.readUIntBE=function(e,t,n){e|=0,t|=0,n||N(e,t,this.length);for(var r=this[e+--t],a=1;t>0&&(a*=256);)r+=this[e+--t]*a;return r},u.prototype.readUInt8=function(e,t){return t||N(e,1,this.length),this[e]},u.prototype.readUInt16LE=function(e,t){return t||N(e,2,this.length),this[e]|this[e+1]<<8},u.prototype.readUInt16BE=function(e,t){return t||N(e,2,this.length),this[e]<<8|this[e+1]},u.prototype.readUInt32LE=function(e,t){return t||N(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},u.prototype.readUInt32BE=function(e,t){return t||N(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},u.prototype.readIntLE=function(e,t,n){e|=0,t|=0,n||N(e,t,this.length);for(var r=this[e],a=1,s=0;++s<t&&(a*=256);)r+=this[e+s]*a;return r>=(a*=128)&&(r-=Math.pow(2,8*t)),r},u.prototype.readIntBE=function(e,t,n){e|=0,t|=0,n||N(e,t,this.length);for(var r=t,a=1,s=this[e+--r];r>0&&(a*=256);)s+=this[e+--r]*a;return s>=(a*=128)&&(s-=Math.pow(2,8*t)),s},u.prototype.readInt8=function(e,t){return t||N(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},u.prototype.readInt16LE=function(e,t){t||N(e,2,this.length);var n=this[e]|this[e+1]<<8;return 32768&n?4294901760|n:n},u.prototype.readInt16BE=function(e,t){t||N(e,2,this.length);var n=this[e+1]|this[e]<<8;return 32768&n?4294901760|n:n},u.prototype.readInt32LE=function(e,t){return t||N(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},u.prototype.readInt32BE=function(e,t){return t||N(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},u.prototype.readFloatLE=function(e,t){return t||N(e,4,this.length),a.read(this,e,!0,23,4)},u.prototype.readFloatBE=function(e,t){return t||N(e,4,this.length),a.read(this,e,!1,23,4)},u.prototype.readDoubleLE=function(e,t){return t||N(e,8,this.length),a.read(this,e,!0,52,8)},u.prototype.readDoubleBE=function(e,t){return t||N(e,8,this.length),a.read(this,e,!1,52,8)},u.prototype.writeUIntLE=function(e,t,n,r){(e=+e,t|=0,n|=0,r)||R(this,e,t,n,Math.pow(2,8*n)-1,0);var a=1,s=0;for(this[t]=255&e;++s<n&&(a*=256);)this[t+s]=e/a&255;return t+n},u.prototype.writeUIntBE=function(e,t,n,r){(e=+e,t|=0,n|=0,r)||R(this,e,t,n,Math.pow(2,8*n)-1,0);var a=n-1,s=1;for(this[t+a]=255&e;--a>=0&&(s*=256);)this[t+a]=e/s&255;return t+n},u.prototype.writeUInt8=function(e,t,n){return e=+e,t|=0,n||R(this,e,t,1,255,0),u.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),this[t]=255&e,t+1},u.prototype.writeUInt16LE=function(e,t,n){return e=+e,t|=0,n||R(this,e,t,2,65535,0),u.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):F(this,e,t,!0),t+2},u.prototype.writeUInt16BE=function(e,t,n){return e=+e,t|=0,n||R(this,e,t,2,65535,0),u.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):F(this,e,t,!1),t+2},u.prototype.writeUInt32LE=function(e,t,n){return e=+e,t|=0,n||R(this,e,t,4,4294967295,0),u.TYPED_ARRAY_SUPPORT?(this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e):M(this,e,t,!0),t+4},u.prototype.writeUInt32BE=function(e,t,n){return e=+e,t|=0,n||R(this,e,t,4,4294967295,0),u.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):M(this,e,t,!1),t+4},u.prototype.writeIntLE=function(e,t,n,r){if(e=+e,t|=0,!r){var a=Math.pow(2,8*n-1);R(this,e,t,n,a-1,-a)}var s=0,o=1,i=0;for(this[t]=255&e;++s<n&&(o*=256);)e<0&&0===i&&0!==this[t+s-1]&&(i=1),this[t+s]=(e/o>>0)-i&255;return t+n},u.prototype.writeIntBE=function(e,t,n,r){if(e=+e,t|=0,!r){var a=Math.pow(2,8*n-1);R(this,e,t,n,a-1,-a)}var s=n-1,o=1,i=0;for(this[t+s]=255&e;--s>=0&&(o*=256);)e<0&&0===i&&0!==this[t+s+1]&&(i=1),this[t+s]=(e/o>>0)-i&255;return t+n},u.prototype.writeInt8=function(e,t,n){return e=+e,t|=0,n||R(this,e,t,1,127,-128),u.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),e<0&&(e=255+e+1),this[t]=255&e,t+1},u.prototype.writeInt16LE=function(e,t,n){return e=+e,t|=0,n||R(this,e,t,2,32767,-32768),u.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):F(this,e,t,!0),t+2},u.prototype.writeInt16BE=function(e,t,n){return e=+e,t|=0,n||R(this,e,t,2,32767,-32768),u.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):F(this,e,t,!1),t+2},u.prototype.writeInt32LE=function(e,t,n){return e=+e,t|=0,n||R(this,e,t,4,2147483647,-2147483648),u.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24):M(this,e,t,!0),t+4},u.prototype.writeInt32BE=function(e,t,n){return e=+e,t|=0,n||R(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),u.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):M(this,e,t,!1),t+4},u.prototype.writeFloatLE=function(e,t,n){return j(this,e,t,!0,n)},u.prototype.writeFloatBE=function(e,t,n){return j(this,e,t,!1,n)},u.prototype.writeDoubleLE=function(e,t,n){return P(this,e,t,!0,n)},u.prototype.writeDoubleBE=function(e,t,n){return P(this,e,t,!1,n)},u.prototype.copy=function(e,t,n,r){if(n||(n=0),r||0===r||(r=this.length),t>=e.length&&(t=e.length),t||(t=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("sourceStart out of bounds");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),e.length-t<r-n&&(r=e.length-t+n);var a,s=r-n;if(this===e&&n<t&&t<r)for(a=s-1;a>=0;--a)e[a+t]=this[a+n];else if(s<1e3||!u.TYPED_ARRAY_SUPPORT)for(a=0;a<s;++a)e[a+t]=this[a+n];else Uint8Array.prototype.set.call(e,this.subarray(n,n+s),t);return s},u.prototype.fill=function(e,t,n,r){if("string"==typeof e){if("string"==typeof t?(r=t,t=0,n=this.length):"string"==typeof n&&(r=n,n=this.length),1===e.length){var a=e.charCodeAt(0);a<256&&(e=a)}if(void 0!==r&&"string"!=typeof r)throw new TypeError("encoding must be a string");if("string"==typeof r&&!u.isEncoding(r))throw new TypeError("Unknown encoding: "+r)}else"number"==typeof e&&(e&=255);if(t<0||this.length<t||this.length<n)throw new RangeError("Out of range index");if(n<=t)return this;var s;if(t>>>=0,n=void 0===n?this.length:n>>>0,e||(e=0),"number"==typeof e)for(s=t;s<n;++s)this[s]=e;else{var o=u.isBuffer(e)?e:W(new u(e,r).toString()),i=o.length;for(s=0;s<n-t;++s)this[s+t]=o[s%i]}return this};var B=/[^+\/0-9A-Za-z-_]/g;function L(e){return e<16?"0"+e.toString(16):e.toString(16)}function W(e,t){var n;t=t||1/0;for(var r=e.length,a=null,s=[],o=0;o<r;++o){if((n=e.charCodeAt(o))>55295&&n<57344){if(!a){if(n>56319){(t-=3)>-1&&s.push(239,191,189);continue}if(o+1===r){(t-=3)>-1&&s.push(239,191,189);continue}a=n;continue}if(n<56320){(t-=3)>-1&&s.push(239,191,189),a=n;continue}n=65536+(a-55296<<10|n-56320)}else a&&(t-=3)>-1&&s.push(239,191,189);if(a=null,n<128){if((t-=1)<0)break;s.push(n)}else if(n<2048){if((t-=2)<0)break;s.push(n>>6|192,63&n|128)}else if(n<65536){if((t-=3)<0)break;s.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;s.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return s}function z(e){return r.toByteArray(function(e){if((e=function(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")}(e).replace(B,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function U(e,t,n,r){for(var a=0;a<r&&!(a+n>=t.length||a>=e.length);++a)t[a+n]=e[a];return a}}).call(this,n(36))},function(e,t,n){"use strict";t.byteLength=function(e){var t=c(e),n=t[0],r=t[1];return 3*(n+r)/4-r},t.toByteArray=function(e){var t,n,r=c(e),o=r[0],i=r[1],u=new s(function(e,t,n){return 3*(t+n)/4-n}(0,o,i)),l=0,d=i>0?o-4:o;for(n=0;n<d;n+=4)t=a[e.charCodeAt(n)]<<18|a[e.charCodeAt(n+1)]<<12|a[e.charCodeAt(n+2)]<<6|a[e.charCodeAt(n+3)],u[l++]=t>>16&255,u[l++]=t>>8&255,u[l++]=255&t;2===i&&(t=a[e.charCodeAt(n)]<<2|a[e.charCodeAt(n+1)]>>4,u[l++]=255&t);1===i&&(t=a[e.charCodeAt(n)]<<10|a[e.charCodeAt(n+1)]<<4|a[e.charCodeAt(n+2)]>>2,u[l++]=t>>8&255,u[l++]=255&t);return u},t.fromByteArray=function(e){for(var t,n=e.length,a=n%3,s=[],o=16383,i=0,u=n-a;i<u;i+=o)s.push(l(e,i,i+o>u?u:i+o));1===a?(t=e[n-1],s.push(r[t>>2]+r[t<<4&63]+"==")):2===a&&(t=(e[n-2]<<8)+e[n-1],s.push(r[t>>10]+r[t>>4&63]+r[t<<2&63]+"="));return s.join("")};for(var r=[],a=[],s="undefined"!=typeof Uint8Array?Uint8Array:Array,o="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",i=0,u=o.length;i<u;++i)r[i]=o[i],a[o.charCodeAt(i)]=i;function c(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=e.indexOf("=");return-1===n&&(n=t),[n,n===t?0:4-n%4]}function l(e,t,n){for(var a,s,o=[],i=t;i<n;i+=3)a=(e[i]<<16&16711680)+(e[i+1]<<8&65280)+(255&e[i+2]),o.push(r[(s=a)>>18&63]+r[s>>12&63]+r[s>>6&63]+r[63&s]);return o.join("")}a["-".charCodeAt(0)]=62,a["_".charCodeAt(0)]=63},function(e,t){
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
t.read=function(e,t,n,r,a){var s,o,i=8*a-r-1,u=(1<<i)-1,c=u>>1,l=-7,d=n?a-1:0,p=n?-1:1,h=e[t+d];for(d+=p,s=h&(1<<-l)-1,h>>=-l,l+=i;l>0;s=256*s+e[t+d],d+=p,l-=8);for(o=s&(1<<-l)-1,s>>=-l,l+=r;l>0;o=256*o+e[t+d],d+=p,l-=8);if(0===s)s=1-c;else{if(s===u)return o?NaN:1/0*(h?-1:1);o+=Math.pow(2,r),s-=c}return(h?-1:1)*o*Math.pow(2,s-r)},t.write=function(e,t,n,r,a,s){var o,i,u,c=8*s-a-1,l=(1<<c)-1,d=l>>1,p=23===a?Math.pow(2,-24)-Math.pow(2,-77):0,h=r?0:s-1,f=r?1:-1,m=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(i=isNaN(t)?1:0,o=l):(o=Math.floor(Math.log(t)/Math.LN2),t*(u=Math.pow(2,-o))<1&&(o--,u*=2),(t+=o+d>=1?p/u:p*Math.pow(2,1-d))*u>=2&&(o++,u/=2),o+d>=l?(i=0,o=l):o+d>=1?(i=(t*u-1)*Math.pow(2,a),o+=d):(i=t*Math.pow(2,d-1)*Math.pow(2,a),o=0));a>=8;e[n+h]=255&i,h+=f,i/=256,a-=8);for(o=o<<a|i,c+=a;c>0;e[n+h]=255&o,h+=f,o/=256,c-=8);e[n+h-f]|=128*m}},function(e,t){var n={}.toString;e.exports=Array.isArray||function(e){return"[object Array]"==n.call(e)}},function(e,t,n){"use strict";(function(e){var t=n(9);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r=()=>n(108);let a;class s{constructor(){this.util=n(109),this.textEncoder=new this.util.TextEncoder}fetch(e,n){return null!=Object(t.c)().global.fetch?Object(t.c)().global.fetch(e,n):(null==a&&(a=r()),a(e,n))}now(){const t=e.hrtime();return 1e3*t[0]+t[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}}Object(t.c)().get("IS_NODE")&&Object(t.c)().setPlatform("node",new s)}).call(this,n(37))},function(e,t){},function(e,t){},function(e,t,n){(function(e){var r;!function(e,a,s){function o(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function i(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function u(e,t){var n=new o(e),r=t&&t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n(26)&&n(39)?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.alea=u}(0,e,n(26))}).call(this,n(38)(e))},function(e,t,n){(function(e){var r;!function(e,a,s){function o(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function u(e,t){var n=new o(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n(26)&&n(39)?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xor128=u}(0,e,n(26))}).call(this,n(38)(e))},function(e,t,n){(function(e){var r;!function(e,a,s){function o(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function u(e,t){var n=new o(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n(26)&&n(39)?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xorwow=u}(0,e,n(26))}).call(this,n(38)(e))},function(e,t,n){(function(e){var r;!function(e,a,s){function o(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function i(e,t){return t.x=e.x.slice(),t.i=e.i,t}function u(e,t){null==e&&(e=+new Date);var n=new o(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.x&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n(26)&&n(39)?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xorshift7=u}(0,e,n(26))}).call(this,n(38)(e))},function(e,t,n){(function(e){var r;!function(e,a,s){function o(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,o,i=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,s=-32;s<u;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(o=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(o=o+1640531527|0,a=0==(n=i[127&s]^=r+o)?a+1:0);for(a>=128&&(i[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=i[a+34&127],n=i[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,i[a]=r^n;e.w=o,e.X=i,e.i=a}(t,e)}function i(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function u(e,t){null==e&&(e=+new Date);var n=new o(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.X&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n(26)&&n(39)?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xor4096=u}(0,e,n(26))}).call(this,n(38)(e))},function(e,t,n){(function(e){var r;!function(e,a,s){function o(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function u(e,t){var n=new o(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n(26)&&n(39)?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.tychei=u}(0,e,n(26))}).call(this,n(38)(e))},function(e,t,n){var r;!function(a,s){var o,i=this,u=256,c=s.pow(u,6),l=s.pow(2,52),d=2*l,p=255;function h(e,t,n){var r=[],p=g(b((t=1==t?{entropy:!0}:t||{}).entropy?[e,x(a)]:null==e?function(){try{var e;return o&&(e=o.randomBytes)?e=e(u):(e=new Uint8Array(u),(i.crypto||i.msCrypto).getRandomValues(e)),x(e)}catch(e){var t=i.navigator,n=t&&t.plugins;return[+new Date,i,n,i.screen,x(a)]}}():e,3),r),h=new f(r),v=function(){for(var e=h.g(6),t=c,n=0;e<l;)e=(e+n)*u,t*=u,n=h.g(1);for(;e>=d;)e/=2,t/=2,n>>>=1;return(e+n)/t};return v.int32=function(){return 0|h.g(4)},v.quick=function(){return h.g(4)/4294967296},v.double=v,g(x(h.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,h),e.state=function(){return m(h,{})}),n?(s.random=e,t):e})(v,p,"global"in t?t.global:this==s,t.state)}function f(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);a<u;)o[a]=a++;for(a=0;a<u;a++)o[a]=o[s=p&s+e[a%n]+(t=o[a])],o[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,o=r.S;e--;)t=o[a=p&a+1],n=n*u+o[p&(o[a]=o[s=p&s+t])+(o[s]=t)];return r.i=a,r.j=s,n})(u)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function b(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(b(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function g(e,t){for(var n,r=e+"",a=0;a<r.length;)t[p&a]=p&(n^=19*t[p&a])+r.charCodeAt(a++);return x(t)}function x(e){return String.fromCharCode.apply(0,e)}if(s.seedrandom=h,g(s.random(),a),e.exports){e.exports=h;try{o=n(117)}catch(e){}}else void 0===(r=function(){return h}.call(t,n,t,e))||(e.exports=r)}([],Math)},function(e,t){},function(e,t,n){(function(e){var r="undefined"!=typeof e&&e||"undefined"!=typeof self&&self||window,a=Function.prototype.apply;function s(e,t){this._id=e,this._clearFn=t}t.setTimeout=function(){return new s(a.call(setTimeout,r,arguments),clearTimeout)},t.setInterval=function(){return new s(a.call(setInterval,r,arguments),clearInterval)},t.clearTimeout=t.clearInterval=function(e){e&&e.close()},s.prototype.unref=s.prototype.ref=function(){},s.prototype.close=function(){this._clearFn.call(r,this._id)},t.enroll=function(e,t){clearTimeout(e._idleTimeoutId),e._idleTimeout=t},t.unenroll=function(e){clearTimeout(e._idleTimeoutId),e._idleTimeout=-1},t._unrefActive=t.active=function(e){clearTimeout(e._idleTimeoutId);var t=e._idleTimeout;t>=0&&(e._idleTimeoutId=setTimeout((function(){e._onTimeout&&e._onTimeout()}),t))},n(119),t.setImmediate="undefined"!=typeof self&&self.setImmediate||"undefined"!=typeof e&&e.setImmediate||this&&this.setImmediate,t.clearImmediate="undefined"!=typeof self&&self.clearImmediate||"undefined"!=typeof e&&e.clearImmediate||this&&this.clearImmediate}).call(this,n(36))},function(e,t,n){(function(e,t){!function(e,n){"use strict";if(!e.setImmediate){var r,a,s,o,i,u=1,c={},l=!1,d=e.document,p=Object.getPrototypeOf&&Object.getPrototypeOf(e);p=p&&p.setTimeout?p:e,"[object process]"==={}.toString.call(e.process)?r=function(e){t.nextTick((function(){f(e)}))}:!function(){if(e.postMessage&&!e.importScripts){var t=!0,n=e.onmessage;return e.onmessage=function(){t=!1},e.postMessage("","*"),e.onmessage=n,t}}()?e.MessageChannel?((s=new MessageChannel).port1.onmessage=function(e){f(e.data)},r=function(e){s.port2.postMessage(e)}):d&&"onreadystatechange"in d.createElement("script")?(a=d.documentElement,r=function(e){var t=d.createElement("script");t.onreadystatechange=function(){f(e),t.onreadystatechange=null,a.removeChild(t),t=null},a.appendChild(t)}):r=function(e){setTimeout(f,0,e)}:(o="setImmediate$"+Math.random()+"$",i=function(t){t.source===e&&"string"==typeof t.data&&0===t.data.indexOf(o)&&f(+t.data.slice(o.length))},e.addEventListener?e.addEventListener("message",i,!1):e.attachEvent("onmessage",i),r=function(t){e.postMessage(o+t,"*")}),p.setImmediate=function(e){"function"!=typeof e&&(e=new Function(""+e));for(var t=new Array(arguments.length-1),n=0;n<t.length;n++)t[n]=arguments[n+1];var a={callback:e,args:t};return c[u]=a,r(u),u++},p.clearImmediate=h}function h(e){delete c[e]}function f(e){if(l)setTimeout(f,0,e);else{var t=c[e];if(t){l=!0;try{!function(e){var t=e.callback,n=e.args;switch(n.length){case 0:t();break;case 1:t(n[0]);break;case 2:t(n[0],n[1]);break;case 3:t(n[0],n[1],n[2]);break;default:t.apply(void 0,n)}}(t)}finally{h(e),l=!1}}}}}("undefined"==typeof self?"undefined"==typeof e?this:e:self)}).call(this,n(36),n(37))},function(e,t){},function(e,t){},function(e,t){}]);
//# sourceMappingURL=webnn-polyfill.js.map