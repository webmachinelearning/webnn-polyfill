!function(e){var t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.l=!0,a.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(r,a,function(t){return e[t]}.bind(null,a));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=102)}([function(e,t,n){"use strict";n.r(t),n.d(t,"AdadeltaOptimizer",(function(){return yn})),n.d(t,"AdagradOptimizer",(function(){return vn})),n.d(t,"AdamOptimizer",(function(){return Sn})),n.d(t,"AdamaxOptimizer",(function(){return On})),n.d(t,"MomentumOptimizer",(function(){return Tn})),n.d(t,"Optimizer",(function(){return xn})),n.d(t,"OptimizerConstructors",(function(){return En})),n.d(t,"RMSPropOptimizer",(function(){return An})),n.d(t,"SGDOptimizer",(function(){return $n})),n.d(t,"Tensor",(function(){return te.a})),n.d(t,"TensorBuffer",(function(){return te.b})),n.d(t,"Variable",(function(){return te.c})),n.d(t,"Rank",(function(){return Nn.a})),n.d(t,"sumOutType",(function(){return Nn.b})),n.d(t,"upcastType",(function(){return Nn.c})),n.d(t,"abs",(function(){return _n})),n.d(t,"acos",(function(){return Rn})),n.d(t,"acosh",(function(){return Fn})),n.d(t,"add",(function(){return nn})),n.d(t,"addN",(function(){return Mn})),n.d(t,"all",(function(){return Dn})),n.d(t,"any",(function(){return Pn})),n.d(t,"argMax",(function(){return Bn})),n.d(t,"argMin",(function(){return jn})),n.d(t,"asin",(function(){return Ln})),n.d(t,"asinh",(function(){return zn})),n.d(t,"atan",(function(){return Wn})),n.d(t,"atan2",(function(){return Un})),n.d(t,"atanh",(function(){return Gn})),n.d(t,"avgPool",(function(){return ir})),n.d(t,"avgPool3d",(function(){return or})),n.d(t,"basicLSTMCell",(function(){return pr})),n.d(t,"batchToSpaceND",(function(){return hr})),n.d(t,"batchNorm",(function(){return fr})),n.d(t,"batchNorm2d",(function(){return mr})),n.d(t,"batchNorm3d",(function(){return br})),n.d(t,"batchNorm4d",(function(){return gr})),n.d(t,"bincount",(function(){return xr})),n.d(t,"broadcastArgs",(function(){return yr})),n.d(t,"broadcastTo",(function(){return kr})),n.d(t,"buffer",(function(){return ne})),n.d(t,"cast",(function(){return ie})),n.d(t,"ceil",(function(){return vr})),n.d(t,"clipByValue",(function(){return wr})),n.d(t,"clone",(function(){return oe})),n.d(t,"complex",(function(){return tt.a})),n.d(t,"concat",(function(){return ur})),n.d(t,"concat1d",(function(){return Ir})),n.d(t,"concat2d",(function(){return Sr})),n.d(t,"concat3d",(function(){return _r})),n.d(t,"concat4d",(function(){return Cr})),n.d(t,"conv1d",(function(){return $r})),n.d(t,"conv2d",(function(){return Or})),n.d(t,"conv2dTranspose",(function(){return Ar})),n.d(t,"conv3d",(function(){return Er})),n.d(t,"conv3dTranspose",(function(){return Rr})),n.d(t,"cos",(function(){return Fr})),n.d(t,"cosh",(function(){return Mr})),n.d(t,"cumprod",(function(){return Dr})),n.d(t,"cumsum",(function(){return Pr})),n.d(t,"denseBincount",(function(){return Br})),n.d(t,"depthToSpace",(function(){return jr})),n.d(t,"depthwiseConv2d",(function(){return Lr})),n.d(t,"diag",(function(){return zr})),n.d(t,"dilation2d",(function(){return Wr})),n.d(t,"div",(function(){return an})),n.d(t,"divNoNan",(function(){return Vr})),n.d(t,"dot",(function(){return Hr})),n.d(t,"einsum",(function(){return qr})),n.d(t,"elu",(function(){return Kr})),n.d(t,"equal",(function(){return Ur})),n.d(t,"erf",(function(){return Xr})),n.d(t,"euclideanNorm",(function(){return ca})),n.d(t,"exp",(function(){return la})),n.d(t,"expandDims",(function(){return da})),n.d(t,"expm1",(function(){return pa})),n.d(t,"eye",(function(){return fa})),n.d(t,"fill",(function(){return kn})),n.d(t,"floor",(function(){return ma})),n.d(t,"floorDiv",(function(){return rn})),n.d(t,"gather",(function(){return ba})),n.d(t,"greater",(function(){return ga})),n.d(t,"greaterEqual",(function(){return xa})),n.d(t,"imag",(function(){return nt})),n.d(t,"isFinite",(function(){return ya})),n.d(t,"isInf",(function(){return ka})),n.d(t,"isNaN",(function(){return va})),n.d(t,"leakyRelu",(function(){return wa})),n.d(t,"less",(function(){return Ia})),n.d(t,"lessEqual",(function(){return Sa})),n.d(t,"linspace",(function(){return _a})),n.d(t,"localResponseNormalization",(function(){return Ca})),n.d(t,"log",(function(){return Oa})),n.d(t,"log1p",(function(){return $a})),n.d(t,"logSigmoid",(function(){return Aa})),n.d(t,"logSoftmax",(function(){return Ea})),n.d(t,"logSumExp",(function(){return Na})),n.d(t,"logicalAnd",(function(){return Ra})),n.d(t,"logicalNot",(function(){return Fa})),n.d(t,"logicalOr",(function(){return Ma})),n.d(t,"logicalXor",(function(){return Da})),n.d(t,"lowerBound",(function(){return ja})),n.d(t,"matMul",(function(){return Ne})),n.d(t,"max",(function(){return aa})),n.d(t,"maxPool",(function(){return La})),n.d(t,"maxPool3d",(function(){return za})),n.d(t,"maxPoolWithArgmax",(function(){return Wa})),n.d(t,"maximum",(function(){return Cn})),n.d(t,"mean",(function(){return Ua})),n.d(t,"meshgrid",(function(){return Ha})),n.d(t,"min",(function(){return sa})),n.d(t,"minimum",(function(){return qa})),n.d(t,"mirrorPad",(function(){return Ka})),n.d(t,"mod",(function(){return Xa})),n.d(t,"moments",(function(){return Ya})),n.d(t,"mul",(function(){return sn})),n.d(t,"multiRNNCell",(function(){return Qa})),n.d(t,"multinomial",(function(){return Za})),n.d(t,"neg",(function(){return rt})),n.d(t,"notEqual",(function(){return Ja})),n.d(t,"oneHot",(function(){return Re})),n.d(t,"ones",(function(){return Va})),n.d(t,"onesLike",(function(){return es})),n.d(t,"outerProduct",(function(){return ts})),n.d(t,"pad",(function(){return ns})),n.d(t,"pad1d",(function(){return rs})),n.d(t,"pad2d",(function(){return as})),n.d(t,"pad3d",(function(){return ss})),n.d(t,"pad4d",(function(){return is})),n.d(t,"pool",(function(){return us})),n.d(t,"pow",(function(){return wn})),n.d(t,"prelu",(function(){return cs})),n.d(t,"print",(function(){return ue})),n.d(t,"prod",(function(){return ls})),n.d(t,"rand",(function(){return ds})),n.d(t,"randomGamma",(function(){return bs})),n.d(t,"randomNormal",(function(){return gs})),n.d(t,"randomStandardNormal",(function(){return xs})),n.d(t,"randomUniform",(function(){return ys})),n.d(t,"range",(function(){return ks})),n.d(t,"real",(function(){return at})),n.d(t,"reciprocal",(function(){return vs})),n.d(t,"relu",(function(){return ws})),n.d(t,"relu6",(function(){return Is})),n.d(t,"reshape",(function(){return sr})),n.d(t,"reverse",(function(){return Ss})),n.d(t,"reverse1d",(function(){return _s})),n.d(t,"reverse2d",(function(){return Cs})),n.d(t,"reverse3d",(function(){return Os})),n.d(t,"reverse4d",(function(){return $s})),n.d(t,"round",(function(){return Ts})),n.d(t,"rsqrt",(function(){return As})),n.d(t,"scalar",(function(){return gn})),n.d(t,"selu",(function(){return Es})),n.d(t,"separableConv2d",(function(){return Ns})),n.d(t,"setdiff1dAsync",(function(){return Rs})),n.d(t,"sigmoid",(function(){return cr})),n.d(t,"sign",(function(){return Fs})),n.d(t,"sin",(function(){return Ms})),n.d(t,"sinh",(function(){return Ds})),n.d(t,"slice",(function(){return lr})),n.d(t,"slice1d",(function(){return Ps})),n.d(t,"slice2d",(function(){return Bs})),n.d(t,"slice3d",(function(){return js})),n.d(t,"slice4d",(function(){return Ls})),n.d(t,"softmax",(function(){return zs})),n.d(t,"softplus",(function(){return Ta})),n.d(t,"spaceToBatchND",(function(){return os})),n.d(t,"fft",(function(){return Ws})),n.d(t,"ifft",(function(){return Us})),n.d(t,"irfft",(function(){return Gs})),n.d(t,"rfft",(function(){return Hs})),n.d(t,"split",(function(){return Vs})),n.d(t,"sqrt",(function(){return on})),n.d(t,"square",(function(){return un})),n.d(t,"squaredDifference",(function(){return qs})),n.d(t,"squeeze",(function(){return Ks})),n.d(t,"stack",(function(){return Xs})),n.d(t,"step",(function(){return Ys})),n.d(t,"stridedSlice",(function(){return Qs})),n.d(t,"sub",(function(){return In})),n.d(t,"sum",(function(){return ia})),n.d(t,"tan",(function(){return Zs})),n.d(t,"tanh",(function(){return dr})),n.d(t,"tensor",(function(){return Js.a})),n.d(t,"tensor1d",(function(){return ei})),n.d(t,"tensor2d",(function(){return ti})),n.d(t,"tensor3d",(function(){return pt})),n.d(t,"tensor4d",(function(){return ni})),n.d(t,"tensor5d",(function(){return ri})),n.d(t,"tensor6d",(function(){return ai})),n.d(t,"tile",(function(){return ha})),n.d(t,"topk",(function(){return si})),n.d(t,"truncatedNormal",(function(){return ii})),n.d(t,"unique",(function(){return oi})),n.d(t,"unsortedSegmentSum",(function(){return ui})),n.d(t,"unstack",(function(){return ci})),n.d(t,"upperBound",(function(){return li})),n.d(t,"variable",(function(){return di})),n.d(t,"where",(function(){return Gr})),n.d(t,"whereAsync",(function(){return hi})),n.d(t,"zeros",(function(){return Ga})),n.d(t,"zerosLike",(function(){return cn})),n.d(t,"booleanMaskAsync",(function(){return fi})),n.d(t,"transpose",(function(){return st})),n.d(t,"norm",(function(){return ua})),n.d(t,"movingAverage",(function(){return mi})),n.d(t,"scatterND",(function(){return bi})),n.d(t,"searchSorted",(function(){return Ba})),n.d(t,"sparseToDense",(function(){return gi})),n.d(t,"gatherND",(function(){return xi})),n.d(t,"dropout",(function(){return yi})),n.d(t,"enclosingPowerOfTwo",(function(){return ki})),n.d(t,"cosineWindow",(function(){return vi})),n.d(t,"inTopKAsync",(function(){return wi})),n.d(t,"op",(function(){return se.b})),n.d(t,"OP_SCOPE_SUFFIX",(function(){return se.a})),n.d(t,"image",(function(){return Eo})),n.d(t,"linalg",(function(){return No})),n.d(t,"losses",(function(){return Ro})),n.d(t,"spectral",(function(){return To})),n.d(t,"fused",(function(){return p})),n.d(t,"signal",(function(){return Ao})),n.d(t,"sparse",(function(){return Fo})),n.d(t,"string",(function(){return Mo})),n.d(t,"Reduction",(function(){return po})),n.d(t,"train",(function(){return Do})),n.d(t,"enableProdMode",(function(){return Fe})),n.d(t,"enableDebugMode",(function(){return Me})),n.d(t,"disableDeprecationWarnings",(function(){return De})),n.d(t,"deprecationWarn",(function(){return Pe})),n.d(t,"disposeVariables",(function(){return Be})),n.d(t,"engine",(function(){return je})),n.d(t,"memory",(function(){return Le})),n.d(t,"profile",(function(){return ze})),n.d(t,"tidy",(function(){return We})),n.d(t,"dispose",(function(){return Ue})),n.d(t,"keep",(function(){return Ge})),n.d(t,"time",(function(){return Ve})),n.d(t,"setBackend",(function(){return He})),n.d(t,"ready",(function(){return qe})),n.d(t,"getBackend",(function(){return Ke})),n.d(t,"removeBackend",(function(){return Xe})),n.d(t,"findBackend",(function(){return Ye})),n.d(t,"findBackendFactory",(function(){return Qe})),n.d(t,"registerBackend",(function(){return Ze})),n.d(t,"backend",(function(){return Je})),n.d(t,"setPlatform",(function(){return et})),n.d(t,"getKernel",(function(){return lt.c})),n.d(t,"getGradient",(function(){return lt.b})),n.d(t,"getKernelsForBackend",(function(){return lt.d})),n.d(t,"registerKernel",(function(){return lt.f})),n.d(t,"registerGradient",(function(){return lt.e})),n.d(t,"unregisterKernel",(function(){return lt.h})),n.d(t,"unregisterGradient",(function(){return lt.g})),n.d(t,"copyRegisteredKernels",(function(){return lt.a})),n.d(t,"customGrad",(function(){return mn})),n.d(t,"grad",(function(){return ln})),n.d(t,"grads",(function(){return dn})),n.d(t,"valueAndGrad",(function(){return pn})),n.d(t,"valueAndGrads",(function(){return hn})),n.d(t,"variableGrads",(function(){return fn})),n.d(t,"Environment",(function(){return g.b})),n.d(t,"env",(function(){return g.c})),n.d(t,"ENV",(function(){return g.a})),n.d(t,"version_core",(function(){return tn})),n.d(t,"nextFrame",(function(){return Po.a})),n.d(t,"browser",(function(){return i})),n.d(t,"io",(function(){return r})),n.d(t,"math",(function(){return a})),n.d(t,"serialization",(function(){return l})),n.d(t,"test_util",(function(){return d})),n.d(t,"util",(function(){return Ut})),n.d(t,"backend_util",(function(){return f})),n.d(t,"broadcast_util",(function(){return s})),n.d(t,"tensor_util",(function(){return Ee})),n.d(t,"slice_util",(function(){return c})),n.d(t,"gather_util",(function(){return o})),n.d(t,"scatter_util",(function(){return u})),n.d(t,"device_util",(function(){return Pu})),n.d(t,"kernel_impls",(function(){return m})),n.d(t,"KernelBackend",(function(){return Bu.b})),n.d(t,"DataStorage",(function(){return Bu.a})),n.d(t,"Abs",(function(){return re.a})),n.d(t,"Acos",(function(){return re.b})),n.d(t,"Acosh",(function(){return re.c})),n.d(t,"Add",(function(){return re.d})),n.d(t,"AddN",(function(){return re.e})),n.d(t,"All",(function(){return re.f})),n.d(t,"Any",(function(){return re.g})),n.d(t,"ArgMax",(function(){return re.h})),n.d(t,"ArgMin",(function(){return re.i})),n.d(t,"Asin",(function(){return re.j})),n.d(t,"Asinh",(function(){return re.k})),n.d(t,"Atan",(function(){return re.l})),n.d(t,"Atanh",(function(){return re.n})),n.d(t,"Atan2",(function(){return re.m})),n.d(t,"AvgPool",(function(){return re.o})),n.d(t,"AvgPoolGrad",(function(){return re.r})),n.d(t,"AvgPool3D",(function(){return re.p})),n.d(t,"AvgPool3DGrad",(function(){return re.q})),n.d(t,"BatchMatMul",(function(){return re.s})),n.d(t,"BatchToSpaceND",(function(){return re.t})),n.d(t,"Bincount",(function(){return re.u})),n.d(t,"BroadcastTo",(function(){return re.w})),n.d(t,"BroadcastArgs",(function(){return re.v})),n.d(t,"Cast",(function(){return re.x})),n.d(t,"Ceil",(function(){return re.y})),n.d(t,"ClipByValue",(function(){return re.z})),n.d(t,"Complex",(function(){return re.A})),n.d(t,"ComplexAbs",(function(){return re.B})),n.d(t,"Concat",(function(){return re.C})),n.d(t,"Conv2D",(function(){return re.D})),n.d(t,"Conv2DBackpropFilter",(function(){return re.E})),n.d(t,"Conv2DBackpropInput",(function(){return re.F})),n.d(t,"Conv3D",(function(){return re.G})),n.d(t,"Conv3DBackpropFilterV2",(function(){return re.H})),n.d(t,"Conv3DBackpropInputV2",(function(){return re.I})),n.d(t,"Cos",(function(){return re.J})),n.d(t,"Cosh",(function(){return re.K})),n.d(t,"Cumprod",(function(){return re.M})),n.d(t,"Cumsum",(function(){return re.N})),n.d(t,"CropAndResize",(function(){return re.L})),n.d(t,"DenseBincount",(function(){return re.O})),n.d(t,"DepthToSpace",(function(){return re.P})),n.d(t,"DepthwiseConv2dNative",(function(){return re.Q})),n.d(t,"DepthwiseConv2dNativeBackpropFilter",(function(){return re.R})),n.d(t,"DepthwiseConv2dNativeBackpropInput",(function(){return re.S})),n.d(t,"Diag",(function(){return re.T})),n.d(t,"Dilation2D",(function(){return re.U})),n.d(t,"Dilation2DBackpropInput",(function(){return re.W})),n.d(t,"Dilation2DBackpropFilter",(function(){return re.V})),n.d(t,"RealDiv",(function(){return re.pc})),n.d(t,"Einsum",(function(){return re.X})),n.d(t,"Elu",(function(){return re.Y})),n.d(t,"EluGrad",(function(){return re.Z})),n.d(t,"Erf",(function(){return re.bb})),n.d(t,"Equal",(function(){return re.ab})),n.d(t,"Exp",(function(){return re.cb})),n.d(t,"ExpandDims",(function(){return re.db})),n.d(t,"Expm1",(function(){return re.eb})),n.d(t,"FFT",(function(){return re.fb})),n.d(t,"Fill",(function(){return re.gb})),n.d(t,"FlipLeftRight",(function(){return re.hb})),n.d(t,"Floor",(function(){return re.ib})),n.d(t,"FloorDiv",(function(){return re.jb})),n.d(t,"FusedBatchNorm",(function(){return re.lb})),n.d(t,"GatherV2",(function(){return re.pb})),n.d(t,"GatherNd",(function(){return re.ob})),n.d(t,"Greater",(function(){return re.qb})),n.d(t,"GreaterEqual",(function(){return re.rb})),n.d(t,"Identity",(function(){return re.tb})),n.d(t,"IFFT",(function(){return re.sb})),n.d(t,"Imag",(function(){return re.ub})),n.d(t,"IsFinite",(function(){return re.vb})),n.d(t,"IsInf",(function(){return re.wb})),n.d(t,"IsNan",(function(){return re.xb})),n.d(t,"LeakyRelu",(function(){return re.Ab})),n.d(t,"Less",(function(){return re.Bb})),n.d(t,"LessEqual",(function(){return re.Cb})),n.d(t,"LinSpace",(function(){return re.Db})),n.d(t,"Log",(function(){return re.Eb})),n.d(t,"Log1p",(function(){return re.Fb})),n.d(t,"LogicalAnd",(function(){return re.Hb})),n.d(t,"LogicalNot",(function(){return re.Ib})),n.d(t,"LogicalOr",(function(){return re.Jb})),n.d(t,"LogicalXor",(function(){return re.Kb})),n.d(t,"LogSoftmax",(function(){return re.Gb})),n.d(t,"LowerBound",(function(){return re.Lb})),n.d(t,"LRN",(function(){return re.yb})),n.d(t,"LRNGrad",(function(){return re.zb})),n.d(t,"Max",(function(){return re.Mb})),n.d(t,"Maximum",(function(){return re.Sb})),n.d(t,"MaxPool",(function(){return re.Nb})),n.d(t,"MaxPoolGrad",(function(){return re.Qb})),n.d(t,"MaxPool3D",(function(){return re.Ob})),n.d(t,"MaxPool3DGrad",(function(){return re.Pb})),n.d(t,"MaxPoolWithArgmax",(function(){return re.Rb})),n.d(t,"Mean",(function(){return re.Tb})),n.d(t,"Min",(function(){return re.Ub})),n.d(t,"Minimum",(function(){return re.Vb})),n.d(t,"MirrorPad",(function(){return re.Wb})),n.d(t,"Mod",(function(){return re.Xb})),n.d(t,"Multinomial",(function(){return re.Yb})),n.d(t,"Multiply",(function(){return re.Zb})),n.d(t,"Neg",(function(){return re.ac})),n.d(t,"NotEqual",(function(){return re.ec})),n.d(t,"NonMaxSuppressionV3",(function(){return re.bc})),n.d(t,"NonMaxSuppressionV4",(function(){return re.cc})),n.d(t,"NonMaxSuppressionV5",(function(){return re.dc})),n.d(t,"OnesLike",(function(){return re.gc})),n.d(t,"OneHot",(function(){return re.fc})),n.d(t,"Pack",(function(){return re.hc})),n.d(t,"PadV2",(function(){return re.ic})),n.d(t,"Pool",(function(){return re.jc})),n.d(t,"Pow",(function(){return re.kc})),n.d(t,"Prelu",(function(){return re.lc})),n.d(t,"Prod",(function(){return re.mc})),n.d(t,"Range",(function(){return re.nc})),n.d(t,"Real",(function(){return re.oc})),n.d(t,"Reciprocal",(function(){return re.qc})),n.d(t,"Relu",(function(){return re.rc})),n.d(t,"Reshape",(function(){return re.tc})),n.d(t,"ResizeNearestNeighbor",(function(){return re.wc})),n.d(t,"ResizeNearestNeighborGrad",(function(){return re.xc})),n.d(t,"ResizeBilinear",(function(){return re.uc})),n.d(t,"ResizeBilinearGrad",(function(){return re.vc})),n.d(t,"Relu6",(function(){return re.sc})),n.d(t,"Reverse",(function(){return re.yc})),n.d(t,"Round",(function(){return re.Ac})),n.d(t,"Rsqrt",(function(){return re.Bc})),n.d(t,"ScatterNd",(function(){return re.Cc})),n.d(t,"SearchSorted",(function(){return re.Dc})),n.d(t,"Select",(function(){return re.Ec})),n.d(t,"Selu",(function(){return re.Fc})),n.d(t,"Slice",(function(){return re.Kc})),n.d(t,"Sin",(function(){return re.Ic})),n.d(t,"Sinh",(function(){return re.Jc})),n.d(t,"Sign",(function(){return re.Hc})),n.d(t,"Sigmoid",(function(){return re.Gc})),n.d(t,"Softplus",(function(){return re.Mc})),n.d(t,"Sqrt",(function(){return re.Uc})),n.d(t,"Sum",(function(){return re.dd})),n.d(t,"SpaceToBatchND",(function(){return re.Nc})),n.d(t,"SplitV",(function(){return re.Tc})),n.d(t,"Softmax",(function(){return re.Lc})),n.d(t,"SparseFillEmptyRows",(function(){return re.Oc})),n.d(t,"SparseReshape",(function(){return re.Pc})),n.d(t,"SparseSegmentMean",(function(){return re.Qc})),n.d(t,"SparseSegmentSum",(function(){return re.Rc})),n.d(t,"SparseToDense",(function(){return re.Sc})),n.d(t,"SquaredDifference",(function(){return re.Wc})),n.d(t,"Square",(function(){return re.Vc})),n.d(t,"StridedSlice",(function(){return re.Yc})),n.d(t,"StringNGrams",(function(){return re.Zc})),n.d(t,"StringSplit",(function(){return re.ad})),n.d(t,"StringToHashBucketFast",(function(){return re.bd})),n.d(t,"Sub",(function(){return re.cd})),n.d(t,"Tan",(function(){return re.ed})),n.d(t,"Tanh",(function(){return re.fd})),n.d(t,"Tile",(function(){return re.gd})),n.d(t,"TopK",(function(){return re.hd})),n.d(t,"Transform",(function(){return re.id})),n.d(t,"Transpose",(function(){return re.jd})),n.d(t,"Unique",(function(){return re.kd})),n.d(t,"Unpack",(function(){return re.ld})),n.d(t,"UnsortedSegmentSum",(function(){return re.md})),n.d(t,"UpperBound",(function(){return re.nd})),n.d(t,"ZerosLike",(function(){return re.od})),n.d(t,"Step",(function(){return re.Xc})),n.d(t,"FromPixels",(function(){return re.kb})),n.d(t,"RotateWithOffset",(function(){return re.zc})),n.d(t,"_FusedMatMul",(function(){return re.pd})),n.d(t,"FusedConv2D",(function(){return re.mb})),n.d(t,"FusedDepthwiseConv2D",(function(){return re.nb}));var r={};n.r(r),n.d(r,"copyModel",(function(){return Z})),n.d(r,"listModels",(function(){return Y})),n.d(r,"moveModel",(function(){return J})),n.d(r,"removeModel",(function(){return Q})),n.d(r,"browserFiles",(function(){return he})),n.d(r,"browserHTTPRequest",(function(){return Ie})),n.d(r,"concatenateArrayBuffers",(function(){return x.d})),n.d(r,"decodeWeights",(function(){return x.e})),n.d(r,"encodeWeights",(function(){return x.f})),n.d(r,"fromMemory",(function(){return Oe})),n.d(r,"fromMemorySync",(function(){return $e})),n.d(r,"getLoadHandlers",(function(){return I})),n.d(r,"getModelArtifactsForJSON",(function(){return x.g})),n.d(r,"getModelArtifactsInfoForJSON",(function(){return x.h})),n.d(r,"getSaveHandlers",(function(){return w})),n.d(r,"http",(function(){return we})),n.d(r,"isHTTPScheme",(function(){return ke})),n.d(r,"loadWeights",(function(){return ge})),n.d(r,"registerLoadRouter",(function(){return v})),n.d(r,"registerSaveRouter",(function(){return k})),n.d(r,"weightsLoaderFactory",(function(){return xe})),n.d(r,"withSaveHandler",(function(){return Te})),n.d(r,"withSaveHandlerSync",(function(){return Ae}));var a={};n.r(a),n.d(a,"confusionMatrix",(function(){return it}));var s={};n.r(s),n.d(s,"getBroadcastDims",(function(){return ot})),n.d(s,"getReductionAxes",(function(){return ut})),n.d(s,"assertAndGetBroadcastShape",(function(){return ct}));var i={};n.r(i),n.d(i,"fromPixelsAsync",(function(){return bt})),n.d(i,"toPixels",(function(){return gt})),n.d(i,"fromPixels",(function(){return xt}));var o={};n.r(o),n.d(o,"prepareAndValidate",(function(){return yt}));var u={};n.r(u),n.d(u,"validateUpdateShape",(function(){return kt})),n.d(u,"validateInput",(function(){return vt})),n.d(u,"calculateShapes",(function(){return wt}));var c={};n.r(c),n.d(c,"assertParamsValid",(function(){return It})),n.d(c,"maskToAxes",(function(){return St})),n.d(c,"computeOutShape",(function(){return _t})),n.d(c,"stridesWithElidedDims",(function(){return Ct})),n.d(c,"getNormalizedAxes",(function(){return Tt})),n.d(c,"startIndicesWithElidedDims",(function(){return At})),n.d(c,"stopIndicesWithElidedDims",(function(){return Et})),n.d(c,"stridesForAxis",(function(){return Nt})),n.d(c,"startForAxis",(function(){return Rt})),n.d(c,"stopForAxis",(function(){return Ft})),n.d(c,"isSliceContinous",(function(){return Mt})),n.d(c,"computeFlatOffset",(function(){return Dt})),n.d(c,"parseSliceParams",(function(){return Pt})),n.d(c,"sliceInfo",(function(){return Bt}));var l={};n.r(l),n.d(l,"Serializable",(function(){return Lt})),n.d(l,"SerializationMap",(function(){return zt})),n.d(l,"registerClass",(function(){return Wt}));var d={};n.r(d),n.d(d,"TEST_EPSILON_FLOAT16",(function(){return Gt})),n.d(d,"expectArraysClose",(function(){return Vt})),n.d(d,"testEpsilon",(function(){return Ht})),n.d(d,"expectPromiseToFail",(function(){return Kt})),n.d(d,"expectArraysEqual",(function(){return Xt})),n.d(d,"expectNumbersClose",(function(){return Yt})),n.d(d,"expectValuesInRange",(function(){return Zt})),n.d(d,"expectArrayBuffersEqual",(function(){return Jt})),n.d(d,"encodeStrings",(function(){return en}));var p={};n.r(p),n.d(p,"conv2d",(function(){return $i})),n.d(p,"depthwiseConv2d",(function(){return Ei})),n.d(p,"matMul",(function(){return Ni}));var h={};n.r(h),n.d(h,"segOpComputeOptimalWindowSize",(function(){return Nu})),n.d(h,"computeOutShape",(function(){return Ru})),n.d(h,"collectGatherOpShapeInfo",(function(){return Fu}));var f={};n.r(f),n.d(f,"axesAreInnerMostDims",(function(){return Yr})),n.d(f,"combineLocations",(function(){return Qr})),n.d(f,"computeOutAndReduceShapes",(function(){return Zr})),n.d(f,"expandShapeToKeepDim",(function(){return Jr})),n.d(f,"assertAxesAreInnerMostDims",(function(){return ea})),n.d(f,"getAxesPermutation",(function(){return ta})),n.d(f,"getUndoAxesPermutation",(function(){return na})),n.d(f,"getInnerMostAxes",(function(){return ra})),n.d(f,"getBroadcastDims",(function(){return ot})),n.d(f,"getReductionAxes",(function(){return ut})),n.d(f,"assertAndGetBroadcastShape",(function(){return ct})),n.d(f,"assertParamsConsistent",(function(){return Bo})),n.d(f,"computeOutShape",(function(){return jo})),n.d(f,"computeDilation2DInfo",(function(){return Vn})),n.d(f,"computePool2DInfo",(function(){return Hn})),n.d(f,"computePool3DInfo",(function(){return qn})),n.d(f,"computeConv2DInfo",(function(){return Kn})),n.d(f,"computeConv3DInfo",(function(){return Xn})),n.d(f,"computeDefaultPad",(function(){return Yn})),n.d(f,"tupleValuesAreOne",(function(){return tr})),n.d(f,"eitherStridesOrDilationsAreOne",(function(){return nr})),n.d(f,"convertConv2DDataFormat",(function(){return rr})),n.d(f,"checkPadOnDimRoundingMode",(function(){return ar})),n.d(f,"getFusedDyActivation",(function(){return Si})),n.d(f,"getFusedBiasGradient",(function(){return _i})),n.d(f,"applyActivation",(function(){return Ci})),n.d(f,"shouldFuse",(function(){return Oi})),n.d(f,"PARALLELIZE_THRESHOLD",(function(){return Lo})),n.d(f,"computeOptimalWindowSize",(function(){return zo})),n.d(f,"slice_util",(function(){return c})),n.d(f,"upcastType",(function(){return Nn.c})),n.d(f,"getImageCenter",(function(){return Wo})),n.d(f,"getReshaped",(function(){return Uo})),n.d(f,"getPermuted",(function(){return Go})),n.d(f,"getReshapedPermuted",(function(){return Vo})),n.d(f,"getSliceBeginCoords",(function(){return Ho})),n.d(f,"getSliceSize",(function(){return qo})),n.d(f,"prepareAndValidate",(function(){return yt})),n.d(f,"validateUpdateShape",(function(){return kt})),n.d(f,"validateInput",(function(){return vt})),n.d(f,"calculateShapes",(function(){return wt})),n.d(f,"SELU_SCALEALPHA",(function(){return Ko})),n.d(f,"SELU_SCALE",(function(){return Xo})),n.d(f,"ERF_P",(function(){return Yo})),n.d(f,"ERF_A1",(function(){return Qo})),n.d(f,"ERF_A2",(function(){return Zo})),n.d(f,"ERF_A3",(function(){return Jo})),n.d(f,"ERF_A4",(function(){return eu})),n.d(f,"ERF_A5",(function(){return tu})),n.d(f,"warn",(function(){return nu.b})),n.d(f,"log",(function(){return nu.a})),n.d(f,"mergeRealAndImagArrays",(function(){return ru})),n.d(f,"splitRealAndImagArrays",(function(){return au})),n.d(f,"complexWithEvenIndex",(function(){return su})),n.d(f,"complexWithOddIndex",(function(){return iu})),n.d(f,"getComplexWithIndex",(function(){return ou})),n.d(f,"assignToTypedArray",(function(){return uu})),n.d(f,"exponents",(function(){return cu})),n.d(f,"exponent",(function(){return lu})),n.d(f,"decodeEinsumEquation",(function(){return hu})),n.d(f,"getEinsumPermutation",(function(){return fu})),n.d(f,"checkEinsumDimSizes",(function(){return mu})),n.d(f,"getEinsumComputePath",(function(){return bu})),n.d(f,"isIdentityPermutation",(function(){return gu})),n.d(f,"prepareSplitSize",(function(){return yu})),n.d(f,"getSparseFillEmptyRowsIndicesDenseShapeMismatch",(function(){return ku})),n.d(f,"getSparseFillEmptyRowsNegativeIndexErrorMessage",(function(){return vu})),n.d(f,"getSparseFillEmptyRowsOutOfRangeIndexErrorMessage",(function(){return wu})),n.d(f,"getSparseReshapeMultipleNegativeOneOutputDimErrorMessage",(function(){return Iu})),n.d(f,"getSparseReshapeNegativeOutputDimErrorMessage",(function(){return Su})),n.d(f,"getSparseReshapeEmptyTensorZeroOutputDimErrorMessage",(function(){return _u})),n.d(f,"getSparseReshapeInputOutputMultipleErrorMessage",(function(){return Cu})),n.d(f,"getSparseReshapeInputOutputMismatchErrorMessage",(function(){return Ou})),n.d(f,"getSparseSegmentReductionNegativeSegmentIdsErrorMessage",(function(){return $u})),n.d(f,"getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage",(function(){return Tu})),n.d(f,"getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage",(function(){return Au})),n.d(f,"getSparseSegmentReductionIndicesOutOfRangeErrorMessage",(function(){return Eu})),n.d(f,"segment_util",(function(){return h})),n.d(f,"fromUint8ToStringArray",(function(){return Mu})),n.d(f,"fromStringArrayToUint8",(function(){return Du}));var m={};n.r(m),n.d(m,"nonMaxSuppressionV3Impl",(function(){return Vi})),n.d(m,"nonMaxSuppressionV4Impl",(function(){return Hi})),n.d(m,"nonMaxSuppressionV5Impl",(function(){return qi})),n.d(m,"whereImpl",(function(){return pi}));var b=n(3),g=(n(50),n(9)),x=n(17);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class y{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==y.instance&&(y.instance=new y),y.instance}static registerSaveRouter(e){y.getInstance().saveRouters.push(e)}static registerLoadRouter(e){y.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return y.getHandlers(e,"save")}static getLoadHandlers(e,t){return y.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?y.getInstance().loadRouters:y.getInstance().saveRouters).forEach((t=>{const a=t(e,n);null!==a&&r.push(a)})),r}}const k=e=>y.registerSaveRouter(e),v=e=>y.registerLoadRouter(e),w=e=>y.getSaveHandlers(e),I=(e,t)=>y.getLoadHandlers(e,t)
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */,S="tensorflowjs",_="models_store",C="model_info_store";function O(){if(!Object(g.c)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function $(e){const t=e.result;t.createObjectStore(_,{keyPath:"modelPath"}),t.createObjectStore(C,{keyPath:"modelPath"})}class T{constructor(e){if(this.indexedDB=O(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(S,1);r.onupgradeneeded=()=>$(r),r.onsuccess=()=>{const a=r.result;if(null==t){const t=a.transaction(_,"readonly"),r=t.objectStore(_).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{const r=Object(x.h)(t),s=a.transaction(C,"readwrite");let i=s.objectStore(C);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;o.onsuccess=()=>{u=a.transaction(_,"readwrite");const o=u.objectStore(_).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});o.onsuccess=()=>e({modelArtifactsInfo:r}),o.onerror=e=>{i=s.objectStore(C);const t=i.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(o.error)),t.onerror=e=>(a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)}))}}T.URL_SCHEME="indexeddb://";const A=e=>{return Object(g.c)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(T.URL_SCHEME)?(t=e.slice(T.URL_SCHEME.length),new T(t)):null;var t};y.registerSaveRouter(A),y.registerLoadRouter(A);class E{constructor(){this.indexedDB=O()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(S,1);n.onupgradeneeded=()=>$(n),n.onsuccess=()=>{const r=n.result,a=r.transaction(C,"readonly"),s=a.objectStore(C).getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(T.URL_SCHEME)?t.slice(T.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(S,1);r.onupgradeneeded=()=>$(r),r.onsuccess=()=>{const a=r.result,s=a.transaction(C,"readwrite"),i=s.objectStore(C),o=i.get(e);let u;o.onsuccess=()=>{if(null==o.result)return a.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=i.delete(e),s=()=>{u=a.transaction(_,"readwrite");const r=u.objectStore(_).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=s,r.onerror=e=>(s(),a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}},r.onerror=e=>n(r.error)}))}}var N=n(15);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R="/",F="tensorflowjs_models",M="info",D="model_topology",P="weight_specs",B="weight_data",j="model_metadata";function L(e){return{info:[F,e,M].join(R),topology:[F,e,D].join(R),weightSpecs:[F,e,P].join(R),weightData:[F,e,B].join(R),modelMetadata:[F,e,j].join(R)}}function z(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function W(e){const t=e.split(R);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(R)}class U{constructor(e){if(!Object(g.c)().getBool("IS_BROWSER")||"undefined"==typeof window||"undefined"==typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=L(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=Object(x.h)(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,Object(x.a)(e.weightData));const a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:r}}catch(e){throw z(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=Object(x.b)(s),t}}U.URL_SCHEME="localstorage://";const G=e=>{return Object(g.c)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(U.URL_SCHEME)?(t=e.slice(U.URL_SCHEME.length),new U(t)):null;var t};y.registerSaveRouter(G),y.registerLoadRouter(G);class V{constructor(){Object(N.b)(Object(g.c)().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),Object(N.b)("undefined"==typeof window||"undefined"!=typeof window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=F+R,n=R+M;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);if(a.startsWith(t)&&a.endsWith(n)){e[W(a)]=JSON.parse(this.LS.getItem(a))}}return e}async removeModel(e){var t;const n=L(e=(t=e).startsWith(U.URL_SCHEME)?t.slice(U.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return z(n),r}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H="://";class q{constructor(){this.managers={}}static getInstance(){return null==q.instance&&(q.instance=new q),q.instance}static registerManager(e,t){Object(N.b)(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(H)&&(e=e.slice(0,e.indexOf(H))),Object(N.b)(e.length>0,(()=>"scheme must not be an empty string."));const n=q.getInstance();Object(N.b)(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=q.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(q.getInstance().managers)}}function K(e){if(-1===e.indexOf(H))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${q.getSchemes().join(",")}`);return{scheme:e.split(H)[0],path:e.split(H)[1]}}async function X(e,t,n=!1){Object(N.b)(e!==t,(()=>`Old path and new path are the same: '${e}'`));const r=y.getLoadHandlers(e);Object(N.b)(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),Object(N.b)(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));const a=r[0],s=y.getSaveHandlers(t);Object(N.b)(s.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),Object(N.b)(s.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));const i=s[0],o=K(e).scheme,u=K(e).path,c=o===K(e).scheme,l=await a.load();n&&c&&await q.getManager(o).removeModel(u);const d=await i.save(l);return n&&!c&&await q.getManager(o).removeModel(u),d.modelArtifactsInfo}async function Y(){const e=q.getSchemes(),t={};for(const n of e){const e=await q.getManager(n).listModels();for(const r in e){t[n+H+r]=e[r]}}return t}async function Q(e){const t=K(e);return q.getManager(t.scheme).removeModel(t.path)}async function Z(e,t){return X(e,t,!1)}async function J(e,t){return X(e,t,!0)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ee{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(Object(g.c)().get("IS_BROWSER")){Object(g.c)().setPlatform("browser",new ee);try{q.registerManager(U.URL_SCHEME,new V)}catch(e){}try{q.registerManager(T.URL_SCHEME,new E)}catch(e){}}n(108);var te=n(14);
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ne(e,t="float32",n){return t=t||"float32",N.c(e),new te.b(e,t,n)}var re=n(4),ae=n(1),se=n(2);const ie=Object(se.b)({cast_:
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t){const n=Object(ae.a)(e,"x","cast");if(!N.B(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},a={dtype:t};return b.a.runKernel(re.x,r,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oe=Object(se.b)({clone_:function(e){const t={x:Object(ae.a)(e,"x","clone","string_or_numeric")};return b.a.runKernel(re.tb,t)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ue(e,t=!1){console.log(e.toString(t))}
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(b.b)();const ce={buffer:ne,cast:ie,clone:oe,print:ue};Object(te.e)(ce);function le(e){return new Promise((e=>setTimeout(e))).then(e)}class de{constructor(e){if(!Object(g.c)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(de.URL_SCHEME)&&(e=e.slice(de.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r=Object(x.i)(e,n),a=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),s=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(s.download=this.modelJsonFileName,s.href=a,await le((()=>s.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await le((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Object(x.h)(e)}}}}de.URL_SCHEME="downloads://";class pe{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),a=r.modelTopology;if(null==a)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:a});const s=Object(x.g)(r,(e=>this.loadWeights(e)));e(s)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const r of e)t.push(...r.weights),n.push(...r.paths);const r=this.checkManifestAndWeightFiles(e),a=n.map((e=>this.loadWeightsFile(e,r[e])));return Promise.all(a).then((e=>[t,Object(x.d)(e)]))}loadWeightsFile(e,t){return new Promise(((n,r)=>{const a=new FileReader;a.onload=e=>{const t=e.target.result;n(t)},a.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),a.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>Object(x.c)(e.name))),r={};for(const a of e)a.paths.forEach((e=>{const a=Object(x.c)(e);if(-1!==t.indexOf(a))throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(t.push(a),-1===n.indexOf(a))throw new Error(`Weight file with basename '${a}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(a)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}function he(e){return new pe(e)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fe(e,t,n,r){!function(e){Object(N.b)(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){Object(N.b)(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),Object(N.b)(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),Object(N.b)(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let a=0;return Promise.all(e.map((s=>(s.then((s=>{const i=n+ ++a/e.length*(r-n);return t(i),s})),s))))}y.registerSaveRouter((e=>Object(g.c)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(de.URL_SCHEME)?function(e="model"){return new de(e)}(e.slice(de.URL_SCHEME.length)):null));var me=n(52);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function be(e,t){null==t&&(t={});const n=null==t.fetchFunc?Object(g.c)().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),a=(null==t.onProgress?await Promise.all(r):await fe(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(a):await fe(a,t.onProgress,.5,1)}async function ge(e,t="",n,r){return xe((e=>be(e,{requestInit:r})))(e,t,n)}function xe(e){return async(t,n="",r)=>{const a=t.map((()=>!1)),s={},i=null!=r?r.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const u="quantization"in e?e.quantization.dtype:e.dtype,c=me.a[u]*N.O(e.shape),l=()=>{a[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:c})};null!=r?r.forEach(((t,n)=>{t===e.name&&(l(),i[n]=!0)})):l(),o.push(e.name),n+=c}))})),!i.every((e=>e))){const e=r.filter(((e,t)=>!i[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}const u=a.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),c=[];u.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;c.push(t)}))}));const l=await e(c),d={};let p=0;return u.forEach((e=>{const n=t[e].paths.length;let r=0;for(let e=0;e<n;e++)r+=l[p+e].byteLength;const a=new ArrayBuffer(r),i=new Uint8Array(a);let o=0;for(let e=0;e<n;e++){const t=new Uint8Array(l[p+e]);i.set(t,o),o+=t.byteLength}s[e].forEach((e=>{const t=a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),n=Object(x.e)(t,[e.manifestEntry]);for(const e in n)d[e]=n[e]})),p+=n})),d}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ye{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(Object(N.b)("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=Object(g.c)().platform.fetch,Object(N.b)(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&Object(N.b)(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r=Object(x.i)(e,n);t.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:Object(x.h)(e),responses:[a]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${a.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Object(x.g)(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),a=n>t?e.substring(n):"";return[r+"/",a]}(t),a=this.weightPathPrefix||n,s=[];for(const t of e)s.push(...t.weights);const i=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(a+e+r);this.weightUrlConverter&&i.push(...await Promise.all(o));const u=await be(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[s,Object(x.d)(u)]}}function ke(e){return null!=e.match(ye.URL_SCHEME_REGEX)}ye.URL_SCHEME_REGEX=/^https?:\/\//;const ve=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>ke(e))):ke(e),n)return we(e,t)}return null};function we(e,t){return new ye(e,t)}function Ie(e,t){return we(e,t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */y.registerSaveRouter(ve),y.registerLoadRouter(ve);class Se{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class _e{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class Ce{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function Oe(e,t,n,r){const a=arguments;return new Ce($e(...a))}function $e(e,t,n,r){if(1===arguments.length){return null!=e.modelTopology||null!=e.weightSpecs?new Se(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Se({modelTopology:e}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Se({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r})}function Te(e){return new _e(e)}function Ae(e){return new _e(e)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Ee=n(10);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ne=Object(se.b)({matMul_:function(e,t,n=!1,r=!1){let a=Object(ae.a)(e,"a","matMul"),s=Object(ae.a)(t,"b","matMul");[a,s]=Object(Ee.makeTypesMatch)(a,s);const i={a:a,b:s},o={transposeA:n,transposeB:r};return b.a.runKernel(re.s,i,o)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Re=Object(se.b)({oneHot_:function(e,t,n=1,r=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const a={indices:Object(ae.a)(e,"indices","oneHot","int32")},s={depth:t,onValue:n,offValue:r};return b.a.runKernel(re.fc,a,s)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fe(){Object(g.c)().set("PROD",!0)}function Me(){Object(g.c)().set("DEBUG",!0)}function De(){Object(g.c)().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function Pe(e){Object(g.c)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function Be(){b.a.disposeVariables()}function je(){return b.a}function Le(){return b.a.memory()}function ze(e){return b.a.profile(e)}function We(e,t){return b.a.tidy(e,t)}function Ue(e){Object(Ee.getTensorsInContainer)(e).forEach((e=>e.dispose()))}function Ge(e){return b.a.keep(e)}function Ve(e){return b.a.time(e)}function He(e){return b.a.setBackend(e)}function qe(){return b.a.ready()}function Ke(){return b.a.backendName}function Xe(e){b.a.removeBackend(e)}function Ye(e){return b.a.findBackend(e)}function Qe(e){return b.a.findBackendFactory(e)}function Ze(e,t,n=1){return b.a.registerBackend(e,t,n)}function Je(){return b.a.backend}function et(e,t){Object(g.c)().setPlatform(e,t)}Object(te.d)(Pe);var tt=n(22);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nt=Object(se.b)({imag_:function(e){const t={input:Object(ae.a)(e,"input","imag")};return b.a.runKernel(re.ub,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rt=Object(se.b)({neg_:function(e){const t={x:Object(ae.a)(e,"x","neg")};return b.a.runKernel(re.ac,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const at=Object(se.b)({real_:function(e){const t={input:Object(ae.a)(e,"input","real")};return b.a.runKernel(re.oc,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const st=Object(se.b)({transpose_:function(e,t,n){const r=Object(ae.a)(e,"x","transpose");if(null==t&&(t=r.shape.map(((e,t)=>t)).reverse()),N.b(r.rank===t.length,(()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${t}.`)),t.forEach((e=>{N.b(e>=0&&e<r.rank,(()=>"All entries in 'perm' must be between 0 and "+(r.rank-1)+` but got ${t}`))})),r.rank<=1)return r.clone();const a={x:r},s={perm:t};return"complex64"===r.dtype?We((()=>{let e=at(r),t=nt(r);return e=b.a.runKernel(re.jd,{x:e},s),t=b.a.runKernel(re.jd,{x:t},s),n&&(t=rt(t)),Object(tt.a)(e,t)})):b.a.runKernel(re.jd,a,s)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const it=Object(se.b)({confusionMatrix_:function(e,t,n){const r=Object(ae.a)(e,"labels","confusionMatrix"),a=Object(ae.a)(t,"predictions","confusionMatrix");N.b(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),N.b(1===r.rank,(()=>`Expected the rank of labels to be 1, but got ${r.rank}`)),N.b(1===a.rank,(()=>`Expected the rank of predictions to be 1, but got ${a.rank}`)),N.b(r.shape[0]===a.shape[0],(()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`)),N.b(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));const s=Re(ie(r,"int32"),n),i=Re(ie(a,"int32"),n),o=st(s),u=Ne(o,i);return ie(u,"int32")}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ot(e,t){const n=e.length,r=[];for(let a=0;a<n;a++){const s=n-1-a,i=e[s]||1;(t[t.length-1-a]||1)>1&&1===i&&r.unshift(s)}return r}function ut(e,t){const n=[];for(let r=0;r<t.length;r++){const a=e[e.length-r-1],s=t.length-r-1,i=t[s];(null==a||1===a&&i>1)&&n.unshift(s)}return n}function ct(e,t){const n=[],r=Math.max(e.length,t.length);for(let a=0;a<r;a++){let r=e[e.length-a-1];null==r&&(r=1);let s=t[t.length-a-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s){throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`)}n.unshift(r)}}return n}var lt=n(31),dt=n(20);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function pt(e,t,n){if(Object(N.d)(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=Object(ae.c)(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Object(dt.a)(e,t,r,n)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let ht;function ft(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(a){const t=2;if(a&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=Object(lt.c)(re.kb,b.a.backendName)){const n={pixels:e},r={numChannels:t};return b.a.runKernel(re.kb,n,r)}const[u,c]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];let l,d;if(i)l=e.getContext("2d").getImageData(0,0,u,c).data;else if(r||n)l=e.data;else if(s||a||o){if(null==ht)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");ht=new OffscreenCanvas(1,1).getContext("2d")}else ht=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});ht.canvas.width=u,ht.canvas.height=c,ht.drawImage(e,0,0,u,c),l=ht.getImageData(0,0,u,c).data}if(4===t)d=new Int32Array(l);else{const e=u*c;d=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)d[n*t+e]=l[4*n+e]}return pt(d,[c,u,t],"int32")}function mt(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}async function bt(e,t=3){let n=null;if(Object(g.c)().getBool("WRAP_TO_IMAGEBITMAP")&&mt(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return ft(n,t)}async function gt(e,t){let n=Object(ae.a)(e,"img","toPixels");if(!(e instanceof te.a)){const e=n;n=ie(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,a]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2];if(s>4||2===s)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const i=await n.data(),o="float32"===n.dtype?255:1,u=new Uint8ClampedArray(a*r*4);for(let e=0;e<r*a;++e){const t=[0,0,0,255];for(let r=0;r<s;r++){const a=i[e*s+r];if("float32"===n.dtype){if(a<0||a>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${a}.`)}else if("int32"===n.dtype&&(a<0||a>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${a}.`);1===s?(t[0]=a*o,t[1]=a*o,t[2]=a*o):t[r]=a*o}const r=4*e;u[r+0]=Math.round(t[0]),u[r+1]=Math.round(t[1]),u[r+2]=Math.round(t[2]),u[r+3]=Math.round(t[3])}if(null!=t){t.width=a,t.height=r;const e=t.getContext("2d"),n=new ImageData(u,a,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),u}const xt=Object(se.b)({fromPixels_:ft});function yt(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===Object(N.O)(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const a=t.shape,s=a[a.length-1];let i=1;for(let e=0;e<a.length-1;++e)i*=a[e];const o=e.shape,u=a.slice();u.pop();let c=1;for(let e=s;e<n;++e)c*=o[e],u.push(o[e]);const l=[...Object(N.j)(e.shape).map((e=>e/c)),1].slice(0,s);return[u,i,c,l]}function kt(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw new Error(s+" update.rank != "+(a+e.length-r));for(let e=0;e<a;++e)if(n.shape[e]!==t.shape[e])throw new Error(s+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-a;++t)if(n.shape[t+a]!==e[t+r])throw new Error(s+` updates.shape[${t+a}] (${n.shape[t+a]}) != shape[${t+a}] (${e[t+a]})`)}function vt(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}kt(n,t,e)}function wt(e,t,n){const r=t.shape.length,a=r>1?t.shape[r-1]:1,s=n.length;let i=1;for(let e=a;e<s;++e)i*=n[e];const o=a<1?1:a;return{sliceRank:a,numUpdates:Object(N.O)(t.shape)/o,sliceSize:i,strides:[...Object(N.j)(n.slice(0,a)),1],outputSize:Object(N.O)(n)}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function It(e,t,n){const r=e.shape.length;N.b(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),N.b(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let a=0;a<r;++a)N.b(t[a]+n[a]<=e.shape[a],(()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`))}function St(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function _t(e,t,n){const r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function Ct(e,t,n,r){const a=[...e];for(let e=a.length;e<r.length;e++)a.push(1);for(let e=0;e<n;e++)0===e?a[t]=1:(a.splice(t,0,1),a.pop());return a}function Ot(e,t,n){return n<=e?n:n-(t-1)}function $t(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function Tt(e,t,n,r,a,s,i,o,u){const c=e.length;let l=new Array(c),d=new Array(c),p=new Array(c);if(t.length&&n>0){const u=t[0],c=n+1;l=At(i,u,c,r,e),d=Et(o,u,c,a,e),p=Ct(s,u,c,e)}else for(let t=0;t<c;t++)l[t]=Rt(i,r,s,e,t,u),d[t]=Ft(o,a,s,e,t,u),p[t]=Nt(s,t,u);return{begin:l,end:d,strides:p}}function At(e,t,n,r,a){const s=[...a],i=$t(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=0;else{const i=Ot(t,n,a);let o=r[i];e&1<<i&&(o=0),s[a]=o}return s}function Et(e,t,n,r,a){const s=[...a],i=$t(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=Number.MAX_SAFE_INTEGER;else{const i=Ot(t,n,a);let o=r[i];e&1<<i&&(o=Number.MAX_SAFE_INTEGER),s[a]=o}for(let e=0;e<s.length;e++){const t=a[e];s[e]<0&&(s[e]+=t),s[e]=N.i(0,s[e],a[e])}return s}function Nt(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function Rt(e,t,n,r,a,s){let i=t[a];const o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=r[a];return i<0&&(i+=u),i=N.i(0,i,u-1),i}function Ft(e,t,n,r,a,s){let i=t[a];const o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[a];return i<0&&(i+=u),i=o>0?N.i(0,i,u):N.i(-1,i,u-1),i}function Mt(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function Dt(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function Pt(e,t,n){let r;const a=e.shape.length;let s;return r="number"==typeof t?[t,...new Array(a-1).fill(0)]:t.length<a?t.concat(new Array(a-t.length).fill(0)):t.slice(),r.forEach((e=>{N.b(-1!==e,(()=>"slice() does not support negative begin indexing."))})),s=null==n?new Array(a).fill(-1):"number"==typeof n?[n,...new Array(a-1).fill(-1)]:n.length<a?n.concat(new Array(a-n.length).fill(-1)):n,s=s.map(((t,n)=>t>=0?t:(N.b(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,s]}function Bt(e,t,n,r,a,s,i,o,u){let c;if(null==r?(c=new Array(t.length),c.fill(1)):c=r,null!=i&&0!=(i&i-1))throw new Error("Multiple ellipses in slice is not allowed.");let l=!1;const d={dims:c.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:c.slice(),beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};for(let e=0;e<d.dims;e++)l&&0!=(1<<e&o)&&d.numAddAxisAfterEllipsis++,1<<e&i&&(l=!0);l||(d.ellipsisMask|=1<<d.dims,d.dims++);const p={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const a=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<a;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(-2),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(-1),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(d,p);let h=!0,f=!0,m=!0;const b=[],g=[];for(let t=0;t<e.length;++t){if(0===p.strides[t])throw Error(`strides[${t}] must be non-zero`);const n=!!(p.shrinkAxisMask&1<<t),r=e[t];if(-1===r){b.push(n?1:-1);continue}const a=[p.beginMask&1<<t,p.endMask&1<<t],s=[p.strides[t]>0?0:-1,p.strides[t]>0?r:r-1];if(n&&p.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===p.strides[t];const i=!!(p.beginMask&1<<t&&p.endMask&1<<t);if(p.beginValid&&p.endValid){if(n){const e=p.begin[t]<0?r+p.begin[t]:p.begin[t];if(p.begin[t]=e,p.end[t]=p.begin[t]+1,e<0||e>=r)throw Error(`slice index ${p.begin[t]} of dimension ${t} out of bounds.`)}else p.begin[t]=jt(p.begin[t],0,p.strides[t],r,a,s),p.end[t]=jt(p.end[t],1,p.strides[t],r,a,s);const e=1===p.strides[t]&&0===p.begin[t]&&p.end[t]===r;h=h&&e,f=f&&(0===t&&1===p.strides[t]||e)}else h=h&&1===p.strides[t]&&i,f=f&&(0===t&&1===p.strides[t]||i);let o,u=!1;if(p.beginValid&&p.endValid?(o=p.end[t]-p.begin[t],u=!0):n?(o=1,u=!0):i&&r>=0&&(o=p.strides[t]<0?-r:r,u=!0),u){let e;e=0===o||o<0!=p.strides[t]<0?0:Math.trunc(o/p.strides[t])+(o%p.strides[t]!=0?1:0),b.push(e)}else b.push(-1)}for(let e=0;e<p.finalShapeGatherIndices.length;++e){const t=p.finalShapeGatherIndices[e];t>=0?g.push(b[t]):-2===t&&g.push(1)}return{finalShapeSparse:g.filter(((e,t)=>-2!==p.finalShapeGatherIndices[t])),finalShape:g,isIdentity:h,sliceDim0:f,isSimpleSlice:m,begin:p.begin,end:p.end,strides:p.strides}}function jt(e,t,n,r,a,s){if(a[t])return n>0?s[t]:s[t+1&1];{const t=e<0?r+e:e;return t<s[0]?s[0]:t>s[1]?s[1]:t}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Lt{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class zt{constructor(){this.classNameMap={}}static getMap(){return null==zt.instance&&(zt.instance=new zt),zt.instance}static register(e){zt.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Wt(e){Object(N.b)(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),Object(N.b)("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),Object(N.b)(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),zt.register(e)}var Ut=n(6);
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gt=.1;function Vt(e,t,n){return null==n&&(n=Ht()),qt(e,t,((e,t)=>Qt(e,t,n)))}function Ht(){return 32===b.a.backend.floatPrecision()?.001:Gt}function qt(e,t,n){let r=!0;if((Object(N.A)(e)||Object(N.A)(t))&&(r=!1),Object(N.A)(e)&&Object(N.A)(t)&&(r=!0),r){const n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(e)&&Array.isArray(t)){const n=Object(ae.c)(e),r=Object(ae.c)(t);if(!Object(N.a)(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const a=Object(N.A)(e)?e:Object(N.m)(e),s=Object(N.A)(t)?t:Object(N.m)(t);if(a.length!==s.length)throw new Error(`Arrays have different lengths actual: ${a.length} vs expected: ${s.length}.\nActual:   ${a}.\nExpected: ${s}.`);for(let e=0;e<s.length;++e){const t=a[e],r=s[e];if(!n(t,r))throw new Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${r}.\nActual:   ${a}.\nExpected: ${s}.`)}}function Kt(e,t){e().then((()=>t.fail()),(()=>t()))}function Xt(e,t){const n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return Object(N.z)(e)||Object(N.z)(e[0])||Object(N.z)(t)||Object(N.z)(t[0])?qt(e,n,((e,t)=>e==t)):qt(e,t,((e,t)=>Qt(e,t,0)))}function Yt(e,t,n){if(null==n&&(n=Ht()),!Qt(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function Qt(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function Zt(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function Jt(e,t){const n=new Float32Array(e),r=new Float32Array(t);if(n.length!==r.length)throw new Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${n.length}`);for(let e=0;e<r.length;e++)if(n[e]!==r[e])throw new Error(`Expected ArrayBuffer value at ${e} to be ${r[e]} but got ${n[e]} instead`)}function en(e){for(let t=0;t<e.length;t++){const n=e[t];Array.isArray(n)?en(n):e[t]=Object(Ut.encodeString)(n)}return e}
/** @license See the LICENSE file. */const tn="3.19.0";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nn=Object(se.b)({add_:function(e,t){let n=Object(ae.a)(e,"a","add"),r=Object(ae.a)(t,"b","add");[n,r]=Object(Ee.makeTypesMatch)(n,r);const a={a:n,b:r};return b.a.runKernel(re.d,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rn=Object(se.b)({floorDiv_:function(e,t){let n=Object(ae.a)(e,"a","floorDiv"),r=Object(ae.a)(t,"b","floorDiv");[n,r]=Object(Ee.makeTypesMatch)(n,r);const a={a:n,b:r};return b.a.runKernel(re.jb,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const an=Object(se.b)({div_:function(e,t){let n=Object(ae.a)(e,"a","div"),r=Object(ae.a)(t,"b","div");if([n,r]=Object(Ee.makeTypesMatch)(n,r),"int32"===n.dtype&&"int32"===r.dtype)return rn(n,r);const a={a:n,b:r};return b.a.runKernel(re.pc,a,{})}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sn=Object(se.b)({mul_:function(e,t){let n=Object(ae.a)(e,"a","mul"),r=Object(ae.a)(t,"b","mul");[n,r]=Object(Ee.makeTypesMatch)(n,r);const a={a:n,b:r};return b.a.runKernel(re.Zb,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const on=Object(se.b)({sqrt_:function(e){const t={x:Object(ae.a)(e,"x","sqrt","float32")};return b.a.runKernel(re.Uc,t)}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const un=Object(se.b)({square_:function(e){const t=Object(ae.a)(e,"x","square");return b.a.runKernel("Square",{x:t},{})}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cn=Object(se.b)({zerosLike_:function(e){const t={x:Object(ae.a)(e,"x","zerosLike")};return b.a.runKernel(re.od,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ln(e){return N.b(N.u(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{const r=Object(ae.a)(t,"x","tf.grad","string_or_numeric"),a=null!=n?Object(ae.a)(n,"dy","tf.grad"):null;return b.a.tidy((()=>{const{value:t,grads:n}=b.a.gradients((()=>e(r)),[r],a);return null!=a&&N.e(t.shape,a.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),bn(n),n[0]}))}}function dn(e){return N.b(N.u(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{N.b(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));const r=Object(ae.b)(t,"args","tf.grads","string_or_numeric"),a=null!=n?Object(ae.a)(n,"dy","tf.grads"):null;return b.a.tidy((()=>{const{value:t,grads:n}=b.a.gradients((()=>e(...r)),r,a);return null!=a&&N.e(t.shape,a.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),bn(n),n}))}}function pn(e){return N.b(N.u(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{N.b(t instanceof te.a,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),N.b(null==n||n instanceof te.a,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));const{grads:r,value:a}=b.a.gradients((()=>e(t)),[t],n);return bn(r),{grad:r[0],value:a}}}function hn(e){return N.b(N.u(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{N.b(Array.isArray(t)&&t.every((e=>e instanceof te.a)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),N.b(null==n||n instanceof te.a,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));const r=b.a.gradients((()=>e(...t)),t,n);return null!=n&&N.e(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),bn(r.grads),r}}function fn(e,t){N.b(N.u(e),(()=>"The f passed in variableGrads(f) must be a function")),N.b(null==t||Array.isArray(t)&&t.every((e=>e instanceof te.c)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in b.a.registeredVariables)t.push(b.a.registeredVariables[e])}const r=n?t.filter((e=>!e.trainable)):null,a=t.length;t=t.filter((e=>e.trainable)),N.b(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`));const{value:s,grads:i}=b.a.gradients(e,t,null,!0);N.b(i.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),N.b(0===s.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${s.rank} tensor`));const o={};return t.forEach(((e,t)=>{null!=i[t]&&(o[e.name]=i[t])})),null!=r&&r.forEach((e=>o[e.name]=null)),{value:s,grads:o}}function mn(e){return b.a.customGrad(e)}function bn(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gn(e,t){if((Object(N.A)(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Object(N.A)(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Object(dt.a)(e,[],[],t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xn extends Lt{minimize(e,t=!1,n){const{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:a[e.name]})));this.applyGradients(e)}else this.applyGradients(a);return Ue(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return fn(e,t)}dispose(){null!=this.iterations_&&Ue(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:gn(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(xn,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class yn extends xn{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=b.a.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=b.a.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:We((()=>cn(r).variable(false)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:We((()=>cn(r).variable(false)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;We((()=>{const e=nn(sn(s,this.rho),sn(un(a),1-this.rho)),t=sn(an(on(nn(i,this.epsilon)),on(nn(s,this.epsilon))),a),n=nn(sn(i,this.rho),sn(un(t),1-this.rho));s.assign(e),i.assign(n);const o=nn(sn(t,-this.learningRate),r);r.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Ue(this.accumulatedGrads.map((e=>e.variable))),Ue(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function kn(e,t,n){const r={shape:e,value:t,dtype:n};return b.a.runKernel(re.gb,{},r)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */yn.className="Adadelta",Wt(yn);class vn extends xn{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=b.a.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:We((()=>kn(r.shape,this.initialAccumulatorValue).variable(e)))}}const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable;We((()=>{const e=nn(s,un(a));s.assign(e);const t=nn(sn(an(a,on(nn(e,b.a.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Ue(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}vn.className="Adagrad",Wt(vn);const wn=Object(se.b)({pow_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t){let n=Object(ae.a)(e,"base","pow"),r=Object(ae.a)(t,"exp","pow");[n,r]=Object(Ee.makeTypesMatch)(n,r);const a={a:n,b:r};return b.a.runKernel(re.kc,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const In=Object(se.b)({sub_:function(e,t){let n=Object(ae.a)(e,"a","sub"),r=Object(ae.a)(t,"b","sub");[n,r]=Object(Ee.makeTypesMatch)(n,r);const a={a:n,b:r};return b.a.runKernel(re.cd,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Sn extends xn{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],We((()=>{this.accBeta1=gn(t).variable(),this.accBeta2=gn(n).variable()})),null==r&&(this.epsilon=b.a.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);We((()=>{const n=In(1,this.accBeta1),r=In(1,this.accBeta2);t.forEach(((t,a)=>{const s=b.a.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:We((()=>cn(s).variable(false)))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:`${t}/v`,variable:We((()=>cn(s).variable(false)))});const i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[a].variable,u=this.accumulatedSecondMoment[a].variable,c=nn(sn(o,this.beta1),sn(i,1-this.beta1)),l=nn(sn(u,this.beta2),sn(un(i),1-this.beta2)),d=an(c,n),p=an(l,r);o.assign(c),u.assign(l);const h=nn(sn(an(d,nn(on(p),this.epsilon)),-this.learningRate),s);s.assign(h)})),this.accBeta1.assign(sn(this.accBeta1,this.beta1)),this.accBeta2.assign(sn(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Ue(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&Ue(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),We((()=>{this.accBeta1.assign(wn(this.beta1,this.iterations_+1)),this.accBeta2.assign(wn(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}Sn.className="Adam",Wt(Sn);const _n=Object(se.b)({abs_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const t=Object(ae.a)(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return b.a.runKernel(re.B,e)}{const e={x:t};return b.a.runKernel(re.a,e)}}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cn=Object(se.b)({maximum_:function(e,t){let n=Object(ae.a)(e,"a","maximum"),r=Object(ae.a)(t,"b","maximum");[n,r]=Object(Ee.makeTypesMatch)(n,r),"bool"===n.dtype&&(n=ie(n,"int32"),r=ie(r,"int32")),ct(n.shape,r.shape);const a={a:n,b:r};return b.a.runKernel(re.Sb,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class On extends xn{constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],We((()=>{this.iteration=gn(0).variable(),this.accBeta1=gn(t).variable()})),null==r&&(this.epsilon=b.a.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);We((()=>{const n=In(1,this.accBeta1),r=an(-this.learningRate,nn(sn(this.iteration,this.decay),1));t.forEach(((t,a)=>{const s=b.a.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:cn(s).variable(false)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:`${t}/v`,variable:cn(s).variable(false)});const i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[a].variable,u=this.accumulatedWeightedInfNorm[a].variable,c=nn(sn(o,this.beta1),sn(i,1-this.beta1)),l=sn(u,this.beta2),d=_n(i),p=Cn(l,d);o.assign(c),u.assign(p);const h=nn(sn(an(r,n),an(c,nn(p,this.epsilon))),s);s.assign(h)})),this.iteration.assign(nn(this.iteration,1)),this.accBeta1.assign(sn(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Ue(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&Ue(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}On.className="Adamax",Wt(On);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class $n extends xn{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=b.a.registeredVariables[t];We((()=>{const e=nn(sn(this.c,r),a);a.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Ge(gn(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}$n.className="SGD",Wt($n);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Tn extends $n{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=gn(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=b.a.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:We((()=>cn(r).variable(e)))}}const a=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&We((()=>{let e;const t=nn(sn(this.m,a),s);e=this.useNesterov?nn(sn(this.c,nn(s,sn(t,this.m))),r):nn(sn(this.c,t),r),a.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Ue(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}Tn.className="Momentum",Wt(Tn);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class An extends xn{constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=b.a.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=b.a.registeredVariables[t],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:We((()=>cn(r).variable(a)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:We((()=>cn(r).variable(a)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:We((()=>cn(r).variable(a)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;We((()=>{const e=nn(sn(i,this.decay),sn(un(s),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,a=nn(sn(t,this.decay),sn(s,1-this.decay)),u=an(sn(s,this.learningRate),on(In(e,nn(un(a),this.epsilon)))),c=nn(sn(o,this.momentum),u);i.assign(e),t.assign(a),o.assign(c);const l=In(r,c);r.assign(l)}else{const e=nn(sn(i,this.decay),sn(un(s),1-this.decay)),t=nn(sn(o,this.momentum),an(sn(s,this.learningRate),on(nn(e,this.epsilon))));i.assign(e),o.assign(t);const n=In(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Ue(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&Ue(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&Ue(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}An.className="RMSProp",Wt(An);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class En{static sgd(e){return new $n(e)}static momentum(e,t,n=!1){return new Tn(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,a=!1){return new An(e,t,n,r,a)}static adam(e=.001,t=.9,n=.999,r=null){return new Sn(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new yn(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,a=0){return new On(e,t,n,r,a)}static adagrad(e,t=.1){return new vn(e,t)}}var Nn=n(34);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rn=Object(se.b)({acos_:function(e){const t={x:Object(ae.a)(e,"x","acos")};return b.a.runKernel(re.b,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fn=Object(se.b)({acosh_:function(e){const t={x:Object(ae.a)(e,"x","acosh")};return b.a.runKernel(re.c,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mn=Object(se.b)({addN_:function(e){N.b(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),N.b(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>Object(ae.a)(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!N.a(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const r=t;return b.a.runKernel(re.e,r)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dn=Object(se.b)({all_:function(e,t=null,n=!1){const r={x:Object(ae.a)(e,"x","all","bool")},a={axis:t,keepDims:n};return b.a.runKernel(re.f,r,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pn=Object(se.b)({any_:function(e,t=null,n=!1){const r={x:Object(ae.a)(e,"x","any","bool")},a={axis:t,keepDims:n};return b.a.runKernel(re.g,r,a)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bn=Object(se.b)({argMax_:function(e,t=0){const n={x:Object(ae.a)(e,"x","argMax")},r={axis:t};return b.a.runKernel(re.h,n,r)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jn=Object(se.b)({argMin_:function(e,t=0){const n={x:Object(ae.a)(e,"x","argMin")},r={axis:t};return b.a.runKernel(re.i,n,r)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ln=Object(se.b)({asin_:function(e){const t={x:Object(ae.a)(e,"x","asin")};return b.a.runKernel(re.j,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zn=Object(se.b)({asinh_:function(e){const t={x:Object(ae.a)(e,"x","asinh")};return b.a.runKernel(re.k,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wn=Object(se.b)({atan_:function(e){const t={x:Object(ae.a)(e,"x","atan")};return b.a.runKernel(re.l,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Un=Object(se.b)({atan2_:function(e,t){let n=Object(ae.a)(e,"a","atan2"),r=Object(ae.a)(t,"b","atan2");[n,r]=Object(Ee.makeTypesMatch)(n,r);const a={a:n,b:r};return b.a.runKernel(re.m,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gn=Object(se.b)({atanh_:function(e){const t={x:Object(ae.a)(e,"x","atanh")};return b.a.runKernel(re.n,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vn(e,t,n,r,a="NHWC",s){return Kn(e,[...t,e[3]],n,s,r,null,null,rr(a))}function Hn(e,t,n,r,a,s,i="channelsLast"){const[o,u]=Qn(t);let c;if("channelsLast"===i)c=[o,u,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);c=[o,u,e[1],e[1]]}return Kn(e,c,n,r,a,s,!1,i)}function qn(e,t,n,r,a,s,i="NDHWC"){const[o,u,c]=Zn(t);let l,d;if("NDHWC"===i)d="channelsLast",l=[o,u,c,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);d="channelsFirst",l=[o,u,c,e[1],e[1]]}return Xn(e,l,n,r,a,!1,d,s)}function Kn(e,t,n,r,a,s,i=!1,o="channelsLast"){let[u,c,l,d]=[-1,-1,-1,-1];if("channelsLast"===o)[u,c,l,d]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[u,d,c,l]=e}const[p,h,,f]=t,[m,b]=Qn(n),[g,x]=Qn(r),y=Jn(p,g),k=Jn(h,x),{padInfo:v,outHeight:w,outWidth:I}=function(e,t,n,r,a,s,i,o,u){let c,l,d;if("number"==typeof e){c={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,a){null==r&&(r=Yn(e,t,n));const s=e[0],i=e[1],o=er((s-t+2*r)/n+1,a),u=er((i-t+2*r)/n+1,a);return[o,u]}([t,n],s,r,e,o);l=a[0],d=a[1]}else if("same"===e){l=Math.ceil(t/r),d=Math.ceil(n/a);const e=Math.max(0,(l-1)*r+s-t),o=Math.max(0,(d-1)*a+i-n),u=Math.floor(e/2),p=e-u,h=Math.floor(o/2);c={top:u,bottom:p,left:h,right:o-h,type:"SAME"}}else if("valid"===e)c={top:0,bottom:0,left:0,right:0,type:"VALID"},l=Math.ceil((t-s+1)/r),d=Math.ceil((n-i+1)/a);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const p="channelsLast"===u?e[1][0]:e[2][0],h="channelsLast"===u?e[1][1]:e[2][1],f="channelsLast"===u?e[2][0]:e[3][0],m="channelsLast"===u?e[2][1]:e[3][1];c={top:p,bottom:h,left:f,right:m,type:0===p&&0===h&&0===f&&0===m?"VALID":"EXPLICIT"},l=er((t-s+p+h)/r+1,o),d=er((n-i+f+m)/a+1,o)}}return{padInfo:c,outHeight:l,outWidth:d}}(a,c,l,m,b,y,k,s,o),S=i?f*d:f;let _;return"channelsFirst"===o?_=[u,S,w,I]:"channelsLast"===o&&(_=[u,w,I,S]),{batchSize:u,dataFormat:o,inHeight:c,inWidth:l,inChannels:d,outHeight:w,outWidth:I,outChannels:S,padInfo:v,strideHeight:m,strideWidth:b,filterHeight:p,filterWidth:h,effectiveFilterHeight:y,effectiveFilterWidth:k,dilationHeight:g,dilationWidth:x,inShape:e,outShape:_,filterShape:t}}function Xn(e,t,n,r,a,s=!1,i="channelsLast",o){let[u,c,l,d,p]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[u,c,l,d,p]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[u,p,c,l,d]=e}const[h,f,m,,b]=t,[g,x,y]=Zn(n),[k,v,w]=Zn(r),I=Jn(h,k),S=Jn(f,v),_=Jn(m,w),{padInfo:C,outDepth:O,outHeight:$,outWidth:T}=function(e,t,n,r,a,s,i,o,u,c,l){let d,p,h,f;if("number"==typeof e){d={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,a,s){null==a&&(a=Yn(e,t,r));const i=e[0],o=e[1],u=e[2],c=er((i-t+2*a)/r+1,s),l=er((o-t+2*a)/r+1,s),d=er((u-t+2*a)/r+1,s);return[c,l,d,n]}([t,n,r,1],o,1,a,e,l);p=s[0],h=s[1],f=s[2]}else if("same"===e){p=Math.ceil(t/a),h=Math.ceil(n/s),f=Math.ceil(r/i);const e=(p-1)*a+o-t,l=(h-1)*s+u-n,m=(f-1)*i+c-r,b=Math.floor(e/2),g=e-b,x=Math.floor(l/2),y=l-x,k=Math.floor(m/2);d={top:x,bottom:y,left:k,right:m-k,front:b,back:g,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);d={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},p=Math.ceil((t-o+1)/a),h=Math.ceil((n-u+1)/s),f=Math.ceil((r-c+1)/i)}return{padInfo:d,outDepth:p,outHeight:h,outWidth:f}}(a,c,l,d,g,x,y,I,S,_,o),A=s?b*p:b;let E;return"channelsFirst"===i?E=[u,A,O,$,T]:"channelsLast"===i&&(E=[u,O,$,T,A]),{batchSize:u,dataFormat:i,inDepth:c,inHeight:l,inWidth:d,inChannels:p,outDepth:O,outHeight:$,outWidth:T,outChannels:A,padInfo:C,strideDepth:g,strideHeight:x,strideWidth:y,filterDepth:h,filterHeight:f,filterWidth:m,effectiveFilterDepth:I,effectiveFilterHeight:S,effectiveFilterWidth:_,dilationDepth:k,dilationHeight:v,dilationWidth:w,inShape:e,outShape:E,filterShape:t}}function Yn(e,t,n,r=1){const a=Jn(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function Qn(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function Zn(e){return"number"==typeof e?[e,e,e]:e}function Jn(e,t){return t<=1?e:e+(e-1)*(t-1)}function er(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function tr(e){const[t,n,r]=Qn(e);return 1===t&&1===n&&1===r}function nr(e,t){return tr(e)||tr(t)}function rr(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function ar(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)N.b(N.v(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{N.b(N.v(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sr=Object(se.b)({reshape_:function(e,t){const n={x:Object(ae.a)(e,"x","reshape","string_or_numeric")},r={shape:t};return b.a.runKernel(re.tc,n,r)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ir=Object(se.b)({avgPool_:function(e,t,n,r,a){const s=Object(ae.a)(e,"x","avgPool","float32");N.b(nr(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=s,o=!1;3===s.rank&&(o=!0,i=sr(s,[1,s.shape[0],s.shape[1],s.shape[2]])),N.b(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),ar("avgPool",r,a);const u={x:i},c={filterSize:t,strides:n,pad:r,dimRoundingMode:a};let l=b.a.runKernel(re.o,u,c);return l=ie(l,s.dtype),o?sr(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const or=Object(se.b)({avgPool3d_:function(e,t,n,r,a,s="NDHWC"){const i=Object(ae.a)(e,"x","avgPool3d","float32");let o=i,u=!1;4===i.rank&&(u=!0,o=sr(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),N.b(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),N.b("NDHWC"===s,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),ar("avgPool3d",r,a);const c={x:o},l={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s};let d=b.a.runKernel(re.p,c,l);return d=ie(d,o.dtype),u?sr(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ur=Object(se.b)({concat_:function(e,t=0){Object(N.b)(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=Object(ae.b)(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return oe(n[0]);const r=n,a={axis:t};return b.a.runKernel(re.C,r,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cr=Object(se.b)({sigmoid_:function(e){const t={x:Object(ae.a)(e,"x","sigmoid","float32")};return b.a.runKernel(re.Gc,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lr=Object(se.b)({slice_:function(e,t,n){const r=Object(ae.a)(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const a={x:r},s={begin:t,size:n};return b.a.runKernel(re.Kc,a,s)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dr=Object(se.b)({tanh_:function(e){const t={x:Object(ae.a)(e,"x","tanh","float32")};return b.a.runKernel(re.fd,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pr=Object(se.b)({basicLSTMCell_:function(e,t,n,r,a,s){const i=Object(ae.a)(e,"forgetBias","basicLSTMCell"),o=Object(ae.a)(t,"lstmKernel","basicLSTMCell"),u=Object(ae.a)(n,"lstmBias","basicLSTMCell"),c=Object(ae.a)(r,"data","basicLSTMCell"),l=Object(ae.a)(a,"c","basicLSTMCell"),d=Object(ae.a)(s,"h","basicLSTMCell"),p=ur([c,d],1),h=Ne(p,o),f=nn(h,u),m=f.shape[0],b=f.shape[1]/4,g=[m,b],x=lr(f,[0,0],g),y=lr(f,[0,b],g),k=lr(f,[0,2*b],g),v=lr(f,[0,3*b],g),w=nn(sn(cr(x),dr(y)),sn(l,cr(nn(i,k))));return[w,sn(dr(w),cr(v))]}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hr=Object(se.b)({batchToSpaceND_:function(e,t,n){const r=Object(ae.a)(e,"x","batchToSpaceND"),a=t.reduce(((e,t)=>e*t));N.b(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),N.b(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),N.b(r.shape[0]%a==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`));const s={x:r},i={blockShape:t,crops:n};return b.a.runKernel(re.t,s,i)}});const fr=Object(se.b)({batchNorm_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t,n,r,a,s){null==s&&(s=.001);const i=Object(ae.a)(e,"x","batchNorm"),o=Object(ae.a)(t,"mean","batchNorm"),u=Object(ae.a)(n,"variance","batchNorm");let c,l;null!=a&&(c=Object(ae.a)(a,"scale","batchNorm")),null!=r&&(l=Object(ae.a)(r,"offset","batchNorm")),N.b(o.rank===u.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),N.b(null==l||o.rank===l.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),N.b(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const d=function(e){let t;return t=0===e.rank||1===e.rank?sr(e,[1,1,1,e.size]):2===e.rank?sr(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?sr(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(i),p={x:d,scale:c,offset:l,mean:o,variance:u},h={varianceEpsilon:s},f=b.a.runKernel(re.lb,p,h);return sr(f,i.shape)}});const mr=Object(se.b)({batchNorm2d_:function(e,t,n,r,a,s){const i=Object(ae.a)(e,"x","batchNorm"),o=Object(ae.a)(t,"mean","batchNorm"),u=Object(ae.a)(n,"variance","batchNorm");let c,l;return null!=a&&(c=Object(ae.a)(a,"scale","batchNorm")),null!=r&&(l=Object(ae.a)(r,"offset","batchNorm")),N.b(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),N.b(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),N.b(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&N.b(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`)),null!=l&&N.b(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${l.rank}.`)),fr(i,o,u,l,c,s)}});const br=Object(se.b)({batchNorm3d_:function(e,t,n,r,a,s){const i=Object(ae.a)(e,"x","batchNorm"),o=Object(ae.a)(t,"mean","batchNorm"),u=Object(ae.a)(n,"variance","batchNorm");let c,l;return null!=a&&(c=Object(ae.a)(a,"scale","batchNorm")),null!=r&&(l=Object(ae.a)(r,"offset","batchNorm")),N.b(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),N.b(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),N.b(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&N.b(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`)),null!=l&&N.b(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${l.rank}.`)),fr(i,o,u,l,c,s)}});const gr=Object(se.b)({batchNorm4d_:function(e,t,n,r,a,s){const i=Object(ae.a)(e,"x","batchNorm"),o=Object(ae.a)(t,"mean","batchNorm"),u=Object(ae.a)(n,"variance","batchNorm");let c,l;return null!=a&&(c=Object(ae.a)(a,"scale","batchNorm")),null!=r&&(l=Object(ae.a)(r,"offset","batchNorm")),N.b(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),N.b(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),N.b(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&N.b(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`)),null!=l&&N.b(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${l.rank}.`)),fr(i,o,u,l,c,s)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xr=Object(se.b)({bincount_:function(e,t,n){const r=Object(ae.a)(e,"x","bincount"),a=Object(ae.a)(t,"weights","bincount");N.b("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),N.b(n>=0,(()=>`size must be non-negative, but got ${n}.`)),N.b(a.size===r.size||0===a.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${a.shape}.`));const s={x:r,weights:a},i={size:n};return b.a.runKernel(re.u,s,i)}});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yr=Object(se.b)({broadcastArgs_:function(e,t){const n=Object(ae.a)(e,"s0","broadcastArgs","int32"),r=Object(ae.a)(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==r.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);const a={s0:n,s1:r};return b.a.runKernel(re.v,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kr=Object(se.b)({broadcastTo_:function(e,t){let n=Object(ae.a)(e,"broadcastTo","x");const r=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=sr(n,e)}const a=n.shape,s=Array.from(t);for(let e=t.length-1;e>=0;e--)if(a[e]===t[e])s[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===s.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return oe(n);const i={x:n},o={reps:s};return b.a.runKernel(re.gd,i,o)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vr=Object(se.b)({ceil_:function(e){const t={x:Object(ae.a)(e,"x","ceil","float32")};return b.a.runKernel(re.y,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wr=Object(se.b)({clipByValue_:function(e,t,n){const r=Object(ae.a)(e,"x","clipByValue");N.b(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const a={x:r},s={clipValueMin:t,clipValueMax:n};return b.a.runKernel(re.z,a,s)}});const Ir=Object(se.b)({concat1d_:function(e){return ur(e,0)}});const Sr=Object(se.b)({concat2d_:function(e,t){return ur(e,t)}});const _r=Object(se.b)({concat3d_:function(e,t){return ur(e,t)}});const Cr=Object(se.b)({concat4d_:function(e,t){return ur(e,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Or=Object(se.b)({conv2d_:function(e,t,n,r,a="NHWC",s=[1,1],i){const o=Object(ae.a)(e,"x","conv2d","float32"),u=Object(ae.a)(t,"filter","conv2d","float32");let c=o,l=!1;3===o.rank&&(l=!0,c=sr(o,[1,o.shape[0],o.shape[1],o.shape[2]])),N.b(4===c.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${c.rank}.`)),N.b(4===u.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`)),ar("conv2d",r,i);const d="NHWC"===a?c.shape[3]:c.shape[1];N.b(d===u.shape[2],(()=>`Error in conv2d: depth of input (${d}) must match input depth for filter ${u.shape[2]}.`)),N.b(nr(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`));const p={x:c,filter:u},h={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},f=b.a.runKernel(re.D,p,h);return l?sr(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const $r=Object(se.b)({conv1d_:function(e,t,n,r,a="NWC",s=1,i){const o=Object(ae.a)(e,"x","conv1d"),u=Object(ae.a)(t,"filter","conv1d");let c=o,l=!1;2===o.rank&&(l=!0,c=sr(o,[1,o.shape[0],o.shape[1]])),N.b(3===c.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`)),N.b(3===u.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`)),ar("conv1d",r,i),N.b(c.shape[2]===u.shape[1],(()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${u.shape[1]}.`)),N.b(nr(n,s),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`)),N.b("NWC"===a,(()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`));const d=sr(u,[1,u.shape[0],u.shape[1],u.shape[2]]),p=sr(c,[c.shape[0],1,c.shape[1],c.shape[2]]),h=Or(p,d,[1,n],r,"NHWC",[1,s],i);return sr(h,l?[h.shape[2],h.shape[3]]:[h.shape[0],h.shape[2],h.shape[3]])}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tr=Object(se.b)({conv2DBackpropInput_:function(e,t,n,r,a,s="NHWC",i){N.b(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,u=t,c=!1;3===t.rank&&(c=!0,u=sr(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),N.b(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),N.b(4===u.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`)),N.b(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const l="NHWC"===s?o[3]:o[1],d="NHWC"===s?u.shape[3]:u.shape[1];N.b(l===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[2]}.`)),N.b(d===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${d}) must match output depth for filter ${n.shape[3]}.`)),ar("conv2dDerInput",a,i);const p={dy:u,filter:n},h={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,inputShape:o},f=b.a.runKernel(re.F,p,h);return c?sr(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const Ar=Object(se.b)({conv2dTranspose_:function(e,t,n,r,a,s){const i=Object(ae.a)(e,"x","conv2dTranspose"),o=Object(ae.a)(t,"filter","conv2dTranspose");return Tr(n,i,o,r,a,"NHWC",s)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Er=Object(se.b)({conv3d_:function(e,t,n,r,a="NDHWC",s=[1,1,1]){const i=Object(ae.a)(e,"x","conv3d"),o=Object(ae.a)(t,"filter","conv3d");let u=i,c=!1;4===i.rank&&(c=!0,u=sr(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),N.b(5===u.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`)),N.b(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),N.b(u.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),N.b(nr(n,s),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),N.b("NDHWC"===a,(()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`));const l={x:u,filter:o},d={strides:n,pad:r,dataFormat:a,dilations:s},p=b.a.runKernel(re.G,l,d);return c?sr(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nr=Object(se.b)({conv3DBackpropInput_:function(e,t,n,r,a){N.b(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let s=e,i=t,o=!1;4===t.rank&&(o=!0,i=sr(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);const u=s[4],c=i.shape[4];N.b(5===s.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`)),N.b(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),N.b(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),N.b(u===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`)),N.b(c===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${n.shape[4]}.`));const l={dy:i,filter:n},d={pad:a,strides:r,inputShape:s},p=b.a.runKernel(re.I,l,d);return o?sr(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}});const Rr=Object(se.b)({conv3dTranspose_:function(e,t,n,r,a){const s=Object(ae.a)(e,"x","conv3dTranspose"),i=Object(ae.a)(t,"filter","conv3dTranspose");return Nr(n,s,i,r,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fr=Object(se.b)({cos_:function(e){const t={x:Object(ae.a)(e,"x","cos","float32")};return b.a.runKernel(re.J,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mr=Object(se.b)({cosh_:function(e){const t={x:Object(ae.a)(e,"x","cosh","float32")};return b.a.runKernel(re.K,t)}});
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dr=Object(se.b)({cumprod_:function(e,t=0,n=!1,r=!1){const a={x:Object(ae.a)(e,"x","cumprod")},s={axis:t,exclusive:n,reverse:r};return b.a.runKernel(re.M,a,s)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pr=Object(se.b)({cumsum_:function(e,t=0,n=!1,r=!1){const a={x:Object(ae.a)(e,"x","cumsum")},s={axis:t,exclusive:n,reverse:r};return b.a.runKernel(re.N,a,s)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Br=Object(se.b)({denseBincount_:function(e,t,n,r=!1){const a=Object(ae.a)(e,"x","denseBincount"),s=Object(ae.a)(t,"weights","denseBincount");N.b("int32"===a.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${a.dtype}`)),N.b(a.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`)),N.b(n>=0,(()=>`size must be non-negative, but got ${n}.`)),N.b(s.size===a.size||0===s.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${s.shape}.`));const i={x:a,weights:s},o={size:n,binaryOutput:r};return b.a.runKernel(re.O,i,o)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jr=Object(se.b)({depthToSpace_:function(e,t,n="NHWC"){const r=Object(ae.a)(e,"x","depthToSpace","float32"),a="NHWC"===n?r.shape[1]:r.shape[2],s="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];N.b(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),N.b(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),N.b(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),N.b(i%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`));const o={x:r},u={blockSize:t,dataFormat:n};return b.a.runKernel(re.P,o,u)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lr=Object(se.b)({depthwiseConv2d_:function(e,t,n,r,a="NHWC",s=[1,1],i){const o=Object(ae.a)(e,"x","depthwiseConv2d","float32"),u=Object(ae.a)(t,"filter","depthwiseConv2d","float32");let c=o,l=!1;3===o.rank&&(l=!0,c=sr(o,[1,o.shape[0],o.shape[1],o.shape[2]])),N.b(4===c.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`)),N.b(4===u.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`));const d="NHWC"===a?c.shape[3]:c.shape[1];N.b(d===u.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${d}) must match the inChannels dimension in filter ${u.shape[2]}.`)),ar("depthwiseConv2d",r,i);const p={x:c,filter:u},h={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},f=b.a.runKernel(re.Q,p,h);return l?sr(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zr=Object(se.b)({diag_:function(e){const t={x:Object(ae.a)(e,"x","diag")};return b.a.runKernel(re.T,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wr=Object(se.b)({dilation2d_:function(e,t,n,r,a=[1,1],s="NHWC"){const i=Object(ae.a)(e,"x","dilation2d"),o=Object(ae.a)(t,"filter","dilation2d");N.b(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),N.b(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),N.b("NHWC"===s,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`));let u=i,c=!1;3===i.rank&&(u=sr(i,[1,i.shape[0],i.shape[1],i.shape[2]]),c=!0);const l={x:u,filter:o},d={strides:n,pad:r,dilations:a},p=b.a.runKernel(re.U,l,d);return c?sr(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ur=Object(se.b)({equal_:function(e,t){let n=Object(ae.a)(e,"a","equal","string_or_numeric"),r=Object(ae.a)(t,"b","equal","string_or_numeric");[n,r]=Object(Ee.makeTypesMatch)(n,r),ct(n.shape,r.shape);const a={a:n,b:r};return b.a.runKernel(re.ab,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gr=Object(se.b)({where_:function(e,t,n){const r=Object(ae.a)(t,"a","where"),a=Object(ae.a)(n,"b","where"),s=Object(ae.a)(e,"condition","where","bool"),i=ct(ct(s.shape,r.shape),a.shape),o={condition:kr(s,i),t:kr(r,i),e:kr(a,i)};return b.a.runKernel(re.Ec,o)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vr=Object(se.b)({divNoNan_:function(e,t){let n=Object(ae.a)(e,"a","div"),r=Object(ae.a)(t,"b","div");[n,r]=Object(Ee.makeTypesMatch)(n,r);const a=an(n,r),s=cn(a),i=Ur(r,s);return Gr(i,s,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hr=Object(se.b)({dot_:function(e,t){const n=Object(ae.a)(e,"t1","dot"),r=Object(ae.a)(t,"t2","dot");N.b(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const a=1===n.rank?n.size:n.shape[1],s=1===r.rank?r.size:r.shape[0];if(N.b(a===s,(()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${s}.`)),1===n.rank&&1===r.rank){const e=sr(n,[1,-1]),t=sr(r,[-1,1]),a=Ne(e,t);return sr(a,[])}if(1===n.rank&&2===r.rank){const e=sr(n,[1,-1]),t=sr(r,[r.shape[0],r.shape[1]]),a=Ne(e,t);return sr(a,[a.size])}if(2===n.rank&&1===r.rank){const e=sr(r,[-1,1]),t=Ne(n,e);return sr(t,[t.size])}{const e=sr(r,[r.shape[0],r.shape[1]]);return Ne(n,e)}}});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qr=Object(se.b)({einsum_:function(e,...t){const n=t.map(((e,t)=>Object(ae.a)(e,`tensors${t}`,"einsum"))),r={equation:e};return b.a.runKernel(re.X,n,r)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kr=Object(se.b)({elu_:function(e){const t={x:Object(ae.a)(e,"x","elu","float32")};return b.a.runKernel(re.Y,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xr=Object(se.b)({erf_:function(e){let t=Object(ae.a)(e,"x","erf");N.b("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=ie(t,"float32"));const n={x:t};return b.a.runKernel(re.bb,n)}});
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yr(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Qr(e,t,n){const r=e.length+t.length,a=[];let s=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?a.push(e[s++]):a.push(t[i++]);return a}function Zr(e,t){const n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map((t=>e[t]))]}function Jr(e,t){return Qr(e,t.map((e=>1)),t)}function ea(e,t,n){N.b(Yr(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function ta(e,t){if(Yr(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function na(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function ra(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aa=Object(se.b)({max_:function(e,t=null,n=!1){const r={x:Object(ae.a)(e,"x","max")},a={reductionIndices:t,keepDims:n};return b.a.runKernel(re.Mb,r,a)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sa=Object(se.b)({min_:function(e,t=null,n=!1){const r={x:Object(ae.a)(e,"x","min")},a={axis:t,keepDims:n};return b.a.runKernel(re.Ub,r,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ia=Object(se.b)({sum_:function(e,t=null,n=!1){let r=Object(ae.a)(e,"x","sum");"bool"===r.dtype&&(r=ie(r,"int32"));const a={x:r},s={axis:t,keepDims:n};return b.a.runKernel(re.dd,a,s)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oa(e,t,n=null){if(0===e.rank)return _n(e);if(1!==e.rank&&null===n)return oa(sr(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return ia(_n(e),n);if(t===1/0)return aa(_n(e),n);if(t===-1/0)return sa(_n(e),n);if("euclidean"===t||2===t)return on(ia(wn(_n(e),gn(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return aa(ia(_n(e),n[0]),n[1]-1);if(t===1/0)return aa(ia(_n(e),n[1]),n[0]);if(t===-1/0)return sa(ia(_n(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return on(ia(un(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const ua=Object(se.b)({norm_:function(e,t="euclidean",n=null,r=!1){const a=oa(e=Object(ae.a)(e,"x","norm"),t,n);let s=a.shape;if(r){const t=Object(N.I)(n,e.shape);s=Jr(a.shape,t)}return sr(a,s)}});
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ca=Object(se.b)({euclideanNorm_:function(e,t=null,n=!1){return ua(e,"euclidean",t,n)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const la=Object(se.b)({exp_:function(e){const t={x:Object(ae.a)(e,"x","exp")};return b.a.runKernel(re.cb,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const da=Object(se.b)({expandDims_:function(e,t=0){const n=Object(ae.a)(e,"x","expandDims","string_or_numeric");N.b(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},a={dim:t};return b.a.runKernel(re.db,r,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pa=Object(se.b)({expm1_:function(e){const t={x:Object(ae.a)(e,"x","expm1")};return b.a.runKernel(re.eb,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ha=Object(se.b)({tile_:function(e,t){const n=Object(ae.a)(e,"x","tile","string_or_numeric");N.b(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},a={reps:t};return b.a.runKernel(re.gd,r,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fa=Object(se.b)({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const a=ne([e,t],r),s=e<=t?e:t;for(let e=0;e<s;++e)a.set(1,e,e);const i=sr(a.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return ha(da(i,0),[n[0],1,1]);if(2===n.length)return ha(da(da(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return ha(da(da(da(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ma=Object(se.b)({floor_:function(e){const t={x:Object(ae.a)(e,"x","floor","float32")};return b.a.runKernel(re.ib,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ba=Object(se.b)({gather_:function(e,t,n=0,r=0){const a={x:Object(ae.a)(e,"x","gather"),indices:Object(ae.a)(t,"indices","gather","int32")},s={axis:n,batchDims:r};return b.a.runKernel(re.pb,a,s)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ga=Object(se.b)({greater_:function(e,t){let n=Object(ae.a)(e,"a","greater","string_or_numeric"),r=Object(ae.a)(t,"b","greater","string_or_numeric");[n,r]=Object(Ee.makeTypesMatch)(n,r),ct(n.shape,r.shape);const a={a:n,b:r};return b.a.runKernel(re.qb,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xa=Object(se.b)({greaterEqual_:function(e,t){let n=Object(ae.a)(e,"a","greaterEqual","string_or_numeric"),r=Object(ae.a)(t,"b","greaterEqual","string_or_numeric");[n,r]=Object(Ee.makeTypesMatch)(n,r),ct(n.shape,r.shape);const a={a:n,b:r};return b.a.runKernel(re.rb,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ya=Object(se.b)({isFinite_:function(e){const t={x:Object(ae.a)(e,"x","isFinite")};return b.a.runKernel(re.vb,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ka=Object(se.b)({isInf_:function(e){const t={x:Object(ae.a)(e,"x","isInf")};return b.a.runKernel(re.wb,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const va=Object(se.b)({isNaN_:function(e){const t={x:Object(ae.a)(e,"x","isNaN")};return b.a.runKernel(re.xb,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wa=Object(se.b)({leakyRelu_:function(e,t=.2){const n={x:Object(ae.a)(e,"x","leakyRelu")},r={alpha:t};return b.a.runKernel(re.Ab,n,r)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ia=Object(se.b)({less_:function(e,t){let n=Object(ae.a)(e,"a","less","string_or_numeric"),r=Object(ae.a)(t,"b","less","string_or_numeric");[n,r]=Object(Ee.makeTypesMatch)(n,r),ct(n.shape,r.shape);const a={a:n,b:r};return b.a.runKernel(re.Bb,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sa=Object(se.b)({lessEqual_:function(e,t){let n=Object(ae.a)(e,"a","lessEqual","string_or_numeric"),r=Object(ae.a)(t,"b","lessEqual","string_or_numeric");[n,r]=Object(Ee.makeTypesMatch)(n,r),ct(n.shape,r.shape);const a={a:n,b:r};return b.a.runKernel(re.Cb,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _a(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return b.a.runKernel(re.Db,{},r)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ca=Object(se.b)({localResponseNormalization_:function(e,t=5,n=1,r=1,a=.5){const s=Object(ae.a)(e,"x","localResponseNormalization");N.b(4===s.rank||3===s.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${s.rank}.`)),N.b(N.v(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=s,o=!1;3===s.rank&&(o=!0,i=sr(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const u={x:i},c={depthRadius:t,bias:n,alpha:r,beta:a},l=b.a.runKernel(re.yb,u,c);return o?sr(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oa=Object(se.b)({log_:function(e){const t={x:Object(ae.a)(e,"x","log","float32")};return b.a.runKernel(re.Eb,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $a=Object(se.b)({log1p_:function(e){const t={x:Object(ae.a)(e,"x","log1p")};return b.a.runKernel(re.Fb,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ta=Object(se.b)({softplus_:function(e){const t={x:Object(ae.a)(e,"x","softplus")};return b.a.runKernel(re.Mc,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Aa=Object(se.b)({logSigmoid_:function(e){const t=Object(ae.a)(e,"x","logSigmoid"),n=mn((e=>({value:rt(Ta(rt(e))),gradFunc:t=>sn(t,cr(rt(e)))})));return n(t)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ea=Object(se.b)({logSoftmax_:function(e,t=-1){const n=Object(ae.a)(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const r=mn(((e,n)=>{const r=aa(e,t,!0),a=In(e,r),s=In(ie(a,"float32"),Oa(ia(la(a),t,!0)));n([s]);return{value:s,gradFunc:(e,n)=>{const[r]=n,a=la(r);return In(e,sn(ia(e,t,!0),a))}}}));return r(n)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Na=Object(se.b)({logSumExp_:function(e,t=null,n=!1){const r=Object(ae.a)(e,"x","logSumExp"),a=Object(N.I)(t,r.shape),s=aa(r,a,!0),i=In(r,s),o=la(i),u=ia(o,a),c=Oa(u),l=nn(sr(s,c.shape),c);if(n){const e=Jr(l.shape,a);return sr(l,e)}return l}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ra=Object(se.b)({logicalAnd_:function(e,t){const n=Object(ae.a)(e,"a","logicalAnd","bool"),r=Object(ae.a)(t,"b","logicalAnd","bool");ct(n.shape,r.shape);const a={a:n,b:r};return b.a.runKernel(re.Hb,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fa=Object(se.b)({logicalNot_:function(e){const t={x:Object(ae.a)(e,"x","logicalNot","bool")};return b.a.runKernel(re.Ib,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ma=Object(se.b)({logicalOr_:function(e,t){const n=Object(ae.a)(e,"a","logicalOr","bool"),r=Object(ae.a)(t,"b","logicalOr","bool");ct(n.shape,r.shape);const a={a:n,b:r};return b.a.runKernel(re.Jb,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Da=Object(se.b)({logicalXor_:function(e,t){const n=Object(ae.a)(e,"a","logicalXor","bool"),r=Object(ae.a)(t,"b","logicalXor","bool");return ct(n.shape,r.shape),Ra(Ma(e,t),Fa(Ra(e,t)))}}),Pa=2147483648;
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ba=Object(se.b)({searchSorted_:function(e,t,n="left"){const r=Object(ae.a)(e,"sortedSequence","searchSorted"),a=Object(ae.a)(t,"values","searchSorted"),s=r.shape[r.shape.length-1],i=a.shape[a.shape.length-1],o=sr(r,[-1,s]),u=sr(a,[-1,i]);if(o.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==u.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(Object(N.O)(u.shape)>=Pa)throw new Error("values tensor size must less than 2147483648");if(o.shape[1]>=Pa)throw new Error(`trailing dim_size must less than 2147483648 for int32 output type, was ${o.shape[1]}`);const c={sortedSequence:o,values:u},l={side:n};return b.a.runKernel(re.Dc,c,l)}});
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ja(e,t){return Ba(e,t,"left")}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const La=Object(se.b)({maxPool_:function(e,t,n,r,a){const s=Object(ae.a)(e,"x","maxPool");let i=s,o=!1;3===s.rank&&(o=!0,i=sr(s,[1,s.shape[0],s.shape[1],s.shape[2]])),N.b(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),N.b(nr(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),ar("maxPool",r,a);const u={x:i},c={filterSize:t,strides:n,pad:r,dimRoundingMode:a},l=b.a.runKernel(re.Nb,u,c);return o?sr(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const za=Object(se.b)({maxPool3d_:function(e,t=[1,1,1],n,r,a,s="NDHWC"){const i=Object(ae.a)(e,"x","maxPool3d");let o=i,u=!1;4===i.rank&&(u=!0,o=sr(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),N.b(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),N.b("NDHWC"===s,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),ar("maxPool3d",r,a);const c={x:o},l={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},d=b.a.runKernel(re.Ob,c,l);return u?sr(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wa=Object(se.b)({maxPoolWithArgmax_:function(e,t,n,r,a=!1){const s={x:Object(ae.a)(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:r,includeBatchInIndex:a},o=b.a.runKernel(re.Rb,s,i);return{result:o[0],indexes:o[1]}}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ua=Object(se.b)({mean_:function(e,t=null,n=!1){const r={x:Object(ae.a)(e,"x","mean")},a={axis:t,keepDims:n};return b.a.runKernel(re.Tb,r,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ga(e,t="float32"){if("complex64"===t){const t=Ga(e,"float32"),n=Ga(e,"float32");return Object(tt.a)(t,n)}const n=Object(N.F)(Object(N.O)(e),t);return b.a.makeTensor(n,e,t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Va(e,t="float32"){if("complex64"===t){const t=Va(e,"float32"),n=Ga(e,"float32");return Object(tt.a)(t,n)}const n=Object(N.D)(Object(N.O)(e),t);return b.a.makeTensor(n,e,t)}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ha(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=Object(ae.a)(e,"x","meshgrid",e instanceof te.a?e.dtype:"float32");if(void 0===t)return[r];let a=Object(ae.a)(t,"y","meshgrid",t instanceof te.a?t.dtype:"float32");const s=Object(N.O)(r.shape),i=Object(N.O)(a.shape);return"xy"===n?(r=sr(r,[1,-1]),a=sr(a,[-1,1]),[Ne(Va([i,1],r.dtype),r),Ne(a,Va([1,s],a.dtype))]):(r=sr(r,[-1,1]),a=sr(a,[1,-1]),[Ne(r,Va([1,i],r.dtype)),Ne(Va([s,1],a.dtype),a)])}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qa=Object(se.b)({minimum_:function(e,t){let n=Object(ae.a)(e,"a","minimum"),r=Object(ae.a)(t,"b","minimum");[n,r]=Object(Ee.makeTypesMatch)(n,r),"bool"===n.dtype&&(n=ie(n,"int32"),r=ie(r,"int32")),ct(n.shape,r.shape);const a={a:n,b:r};return b.a.runKernel(re.Vb,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ka=Object(se.b)({mirrorPad_:function(e,t,n){N.b("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=Object(ae.a)(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");N.b(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));const a="reflect"===n?1:0;for(let e=0;e<r.rank;e++)N.b(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),N.b(t[e][0]>=0&&t[e][0]<=r.shape[e]-a&&t[e][1]>=0&&t[e][1]<=r.shape[e]-a,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-a} or less than 0 for input of shape ${r.shape}`));const s={paddings:t,mode:n},i={x:r};return b.a.runKernel(re.Wb,i,s)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xa=Object(se.b)({mod_:function(e,t){let n=Object(ae.a)(e,"a","mod"),r=Object(ae.a)(t,"b","mod");[n,r]=Object(Ee.makeTypesMatch)(n,r);const a={a:n,b:r};return b.a.runKernel(re.Xb,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ya=Object(se.b)({moments_:function(e,t=null,n=!1){e=Object(ae.a)(e,"x","moments");const r=Object(N.I)(t,e.shape),a=Ua(e,r,n);let s=a.shape;n||(s=Jr(a.shape,r));const i=un(In(ie(e,"float32"),sr(a,s)));return{mean:a,variance:Ua(i,r,n)}}});const Qa=Object(se.b)({multiRNNCell_:function(e,t,n,r){const a=Object(ae.a)(t,"data","multiRNNCell"),s=Object(ae.b)(n,"c","multiRNNCell"),i=Object(ae.b)(r,"h","multiRNNCell");let o=a;const u=[];for(let t=0;t<e.length;t++){const n=e[t](o,s[t],i[t]);u.push(n[0]),u.push(n[1]),o=n[1]}const c=[],l=[];for(let e=0;e<u.length;e+=2)c.push(u[e]),l.push(u[e+1]);return[c,l]}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Za=Object(se.b)({multinomial_:function(e,t,n,r=!1){const a=Object(ae.a)(e,"logits","multinomial"),s=a.size,i=a.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();const o={logits:1===i?sr(a,[1,-1]):a},u={numSamples:t,seed:n,normalized:r},c=b.a.runKernel(re.Yb,o,u);return 1===i?sr(c,[c.size]):c}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ja=Object(se.b)({notEqual_:function(e,t){let n=Object(ae.a)(e,"a","notEqual","string_or_numeric"),r=Object(ae.a)(t,"b","notEqual","string_or_numeric");[n,r]=Object(Ee.makeTypesMatch)(n,r),ct(n.shape,r.shape);const a={a:n,b:r};return b.a.runKernel(re.ec,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const es=Object(se.b)({onesLike_:function(e){const t={x:Object(ae.a)(e,"x","onesLike")};return b.a.runKernel(re.gc,t)}});const ts=Object(se.b)({outerProduct_:function(e,t){const n=Object(ae.a)(e,"v1","outerProduct"),r=Object(ae.a)(t,"v2","outerProduct");N.b(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));const a=sr(n,[-1,1]),s=sr(r,[1,-1]);return Ne(a,s)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ns=Object(se.b)({pad_:function(e,t,n=0){const r=Object(ae.a)(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const a={paddings:t,constantValue:n},s={x:r};return b.a.runKernel(re.ic,s,a)}});const rs=Object(se.b)({pad1d_:function(e,t,n=0){return Object(N.b)(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),ns(e,[t],n)}});const as=Object(se.b)({pad2d_:function(e,t,n=0){return Object(N.b)(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),ns(e,t,n)}});const ss=Object(se.b)({pad3d_:function(e,t,n=0){return Object(N.b)(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),ns(e,t,n)}});const is=Object(se.b)({pad4d_:function(e,t,n=0){return Object(N.b)(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),ns(e,t,n)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const os=Object(se.b)({spaceToBatchND_:function(e,t,n){const r=Object(ae.a)(e,"x","spaceToBatchND");N.b(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),N.b(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),N.b(r.shape.reduce(((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]==0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const a={x:r},s={blockShape:t,paddings:n};return b.a.runKernel(re.Nc,a,s)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const us=Object(se.b)({pool_:function(e,t,n,r,a,s,i){null==a&&(a=[1,1]),null==s&&(s=1),0===r&&(r="valid");const o=Object(ae.a)(e,"x","maxPool");let u=o,c=!1;3===o.rank&&(c=!0,u=sr(o,[1,o.shape[0],o.shape[1],o.shape[2]])),N.b(nr(s,a),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`));const l=Hn(u.shape,t,s,a,r),d=[l.dilationHeight,l.dilationWidth];let p;p="same"===r?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),a=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],a[t]]))}([l.filterHeight,l.filterWidth],d):[[0,0],[0,0]];const h=1===d[0]&&1===d[1],[f,m]=function(e,t,n){const r=n.map((e=>e[0])),a=n.map((e=>e[1])),s=e.concat(r,a),i=t.map(((e,t)=>(e-s[t]%e)%e)),o=a.map(((e,t)=>e+i[t])),u=t.map(((e,t)=>[r[t],o[t]])),c=t.map(((e,t)=>[0,i[t]]));return[u,c]}([l.inHeight,l.inWidth],d,p),b=h?r:"valid",g=h?u:os(u,d,f),x=("avg"===n?()=>ir(g,t,s,b,i):()=>La(g,t,s,b,i))(),y=h?x:hr(x,d,m);return c?sr(y,[y.shape[1],y.shape[2],y.shape[3]]):y}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cs=Object(se.b)({prelu_:function(e,t){const n={x:Object(ae.a)(e,"x","prelu"),alpha:Object(ae.a)(t,"alpha","prelu")};return b.a.runKernel(re.lc,n)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ls=Object(se.b)({prod_:function(e,t=null,n=!1){let r=Object(ae.a)(e,"x","prod");"bool"===r.dtype&&(r=ie(r,"int32"));const a={x:r},s={axis:t,keepDims:n};return b.a.runKernel(re.mc,a,s)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ds=Object(se.b)({rand_:function(e,t,n){const r=Object(N.O)(e);let a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);a=new Uint8Array(r)}for(let e=0;e<r;e++)a[e]=t();return b.a.makeTensor(a,e,n)}});var ps=n(49);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hs{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const s=a||Math.random();this.random=ps.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);const i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*a*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class fs{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;const a=r||Math.random();this.randu=ps.alea(a.toString()),this.randn=new hs(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,s;for(;;){do{r=this.randn.nextValue(),s=1+this.c*r}while(s<=0);if(s*=s*s,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),a=this.randu(),a<t||Math.log(a)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class ms{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=ps.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const bs=Object(se.b)({randomGamma_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t,n=1,r="float32",a){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);const s=new fs(t,n,r,a),i=ne(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gs=Object(se.b)({randomNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const s=new hs(t,n,r,!1,a),i=ne(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}});
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xs=Object(se.b)({randomStandardNormal_:function(e,t,n){if(null!=t&&"bool"===t)throw new Error(`Unsupported data type ${t}`);return gs(e,0,1,t,n)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ys=Object(se.b)({randomUniform_:function(e,t=0,n=1,r="float32",a){const s=ne(e,r),i=new ms(t,n,null,a);for(let e=0;e<s.values.length;e++)s.values[e]=i.nextValue();return s.toTensor()}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ks(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const a={start:e,stop:t,step:n,dtype:r};return b.a.runKernel(re.nc,{},a)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vs=Object(se.b)({reciprocal_:function(e){const t={x:Object(ae.a)(e,"x","reciprocal")};return b.a.runKernel(re.qc,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ws=Object(se.b)({relu_:function(e){const t={x:Object(ae.a)(e,"x","relu")};return b.a.runKernel(re.rc,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Is=Object(se.b)({relu6_:function(e){const t={x:Object(ae.a)(e,"x","relu6")};return b.a.runKernel(re.sc,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ss=Object(se.b)({reverse_:function(e,t){const n={x:Object(ae.a)(e,"x","reverse")},r={dims:t};return b.a.runKernel(re.yc,n,r)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _s=Object(se.b)({reverse1d_:function(e){const t=Object(ae.a)(e,"x","reverse");return N.b(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),Ss(t,0)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cs=Object(se.b)({reverse2d_:function(e,t){const n=Object(ae.a)(e,"x","reverse");return N.b(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),Ss(n,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Os=Object(se.b)({reverse3d_:function(e,t){const n=Object(ae.a)(e,"x","reverse");return N.b(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),Ss(n,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $s=Object(se.b)({reverse4d_:function(e,t){const n=Object(ae.a)(e,"x","reverse");return N.b(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),Ss(n,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ts=Object(se.b)({round_:function(e){const t={x:Object(ae.a)(e,"x","round")};return b.a.runKernel(re.Ac,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const As=Object(se.b)({rsqrt_:function(e){const t={x:Object(ae.a)(e,"x","rsqrt","float32")};return b.a.runKernel(re.Bc,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Es=Object(se.b)({selu_:function(e){const t={x:Object(ae.a)(e,"x","selu")};return b.a.runKernel(re.Fc,t)}});const Ns=Object(se.b)({separableConv2d_:function(e,t,n,r,a,s=[1,1],i="NHWC"){const o=Object(ae.a)(e,"x","separableConv2d"),u=Object(ae.a)(t,"depthwiseFilter","separableConv2d"),c=Object(ae.a)(n,"pointwiseFilter","separableConv2d");let l=o,d=!1;if(3===o.rank&&(d=!0,l=sr(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");N.b(4===l.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${l.rank}.`)),N.b(4===u.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`)),N.b(4===c.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`)),N.b(1===c.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`)),N.b(1===c.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`));const p=u.shape[2],h=u.shape[3];N.b(c.shape[2]===p*h,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*h}, but got ${c.shape[2]}.`));const f=Lr(l,u,r,a,i,s),m=Or(f,c,1,"valid",i);return d?sr(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rs=async function(e,t){const n=Object(ae.a)(e,"x","setdiff1d"),r=Object(ae.a)(t,"y","setdiff1d");N.b(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),N.b(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),N.b(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));const a=await n.data(),s=await r.data(),i=new Set(s);let o=0;for(let e=0;e<a.length;e++)i.has(a[e])||o++;const u=new te.b([o],n.dtype),c=new te.b([o],"int32");for(let e=0,t=0;e<a.length;e++)i.has(a[e])||(u.values[t]=a[e],c.values[t]=e,t++);return[u.toTensor(),c.toTensor()]};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fs=Object(se.b)({sign_:function(e){const t={x:Object(ae.a)(e,"x","sign")};return b.a.runKernel(re.Hc,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ms=Object(se.b)({sin_:function(e){const t={x:Object(ae.a)(e,"x","sin","float32")};return b.a.runKernel(re.Ic,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ds=Object(se.b)({sinh_:function(e){const t={x:Object(ae.a)(e,"x","sinh")};return b.a.runKernel(re.Jc,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ps=Object(se.b)({slice1d_:function(e,t,n){const r=Object(ae.a)(e,"x","slice1d");return N.b(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),lr(r,[t],[n])}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bs=Object(se.b)({slice2d_:function(e,t,n){const r=Object(ae.a)(e,"x","slice2d");return N.b(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),lr(r,t,n)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const js=Object(se.b)({slice3d_:function(e,t,n){const r=Object(ae.a)(e,"x","slice3d");return N.b(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),lr(r,t,n)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ls=Object(se.b)({slice4d_:function(e,t,n){const r=Object(ae.a)(e,"x","slice4d");return N.b(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),lr(r,t,n)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zs=Object(se.b)({softmax_:function(e,t=-1){const n=Object(ae.a)(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},a={dim:t};return b.a.runKernel(re.Lc,r,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ws=Object(se.b)({fft_:function(e){Object(N.b)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return b.a.runKernel(re.fb,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Us=Object(se.b)({ifft_:function(e){Object(N.b)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return b.a.runKernel(re.sb,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gs=Object(se.b)({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const a=sr(e,[n,t]);r=Us(a)}else{const a=[n,2*(t-1)],s=sr(at(e),[n,t]),i=sr(nt(e),[n,t]),o=Ss(lr(s,[0,1],[n,t-2]),1),u=sn(Ss(lr(i,[0,1],[n,t-2]),1),gn(-1)),c=ur([s,o],1),l=ur([i,u],1),d=sr(Object(tt.a)(c,l),[a[0],a[1]]);r=Us(d)}if(r=at(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=sr(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vs=Object(se.b)({split_:function(e,t,n=0){const r={x:Object(ae.a)(e,"x","split")},a={numOrSizeSplits:t,axis:n};return b.a.runKernel(re.Tc,r,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hs=Object(se.b)({rfft_:function(e,t){Object(N.b)("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let a;if(null!=t&&t<n){const r=e.shape.map((e=>0)),s=e.shape.map((e=>e));s[e.shape.length-1]=t,a=lr(e,r,s),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,a=ur([e,Ga(r)],e.shape.length-1),n=t}else a=e;const s=cn(a),i=sr(Object(tt.a)(a,s),[r,n]),o=Ws(i),u=Math.floor(n/2)+1,c=at(o),l=nt(o),d=Vs(c,[u,n-u],c.shape.length-1),p=Vs(l,[u,n-u],l.shape.length-1),h=a.shape.slice();return h[a.shape.length-1]=u,sr(Object(tt.a)(d[0],p[0]),h)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qs=Object(se.b)({squaredDifference_:function(e,t){let n=Object(ae.a)(e,"a","squaredDifference"),r=Object(ae.a)(t,"b","squaredDifference");[n,r]=Object(Ee.makeTypesMatch)(n,r),ct(n.shape,r.shape);const a={a:n,b:r};return b.a.runKernel(re.Wc,a,{})}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ks=Object(se.b)({squeeze_:function(e,t){const n=Object(ae.a)(e,"x","squeeze","string_or_numeric");return sr(n,Object(N.Q)(n.shape,t).newShape)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xs=Object(se.b)({stack_:function(e,t=0){const n=Object(ae.b)(e,"tensors","stack","string_or_numeric");N.b(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&N.b(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,a={axis:t};return b.a.runKernel(re.hc,r,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ys=Object(se.b)({step_:function(e,t=0){const n={x:Object(ae.a)(e,"x","step")},r={alpha:t};return b.a.runKernel(re.Xc,n,r)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qs=Object(se.b)({stridedSlice_:function(e,t,n,r,a=0,s=0,i=0,o=0,u=0){const c={x:Object(ae.a)(e,"x","stridedSlice","string_or_numeric")},l={begin:t,end:n,strides:r,beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};return b.a.runKernel(re.Yc,c,l)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zs=Object(se.b)({tan_:function(e){const t={x:Object(ae.a)(e,"x","tan","float32")};return b.a.runKernel(re.ed,t)}});var Js=n(32);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ei(e,t){Object(N.d)(e);const n=Object(ae.c)(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Object(dt.a)(e,null,n,t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ti(e,t,n){if(Object(N.d)(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Object(ae.c)(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Object(dt.a)(e,t,r,n)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ni(e,t,n){if(Object(N.d)(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=Object(ae.c)(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Object(dt.a)(e,t,r,n)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ri(e,t,n){if(Object(N.d)(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=Object(ae.c)(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Object(dt.a)(e,t,r,n)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ai(e,t,n){if(Object(N.d)(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=Object(ae.c)(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||r,Object(dt.a)(e,t,r,n)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const si=Object(se.b)({topk_:function(e,t=1,n=!0){const r=Object(ae.a)(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const a=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${t}`);const s={x:r},i={k:t,sorted:n},[o,u]=b.a.runKernel(re.hd,s,i);return{values:o,indices:u}}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ii=Object(se.b)({truncatedNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const s=new hs(t,n,r,!0,a),i=ne(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oi=Object(se.b)({unique_:function(e,t=0){const n=Object(ae.a)(e,"x","unique","string_or_numeric");Object(N.b)(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},a={axis:t},[s,i]=b.a.runKernel(re.kd,r,a);return{values:s,indices:i}}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ui=Object(se.b)({unsortedSegmentSum_:function(e,t,n){const r=Object(ae.a)(e,"x","unsortedSegmentSum"),a=Object(ae.a)(t,"segmentIds","unsortedSegmentSum","int32");Object(N.b)(Object(N.v)(n),(()=>"numSegments must be of dtype int"));const s={x:r,segmentIds:a},i={numSegments:n};return b.a.runKernel(re.md,s,i)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ci=Object(se.b)({unstack_:function(e,t=0){const n=Object(ae.a)(e,"x","unstack","string_or_numeric");N.b(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},a={axis:t};return b.a.runKernel(re.ld,r,a)}});
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function li(e,t){return Ba(e,t,"right")}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function di(e,t=!0,n,r){return b.a.makeVariable(e,t,n,r)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pi(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=ne(e,"int32"),a=ne([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const s=r.indexToLoc(n[t]),i=t*e.length;a.values.set(s,i)}return a.toTensor()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hi=async function(e){const t=Object(ae.a)(e,"condition","whereAsync","bool"),n=await t.data(),r=pi(t.shape,n);return e!==t&&t.dispose(),r};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fi=async function(e,t,n){const r=Object(ae.a)(e,"tensor","boolMask"),a=Object(ae.a)(t,"mask","boolMask","bool"),s=null==n?0:n,i=a.rank,o=r.shape;N.b(i>0,(()=>"mask cannot be scalar")),N.e(o.slice(s,s+i),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let e=s;e<s+i;e++)u*=o[e];const c=o.slice(0,s).concat([u],o.slice(s+i)),l=sr(r,c),d=sr(a,[-1]),p=await hi(d),h=Ks(p,[1]),f=ba(l,h,s);return e!==r&&r.dispose(),t!==a&&a.dispose(),h.dispose(),l.dispose(),d.dispose(),p.dispose(),f};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mi=Object(se.b)({movingAverage_:function(e,t,n,r,a=!0){const s=Object(ae.a)(e,"v","movingAverage"),i=Object(ae.a)(t,"x","movingAverage"),o=Object(ae.a)(n,"decay","movingAverage");Object(Ee.assertTypesMatch)(s,i),N.b(N.a(s.shape,i.shape),(()=>"Shape mismatch in v and x"));const u=gn(1),c=In(u,o);let l=sn(In(i,s),c);if(a){N.b(null!=r,(()=>"When using zeroDebias: true, step is required."));const e=Object(ae.a)(r,"step","movingAverage");l=an(l,In(u,wn(o,e)))}return nn(s,l)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bi=Object(se.b)({scatterND_:function(e,t,n){const r=Object(ae.a)(e,"indices","scatterND","int32"),a=Object(ae.a)(t,"updates","scatterND");vt(a,r,n);const s={indices:r,updates:a},i={shape:n};return b.a.runKernel(re.Cc,s,i)}});const gi=Object(se.b)({sparseToDense_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t,n,r=0){const a=Object(ae.a)(e,"sparseIndices","sparseToDense","int32"),s=Object(ae.a)(t,"sparseValues","sparseToDense","string_or_numeric"),i=Object(ae.a)(r,"defaultValue","sparseToDense",s.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);const i=t.size;if(0!==t.rank&&(1!==t.rank||i!==a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(a,s,n,i);const o={sparseIndices:a,sparseValues:s,defaultValue:i},u={outputShape:n};return b.a.runKernel(re.Sc,o,u)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xi=Object(se.b)({gatherND_:function(e,t){const n=Object(ae.a)(t,"indices","gatherND","int32"),r={params:Object(ae.a)(e,"x","gatherND","string_or_numeric"),indices:n};return b.a.runKernel(re.ob,r)}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yi=Object(se.b)({dropout_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t,n,r){const a=Object(ae.a)(e,"x","dropout");if(N.b("float32"===a.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`)),N.b(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof te.a?a.clone():a;const s=function(e,t){if(null==t)return e.shape.slice();if(N.a(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(a,n),i=1-t,o=an(ma(nn(ys(s,0,1,"float32",r),i)),i);return sn(a,o)}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ki(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function vi(e,t,n){const r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){const i=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(i)}return ei(a,"float32")}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wi=async function(e,t,n=1){const r=Object(ae.a)(e,"predictions","inTopK"),a=Object(ae.a)(t,"targets","inTopK");Object(N.b)(r.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`)),Object(N.b)(r.rank-1===a.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`)),Object(N.e)(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const s=r.shape[r.shape.length-1];Object(N.b)(n>0&&n<=s,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`));const i=await r.data(),o=await a.data(),[u,c]=[i.length/s,s],l=Object(N.o)("bool",u);for(let e=0;e<u;e++){const t=e*c,r=i.subarray(t,t+c),a=[];for(let e=0;e<r.length;e++)a.push({value:r[e],index:e});a.sort(((e,t)=>t.value-e.value)),l[e]=0;for(let t=0;t<n;t++)if(a[t].index===o[e]){l[e]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),Object(Js.a)(l,a.shape,"bool")};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ii=Object(se.b)({conv2DBackpropFilter_:function(e,t,n,r,a,s="NHWC",i){let o=e;3===e.rank&&(o=sr(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=sr(t,[1,t.shape[0],t.shape[1],t.shape[2]])),N.b(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),N.b(4===u.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`)),N.b(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const c="NHWC"===s?o.shape[3]:o.shape[1],l="NHWC"===s?u.shape[3]:u.shape[1];N.b(c===n[2],(()=>`Error in conv2dDerFilter: depth of input ${c}) must match input depth in filter (${n[2]}.`)),N.b(l===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${l}) must match output depth for filter (${n[3]}).`)),ar("conv2dDerFilter",a,i);const d={x:o,dy:u},p={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,filterShape:n};return b.a.runKernel(re.E,d,p)}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Si(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return sn(e,Ys(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function _i(e,t){let n=t;const r=ut(e.shape,t.shape);return r.length>0&&(n=ia(n,r)),sr(n,e.shape)}function Ci(e,t,n,r){if("linear"===t)return e;if("relu"===t)return ws(e);if("elu"===t)return Kr(e);if("relu6"===t)return Is(e);if("prelu"===t)return cs(e,n);if("leakyrelu"===t)return wa(e,r);if("sigmoid"===t)return cr(e);throw new Error(`Unknown fused activation ${t}.`)}const Oi=(e,t)=>!(e>0)||"linear"===t;
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $i=Object(se.b)({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:c,leakyreluAlpha:l}){if(u=u||"linear",!1===Oi(b.a.state.gradientDepth,u)){N.b("NHWC"===a,(()=>`Error in fused conv2d: got dataFormat of ${a} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let d=Or(e,t,n,r,a,s,i);return null!=o&&(d=nn(d,o)),Ci(d,u,c,l)}const d=Object(ae.a)(e,"x","conv2d","float32"),p=Object(ae.a)(t,"filter","conv2d","float32");let h=d,f=!1;3===d.rank&&(f=!0,h=sr(d,[1,d.shape[0],d.shape[1],d.shape[2]])),N.b(4===h.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${h.rank}.`)),N.b(4===p.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`)),ar("fused conv2d",r,i);const m="NHWC"===a?h.shape[3]:h.shape[1];N.b(p.shape[2]===m,(()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${p.shape[2]}.`)),N.b(nr(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`));const g=Kn(h.shape,p.shape,n,s,r,i);let x,y;if(null!=o&&(x=Object(ae.a)(o,"bias","fused conv2d"),[x]=Object(Ee.makeTypesMatch)(x,d),"NHWC"===a?ct(g.outShape,x.shape):(N.b(x.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${x.shape.length}.`)),N.b(0===x.shape.length||x.shape[0]===g.outChannels||1===x.shape[0],(()=>`Error in fused conv2d: bias shape (${x.shape}) is not compatible with the number of output channels (${g.outChannels})`)))),null!=c){const e=c.shape;if(N.b(e.length<=1||3===e.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`)),1===e.length)N.b(1===e[0]||e[0]===g.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${g.outChannels}).`));else if(3===e.length)try{ct(e,g.outShape)}catch(t){const n=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(n)}y=Object(ae.a)(c,"prelu weights","fused conv2d")}const k=(e,t)=>{N.b("NHWC"===a,(()=>`Error in gradient of fused conv2D: got dataFormat of ${a} but only NHWC is currently supported.`));const[i,o,c,l]=t,d=Si(e,c,u);N.b(tr(s),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));const p=[Tr(o.shape,d,i,n,r),Ii(o,d,i.shape,n,r)];if(null!=l){const e=_i(l,d);p.push(e)}return p},v={x:h,filter:p,bias:x,preluActivationWeights:y},w={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:u,leakyreluAlpha:l};if(null==o){const e=mn(((e,t,n)=>{let r=b.a.runKernel(re.mb,v,w);return n([t,e,r]),f&&(r=sr(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:k}}));return e(h,p)}{const e=mn(((e,t,n,r)=>{let a=b.a.runKernel(re.mb,v,w);return r([t,e,a,n]),f&&(a=sr(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:k}}));return e(h,p,x)}}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ti=Object(se.b)({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,a,s=[1,1],i){let o=e;3===e.rank&&(o=sr(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=sr(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const c={x:o,dy:u},l={strides:r,pad:a,dimRoundingMode:i,dilations:s,filterShape:n};return b.a.runKernel(re.R,c,l)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ai=Object(se.b)({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,a,s=[1,1],i){let o=t,u=!1;3===t.rank&&(u=!0,o=sr(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const c={dy:o,filter:n},l={strides:r,pad:a,dimRoundingMode:i,dilations:s,inputShape:e},d=b.a.runKernel(re.S,c,l);return u?sr(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ei=Object(se.b)({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:c,leakyreluAlpha:l}){if(!1===Oi(b.a.state.gradientDepth,u)){let d=Lr(e,t,n,r,a,s,i);return null!=o&&(d=nn(d,o)),Ci(d,u,c,l)}const d=Object(ae.a)(e,"x","depthwiseConv2d","float32"),p=Object(ae.a)(t,"filter","depthwiseConv2d","float32");let h=d,f=!1;3===d.rank&&(f=!0,h=sr(d,[1,d.shape[0],d.shape[1],d.shape[2]])),N.b(4===h.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${h.rank}.`)),N.b(4===p.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`)),N.b(h.shape[3]===p.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${h.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`)),null==s&&(s=[1,1]),N.b(nr(n,s),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),ar("fused depthwiseConv2d",r,i);const m=Kn(h.shape,p.shape,n,s,r,i,!0);let g,x;null!=o&&(g=Object(ae.a)(o,"bias","fused conv2d"),[g]=Object(Ee.makeTypesMatch)(g,d),ct(m.outShape,g.shape)),null!=c&&(x=Object(ae.a)(c,"prelu weights","fused depthwiseConv2d"));const y=(e,t)=>{N.b(tr(s),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`));const[a,o,c,l]=t,d=Si(e,c,u),p=Ai(o.shape,d,a,n,r,s,i),h=Ti(o,d,a.shape,n,r,s,i);if(null!=l){return[p,h,_i(g,d)]}return[p,h]},k={x:h,filter:p,bias:g,preluActivationWeights:x},v={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:u,leakyreluAlpha:l};if(null==o){const e=mn(((e,t,n)=>{let r=b.a.runKernel(re.nb,k,v);return n([t,e,r]),f&&(r=sr(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:y}}));return e(h,p)}{const e=mn(((e,t,n,r)=>{let a=b.a.runKernel(re.nb,k,v);return r([t,e,a,n]),f&&(a=sr(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:y}}));return e(h,p,g)}}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ni=Object(se.b)({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:o=.2}){if(!1===Oi(b.a.state.gradientDepth,s)){let u=Ne(e,t,n,r);return null!=a&&(u=nn(u,a)),Ci(u,s,i,o)}let u=Object(ae.a)(e,"a","fused matMul"),c=Object(ae.a)(t,"b","fused matMul");[u,c]=Object(Ee.makeTypesMatch)(u,c);const l=n?u.shape[u.rank-2]:u.shape[u.rank-1],d=r?c.shape[c.rank-1]:c.shape[c.rank-2],p=n?u.shape[u.rank-1]:u.shape[u.rank-2],h=r?c.shape[c.rank-2]:c.shape[c.rank-1],f=u.shape.slice(0,-2),m=c.shape.slice(0,-2),g=N.O(f),x=N.O(m);N.b(l===d,(()=>`Error in fused matMul: inner shapes (${l}) and (${d}) of Tensors with shapes ${u.shape} and ${c.shape} and transposeA=${n} and transposeB=${r} must match.`));const y=ct(u.shape.slice(0,-2),c.shape.slice(0,-2)).concat([p,h]),k=sr(u,n?[g,l,p]:[g,p,l]),v=sr(c,r?[x,h,d]:[x,d,h]);let w,I;null!=a&&(w=Object(ae.a)(a,"bias","fused matMul"),[w]=Object(Ee.makeTypesMatch)(w,u),ct(y,w.shape)),null!=i&&(I=Object(ae.a)(i,"prelu weights","fused matMul"));const S=(e,t)=>{const[i,o,u,c]=t,l=Si(sr(e,u.shape),u,s);let d,p;if(n||r?!n&&r?(d=Ne(l,o,!1,!1),p=Ne(l,i,!0,!1)):n&&!r?(d=Ne(o,l,!1,!0),p=Ne(i,l,!1,!1)):(d=Ne(o,l,!0,!0),p=Ne(l,i,!0,!0)):(d=Ne(l,o,!1,!0),p=Ne(i,l,!0,!1)),null!=a){return[d,p,_i(c,l)]}return[d,p]},_={a:k,b:v,bias:w,preluActivationWeights:I},C={transposeA:n,transposeB:r,activation:s,leakyreluAlpha:o};if(null==a){const e=mn(((e,t,n)=>{const r=b.a.runKernel(re.pd,_,C);return n([e,t,r]),{value:sr(r,y),gradFunc:S}}));return e(k,v)}{const e=mn(((e,t,n,r)=>{const a=b.a.runKernel(re.pd,_,C);return r([e,t,a,n]),{value:sr(a,y),gradFunc:S}}));return e(k,v,w)}}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ri=Object(se.b)({hammingWindow_:function(e){return vi(e,.54,.46)}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fi=Object(se.b)({hannWindow_:function(e){return vi(e,.5,.5)}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mi=Object(se.b)({frame_:function(e,t,n,r=!1,a=0){let s=0;const i=[];for(;s+t<=e.size;)i.push(lr(e,s,t)),s+=n;if(r)for(;s<e.size;){const r=s+t-e.size,o=ur([lr(e,s,t-r),kn([r],a)]);i.push(o),s+=n}return 0===i.length?ti([],[0,t]):sr(ur(i),[i.length,t])}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Di=Object(se.b)({stft_:function(e,t,n,r,a=Fi){null==r&&(r=ki(t));const s=Mi(e,t,n),i=sn(s,a(t));return Hs(i,r)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pi=Object(se.b)({cropAndResize_:function(e,t,n,r,a="bilinear",s=0){const i=Object(ae.a)(e,"image","cropAndResize"),o=Object(ae.a)(t,"boxes","cropAndResize","float32"),u=Object(ae.a)(n,"boxInd","cropAndResize","int32"),c=o.shape[0];N.b(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),N.b(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${o.shape}.`)),N.b(1===u.rank&&u.shape[0]===c,(()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${o.shape}.`)),N.b(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),N.b(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),N.b("bilinear"===a||"nearest"===a,(()=>`method must be bilinear or nearest, but was ${a}`));const l={image:i,boxes:o,boxInd:u},d={method:a,extrapolationValue:s,cropSize:r};return b.a.runKernel(re.L,l,d)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bi=Object(se.b)({flipLeftRight_:function(e){const t=Object(ae.a)(e,"image","flipLeftRight","float32");N.b(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return b.a.runKernel(re.hb,n,{})}});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ji=Object(se.b)({grayscaleToRGB_:function(e){const t=Object(ae.a)(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];N.b(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),N.b(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const a=new Array(t.rank);return a.fill(1,0,n),a[n]=3,ha(t,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Li=Object(se.b)({rotateWithOffset_:function(e,t,n=0,r=.5){const a=Object(ae.a)(e,"image","rotateWithOffset","float32");N.b(4===a.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`));const s={image:a},i={radians:t,fillValue:n,center:r};return b.a.runKernel(re.zc,s,i)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zi(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);const i=e.shape[0];return n=Math.min(n,i),N.b(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),N.b(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),N.b(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),N.b(1===t.rank,(()=>"scores must be a 1D tensor")),N.b(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),N.b(0<=s&&s<=1,(()=>`softNmsSigma must be in [0, 1], but was '${s}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wi=Object(se.b)({nonMaxSuppression_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=Object(ae.a)(e,"boxes","nonMaxSuppression","float32"),i=Object(ae.a)(t,"scores","nonMaxSuppression","float32"),o=zi(s,i,n,r,a),u={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:a=o.scoreThreshold};return b.a.runKernel(re.bc,{boxes:s,scores:i},u)}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ui(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,a=e.length,s=0,i=!1;for(;r<a;){s=r+(a-r>>>1);const o=n(t,e[s]);o>0?r=s+1:(a=s,i=!o)}return i?r:-r-1}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(e,t,n||Gi)}(e,t,n),a=r<0?-(r+1):r;e.splice(a,0,t)}function Gi(e,t){return e>t?1:e<t?-1:0}function Vi(e,t,n,r,a){return Ki(e,t,n,r,a,0)}function Hi(e,t,n,r,a,s){return Ki(e,t,n,r,a,0,!1,s,!0)}function qi(e,t,n,r,a,s){return Ki(e,t,n,r,a,s,!0)}function Ki(e,t,n,r,a,s,i=!1,o=!1,u=!1){const c=[];for(let e=0;e<t.length;e++)t[e]>a&&c.push({score:t[e],boxIndex:e,suppressBeginIndex:0});c.sort(Qi);const l=s>0?-.5/s:0,d=[],p=[];for(;d.length<n&&c.length>0;){const t=c.pop(),{score:n,boxIndex:s,suppressBeginIndex:i}=t;if(n<a)break;let o=!1;for(let n=d.length-1;n>=i;--n){const i=Xi(e,s,d[n]);if(i>=r){o=!0;break}if(t.score=t.score*Yi(r,l,i),t.score<=a)break}t.suppressBeginIndex=d.length,o||(t.score===n?(d.push(s),p.push(t.score)):t.score>a&&Ui(c,t,Qi))}const h=d.length,f=n-h;o&&f>0&&(d.push(...new Array(f).fill(0)),p.push(...new Array(f).fill(0)));const m={selectedIndices:d};return i&&(m.selectedScores=p),u&&(m.validOutputs=h),m}function Xi(e,t,n){const r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),c=Math.min(a[0],a[2]),l=Math.min(a[1],a[3]),d=Math.max(a[0],a[2]),p=Math.max(a[1],a[3]),h=(o-s)*(u-i),f=(d-c)*(p-l);if(h<=0||f<=0)return 0;const m=Math.max(s,c),b=Math.max(i,l),g=Math.min(o,d),x=Math.min(u,p),y=Math.max(g-m,0)*Math.max(x-b,0);return y/(h+f-y)}function Yi(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function Qi(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zi=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=Object(ae.a)(e,"boxes","nonMaxSuppressionAsync"),i=Object(ae.a)(t,"scores","nonMaxSuppressionAsync"),o=zi(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;const u=await Promise.all([s.data(),i.data()]),c=u[0],l=u[1],{selectedIndices:d}=Vi(c,l,n,r,a);return s!==e&&s.dispose(),i!==t&&i.dispose(),ei(d,"int32")};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ji=Object(se.b)({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const i=Object(ae.a)(e,"boxes","nonMaxSuppression"),o=Object(ae.a)(t,"scores","nonMaxSuppression"),u=zi(i,o,n,r,a,s),c={boxes:i,scores:o},l={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:a=u.scoreThreshold,softNmsSigma:s=u.softNmsSigma},d=b.a.runKernel(re.dc,c,l);return{selectedIndices:d[0],selectedScores:d[1]}}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eo=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const i=Object(ae.a)(e,"boxes","nonMaxSuppressionAsync"),o=Object(ae.a)(t,"scores","nonMaxSuppressionAsync"),u=zi(i,o,n,r,a,s);n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,s=u.softNmsSigma;const c=await Promise.all([i.data(),o.data()]),l=c[0],d=c[1],{selectedIndices:p,selectedScores:h}=qi(l,d,n,r,a,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:ei(p,"int32"),selectedScores:ei(h)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const to=Object(se.b)({nonMaxSuppressionPadded_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const i=Object(ae.a)(e,"boxes","nonMaxSuppression"),o=Object(ae.a)(t,"scores","nonMaxSuppression"),u=zi(i,o,n,r,a,null),c={boxes:i,scores:o},l={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:s},d=b.a.runKernel(re.cc,c,l);return{selectedIndices:d[0],validOutputs:d[1]}}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const no=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const i=Object(ae.a)(e,"boxes","nonMaxSuppressionAsync"),o=Object(ae.a)(t,"scores","nonMaxSuppressionAsync"),u=zi(i,o,n,r,a,null),c=u.maxOutputSize,l=u.iouThreshold,d=u.scoreThreshold,[p,h]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=Hi(p,h,c,l,d,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:ei(f,"int32"),validOutputs:gn(m,"int32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ro=Object(se.b)({resizeBilinear_:function(e,t,n=!1,r=!1){const a=Object(ae.a)(e,"images","resizeBilinear");N.b(3===a.rank||4===a.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`)),N.b(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),N.b(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let s=a,i=!1;3===a.rank&&(i=!0,s=sr(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,o={images:s},u={alignCorners:n,halfPixelCenters:r,size:t},c=b.a.runKernel(re.uc,o,u);return i?sr(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ao=Object(se.b)({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const a=Object(ae.a)(e,"images","resizeNearestNeighbor");N.b(3===a.rank||4===a.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`)),N.b(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),N.b("float32"===a.dtype||"int32"===a.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),N.b(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let s=a,i=!1;3===a.rank&&(i=!0,s=sr(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,o={images:s},u={alignCorners:n,halfPixelCenters:r,size:t},c=b.a.runKernel(re.wc,o,u);return i?sr(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const so=Object(se.b)({threshold_:function(e,t="binary",n=!1,r=.5){const a=Object(ae.a)(e,"image","threshold"),s=a.shape[0]*a.shape[1];let i,o,u,c,l=sn(ei([r]),255);if(N.b(3===a.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${a.rank}.`)),N.b(3===a.shape[2]||1===a.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${a.shape[2]}.`)),N.b("int32"===a.dtype||"float32"===a.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${a.dtype}.`)),N.b("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===a.shape[2]){[i,o,u]=Vs(a,[1,1,1],-1);const e=sn(i,.2989),t=sn(o,.587),n=sn(u,.114);c=nn(nn(e,t),n)}else c=e;if("otsu"===t){l=function(e,t){let n,r,a,s,i,o,u=ei([-1]),c=ei([0]),l=ei([0]);for(let d=0;d<e.size-1;d++){n=lr(e,0,d+1),r=lr(e,d+1),i=an(ia(n),t),o=an(ia(r),t);const p=ia(sn(n,ks(0,n.size)));a=an(p,ia(n));const h=kn(r.shape,n.size),f=nn(ks(0,r.size),h),m=sn(r,f);s=an(ia(m),ia(r));const b=In(a,s),g=In(a,s),x=sn(i,o);l=sn(sn(x,b),g);const y=ga(l,c);c=Gr(y,l,c),u=Gr(y,ei([d]),u)}return u}(xr(ie(Ts(c),"int32"),Object(Js.a)([]),256),s)}const d=n?Sa(c,l):ga(c,l);return ie(sn(d,255),"int32")}});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const io=Object(se.b)({transform_:function(e,t,n="nearest",r="constant",a=0,s){const i=Object(ae.a)(e,"image","transform","float32"),o=Object(ae.a)(t,"transforms","transform","float32");N.b(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),N.b(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),N.b(null==s||2===s.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`));const u={image:i,transforms:o},c={interpolation:n,fillMode:r,fillValue:a,outputShape:s};return b.a.runKernel(re.id,u,c)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oo=Object(se.b)({bandPart_:function(e,t,n){Object(N.b)(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),Object(N.b)(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=Object(ae.a)(e,"a","bandPart");Object(N.b)(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const a=r.shape,[s,i]=r.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=s),n<0&&(n=i);const o=sr(ks(0,s,1,"int32"),[-1,1]),u=ks(0,i,1,"int32"),c=In(o,u),l=Ra(Sa(c,gn(+t,"int32")),xa(c,gn(-n,"int32"))),d=Ga([s,i],r.dtype);return sr(Xs(ci(sr(r,[-1,s,i])).map((e=>Gr(l,e,d)))),a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uo=Object(se.b)({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,Object(N.b)(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)Object(N.b)(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=Vs(e,e.shape[0],0).map((e=>Ks(e,[0])));Object(N.b)(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(b.a.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=sn(ia(sn(n[r],e)),n[r]);e=In(e,t)}return an(e,ua(e,"euclidean"))})));return t?Xs(n,0):n}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function co(e,t=!1){return b.a.tidy((()=>{Object(N.b)(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let a=fa(n),s=oe(e);const i=ti([[1]],[1,1]);let o=oe(i);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=s,u=o,c=a;[o,s,a]=b.a.tidy((()=>{const t=lr(s,[e,e],[n-e,1]),u=ua(t),c=lr(s,[e,e],[1,1]),l=Gr(ga(c,0),ti([[-1]]),ti([[1]])),d=In(c,sn(l,u)),p=an(t,d);o=1===p.shape[0]?oe(i):ur([i,lr(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);const h=rt(an(Ne(l,d),u)),f=lr(s,[e,0],[n-e,r]),m=sn(h,o),b=st(o);if(0===e)s=In(f,Ne(m,Ne(b,f)));else{const t=In(f,Ne(m,Ne(b,f)));s=ur([lr(s,[0,0],[e,r]),t],0)}const g=st(m),x=lr(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=In(x,Ne(Ne(x,o),g));else{const t=In(x,Ne(Ne(x,o),g));a=ur([lr(a,[0,0],[n,e]),t],1)}return[o,s,a]})),Ue([t,u,c])}return!t&&n>r&&(a=lr(a,[0,0],[n,r]),s=lr(s,[0,0],[r,r])),[a,s]}))}const lo=Object(se.b)({qr_:function(e,t=!1){if(Object(N.b)(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return co(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=ci(sr(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];r.forEach((e=>{const[n,r]=co(e,t);a.push(n),s.push(r)}));return[sr(Xs(a,0),e.shape),sr(Xs(s,0),e.shape)]}}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var po;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(po||(po={}));const ho=Object(se.b)({computeWeightedLoss_:function(e,t,n=po.SUM_BY_NONZERO_WEIGHTS){const r=Object(ae.a)(e,"losses","computeWeightedLoss");let a=null;null!=t&&(a=Object(ae.a)(t,"weights","computeWeightedLoss"));const s=null==a?r:sn(r,a);if(n===po.NONE)return s;if(n===po.SUM)return ia(s);if(n===po.MEAN){if(null==a)return Ua(s);{const e=r.size/a.size,t=an(ia(s),ia(a));return e>1?an(t,gn(e)):t}}if(n===po.SUM_BY_NONZERO_WEIGHTS){if(null==a)return an(ia(s),gn(r.size));{const e=sn(a,Va(r.shape)),t=ie(ia(Ja(e,gn(0))),"float32");return an(ia(s),t)}}throw Error(`Unknown reduction: ${n}`)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fo=Object(se.b)({absoluteDifference_:function(e,t,n,r=po.SUM_BY_NONZERO_WEIGHTS){const a=Object(ae.a)(e,"labels","absoluteDifference"),s=Object(ae.a)(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=Object(ae.a)(n,"weights","absoluteDifference")),Object(N.e)(a.shape,s.shape,"Error in absoluteDifference: ");const o=_n(In(a,s));return ho(o,i,r)}});const mo=Object(se.b)({cosineDistance_:function(e,t,n,r,a=po.SUM_BY_NONZERO_WEIGHTS){const s=Object(ae.a)(e,"labels","cosineDistance"),i=Object(ae.a)(t,"predictions","cosineDistance");let o=null;null!=r&&(o=Object(ae.a)(r,"weights","cosineDistance")),Object(N.e)(s.shape,i.shape,"Error in cosineDistance: ");const u=gn(1),c=In(u,ia(sn(s,i),n,!0));return ho(c,o,a)}});const bo=Object(se.b)({hingeLoss_:function(e,t,n,r=po.SUM_BY_NONZERO_WEIGHTS){let a=Object(ae.a)(e,"labels","hingeLoss");const s=Object(ae.a)(t,"predictions","hingeLoss");let i=null;null!=n&&(i=Object(ae.a)(n,"weights","hingeLoss")),Object(N.e)(a.shape,s.shape,"Error in hingeLoss: ");const o=gn(1);a=In(sn(gn(2),a),o);const u=ws(In(o,sn(a,s)));return ho(u,i,r)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const go=Object(se.b)({huberLoss_:function(e,t,n,r=1,a=po.SUM_BY_NONZERO_WEIGHTS){const s=Object(ae.a)(e,"labels","huberLoss"),i=Object(ae.a)(t,"predictions","huberLoss");let o=null;null!=n&&(o=Object(ae.a)(n,"weights","huberLoss")),Object(N.e)(s.shape,i.shape,"Error in huberLoss: ");const u=gn(r),c=_n(In(i,s)),l=qa(c,u),d=In(c,l),p=nn(sn(gn(.5),un(l)),sn(u,d));return ho(p,o,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xo=Object(se.b)({logLoss_:function(e,t,n,r=1e-7,a=po.SUM_BY_NONZERO_WEIGHTS){const s=Object(ae.a)(e,"labels","logLoss"),i=Object(ae.a)(t,"predictions","logLoss");let o=null;null!=n&&(o=Object(ae.a)(n,"weights","logLoss")),Object(N.e)(s.shape,i.shape,"Error in logLoss: ");const u=gn(1),c=gn(r),l=rt(sn(s,Oa(nn(i,c)))),d=sn(In(u,s),Oa(nn(In(u,i),c))),p=In(l,d);return ho(p,o,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yo=Object(se.b)({meanSquaredError_:function(e,t,n,r=po.SUM_BY_NONZERO_WEIGHTS){const a=Object(ae.a)(e,"labels","meanSquaredError"),s=Object(ae.a)(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=Object(ae.a)(n,"weights","meanSquaredError")),Object(N.e)(a.shape,s.shape,"Error in meanSquaredError: ");const o=qs(a,s);return ho(o,i,r)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ko=Object(se.b)({sigmoidCrossEntropy_:function(e,t,n,r=0,a=po.SUM_BY_NONZERO_WEIGHTS){let s=Object(ae.a)(e,"multiClassLabels","sigmoidCrossEntropy");const i=Object(ae.a)(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=Object(ae.a)(n,"weights","sigmoidCrossEntropy")),Object(N.e)(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=gn(r),t=gn(1),n=gn(.5);s=nn(sn(s,In(t,e)),sn(n,e))}const u=function(e,t){const n=Object(ae.a)(e,"labels","sigmoidCrossEntropyWithLogits"),r=Object(ae.a)(t,"logits","sigmoidCrossEntropyWithLogits");Object(N.e)(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const a=ws(r),s=sn(r,n),i=$a(la(rt(_n(r))));return nn(In(a,s),i)}(s,i);return ho(u,o,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vo=Object(se.b)({softmaxCrossEntropy_:function(e,t,n,r=0,a=po.SUM_BY_NONZERO_WEIGHTS){let s=Object(ae.a)(e,"onehotLabels","softmaxCrossEntropy");const i=Object(ae.a)(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=Object(ae.a)(n,"weights","softmaxCrossEntropy")),Object(N.e)(s.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const e=gn(r),t=gn(1),n=gn(s.shape[1]);s=nn(sn(s,In(t,e)),an(e,n))}const u=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const r=mn(((e,t,r)=>{const a=Na(t,[n],!0),s=In(ie(t,"float32"),a);r([e,s]);const i=rt(sn(s,e));return{value:ia(i,[n]),gradFunc:(e,t)=>{const[r,a]=t,s=Jr(e.shape,[n]);return[sn(sr(e,s),In(ie(r,"float32"),la(a))),sn(sr(e,s),In(la(a),ie(r,"float32")))]}}}));return r(e,t)}(s,i);return ho(u,o,a)}});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wo=Object(se.b)({sparseFillEmptyRows_:function(e,t,n,r){const a=Object(ae.a)(e,"indices","sparseFillEmptyRows","int32"),s=Object(ae.a)(t,"values","sparseFillEmptyRows"),i=Object(ae.a)(n,"denseShape","sparseFillEmptyRows","int32"),o=Object(ae.a)(r,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==a.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${a.shape}`);if(1!==s.rank)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const u={indices:a,values:s,denseShape:i,defaultValue:o},c=b.a.runKernel(re.Oc,u);return{outputIndices:c[0],outputValues:c[1],emptyRowIndicator:c[2],reverseIndexMap:c[3]}}});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Io=Object(se.b)({sparseReshape_:function(e,t,n){const r=Object(ae.a)(e,"inputIndices","sparseReshape","int32"),a=Object(ae.a)(t,"inputShape","sparseReshape","int32"),s=Object(ae.a)(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==a.rank)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(1!==s.rank)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);const i={inputIndices:r,inputShape:a,newShape:s},o=b.a.runKernel(re.Pc,i);return{outputIndices:o[0],outputShape:o[1]}}});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const So=Object(se.b)({sparseSegmentMean_:function(e,t,n){const r=Object(ae.a)(e,"data","sparseSegmentMean"),a=Object(ae.a)(t,"indices","sparseSegmentMean","int32"),s=Object(ae.a)(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${s.shape}`);const i={data:r,indices:a,segmentIds:s};return b.a.runKernel(re.Qc,i)}});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _o=Object(se.b)({sparseSegmentSum_:function(e,t,n){const r=Object(ae.a)(e,"data","sparseSegmentSum"),a=Object(ae.a)(t,"indices","sparseSegmentSum","int32"),s=Object(ae.a)(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${s.shape}`);const i={data:r,indices:a,segmentIds:s};return b.a.runKernel(re.Rc,i)}});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Co=Object(se.b)({stringNGrams_:function(e,t,n,r,a,s,i,o){const u=Object(ae.a)(e,"data","stringNGrams","string");if("string"!==u.dtype)throw new Error("Data must be of datatype string");if(1!==u.shape.length)throw new Error(`Data must be a vector, saw: ${u.shape}`);const c=Object(ae.a)(t,"dataSplits","stringNGrams");if("int32"!==c.dtype)throw new Error("Data splits must be of datatype int32");const l={separator:n,nGramWidths:r,leftPad:a,rightPad:s,padWidth:i,preserveShortSequences:o},d={data:u,dataSplits:c},p=b.a.runKernel(re.Zc,d,l);return{nGrams:p[0],nGramsSplits:p[1]}}});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oo=Object(se.b)({stringSplit_:function(e,t,n=!0){const r=Object(ae.a)(e,"input","stringSplit","string"),a=Object(ae.a)(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==a.rank)throw new Error(`Delimiter should be a scalar but received shape ${a.shape}`);const s={skipEmpty:n},i={input:r,delimiter:a},o=b.a.runKernel(re.ad,i,s);return{indices:o[0],values:o[1],shape:o[2]}}});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $o=Object(se.b)({stringToHashBucketFast_:function(e,t){const n=Object(ae.a)(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const a={input:n};return b.a.runKernel(re.bd,a,r)}}),To={fft:Ws,ifft:Us,rfft:Hs,irfft:Gs},Ao={hammingWindow:Ri,hannWindow:Fi,frame:Mi,stft:Di},Eo={flipLeftRight:Bi,grayscaleToRGB:ji,resizeNearestNeighbor:ao,resizeBilinear:ro,rotateWithOffset:Li,cropAndResize:Pi,nonMaxSuppression:Wi,nonMaxSuppressionAsync:Zi,nonMaxSuppressionWithScore:Ji,nonMaxSuppressionWithScoreAsync:eo,nonMaxSuppressionPadded:to,nonMaxSuppressionPaddedAsync:no,threshold:so,transform:io},No={bandPart:oo,gramSchmidt:uo,qr:lo},Ro={absoluteDifference:fo,computeWeightedLoss:ho,cosineDistance:mo,hingeLoss:bo,huberLoss:go,logLoss:xo,meanSquaredError:yo,sigmoidCrossEntropy:ko,softmaxCrossEntropy:vo},Fo={sparseFillEmptyRows:wo,sparseReshape:Io,sparseSegmentMean:So,sparseSegmentSum:_o},Mo={stringNGrams:Co,stringSplit:Oo,stringToHashBucketFast:$o},Do={sgd:En.sgd,momentum:En.momentum,adadelta:En.adadelta,adagrad:En.adagrad,rmsprop:En.rmsprop,adamax:En.adamax,adam:En.adam};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Po=n(94);
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bo(e,t){const n=e[0].length;e.forEach(((e,t)=>{N.b(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),N.b(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,a)=>{for(let s=0;s<n;s++)N.b(s===t||e[s]===r[s],(()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`))}))}function jo(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lo=30;function zo(e){return e<=Lo?e:Object(N.G)(e,Math.floor(Math.sqrt(e)))}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wo(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uo(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function Go(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function Vo(e,t,n,r=!0){const a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?a.push(t[n-1]*e[n]):a.push(e[n]/t[n-1]):a.push(e[n]);return a}function Ho(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function qo(e,t,n){const r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ko=1.7580993408473768,Xo=1.0507009873554805,Yo=.3275911,Qo=.254829592,Zo=-.284496736,Jo=1.421413741,eu=-1.453152027,tu=1.061405429;var nu=n(30);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ru(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function au(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function su(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function iu(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function ou(e,t){return{real:e[2*t],imag:e[2*t+1]}}function uu(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function cu(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){const s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function lu(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const du="->",pu=/->/g;function hu(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(pu,"").length)/du.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[r,a]=e.split(du);Object(N.b)(-1===r.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));const s=r.split(","),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let e=0;e<a.length;++e){const t=a[e];if(!s.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<r.length;++e){const t=r[e];-1===o.indexOf(t)&&","!==t&&o.push(t)}const u=new Array(s.length);for(let e=0;e<i;++e){if(new Set(s[e].split("")).size!==s[e].length)throw new Error(`Found duplicate axes in input component ${s[e]}. Support for duplicate axes in input is not implemented yet.`);u[e]=[];for(let t=0;t<s[e].length;++t)u[e].push(o.indexOf(s[e][t]))}const c=o.length,l=[];for(let e=a.length;e<c;++e)l.push(e);return{allDims:o,summedDims:l,idDims:u}}function fu(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function mu(e,t,n){const r=new Array(e);for(let e=0;e<n.length;++e){const a=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=a[n]:Object(N.b)(r[t[e][n]]===a[n],(()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(a)}, but got dimension ${a[n]}`))}}function bu(e,t){const n=e,r=[];let a=0;0===e.length&&n.push(-1),a=e.length+1;for(let e=0;e<a;++e)r.push([]);const s=[];for(let e=0;e<n.length;++e){const a=xu(t,n[e]);for(const t of a)-1===s.indexOf(t)&&(r[e].push(t),s.push(t))}return{path:n,steps:r}}function gu(e){return e.every(((e,t)=>e===t))}function xu(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function yu(e,t,n=0){let r=[];if("number"==typeof t)Object(N.b)(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const a=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);Object(N.b)(a<=1,(()=>"There should be only one negative value in split array."));const s=t.indexOf(-1);if(-1!==s){const r=t.reduce(((e,t)=>t>0?e+t:e));t[s]=e.shape[n]-r}Object(N.b)(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ku(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function vu(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function wu(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iu(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function Su(e,t){return`size ${e} must be non-negative, not ${t}`}function _u(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Cu(e,t){return`Input to reshape is a SparseTensor with ${Object(N.O)(e)}\n  dense values, but the requested shape requires a multiple of ${Object(N.O)(t)}. inputShape=${e} outputShape= ${t}`}function Ou(e,t){return`Input to reshape is a tensor with ${Object(N.O)(e)} dense values, but the requested shape has ${Object(N.O)(t)}. inputShape=${e} outputShape=${t}`}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $u(){return"segment ids must be >= 0"}function Tu(){return"segment ids are not increasing"}function Au(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function Eu(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nu(e,t){let n,r=!1;for(e<=Lo?(n=e,r=!0):n=Object(N.G)(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=Object(N.G)(e,n+1);return n}function Ru(e,t,n){const r=[],a=e.length;for(let s=0;s<a;s++)s!==t?r.push(e[s]):r.push(n);return r}function Fu(e,t,n,r){const a=t.shape.length,s=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const i=e.shape[n],o=[];let u=1,c=1,l=1;for(let t=0;t<r;++t)o.push(e.shape[t]),u*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),c*=e.shape[t];for(let e=r;e<a;e++)o.push(t.shape[e]);for(let t=n+1;t<s;t++)o.push(e.shape[t]),l*=e.shape[t];return{batchSize:u,sliceSize:l,outerSize:c,dimSize:i,outputShape:o}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mu(e){try{return e.map((e=>Object(Ut.decodeString)(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function Du(e){return e.map((e=>Object(Ut.encodeString)(e)))}var Pu=n(54),Bu=n(51);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */},function(e,t,n){"use strict";n.d(t,"c",(function(){return u})),n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return p}));var r=n(3),a=n(9),s=n(14),i=n(15),o=n(6);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(e,t){let n=e;if(Object(i.A)(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||Object(i.A)(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&Object(a.c)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&c(e,r,[]),r}function c(e,t,n){if(n=n||[],!Array.isArray(e)&&!Object(i.A)(e))return void Object(i.b)(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));Object(i.b)(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),Object(i.b)(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)c(e[t],r,n.concat(t))}function l(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function d(e,t,n,a="numeric"){if(e instanceof s.a)return l(a,e.dtype,t,n),e;let c=Object(i.r)(e);if("string"!==c&&["bool","int32","float32"].indexOf(a)>=0&&(c=a),l(a,c,t,n),null==e||!Object(i.A)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const d=u(e,c);Object(i.A)(e)||Array.isArray(e)||(e=[e]);const p="string"!==c?Object(o.toTypedArray)(e,c):Object(i.m)(e,[],!0);return r.a.makeTensor(p,d,c)}function p(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,a)=>d(e,`${t}[${a}]`,n,r)))}},function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return i}));var r=n(3),a=n(15);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const s="__op";function i(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const i=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=s;const o=(...e)=>{r.a.startScope(n);try{const t=i(...e);return Object(a.x)(t)&&console.error("Cannot return a Promise inside of tidy."),r.a.endScope(t),t}catch(e){throw r.a.endScope(null),e}};return Object.defineProperty(o,"name",{value:n,configurable:!0}),o}},function(e,t,n){"use strict";n.d(t,"b",(function(){return y})),n.d(t,"a",(function(){return k}));var r=n(51),a=n(9),s=n(37),i=n(4),o=n(31),u=n(30),c=n(6),l=n(15);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class d{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new h)}profileKernel(e,t,n){let r;const s=()=>{r=n()};let i;const o=c.now();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(s);else{s();for(const e of r)e.dataSync();i=Promise.resolve({kernelMs:c.now()-o})}if(Object(a.c)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{p(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:i.then((e=>e.kernelMs)),extraInfo:i.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),r,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])}))}))}}function p(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class h{logKernelProfile(e,t,n,r,a,s){const i="number"==typeof r?l.L(`${r}ms`,9):r.error,o=l.L(e,25),u=t.rank,c=t.size,d=l.L(t.shape.toString(),14);let p="";for(const e in a){const n=a[e];if(null!=n){const r=n.shape||t.shape,a=r.length;p+=`${e}: ${a}D ${a>0?r:""} `}}console.log(`%c${o}\t%c${i}\t%c${u}D ${d}\t%c${c}\t%c${p}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var f=n(14),m=n(10);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function b(e){return null!=e.kernelName}class g{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class x{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new g}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(u.b(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new d(this.backendInstance),!0}setupRegisteredKernels(){Object(o.d)(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){Object(o.d)(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof r.b||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,u.b(`Initialization of backend ${e} failed`),u.b(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return u.b(`Initialization of backend ${e} failed`),u.b(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return x.nextTensorId++}nextVariableId(){return x.nextVariableId++}clone(e){const t=k.runKernel(i.tb,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e},n={dtype:"float32"};return k.runKernel(i.x,t,n)}})),[],{}),t}runKernel(e,t,n){null==this.backendName&&this.backend;if(!(null!=Object(o.c)(e,this.backendName)))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let a=0;n.forEach((e=>{a+="complex64"===e.dtype?3:1}));const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-a-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),a=this.state.numBytes,s=this.state.numTensors;let i,u;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const c=b(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(b(e)){const{kernelName:t,inputs:a,attrs:s}=e;null==this.backendName&&this.backend;const c=Object(o.c)(t,this.backendName);l.b(null!=c,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),i=()=>{const e=this.backend.numDataIds();u=c.kernelFunc({inputs:a,attrs:s,backend:this.backend});const i=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const o=i.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(r){const e=this.getTensorsForGradient(t,a,o);n=this.saveTensorsForBackwardMode(e)}return o}}else{const{forwardFunc:t}=e,a=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};i=()=>{const e=this.backend.numDataIds();u=this.tidy((()=>t(this.backend,a)));const n=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,e,n),n}}const{inputs:d,attrs:p}=e,h=b(e)?null:e.backwardsFunc;let f;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(f=this.profiler.profileKernel(c,d,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),t=f.outputs):t=i()})),r&&this.addTapeNode(c,d,t,h,n,p),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(d).map((e=>null!=d[e]?d[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(u)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const r=Object(o.b)(e);if(null!=r){const e=r.inputsToSave||[],a=r.outputsToSave||[];let s;r.saveAllInputs?(l.b(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),s=Object.keys(t).map((e=>t[e]))):s=e.map((e=>t[e]));const i=n.filter(((e,t)=>a[t]));return s.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&l.z(e[0])&&(a=e.map((e=>c.encodeString(e))));const s=r.write(a,t,n),i=new f.a(t,n,s,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){const e=this.state.tensorInfo.get(s),t=Object(l.f)(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){const a={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(a,r)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:r,dtype:a}=e,s=new f.a(r,a,n,this.nextTensorId());return this.trackTensor(s,t),s}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const a=new f.c(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*l.g(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof f.c||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*l.g(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},u=Object(o.b)(e);null!=u&&(r=u.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=l.F(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Object(m.getTensorsInContainer)(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(l.b(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const a=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));l.b(a instanceof f.a,(()=>"The result y returned by f() must be a tensor."));const s=function(e,t,n){const r={},a={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const s=e[n],i=s.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){s.outputs.forEach((e=>r[e.id]=!0)),o=!0,a[s.id]=!0;break}if(o)break}}const s={};s[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(s[n.outputs[e].id]){for(const e in r)s[r[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(a[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const a=n.inputs[t];r[a.id]&&(e[t]=a)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,a);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[a.id]=null==n?function(e){const t=Object(l.D)(Object(l.O)(e),"float32");return k.makeTensor(t,e,"float32")}(a.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){const s=t[a],i=[];if(s.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const o=s.gradient(i);for(const t in s.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const a=n((()=>o[t]()));if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);const i=s.inputs[t];if(!l.a(a.shape,i.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=a;else{const t=e[i.id];e[i.id]=r(t,a),t.dispose()}}}}(e,s,(e=>this.tidy(e)),v);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:a,grads:r}}))}customGrad(e){return l.b(l.u(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;l.b(t.every((e=>e instanceof f.a)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};t.forEach(((e,t)=>{r[t]=e}));return this.runKernelFunc({forwardFunc:(r,a)=>(n=e(...t,a),l.b(n.value instanceof f.a,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),l.b(l.u(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const a=n.gradFunc(e,r),s=Array.isArray(a)?a:[a];l.b(s.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),l.b(s.every((e=>e instanceof f.a)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return s.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=Object(c.now)(),n=await this.backend.time(e);return n.wallMs=Object(c.now)()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new g;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function y(){const e=Object(s.b)();if(null==e._tfengine){const t=new a.b(e);e._tfengine=new x(t)}return Object(a.d)(e._tfengine.ENV),Object(f.f)((()=>e._tfengine)),e._tfengine}x.nextTensorId=0,x.nextVariableId=0;const k=y();function v(e,t){const n={a:e,b:t};return k.runKernel(i.d,n)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return a})),n.d(t,"c",(function(){return s})),n.d(t,"d",(function(){return i})),n.d(t,"e",(function(){return o})),n.d(t,"f",(function(){return u})),n.d(t,"g",(function(){return c})),n.d(t,"h",(function(){return l})),n.d(t,"i",(function(){return d})),n.d(t,"j",(function(){return p})),n.d(t,"k",(function(){return h})),n.d(t,"l",(function(){return f})),n.d(t,"n",(function(){return m})),n.d(t,"m",(function(){return b})),n.d(t,"o",(function(){return g})),n.d(t,"r",(function(){return x})),n.d(t,"p",(function(){return y})),n.d(t,"q",(function(){return k})),n.d(t,"s",(function(){return v})),n.d(t,"t",(function(){return w})),n.d(t,"u",(function(){return I})),n.d(t,"w",(function(){return S})),n.d(t,"v",(function(){return _})),n.d(t,"x",(function(){return C})),n.d(t,"y",(function(){return O})),n.d(t,"z",(function(){return $})),n.d(t,"A",(function(){return T})),n.d(t,"B",(function(){return A})),n.d(t,"C",(function(){return E})),n.d(t,"D",(function(){return N})),n.d(t,"E",(function(){return R})),n.d(t,"F",(function(){return F})),n.d(t,"G",(function(){return M})),n.d(t,"H",(function(){return D})),n.d(t,"I",(function(){return P})),n.d(t,"J",(function(){return B})),n.d(t,"K",(function(){return j})),n.d(t,"M",(function(){return L})),n.d(t,"N",(function(){return z})),n.d(t,"L",(function(){return W})),n.d(t,"O",(function(){return U})),n.d(t,"P",(function(){return G})),n.d(t,"Q",(function(){return V})),n.d(t,"R",(function(){return H})),n.d(t,"S",(function(){return q})),n.d(t,"T",(function(){return K})),n.d(t,"U",(function(){return X})),n.d(t,"W",(function(){return Y})),n.d(t,"V",(function(){return Q})),n.d(t,"pc",(function(){return Z})),n.d(t,"X",(function(){return J})),n.d(t,"Y",(function(){return ee})),n.d(t,"Z",(function(){return te})),n.d(t,"bb",(function(){return ne})),n.d(t,"ab",(function(){return re})),n.d(t,"cb",(function(){return ae})),n.d(t,"db",(function(){return se})),n.d(t,"eb",(function(){return ie})),n.d(t,"fb",(function(){return oe})),n.d(t,"gb",(function(){return ue})),n.d(t,"hb",(function(){return ce})),n.d(t,"ib",(function(){return le})),n.d(t,"jb",(function(){return de})),n.d(t,"lb",(function(){return pe})),n.d(t,"pb",(function(){return he})),n.d(t,"ob",(function(){return fe})),n.d(t,"qb",(function(){return me})),n.d(t,"rb",(function(){return be})),n.d(t,"tb",(function(){return ge})),n.d(t,"sb",(function(){return xe})),n.d(t,"ub",(function(){return ye})),n.d(t,"vb",(function(){return ke})),n.d(t,"wb",(function(){return ve})),n.d(t,"xb",(function(){return we})),n.d(t,"Ab",(function(){return Ie})),n.d(t,"Bb",(function(){return Se})),n.d(t,"Cb",(function(){return _e})),n.d(t,"Db",(function(){return Ce})),n.d(t,"Eb",(function(){return Oe})),n.d(t,"Fb",(function(){return $e})),n.d(t,"Hb",(function(){return Te})),n.d(t,"Ib",(function(){return Ae})),n.d(t,"Jb",(function(){return Ee})),n.d(t,"Kb",(function(){return Ne})),n.d(t,"Gb",(function(){return Re})),n.d(t,"Lb",(function(){return Fe})),n.d(t,"yb",(function(){return Me})),n.d(t,"zb",(function(){return De})),n.d(t,"Mb",(function(){return Pe})),n.d(t,"Sb",(function(){return Be})),n.d(t,"Nb",(function(){return je})),n.d(t,"Qb",(function(){return Le})),n.d(t,"Ob",(function(){return ze})),n.d(t,"Pb",(function(){return We})),n.d(t,"Rb",(function(){return Ue})),n.d(t,"Tb",(function(){return Ge})),n.d(t,"Ub",(function(){return Ve})),n.d(t,"Vb",(function(){return He})),n.d(t,"Wb",(function(){return qe})),n.d(t,"Xb",(function(){return Ke})),n.d(t,"Yb",(function(){return Xe})),n.d(t,"Zb",(function(){return Ye})),n.d(t,"ac",(function(){return Qe})),n.d(t,"ec",(function(){return Ze})),n.d(t,"bc",(function(){return Je})),n.d(t,"cc",(function(){return et})),n.d(t,"dc",(function(){return tt})),n.d(t,"gc",(function(){return nt})),n.d(t,"fc",(function(){return rt})),n.d(t,"hc",(function(){return at})),n.d(t,"ic",(function(){return st})),n.d(t,"jc",(function(){return it})),n.d(t,"kc",(function(){return ot})),n.d(t,"lc",(function(){return ut})),n.d(t,"mc",(function(){return ct})),n.d(t,"nc",(function(){return lt})),n.d(t,"oc",(function(){return dt})),n.d(t,"qc",(function(){return pt})),n.d(t,"rc",(function(){return ht})),n.d(t,"tc",(function(){return ft})),n.d(t,"wc",(function(){return mt})),n.d(t,"xc",(function(){return bt})),n.d(t,"uc",(function(){return gt})),n.d(t,"vc",(function(){return xt})),n.d(t,"sc",(function(){return yt})),n.d(t,"yc",(function(){return kt})),n.d(t,"Ac",(function(){return vt})),n.d(t,"Bc",(function(){return wt})),n.d(t,"Cc",(function(){return It})),n.d(t,"Dc",(function(){return St})),n.d(t,"Ec",(function(){return _t})),n.d(t,"Fc",(function(){return Ct})),n.d(t,"Kc",(function(){return Ot})),n.d(t,"Ic",(function(){return $t})),n.d(t,"Jc",(function(){return Tt})),n.d(t,"Hc",(function(){return At})),n.d(t,"Gc",(function(){return Et})),n.d(t,"Mc",(function(){return Nt})),n.d(t,"Uc",(function(){return Rt})),n.d(t,"dd",(function(){return Ft})),n.d(t,"Nc",(function(){return Mt})),n.d(t,"Tc",(function(){return Dt})),n.d(t,"Lc",(function(){return Pt})),n.d(t,"Oc",(function(){return Bt})),n.d(t,"Pc",(function(){return jt})),n.d(t,"Qc",(function(){return Lt})),n.d(t,"Rc",(function(){return zt})),n.d(t,"Sc",(function(){return Wt})),n.d(t,"Wc",(function(){return Ut})),n.d(t,"Vc",(function(){return Gt})),n.d(t,"Yc",(function(){return Vt})),n.d(t,"Zc",(function(){return Ht})),n.d(t,"ad",(function(){return qt})),n.d(t,"bd",(function(){return Kt})),n.d(t,"cd",(function(){return Xt})),n.d(t,"ed",(function(){return Yt})),n.d(t,"fd",(function(){return Qt})),n.d(t,"gd",(function(){return Zt})),n.d(t,"hd",(function(){return Jt})),n.d(t,"id",(function(){return en})),n.d(t,"jd",(function(){return tn})),n.d(t,"kd",(function(){return nn})),n.d(t,"ld",(function(){return rn})),n.d(t,"md",(function(){return an})),n.d(t,"nd",(function(){return sn})),n.d(t,"od",(function(){return on})),n.d(t,"Xc",(function(){return un})),n.d(t,"kb",(function(){return cn})),n.d(t,"zc",(function(){return ln})),n.d(t,"pd",(function(){return dn})),n.d(t,"mb",(function(){return pn})),n.d(t,"nb",(function(){return hn}));const r="Abs",a="Acos",s="Acosh",i="Add",o="AddN",u="All",c="Any",l="ArgMax",d="ArgMin",p="Asin",h="Asinh",f="Atan",m="Atanh",b="Atan2",g="AvgPool",x="AvgPoolGrad",y="AvgPool3D",k="AvgPool3DGrad",v="BatchMatMul",w="BatchToSpaceND",I="Bincount",S="BroadcastTo",_="BroadcastArgs",C="Cast",O="Ceil",$="ClipByValue",T="Complex",A="ComplexAbs",E="Concat",N="Conv2D",R="Conv2DBackpropFilter",F="Conv2DBackpropInput",M="Conv3D",D="Conv3DBackpropFilterV2",P="Conv3DBackpropInputV2",B="Cos",j="Cosh",L="Cumprod",z="Cumsum",W="CropAndResize",U="DenseBincount",G="DepthToSpace",V="DepthwiseConv2dNative",H="DepthwiseConv2dNativeBackpropFilter",q="DepthwiseConv2dNativeBackpropInput",K="Diag",X="Dilation2D",Y="Dilation2DBackpropInput",Q="Dilation2DBackpropFilter",Z="RealDiv",J="Einsum",ee="Elu",te="EluGrad",ne="Erf",re="Equal",ae="Exp",se="ExpandDims",ie="Expm1",oe="FFT",ue="Fill",ce="FlipLeftRight",le="Floor",de="FloorDiv",pe="FusedBatchNorm",he="GatherV2",fe="GatherNd",me="Greater",be="GreaterEqual",ge="Identity",xe="IFFT",ye="Imag",ke="IsFinite",ve="IsInf",we="IsNan",Ie="LeakyRelu",Se="Less",_e="LessEqual",Ce="LinSpace",Oe="Log",$e="Log1p",Te="LogicalAnd",Ae="LogicalNot",Ee="LogicalOr",Ne="LogicalXor",Re="LogSoftmax",Fe="LowerBound",Me="LRN",De="LRNGrad",Pe="Max",Be="Maximum",je="MaxPool",Le="MaxPoolGrad",ze="MaxPool3D",We="MaxPool3DGrad",Ue="MaxPoolWithArgmax",Ge="Mean",Ve="Min",He="Minimum",qe="MirrorPad",Ke="Mod",Xe="Multinomial",Ye="Multiply",Qe="Neg",Ze="NotEqual",Je="NonMaxSuppressionV3",et="NonMaxSuppressionV4",tt="NonMaxSuppressionV5",nt="OnesLike",rt="OneHot",at="Pack",st="PadV2",it="Pool",ot="Pow",ut="Prelu",ct="Prod",lt="Range",dt="Real",pt="Reciprocal",ht="Relu",ft="Reshape",mt="ResizeNearestNeighbor",bt="ResizeNearestNeighborGrad",gt="ResizeBilinear",xt="ResizeBilinearGrad",yt="Relu6",kt="Reverse",vt="Round",wt="Rsqrt",It="ScatterNd",St="SearchSorted",_t="Select",Ct="Selu",Ot="Slice",$t="Sin",Tt="Sinh",At="Sign",Et="Sigmoid",Nt="Softplus",Rt="Sqrt",Ft="Sum",Mt="SpaceToBatchND",Dt="SplitV",Pt="Softmax",Bt="SparseFillEmptyRows",jt="SparseReshape",Lt="SparseSegmentMean",zt="SparseSegmentSum",Wt="SparseToDense",Ut="SquaredDifference",Gt="Square",Vt="StridedSlice",Ht="StringNGrams",qt="StringSplit",Kt="StringToHashBucketFast",Xt="Sub",Yt="Tan",Qt="Tanh",Zt="Tile",Jt="TopK",en="Transform",tn="Transpose",nn="Unique",rn="Unpack",an="UnsortedSegmentSum",sn="UpperBound",on="ZerosLike",un="Step",cn="FromPixels",ln="RotateWithOffset",dn="_FusedMatMul",pn="FusedConv2D",hn="FusedDepthwiseConv2D"},function(e,t,n){"use strict";n.d(t,"a",(function(){return i})),n.d(t,"i",(function(){return o})),n.d(t,"k",(function(){return u})),n.d(t,"l",(function(){return c})),n.d(t,"m",(function(){return l})),n.d(t,"n",(function(){return d})),n.d(t,"h",(function(){return p})),n.d(t,"d",(function(){return h})),n.d(t,"s",(function(){return f})),n.d(t,"j",(function(){return m})),n.d(t,"u",(function(){return b})),n.d(t,"v",(function(){return g})),n.d(t,"e",(function(){return x})),n.d(t,"p",(function(){return y})),n.d(t,"r",(function(){return k})),n.d(t,"t",(function(){return v})),n.d(t,"q",(function(){return w})),n.d(t,"o",(function(){return I})),n.d(t,"b",(function(){return S})),n.d(t,"g",(function(){return _})),n.d(t,"c",(function(){return C})),n.d(t,"f",(function(){return O}));var r=n(0),a=n(38),s=n(11);function i(e,t){if(!e)throw new Error(t)}function o(e){return"boolean"==typeof e}function u(e){return"number"==typeof e&&Number.isInteger(e)}function c(e){return e instanceof Array&&e.every((e=>u(e)))}function l(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint32Array||e instanceof Int16Array||e instanceof Uint16Array||e instanceof Int8Array||e instanceof Uint8Array}function d(e){return 0===e[0]&&1===e[1]||(1===e[0]&&2===e[1]||2===e[0]&&3===e[1])}function p(e){if("float32"===e)return Float32Array;if("int32"===e)return Int32Array;if("uint32"===e)return Uint32Array;if("float16"===e)return Uint16Array;if("int8"===e)return Int8Array;if("uint8"===e)return Uint8Array;throw new Error("Type is not supported.")}function h(e){let t;return"float32"===e.dtype?t=s.d.float32:"int32"===e.dtype&&(t=s.d.int32),{type:t,dimensions:e.shape}}function f(e){i(e.type in s.d,"The operand type is invalid."),e.dimensions&&i(c(e.dimensions),"The dimensions is invalid.")}function m(e){return!e.every((e=>e>0))}function b(e,t,n){i(l(e),"The value is not a typed array."),i(e instanceof p(t),"The type of value is invalid."),i(e.length===y(n),`the value length ${e.length} is invalid, size of [${n}] ${y(n)} is expected.`)}function g(e,t){t===s.d.int32?i(Number.isInteger(e),"the value is not an int32."):t===s.d.uint32?i(Number.isInteger(e)&&e>=0,"the value is not an uint32."):t===s.d.int8?i(Number.isInteger(e)&&e>=-128&&e<=127,"the value is not an int8."):t===s.d.uint8&&i(Number.isInteger(e)&&e>=0&&e<=255,"the value is not an uint8.")}function x(e,t){const n=function(e){if("float32"===e)return"float32";if("int32"===e)return"int32";throw new Error("The operand type is not supported by TF.js.")}(e.type);if(void 0!==e.dimensions){i(l(t),"Only ArrayBufferView value is supported.");const a=t;b(a,e.type,e.dimensions);const s=function(e){let t;if(e instanceof Float32Array)t=new Float32Array(e.length);else if(e instanceof Int32Array)t=new Int32Array(e.length);else if(e instanceof Uint32Array)t=new Uint32Array(e.length);else if(e instanceof Uint16Array)t=new Uint16Array(e.length);else if(e instanceof Int8Array)t=new Int8Array(e.length);else{if(!(e instanceof Uint8Array))throw new Error("Type is not supported.");t=new Uint8Array(e.length)}return t.set(e),t}(a);return r.tensor(s,e.dimensions,n)}return"number"==typeof t?(g(t,e.type),r.scalar(t,n)):(b(t,e.type,e.dimensions),r.scalar(t[0],n))}function y(e){return void 0===e||c(e)&&0===e.length?1:e.reduce(((e,t)=>t>0?e*t:e),1)}function k(e,t=""){i(e instanceof s.c,`The parameter ${t} is not an operand.`)}function v(e,t=""){i(void 0===e||e instanceof s.c,`The parameter ${t} is not an optional operand.`)}function w(e,t){if("undefined"!=typeof e&&e.length>0)for(let n=0;n<e.length;++n)if(e[n]>=t||e[n]<-t)return!1;return!0}function I(e){return e.reduce(((e,t)=>e*t))}function S(e,t){i(e.length===t.length,`The actual length ${e.length} is not equal to expected length ${t.length}.`);for(let n=0;n<e.length;++n)i(e[n]===t[n],`${e[n]} is not equal to ${t[n]} of index ${n}.`)}function _(e,t,n,r,s,i,o){let u;if(i===a.a.explicit)u=[[0,0],[n[0],n[1]],[n[2],n[3]],[0,0]];else{u=[[0,0],[0,0],[0,0],[0,0]];const n=[0,0];if(void 0===o)for(let a=0;a<2;++a)n[a]=r[a]*(Math.ceil(e.shape[1+a]/r[a])-1)+((t.shape[a]-1)*s[a]+1)-e.shape[1+a];else for(let a=0;a<2;++a)n[a]=(e.shape[1+a]-1)*r[a]+t.shape[a]+(t.shape[a]-1)*(s[a]-1)+o[a]-e.shape[1+a]*r[a];if(i===a.a["same-upper"])for(let e=0;e<2;++e)u[e+1][0]=n[e]-Math.ceil(n[e]/2),u[e+1][1]=Math.ceil(n[e]/2);else for(let e=0;e<2;++e)u[e+1][0]=n[e]-Math.floor(n[e]/2),u[e+1][1]=Math.floor(n[e]/2)}return u}function C(e,t,n,r,s,i,o){const u=((n+s-1)/s-1)*s+(r+(r-1)*(t-1)),c=u>n?u-n:0;switch(e){case a.a["same-upper"]:i=Math.floor(c/2),o=Math.floor((c+1)/2);break;case a.a["same-lower"]:i=Math.floor((c+1)/2),o=Math.floor(c/2)}return[i,o]}function O(e,t){const n=[],r=e.length,a=t.length,s=Math.max(r,a);for(let i=0;i<s;++i){let s=e[r-i-1];void 0===s&&(s=1);let o=t[a-i-1];if(void 0===o&&(o=1),1===s)n.unshift(o);else if(1===o)n.unshift(s);else{if(s!==o)throw new Error(`Shapes [${e}] and [${t}] are incompatible.`);n.unshift(s)}}return n}},function(e,t,n){"use strict";n.r(t),n.d(t,"shuffle",(function(){return a.M})),n.d(t,"shuffleCombo",(function(){return a.N})),n.d(t,"clamp",(function(){return a.i})),n.d(t,"nearestLargerEven",(function(){return a.H})),n.d(t,"swap",(function(){return a.S})),n.d(t,"sum",(function(){return a.R})),n.d(t,"randUniform",(function(){return a.J})),n.d(t,"distSquared",(function(){return a.l})),n.d(t,"assert",(function(){return a.b})),n.d(t,"assertShapesMatch",(function(){return a.e})),n.d(t,"assertNonNull",(function(){return a.d})),n.d(t,"flatten",(function(){return a.m})),n.d(t,"sizeFromShape",(function(){return a.O})),n.d(t,"isScalarShape",(function(){return a.y})),n.d(t,"arraysEqual",(function(){return a.a})),n.d(t,"isInt",(function(){return a.v})),n.d(t,"tanh",(function(){return a.T})),n.d(t,"sizeToSquarishShape",(function(){return a.P})),n.d(t,"createShuffledIndices",(function(){return a.k})),n.d(t,"rightPad",(function(){return a.L})),n.d(t,"repeatedTry",(function(){return a.K})),n.d(t,"inferFromImplicitShape",(function(){return a.s})),n.d(t,"parseAxisParam",(function(){return a.I})),n.d(t,"squeezeShape",(function(){return a.Q})),n.d(t,"getTypedArrayFromDType",(function(){return a.o})),n.d(t,"getArrayFromDType",(function(){return a.n})),n.d(t,"checkConversionForErrors",(function(){return a.h})),n.d(t,"isValidDtype",(function(){return a.B})),n.d(t,"hasEncodingLoss",(function(){return a.p})),n.d(t,"isTypedArray",(function(){return a.A})),n.d(t,"bytesPerElement",(function(){return a.g})),n.d(t,"bytesFromStringArray",(function(){return a.f})),n.d(t,"isString",(function(){return a.z})),n.d(t,"isBoolean",(function(){return a.t})),n.d(t,"isNumber",(function(){return a.w})),n.d(t,"inferDtype",(function(){return a.r})),n.d(t,"isFunction",(function(){return a.u})),n.d(t,"nearestDivisor",(function(){return a.G})),n.d(t,"computeStrides",(function(){return a.j})),n.d(t,"toNestedArray",(function(){return a.U})),n.d(t,"makeOnesTypedArray",(function(){return a.D})),n.d(t,"makeZerosTypedArray",(function(){return a.F})),n.d(t,"makeZerosNestedTypedArray",(function(){return a.E})),n.d(t,"assertNonNegativeIntegerDimensions",(function(){return a.c})),n.d(t,"locToIndex",(function(){return a.C})),n.d(t,"indexToLoc",(function(){return a.q})),n.d(t,"isPromise",(function(){return a.x})),n.d(t,"hexToLong",(function(){return o})),n.d(t,"fingerPrint64",(function(){return x})),n.d(t,"createScalarValue",(function(){return y})),n.d(t,"toTypedArray",(function(){return k})),n.d(t,"now",(function(){return v})),n.d(t,"fetch",(function(){return w})),n.d(t,"encodeString",(function(){return I})),n.d(t,"decodeString",(function(){return S}));var r=n(9),a=n(15),s=n(91);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const i=n.n(s).a||s;function o(e){return i.fromString(e,!0,16)}const u=o("c3a5c85c97cb3127"),c=o("b492b66fbe98f273"),l=o("9ae16a3b2f90404f");function d(e){return e.xor(e.shru(47))}function p(e,t,n){const r=e.slice(t,t+n);return i.fromBytes(Array.from(r),!0,!0)}function h(e,t){return p(e,t,8)}function f(e,t){return p(e,t,4)}function m(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function b(e,t,n=o("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let a=t.xor(r).mul(n);return a=a.xor(a.shru(47)),a=a.mul(n),a}function g(e,t,n,r){return function(e,t,n,r,a,s){a=a.add(e),s=m(s.add(a).add(r),21);const i=a;return a=(a=a.add(t)).add(n),s=s.add(m(a,44)),[a.add(r),s.add(i)]}(h(e,t),h(e,t+8),h(e,t+16),h(e,t+24),n,r)}function x(e,t=e.length){const n=i.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=l.add(2*t),r=h(e,0).add(l),a=h(e,t-8);return b(m(a,37).mul(n).add(r),m(r,25).add(a).mul(n),n)}if(t>=4){const n=l.add(2*t);return b(f(e,0).shl(3).add(t),f(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return d(l.mul(n).xor(u.mul(r))).mul(l)}return l}(e,t):function(e,t=e.length){const n=l.add(2*t),r=h(e,0).mul(c),a=h(e,8),s=h(e,t-8).mul(n),i=h(e,t-16).mul(l);return b(m(r.add(a),43).add(m(s,30)).add(i),r.add(m(a.add(l),18)).add(s),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=l.add(2*t),r=h(e,0).mul(l),a=h(e,8),s=h(e,t-8).mul(n),i=h(e,t-16).mul(l),o=m(r.add(a),43).add(m(s,30)).add(i),u=b(o,r.add(m(a.add(l),18)).add(s),n),c=h(e,16).mul(n),d=h(e,24),p=o.add(h(e,t-32)).mul(n),f=u.add(h(e,t-24)).mul(n);return b(m(c.add(d),43).add(m(p,30)).add(f),c.add(m(d.add(r),18)).add(p),n)}(e,t);let r=n,a=n.mul(c).add(113),s=d(a.mul(l).add(113)).mul(l),o=[i.UZERO,i.UZERO],p=[i.UZERO,i.UZERO];r=r.mul(l).add(h(e,0));let x=0;const y=64*(t-1>>6),k=y+(t-1&63)-63;do{r=m(r.add(a).add(o[0]).add(h(e,x+8)),37).mul(c),a=m(a.add(o[1]).add(h(e,x+48)),42).mul(c),r=r.xor(p[1]),a=a.add(o[0]).add(h(e,x+40)),s=m(s.add(p[0]),33).mul(c),o=g(e,x,o[1].mul(c),r.add(p[0])),p=g(e,x+32,s.add(p[1]),a.add(h(e,x+16))),[s,r]=[r,s],x+=64}while(x!==y);const v=c.add(s.and(255).shl(1));return x=k,p[0]=p[0].add(t-1&63),o[0]=o[0].add(p[0]),p[0]=p[0].add(o[0]),r=m(r.add(a).add(o[0]).add(h(e,x+8)),37).mul(v),a=m(a.add(o[1]).add(h(e,x+48)),42).mul(v),r=r.xor(p[1].mul(9)),a=a.add(o[0].mul(9).add(h(e,x+40))),s=m(s.add(p[0]),33).mul(v),o=g(e,x,o[1].mul(v),r.add(p[0])),p=g(e,x+32,s.add(p[1]),a.add(h(e,x+16))),[s,r]=[r,s],b(b(o[0],p[0],v).add(d(a).mul(u)).add(s),b(o[1],p[1],v).add(r),v)}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y(e,t){return"string"===t?I(e):k([e],t)}function k(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=a.m(e)),Object(r.c)().getBool("DEBUG")&&a.h(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function v(){return Object(r.c)().platform.now()}function w(e,t){return Object(r.c)().platform.fetch(e,t)}function I(e,t="utf-8"){return t=t||"utf-8",Object(r.c)().platform.encode(e,t)}function S(e,t="utf-8"){return t=t||"utf-8",Object(r.c)().platform.decode(e,t)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&r.util.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}},function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return i}));var r=n(0),a=n(7);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function s(e,t,n){return({inputs:s,attrs:i,backend:o})=>{const{x:u}=s;if(Object(a.a)(u,e),"string"===u.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const c=o,l=c.data.get(u.dataId).values,d=r.util.sizeFromShape(u.shape),p=n||u.dtype,h=r.util.getArrayFromDType(p,d);for(let e=0;e<d;++e)h[e]=t(l[e],i);return c.makeTensorInfo(u.shape,p,h)}}function i(e,t,n){return({inputs:r,attrs:s,backend:i})=>{const{x:o}=r;if(Object(a.a)(o,e),"string"===o.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const u=i,c=u.data.get(o.dataId).values,l=n||o.dtype,d=t(c,l,s);return u.makeTensorInfo(o.shape,l,d)}}},function(e,t,n){"use strict";n.d(t,"b",(function(){return s})),n.d(t,"c",(function(){return o})),n.d(t,"a",(function(){return u})),n.d(t,"d",(function(){return c}));var r=n(15);
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a="tfjsflags";class s{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=i,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(o().getBool("IS_TEST")||o().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];o().getBool("IS_TEST")||o().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Object(r.x)(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"==typeof this.global||"undefined"==typeof this.global.location||"undefined"==typeof this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if(a in e){e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}}function i(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function o(){return u}let u=null;function c(e){u=e}},function(e,t,n){"use strict";n.r(t),n.d(t,"makeTypesMatch",(function(){return i})),n.d(t,"assertTypesMatch",(function(){return o})),n.d(t,"isTensorInList",(function(){return u})),n.d(t,"getTensorsInContainer",(function(){return c}));var r=n(14),a=n(34),s=n(15);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t){if(e.dtype===t.dtype)return[e,t];const n=Object(a.c)(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function o(e,t){Object(s.b)(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function u(e,t){return t.some((t=>t.id===e.id))}function c(e){const t=[];return l(e,t,new Set),t}function l(e,t,n){if(null==e)return;if(e instanceof r.a)return void t.push(e);if(a=e,!Array.isArray(a)&&"object"!=typeof a)return;var a;const s=e;for(const e in s){const r=s[e];n.has(r)||(n.add(r),l(r,t,n))}}},function(e,t,n){"use strict";n.d(t,"d",(function(){return r})),n.d(t,"c",(function(){return s})),n.d(t,"b",(function(){return i})),n.d(t,"a",(function(){return o})),n.d(t,"e",(function(){return u}));var r,a=n(5);!function(e){e.float32="float32",e.float16="float16",e.int32="int32",e.uint32="uint32",e.int8="int8",e.uint8="uint8"}(r||(r={}));class s{constructor(e){this.builder_=e}get builder(){return this.builder_}}class i extends s{constructor(e,t,n){super(n),a.a("string"==typeof e,"The name parameter is invalid"),this.name=e,a.s(t),this.desc=t}}class o extends s{constructor(e,t,n){super(n),this.desc=e,this.value=t}static createScalar(e,t=r.float32,n){return a.a(t in r,"The operand type is invalid."),a.v(e,t),new o({type:t},e,n)}static createTensor(e,t,n){a.a(a.m(t),"Only ArrayBufferView value type is supported.");const r=t;return a.s(e),a.u(r,e.type,e.dimensions),new o(e,r.slice(),n)}}class u extends s{constructor(e){super(e.builder),this.operation=e}}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e){return(t,n,a,s,i)=>{const o=r.backend_util.assertAndGetBroadcastShape(t,n),u=o.length,c=r.util.computeStrides(o),l=r.util.sizeFromShape(o),d=r.util.getTypedArrayFromDType(i,l),p=t.length,h=n.length,f=r.util.computeStrides(t),m=r.util.computeStrides(n),b=r.backend_util.getBroadcastDims(t,o),g=r.backend_util.getBroadcastDims(n,o);if(b.length+g.length===0)for(let t=0;t<d.length;++t)d[t]=e(a[t%a.length],s[t%s.length]);else for(let t=0;t<d.length;++t){const n=r.util.indexToLoc(t,u,c),i=n.slice(-p);b.forEach((e=>i[e]=0));const o=r.util.locToIndex(i,p,f),l=n.slice(-h);g.forEach((e=>l[e]=0));const x=r.util.locToIndex(l,h,m);d[t]=e(a[o],s[x])}return[d,o]}}},function(e,t,n){"use strict";n.d(t,"a",(function(){return o})),n.d(t,"b",(function(){return u}));var r=n(0),a=n(7),s=n(29),i=n(18);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(e,t,n,o){return null==n?({inputs:n,backend:s})=>{const{a:i,b:u}=n,c=s;Object(a.a)([i,u],e);const l=c.data.get(i.dataId).values,d=c.data.get(u.dataId).values,p="string"===i.dtype?r.backend_util.fromUint8ToStringArray(l):l,h="string"===i.dtype?r.backend_util.fromUint8ToStringArray(d):d,f=o||i.dtype,[m,b]=t(i.shape,u.shape,p,h,f);return c.makeTensorInfo(b,f,m)}:({inputs:e,backend:r})=>{const{a:a,b:u}=e,c=r;if("complex64"===a.dtype||"complex64"===u.dtype){const e=Object(s.a)({inputs:{x:a},backend:c,attrs:{dtype:"complex64"}}),t=c.data.get(e.dataId),r=t.complexTensorInfos.real,o=t.complexTensorInfos.imag,l=c.data.get(r.dataId).values,d=c.data.get(o.dataId).values,p=Object(s.a)({inputs:{x:u},backend:c,attrs:{dtype:"complex64"}}),h=c.data.get(p.dataId),f=h.complexTensorInfos.real,m=h.complexTensorInfos.imag,b=c.data.get(f.dataId).values,g=c.data.get(m.dataId).values,[x,y,k]=n(a.shape,u.shape,l,d,b,g),v=c.makeTensorInfo(k,"float32",x),w=c.makeTensorInfo(k,"float32",y),I=Object(i.a)({inputs:{real:v,imag:w},backend:c});return c.disposeIntermediateTensorInfo(e),c.disposeIntermediateTensorInfo(p),c.disposeIntermediateTensorInfo(v),c.disposeIntermediateTensorInfo(w),I}{const e=c.data.get(a.dataId).values,n=c.data.get(u.dataId).values,r=o||a.dtype,[s,i]=t(a.shape,u.shape,e,n,r);return c.makeTensorInfo(i,r,s)}}}function u(e){return(t,n,a,s,i,o)=>{const u=r.backend_util.assertAndGetBroadcastShape(t,n),c=r.util.sizeFromShape(u),l=u.length,d=r.util.computeStrides(u),p=r.util.getTypedArrayFromDType("float32",c),h=r.util.getTypedArrayFromDType("float32",c),f=r.backend_util.getBroadcastDims(t,u),m=r.backend_util.getBroadcastDims(n,u),b=r.backend_util.mergeRealAndImagArrays(a,s),g=r.backend_util.mergeRealAndImagArrays(i,o),x=t.length,y=r.util.computeStrides(t),k=n.length,v=r.util.computeStrides(n);if(f.length+m.length===0)for(let t=0;t<p.length;t++){const n=t%b.length,r=t%g.length,a=e(b[2*n],b[2*n+1],g[2*r],g[2*r+1]);p[t]=a.real,h[t]=a.imag}else for(let t=0;t<p.length;t++){const n=r.util.indexToLoc(t,l,d),a=n.slice(-x);f.forEach((e=>a[e]=0));const s=r.util.locToIndex(a,x,y),i=n.slice(-k);m.forEach((e=>i[e]=0));const o=r.util.locToIndex(i,k,v),u=e(b[2*s],b[2*s+1],g[2*o],g[2*o+1]);p[t]=u.real,h[t]=u.imag}return[p,h,u]}}},function(e,t,n){"use strict";n.d(t,"b",(function(){return d})),n.d(t,"f",(function(){return m})),n.d(t,"e",(function(){return b})),n.d(t,"d",(function(){return g})),n.d(t,"a",(function(){return x})),n.d(t,"c",(function(){return y}));var r=n(37),a=n(15);function s(e,t,n,r){const s=Object(a.j)(t),o=function(e,t,n,r){const s=Object(a.O)(t),o=r[r.length-1],u=new Array(o).fill(0),l=t.length,d="complex64"===n?c(e):e;if(l>1)for(let e=0;e<s/o;e++){const t=e*o;for(let e=0;e<o;e++)u[e]=Math.max(u[e],i(d[t+e],0,n).length)}return u}(e,t,n,s),l=t.length,d=u(e,t,n,s,o),p=["Tensor"];return r&&(p.push(`  dtype: ${n}`),p.push(`  rank: ${l}`),p.push(`  shape: [${t}]`),p.push("  values:")),p.push(d.map((e=>"    "+e)).join("\n")),p.join("\n")}function i(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:Object(a.z)(e)?`'${e}'`:"bool"===n?o(e):parseFloat(e.toFixed(7)).toString(),Object(a.L)(r,t)}function o(e){return 0===e?"false":"true"}function u(e,t,n,r,a,s=!0){const l="complex64"===n?2:1,d=t[0],p=t.length;if(0===p){if("complex64"===n){return[i(c(e)[0],0,n)]}return"bool"===n?[o(e[0])]:[e[0].toString()]}if(1===p){if(d>20){const t=3*l;let r=Array.from(e.slice(0,t)),s=Array.from(e.slice((d-3)*l,d*l));return"complex64"===n&&(r=c(r),s=c(s)),["["+r.map(((e,t)=>i(e,a[t],n))).join(", ")+", ..., "+s.map(((e,t)=>i(e,a[d-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?c(e):Array.from(e)).map(((e,t)=>i(e,a[t],n))).join(", ")+"]"]}const h=t.slice(1),f=r.slice(1),m=r[0]*l,b=[];if(d>20){for(let t=0;t<3;t++){const r=t*m,s=r+m;b.push(...u(e.slice(r,s),h,n,f,a,!1))}b.push("...");for(let t=d-3;t<d;t++){const r=t*m,s=r+m;b.push(...u(e.slice(r,s),h,n,f,a,t===d-1))}}else for(let t=0;t<d;t++){const r=t*m,s=r+m;b.push(...u(e.slice(r,s),h,n,f,a,t===d-1))}const g=2===p?",":"";b[0]="["+b[0]+g;for(let e=1;e<b.length-1;e++)b[e]=" "+b[e]+g;let x=",\n";for(let e=2;e<p;e++)x+="\n";return b[b.length-1]=" "+b[b.length-1]+"]"+(s?"":x),b}function c(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var l=n(6);
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class d{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=a.O(e),null!=n){const e=n.length;a.b(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||a.n(t,this.size),this.strides=Object(a.j)(e)}set(e,...t){0===t.length&&(t=[0]),a.b(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return p().makeTensor(this.values,this.shape,this.dtype)}}let p=null,h=null,f=null;function m(e){p=e}function b(e){h=e}function g(e){f=e}class x{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=a.O(e),this.strides=Object(a.j)(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return h.buffer(this.shape,this.dtype,e)}bufferSync(){return h.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Object(a.U)(this.shape,e,"complex64"===this.dtype)}arraySync(){return Object(a.U)(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=p().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>l.decodeString(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),p().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=p().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>l.decodeString(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await p().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(p().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return h.print(this,e)}clone(){return this.throwIfDisposed(),h.clone(this)}toString(e=!1){return s(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),h.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),p().makeVariable(this,e,t,n)}}Object.defineProperty(x,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),Object(r.a)("Tensor",(()=>x));class y extends x{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!a.a(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);p().disposeTensor(this),this.dataId=e.dataId,p().incRef(this,null)}dispose(){p().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(y,Symbol.hasInstance,{value:e=>e instanceof x&&null!=e.assign&&e.assign instanceof Function})},function(e,t,n){"use strict";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function r(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,o(e,t,n)}function a(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,o(e,n,r),o(t,n,r)}function s(e,t,n){return Math.max(e,Math.min(t,n))}function i(e){return e%2==0?e:e+1}function o(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function u(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function c(e,t){const n=Math.random();return t*n+(1-n)*e}function l(e,t){let n=0;for(let r=0;r<e.length;r++){const a=Number(e[r])-Number(t[r]);n+=a*a}return n}function d(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function p(e,t,n=""){d(g(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function h(e){d(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function f(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||N(e)&&!n)for(let r=0;r<e.length;++r)f(e[r],t,n);else t.push(e);return t}function m(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function b(e){return 0===e.length}function g(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function x(e){return e%1==0}function y(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function k(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function v(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return r(t),t}function w(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function I(e,t=(e=>0),n){return new Promise(((r,a)=>{let s=0;const i=()=>{if(e())return void r();s++;const o=t(s);null!=n&&s>=n?a():setTimeout(i,o)};i()}))}function S(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const a=e.slice();return a[r]=t/n,a}function _(e,t){const n=t.length;return d((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),d(e.every((e=>x(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function C(e,t){const n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:_(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=s){if(s[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==s[i]||s[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),s[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function O(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function $(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function T(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function A(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function E(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function N(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function R(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function F(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function M(e){return"string"==typeof e||e instanceof String}function D(e){return"boolean"==typeof e}function P(e){return"number"==typeof e}function B(e){return Array.isArray(e)?B(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":P(e)?"float32":M(e)?"string":D(e)?"bool":"float32"}function j(e){return!!(e&&e.constructor&&e.call&&e.apply)}function L(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function z(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function W(e,t,n,r=!1){const a=new Array;if(1===t.length){const s=t[0]*(r?2:1);for(let t=0;t<s;t++)a[t]=n[e+t]}else{const s=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<s;t++)a[t]=W(e+t*o,i,n,r)}return a}function U(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return W(0,e,t,n)}function G(e,t){const n=V(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function V(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function H(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return U(e,new Float32Array(n));if("int32"===t)return U(e,new Int32Array(n));if("bool"===t)return U(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function q(e){e.forEach((t=>{d(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function K(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function X(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function Y(e){return e&&e.then&&"function"==typeof e.then}n.d(t,"M",(function(){return r})),n.d(t,"N",(function(){return a})),n.d(t,"i",(function(){return s})),n.d(t,"H",(function(){return i})),n.d(t,"S",(function(){return o})),n.d(t,"R",(function(){return u})),n.d(t,"J",(function(){return c})),n.d(t,"l",(function(){return l})),n.d(t,"b",(function(){return d})),n.d(t,"e",(function(){return p})),n.d(t,"d",(function(){return h})),n.d(t,"m",(function(){return f})),n.d(t,"O",(function(){return m})),n.d(t,"y",(function(){return b})),n.d(t,"a",(function(){return g})),n.d(t,"v",(function(){return x})),n.d(t,"T",(function(){return y})),n.d(t,"P",(function(){return k})),n.d(t,"k",(function(){return v})),n.d(t,"L",(function(){return w})),n.d(t,"K",(function(){return I})),n.d(t,"s",(function(){return S})),n.d(t,"I",(function(){return _})),n.d(t,"Q",(function(){return C})),n.d(t,"o",(function(){return O})),n.d(t,"n",(function(){return $})),n.d(t,"h",(function(){return T})),n.d(t,"B",(function(){return A})),n.d(t,"p",(function(){return E})),n.d(t,"A",(function(){return N})),n.d(t,"g",(function(){return R})),n.d(t,"f",(function(){return F})),n.d(t,"z",(function(){return M})),n.d(t,"t",(function(){return D})),n.d(t,"w",(function(){return P})),n.d(t,"r",(function(){return B})),n.d(t,"u",(function(){return j})),n.d(t,"G",(function(){return L})),n.d(t,"j",(function(){return z})),n.d(t,"U",(function(){return U})),n.d(t,"D",(function(){return G})),n.d(t,"F",(function(){return V})),n.d(t,"E",(function(){return H})),n.d(t,"c",(function(){return q})),n.d(t,"C",(function(){return K})),n.d(t,"q",(function(){return X})),n.d(t,"x",(function(){return Y}))},function(e,t,n){"use strict";n.d(t,"a",(function(){return i})),n.d(t,"b",(function(){return o}));var r=n(0),a=n(7),s=n(45);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const{inputs:t,attrs:n,backend:r}=e,{x:i}=t,{perm:o}=n;Object(a.a)(i,"transpose");const u=i.shape.length,c=new Array(u);for(let e=0;e<c.length;e++)c[e]=i.shape[o[e]];const l=r.data.get(i.dataId).values,d=Object(s.a)(l,i.shape,i.dtype,o,c);return{dataId:r.write(d,c,i.dtype),shape:c,dtype:i.dtype}}const o={kernelName:r.Transpose,backendName:"cpu",kernelFunc:i}},function(e,t,n){"use strict";(function(e){n.d(t,"f",(function(){return o})),n.d(t,"e",(function(){return u})),n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return h})),n.d(t,"d",(function(){return f})),n.d(t,"c",(function(){return m})),n.d(t,"i",(function(){return b})),n.d(t,"g",(function(){return g})),n.d(t,"h",(function(){return x}));var r=n(22),a=n(32),s=n(15),i=n(52);async function o(e,t){const n=[],r=[],a=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let s=0;s<a.length;++s){const i=a[s],o=Array.isArray(e)?e[s].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const u={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n);let a=0;for(let e=0;e<t.length;e++){const n=t[e],s=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(s,a),a+=4,r.set(n,a),a+=n.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(u.group=t),n.push(u)}return{data:c(await Promise.all(r)),specs:n}}function u(e,t){const n={};let o,u=0;for(const c of t){const t=c.name,l=c.dtype,d=c.shape,p=Object(s.O)(d);let h;if("quantization"in c){const n=c.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${c.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${c.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==l)throw new Error(`Weight ${c.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${l}.`)}const r=i.a[n.dtype],a=e.slice(u,u+p*r),s="uint8"===n.dtype?new Uint8Array(a):new Uint16Array(a);if("float32"===l)if("uint8"===n.dtype||"uint16"===n.dtype){h=new Float32Array(s.length);for(let e=0;e<s.length;e++){const t=s[e];h[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===o&&(o=y()),h=o(s)}else{if("int32"!==l)throw new Error(`Unsupported dtype in weight '${t}': ${l}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);h=new Int32Array(s.length);for(let e=0;e<s.length;e++){const t=s[e];h[e]=Math.round(t*n.scale+n.min)}}u+=p*r}else if("string"===l){const t=Object(s.O)(c.shape);h=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(u,u+4))[0];u+=4;const n=new Uint8Array(e.slice(u,u+t));h.push(n),u+=t}}else{const s=i.a[l],o=e.slice(u,u+p*s);if("float32"===l)h=new Float32Array(o);else if("int32"===l)h=new Int32Array(o);else if("bool"===l)h=new Uint8Array(o);else{if("complex64"!==l)throw new Error(`Unsupported dtype in weight '${t}': ${l}`);{h=new Float32Array(o);const e=new Float32Array(h.length/2),s=new Float32Array(h.length/2);for(let t=0;t<e.length;t++)e[t]=h[2*t],s[t]=h[2*t+1];const i=Object(a.a)(e,d,"float32"),u=Object(a.a)(s,d,"float32");n[t]=Object(r.a)(i,u),i.dispose(),u.dispose()}}u+=p*s}"complex64"!==l&&(n[t]=Object(a.a)(h,d,l))}return n}function c(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let a=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength})),r.buffer}const l="undefined"!=typeof e&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function d(t){return l?e.byteLength(t):new Blob([t]).size}function p(t){if(l)return e.from(t).toString("base64");const n=new Uint8Array(t);let r="";for(let e=0,t=n.length;e<t;e++)r+=String.fromCharCode(n[e]);return btoa(r)}function h(t){if(l){const n=e.from(t,"base64");return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}const n=atob(t),r=new Uint8Array(n.length);for(let e=0;e<n.length;++e)r.set([n.charCodeAt(e)],e);return r.buffer}function f(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function m(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function b(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}async function g(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest){const[r,a]=await t(e.weightsManifest);n.weightSpecs=r,n.weightData=a}return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),n}function x(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:d(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:d(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function y(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let a=0;a<r.length;a++){const i=r[a],o=e[n[i>>10]+(1023&i)]+t[i>>10];s[a]=o}return new Float32Array(a)}}}).call(this,n(104).Buffer)},function(e,t,n){"use strict";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function r(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",i)},o}n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return a}));const a={kernelName:n(0).Complex,backendName:"cpu",kernelFunc:r}},function(e,t,n){"use strict";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function r(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return a}));const a={kernelName:n(0).Identity,backendName:"cpu",kernelFunc:r}},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(3),a=n(15),s=n(6);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t,n,i){if(null==i&&(i=Object(a.r)(e)),"complex64"===i)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Object(a.A)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Object(a.c)(t);const e=Object(a.O)(t),r=Object(a.O)(n);Object(a.b)(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],s=e!==n.length-1||r!==Object(a.O)(t.slice(e));Object(a.b)(n[e]===t[e]||!s,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return Object(a.A)(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==i?Object(s.toTypedArray)(e,i):Object(a.m)(e,[],!0),r.a.makeTensor(e,t,i)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e){return(t,n,a)=>{const s=r.util.getTypedArrayFromDType(n,t.length);for(let n=0;n<t.length;++n)s[n]=e(t[n],a);return s}}},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(3),a=n(4),s=n(1),i=n(15),o=n(2);const u=Object(o.b)({complex_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t){const n=Object(s.a)(e,"real","complex"),o=Object(s.a)(t,"imag","complex");i.e(n.shape,o.shape,`real and imag shapes, ${n.shape} and ${o.shape}, must match in call to tf.complex().`);const u={real:n,imag:o};return r.a.runKernel(a.A,u)}})},function(e,t,n){"use strict";n.d(t,"c",(function(){return s})),n.d(t,"a",(function(){return i})),n.d(t,"b",(function(){return o}));var r=n(0),a=n(7);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function s(e,t,n,a,s){const i=r.slice_util.isSliceContinous(a,t,n),o=r.util.sizeFromShape(n),u=r.util.computeStrides(a);if(i){const n=r.slice_util.computeFlatOffset(t,u);return"string"===s?e.slice(n,n+o):e.subarray(n,n+o)}const c="string"===s?r.backend_util.fromUint8ToStringArray(e):e,l=Object(r.buffer)(a,s,c),d=Object(r.buffer)(n,s);for(let e=0;e<d.size;++e){const n=d.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));d.set(l.get(...r),...n)}return"string"===s?r.backend_util.fromStringArrayToUint8(d.values):d.values}function i(e){const{inputs:t,backend:n,attrs:i}=e,{x:o}=t,{begin:u,size:c}=i;Object(a.a)(o,"slice");const[l,d]=r.slice_util.parseSliceParams(o,u,c);r.slice_util.assertParamsValid(o,l,d);const p=s(n.data.get(o.dataId).values,l,d,o.shape,o.dtype);return n.makeTensorInfo(d,o.dtype,p)}const o={kernelName:r.Slice,backendName:"cpu",kernelFunc:i}},function(e,t,n){"use strict";n.d(t,"c",(function(){return i})),n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return c}));var r=n(0),a=n(12),s=n(13);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const i=Object(a.a)(((e,t)=>e+t)),o=Object(s.b)(((e,t,n,r)=>({real:e+n,imag:t+r}))),u=Object(s.a)(r.Add,i,o),c={kernelName:r.Add,backendName:"cpu",kernelFunc:u}},function(e,t,n){"use strict";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function r(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return a}));const a={kernelName:n(0).Real,backendName:"cpu",kernelFunc:r}},function(e,t){e.exports=function(){throw new Error("define cannot be used indirect")}},function(e,t,n){"use strict";n.r(t);var r=n(55);n.d(t,"simpleAbsImpl",(function(){return r.b}));var a=n(24);n.d(t,"addImpl",(function(){return a.c}));var s=n(35);n.d(t,"bincountImpl",(function(){return s.a})),n.d(t,"bincountReduceImpl",(function(){return s.b}));var i=n(56);n.d(t,"ceilImpl",(function(){return i.b}));var o=n(57);n.d(t,"concatImpl",(function(){return o.a}));var u=n(43);n.d(t,"equalImpl",(function(){return u.c}));var c=n(44);n.d(t,"expImpl",(function(){return c.c}));var l=n(58);n.d(t,"expm1Impl",(function(){return l.b}));var d=n(59);n.d(t,"floorImpl",(function(){return d.b}));var p=n(60);n.d(t,"gatherNdImpl",(function(){return p.a}));var h=n(61);n.d(t,"gatherV2Impl",(function(){return h.a}));var f=n(62);n.d(t,"greaterImpl",(function(){return f.b}));var m=n(63);n.d(t,"greaterEqualImpl",(function(){return m.b}));var b=n(64);n.d(t,"lessImpl",(function(){return b.b}));var g=n(65);n.d(t,"lessEqualImpl",(function(){return g.b}));var x=n(66);n.d(t,"linSpaceImpl",(function(){return x.a}));var y=n(67);n.d(t,"logImpl",(function(){return y.b}));var k=n(68);n.d(t,"maxImpl",(function(){return k.a}));var v=n(69);n.d(t,"maximumImpl",(function(){return v.b}));var w=n(70);n.d(t,"minimumImpl",(function(){return w.b}));var I=n(28);n.d(t,"multiplyImpl",(function(){return I.c}));var S=n(71);n.d(t,"negImpl",(function(){return S.b}));var _=n(72);n.d(t,"notEqualImpl",(function(){return _.b}));var C=n(73);n.d(t,"prodImpl",(function(){return C.b}));var O=n(74);n.d(t,"rangeImpl",(function(){return O.a}));var $=n(75);n.d(t,"rsqrtImpl",(function(){return $.b}));var T=n(33);n.d(t,"scatterImpl",(function(){return T.a}));var A=n(46);n.d(t,"sigmoidImpl",(function(){return A.c}));var E=n(23);n.d(t,"sliceImpl",(function(){return E.c}));var N=n(76);n.d(t,"sparseFillEmptyRowsImpl",(function(){return N.a}));var R=n(77);n.d(t,"sparseReshapeImpl",(function(){return R.a}));var F=n(47);n.d(t,"sparseSegmentReductionImpl",(function(){return F.a}));var M=n(78);n.d(t,"sqrtImpl",(function(){return M.b}));var D=n(79);n.d(t,"squaredDifferenceImpl",(function(){return D.b}));var P=n(80);n.d(t,"stridedSliceImpl",(function(){return P.a}));var B=n(81);n.d(t,"stringNGramsImpl",(function(){return B.a}));var j=n(82);n.d(t,"stringSplitImpl",(function(){return j.a}));var L=n(83);n.d(t,"stringToHashBucketFastImpl",(function(){return L.a}));var z=n(36);n.d(t,"subImpl",(function(){return z.c}));var W=n(84);n.d(t,"tileImpl",(function(){return W.a}));var U=n(85);n.d(t,"topKImpl",(function(){return U.a}));var G=n(45);n.d(t,"transposeImpl",(function(){return G.a}));var V=n(86);n.d(t,"uniqueImpl",(function(){return V.a}))},function(e,t,n){"use strict";n.d(t,"c",(function(){return i})),n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return c}));var r=n(0),a=n(12),s=n(13);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const i=Object(a.a)(((e,t)=>e*t)),o=Object(s.b)(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),u=Object(s.a)(r.Multiply,i,o),c={kernelName:r.Multiply,backendName:"cpu",kernelFunc:u}},function(e,t,n){"use strict";n.d(t,"a",(function(){return c})),n.d(t,"b",(function(){return l}));var r=n(0),a=n(12),s=n(87),i=n(18),o=n(19),u=n(25);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(e){const{inputs:t,backend:n,attrs:l}=e,{x:d}=t,{dtype:p}=l;if("complex64"===p){if("complex64"===d.dtype)return Object(o.a)({inputs:{x:d},backend:n});const e=Object(s.a)(n,d.shape,d.dtype),t=c({inputs:{x:d},backend:n,attrs:{dtype:"float32"}}),r=Object(i.a)({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===d.dtype){const e=Object(u.a)({inputs:{input:d},backend:n}),t=c({inputs:{x:e},backend:n,attrs:{dtype:p}});return n.disposeIntermediateTensorInfo(e),t}if(!r.util.hasEncodingLoss(d.dtype,p)){const e=Object(o.a)({inputs:{x:d},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:p}}if("int32"===p){const e=n.data.get(d.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(d.shape,"int32",t)}if("bool"===p){const e=n.data.get(d.dataId).values,t=r.util.toTypedArray([0],d.dtype),[s,i]=Object(a.a)(((e,t)=>e!==t?1:0))(d.shape,[],e,t,"bool");return n.makeTensorInfo(i,"bool",s)}throw new Error(`Error in Cast: failed to cast ${d.dtype} to ${p}`)}const l={kernelName:r.Cast,backendName:"cpu",kernelFunc:c}},function(e,t,n){"use strict";n.d(t,"b",(function(){return a})),n.d(t,"a",(function(){return s}));var r=n(9);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(...e){Object(r.c)().getBool("IS_TEST")||Object(r.c)().getBool("PROD")||console.warn(...e)}function s(...e){Object(r.c)().getBool("IS_TEST")||Object(r.c)().getBool("PROD")||console.log(...e)}},function(e,t,n){"use strict";n.d(t,"c",(function(){return u})),n.d(t,"b",(function(){return c})),n.d(t,"d",(function(){return l})),n.d(t,"f",(function(){return d})),n.d(t,"e",(function(){return p})),n.d(t,"h",(function(){return h})),n.d(t,"g",(function(){return f})),n.d(t,"a",(function(){return m}));var r=n(9),a=n(37),s=n(30);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const i=Object(a.a)("kernelRegistry",(()=>new Map)),o=Object(a.a)("gradRegistry",(()=>new Map));function u(e,t){const n=b(e,t);return i.get(n)}function c(e){return o.get(e)}function l(e){const t=i.entries(),n=[];for(;;){const{done:r,value:a}=t.next();if(r)break;const[s,i]=a,[o]=s.split("_");o===e&&n.push(i)}return n}function d(e){const{kernelName:t,backendName:n}=e,r=b(t,n);i.has(r)&&s.b(`The kernel '${t}' for backend '${n}' is already registered`),i.set(r,e)}function p(e){const{kernelName:t}=e;o.has(t)&&Object(r.c)().getBool("DEBUG")&&s.b(`Overriding the gradient for '${t}'`),o.set(t,e)}function h(e,t){const n=b(e,t);if(!i.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);i.delete(n)}function f(e){if(!o.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);o.delete(e)}function m(e,t){l(e).forEach((e=>{d(Object.assign({},e,{backendName:t}))}))}function b(e,t){return`${t}_${e}`}},function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var r=n(1),a=n(20);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function s(e,t,n){const s=Object(r.c)(e,n);return Object(a.a)(e,t,s,n)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n,a,s,i,o,u,c,l){const d=[a/s,s],p=e.values,h=t.values;if(0===a)return Object(r.buffer)(n,t.dtype);const f=Object(r.buffer)(d,t.dtype);"string"==typeof c||"number"==typeof c?f.values.fill(c):"boolean"==typeof c&&f.values.fill(+c);for(let e=0;e<i;e++){const r=[];let i=0;for(let t=0;t<o;t++){const n=p[e*o+t];r.push(n),i+=n*u[t]}if(i<0||i>=a/s)throw new Error(`Invalid indices: ${r} does not index into ${n}`);for(let n=0;n<s;n++)l?f.values[i*s+n]+=h[e*s+n]:f.values[i*s+n]=0===t.rank?h[0]:h[e*s+n]}return f}},function(e,t,n){"use strict";
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
var r,a,s,i,o;n.d(t,"a",(function(){return r})),n.d(t,"c",(function(){return c})),n.d(t,"b",(function(){return l})),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(r||(r={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(a||(a={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(s||(s={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(i||(i={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(o||(o={}));const u={float32:i,int32:a,bool:s,complex64:o};function c(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return u[e][t]}function l(e){return c(e,"int32")}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a})),n.d(t,"b",(function(){return s}));var r=n(0);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n,a,s){const i=r.util.sizeFromShape(a),o=r.util.makeZerosTypedArray(s,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=s||(o[r]+=i>0?t[n]:1)}return o}function s(e,t,n,a=!1){const s=e.shape[0],i=e.shape[1],o=Object(r.buffer)([s,n],t.dtype);for(let r=0;r<s;r++)for(let s=0;s<i;s++){const i=e.get(r,s);if(i<0)throw new Error("Input x must be non-negative!");i>=n||(a?o.set(1,r,i):t.size>0?o.set(o.get(r,i)+t.get(r,s),r,i):o.set(o.get(r,i)+1,r,i))}return o}},function(e,t,n){"use strict";n.d(t,"c",(function(){return i})),n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return c}));var r=n(0),a=n(12),s=n(13);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const i=Object(a.a)(((e,t)=>e-t)),o=Object(s.b)(((e,t,n,r)=>({real:e-n,imag:t-r}))),u=Object(s.a)(r.Sub,i,o),c={kernelName:r.Sub,backendName:"cpu",kernelFunc:u}},function(e,t,n){"use strict";(function(e,r){
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
let a;function s(){if(null==a){let t;if("undefined"!=typeof window)t=window;else if("undefined"!=typeof e)t=e;else if("undefined"!=typeof r)t=r;else{if("undefined"==typeof self)throw new Error("Could not find a global object");t=self}a=t}return a}function i(e,t){const n=function(){const e=s();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}n.d(t,"b",(function(){return s})),n.d(t,"a",(function(){return i}))}).call(this,n(39),n(40))},function(e,t,n){"use strict";n.d(t,"e",(function(){return c})),n.d(t,"b",(function(){return l})),n.d(t,"a",(function(){return d})),n.d(t,"c",(function(){return p})),n.d(t,"i",(function(){return h})),n.d(t,"h",(function(){return f})),n.d(t,"g",(function(){return m})),n.d(t,"j",(function(){return b})),n.d(t,"f",(function(){return g})),n.d(t,"d",(function(){return ye}));var r=n(48),a=n(88),s=n(11),i=n(0);class o{constructor(e){this.outputs_=[],this.builder_=e}get builder(){return this.builder_}get outputs(){return this.outputs_}compute(e){const t=new Map;for(const n of this.inputs())t.set(n,e.getTensor(n));const n=i.tidy((()=>this.computeImpl(t)));for(let t=0;t<this.outputs_.length;++t)e.setOutputTensor(this.outputs_[t],n[t]);for(const t of this.inputs())e.releaseTensor(t)}dispose(){}}class u extends o{constructor(e){super(e),e&&this.createOutput()}createOutput(){this.outputs_.push(new s.e(this))}get output(){return this.outputs_[0]}computeImpl(e){return[this.run(e)]}}var c,l,d,p,h,f,m,b,g,x=n(5);class y extends u{constructor(e,t,n,r={}){if(super(e.builder),this.needCheckOutputShape_=!0,x.r(e),this.input_=e,x.r(t),this.mean_=t,x.r(n),this.variance_=n,x.t(r.scale),this.scale_=r.scale,x.t(r.bias),this.bias_=r.bias,void 0!==r.axis){const e=r.axis;x.a(x.k(e),"The axis parameter is invalid."),this.axis_=e}else this.axis_=1;if(void 0!==r.epsilon){const e=r.epsilon;x.a("number"==typeof e,"The epsilon parameter is invalid"),this.epsilon_=e}else this.epsilon_=1e-5;this.activation_=r.activation}inputs(){const e=[this.input_,this.mean_,this.variance_];return this.scale_&&e.push(this.scale_),this.bias_&&e.push(this.bias_),e}getFusedOutputs(){return this.activation_?[this.activation_.apply(this.output)]:[this.output]}run(e){const t=e.get(this.input_);x.a(this.axis_<t.rank&&this.axis_>=-t.rank,"The axis parameter is invalid.");const n=this.axis_>=0?this.axis_:t.rank+this.axis_,r=e.get(this.mean_);x.a(1===r.rank,"The mean operand is not 1-D.");const a=e.get(this.variance_);let s,o;x.a(1===a.rank,"The mean operand is not 1-D."),this.scale_&&(s=e.get(this.scale_),x.a(1===s.rank,"The scale operand is not 1-D.")),this.bias_&&(o=e.get(this.bias_),x.a(1===o.rank,"The bias operand is not 1-D."));const u=Array.from(Array(t.rank).keys());u[n]=t.rank-1,u[t.rank-1]=n;const c=i.transpose(i.batchNorm(i.transpose(t,u),r,a,o,s,this.epsilon_),u);return this.needCheckOutputShape_&&(x.b(c.shape,t.shape),this.needCheckOutputShape_=!1),c}}class k extends u{constructor(e,t){super(e.builder),this.needCheckOutputShape_=!0,x.r(e),this.a_=e,x.r(t),this.b_=t}inputs(){return[this.a_,this.b_]}run(e){const t=e.get(this.a_),n=e.get(this.b_),r=this.runOp(t,n);if(this.needCheckOutputShape_){let e;if(this instanceof $){const r=t.rank,a=n.rank;1===r&&1===a?e=[]:2===r&&1===a?e=[t.shape[0],1]:1===r&&2===a?e=[1,n.shape[1]]:r>=2&&a>=2&&(e=x.f(t.shape.slice(0,-2),n.shape.slice(0,-2)),e.push(t.shape[r-2]),e.push(n.shape[a-1]))}else e=x.f(t.shape,n.shape);x.b(r.shape,e),this.needCheckOutputShape_=!1}return r}}class v extends k{runOp(e,t){return i.add(e,t)}}class w extends k{runOp(e,t){return i.sub(e,t)}}class I extends k{runOp(e,t){return i.mul(e,t)}}class S extends k{runOp(e,t){return i.div(e,t)}}class _ extends k{runOp(e,t){return i.maximum(e,t)}}class C extends k{runOp(e,t){return i.minimum(e,t)}}class O extends k{runOp(e,t){return i.pow(e,t)}}class $ extends k{runOp(e,t){if(1===e.rank)return 1===t.rank?i.dot(e,t):i.matMul(i.reshape(e,[1,-1]),t);if(1===t.rank)return i.matMul(e,i.reshape(t,[-1,1]));{const n=e.rank>t.rank?e.rank:t.rank;let r=i.matMul(e,t);return r.rank!==n&&(r=i.reshape(r,[1].concat(r.shape))),r}}}class T extends u{constructor(e){void 0!==e?(super(e.builder),x.r(e),this.x_=e):(super(void 0),this.x_=void 0),this.needCheckOutputShape_=!0}inputs(){return[this.x_]}run(e){const t=e.get(this.x_),n=this.runOp(t);return this.needCheckOutputShape_&&(x.b(n.shape,t.shape),this.needCheckOutputShape_=!1),n}}class A extends T{runOp(e){return i.abs(e)}}class E extends T{runOp(e){return i.ceil(e)}}class N extends T{runOp(e){return i.cos(e)}}class R extends T{runOp(e){return i.exp(e)}}class F extends T{runOp(e){return i.floor(e)}}class M extends T{runOp(e){return i.log(e)}}class D extends T{runOp(e){return i.neg(e)}}class P extends T{runOp(e){return i.sin(e)}}class B extends T{runOp(e){return i.tan(e)}}class j extends T{apply(e){return this.builder_=e.builder,x.r(e),this.x_=e,this.createOutput(),this.output}}class L extends j{runOp(e){return i.sigmoid(e)}}class z extends j{runOp(e){return i.tanh(e)}}class W extends j{runOp(e){return i.relu(e)}}class U extends j{runOp(e){return i.div(i.mul(e,i.maximum(0,i.minimum(6,i.add(e,3)))),6)}}class G extends j{constructor(e,t={}){if(void 0!==e?(super(e),x.r(e),this.x_=e):(super(void 0),this.x_=void 0),void 0!==t.minValue){const e=t.minValue;x.a("number"==typeof e,"The minValue parameter is invalid"),this.minValue_=e}if(void 0!==t.maxValue){const e=t.maxValue;x.a("number"==typeof e,"The maxValue parameter is invalid"),this.maxValue_=e}}get minValue(){return void 0!==this.minValue_?this.minValue_:-1/0}get maxValue(){return void 0!==this.maxValue_?this.maxValue_:1/0}runOp(e){return void 0!==this.minValue_&&void 0!==this.maxValue_?i.clipByValue(e,this.minValue_,this.maxValue_):void 0!==this.minValue_&&void 0===this.maxValue_?i.maximum(e,this.minValue_):void 0===this.minValue_&&void 0!==this.maxValue_?i.minimum(e,this.maxValue_):i.clone(e)}}class V extends u{constructor(e,t){super(e[0].builder),this.needCheckOutputShape_=!0,x.a(e.every((e=>e instanceof s.c)),"The parameter is not an operand."),this.inputs_=e,x.a(x.k(t),"The axis parameter is invalid."),this.axis_=t}inputs(){return this.inputs_}run(e){const t=[];for(const n of this.inputs())t.push(e.get(n));const n=i.concat(t,this.axis_);if(this.needCheckOutputShape_){const e=t[0].shape.slice();for(let n=1;n<t.length;++n)e[this.axis_]+=t[n].shape[this.axis_];x.b(n.shape,e),this.needCheckOutputShape_=!1}return n}}class H extends j{constructor(e,t=.01){super(e),x.a("number"==typeof t,"The alpha parameter is invalid."),this.alpha_=t}get alpha(){return this.alpha_}runOp(e){return i.leakyRelu(e,this.alpha_)}}class q extends u{constructor(e,t,n={}){super(e.builder),this.needCheckOutputShape_=!0,x.r(e),this.input_=e,x.r(t),this.filter_=t,this.initOptions(n.padding,n.strides,n.dilations,n.groups,n.inputLayout,n.filterLayout,n.autoPad,n.bias,n.activation)}initOptions(e=[0,0,0,0],t=[1,1],n=[1,1],r=1,a=c.nchw,s=l.oihw,i=d.explicit,o,u){x.a(x.l(e)&&4===e.length,"The padding parameter is invalid."),this.padding_=e,x.a(x.l(t)&&2===t.length,"The strides parameter is invalid."),this.strides_=t,x.a(x.l(n)&&2===n.length,"The dilations parameter is invalid."),this.dilations_=n,x.a(x.k(r),"The gourps parameter is invalid."),this.groups_=r,x.a(a in c,"The input layout parameter is invalid."),this.inputLayout_=a,x.a(s in l,"The filter layout parameter is invalid."),this.filterLayout_=s,x.a(i in d,"The autoPad parameter is invalid."),this.autoPad_=i,this.bias_=o,this.bias_&&x.r(this.bias_),u instanceof W?(this.fusedActivation_="relu",this.activation_=void 0):this.isRelu6(u)?(this.fusedActivation_="relu6",this.activation_=void 0):u instanceof H?(this.fusedActivation_="leakyrelu",this.leakyreluAlpha_=u.alpha,this.activation_=void 0):u instanceof L?(this.fusedActivation_="sigmoid",this.activation_=void 0):(this.fusedActivation_=void 0,this.activation_=u)}isRelu6(e){if(e instanceof G){const t=e;if(Math.abs(t.minValue-0)<1e-5&&Math.abs(t.maxValue-6)<1e-5)return!0}return!1}getFusedOutputs(){return this.activation_?[this.activation_.apply(this.output)]:[this.output]}inputs(){const e=[this.input_,this.filter_];return this.bias_&&e.push(this.bias_),e}run(e){let t,n,r=e.get(this.input_),a=!1;this.bias_&&(n=e.get(this.bias_)),this.inputLayout_===c.nchw&&(r=i.transpose(r,[0,2,3,1]));const o=r.shape[3];void 0===this.filterTensor_?(t=e.get(this.filter_),this.filterLayout_===l.oihw?t=i.transpose(t,[2,3,1,0]):this.filterLayout_===l.ohwi?t=i.transpose(t,[1,2,3,0]):this.filterLayout_===l.ihwo&&(t=i.transpose(t,[1,2,0,3])),1!==this.groups_&&(t=i.transpose(t,[0,1,3,2])),this.filter_ instanceof s.a&&(this.filterTensor_=t,i.keep(this.filterTensor_))):t=this.filterTensor_;const u=x.g(r,t,this.padding_,this.strides_,this.dilations_,this.autoPad_);let d;if(1===this.groups_)d=i.fused.conv2d({x:r,filter:t,strides:this.strides_,pad:u,dataFormat:"NHWC",dilations:this.dilations_,bias:n,activation:this.fusedActivation_,leakyreluAlpha:this.leakyreluAlpha_}),a=!0;else{if(this.groups_!==o||this.groups_!==t.shape[2])throw new Error(`The tf.js convolution doesn't support groups parameter ${this.groups_}`);if(u instanceof Array&&u[1][0]===u[1][1]&&u[1][0]===u[2][0]&&u[1][0]===u[2][1]){const e=u[1][0];d=i.fused.depthwiseConv2d({x:r,filter:t,strides:this.strides_,pad:e,dataFormat:"NHWC",dilations:this.dilations_,bias:n,activation:this.fusedActivation_,leakyreluAlpha:this.leakyreluAlpha_}),a=!0}else d=i.depthwiseConv2d(r,t,this.strides_,u,"NHWC",this.dilations_)}if(a||(n&&(d=i.add(d,n)),"relu"===this.fusedActivation_?d=i.relu(d):"relu6"===this.fusedActivation_?d=i.clipByValue(d,0,6):"leakyrelu"===this.fusedActivation_?d=i.leakyRelu(d,this.leakyreluAlpha_):"sigmoid"===this.fusedActivation_?d=i.sigmoid(d):void 0!==this.fusedActivation_&&x.a(!1,`The ${this.fusedActivation_} is un supported.`)),this.inputLayout_===c.nchw&&(d=i.transpose(d,[0,3,1,2])),this.needCheckOutputShape_){const e=t.shape[0]+(t.shape[0]-1)*(this.dilations_[0]-1),n=t.shape[1]+(t.shape[1]-1)*(this.dilations_[1]-1),a=1+Math.floor((r.shape[1]-e+u[1][0]+u[1][1])/this.strides_[0]),s=1+Math.floor((r.shape[2]-n+u[2][0]+u[2][1])/this.strides_[1]),i=1!==this.groups_?t.shape[2]:t.shape[3],o=new Array(4);o[0]=r.shape[0],o[1]=a,o[2]=s,o[3]=i,this.inputLayout_===c.nchw&&(o[1]=i,o[2]=a,o[3]=s),x.b(d.shape,o),this.needCheckOutputShape_=!1}return d}dispose(){this.filterTensor_&&i.dispose(this.filterTensor_)}}class K extends u{constructor(e,t,n={}){super(e.builder),this.needCheckOutputShape_=!0,x.r(e),this.input_=e,x.r(t),this.filter_=t,this.initOptions(n.padding,n.strides,n.dilations,n.groups,n.inputLayout,n.filterLayout,n.autoPad,n.outputPadding,n.outputSizes,n.bias,n.activation)}initOptions(e=[0,0,0,0],t=[1,1],n=[1,1],r=1,a=c.nchw,s=p.iohw,i=d.explicit,o=[0,0],u,l,h){x.a(x.l(e)&&4===e.length,"The padding parameter is invalid."),this.padding_=e,x.a(x.l(t)&&2===t.length,"The strides parameter is invalid."),this.strides_=t,x.a(x.l(n)&&2===n.length,"The dilations parameter is invalid."),this.dilations_=n,x.a(this.dilations_.every((e=>1===e)),"The tf.conv2dTranspose does not support dilations parameter."),x.a(x.k(r),"The gourps parameter is invalid."),this.groups_=r,x.a(1===this.groups_,"The tf.conv2dTranspose does not support groups parameter."),x.a(a in c,"The input layout parameter is invalid."),this.inputLayout_=a,x.a(s in p,"The filter layout parameter is invalid."),this.filterLayout_=s,x.a(i in d,"The autoPad parameter is invalid."),this.autoPad_=i,x.a(void 0===u||x.l(u)&&2===u.length,"The outputSizes parameter is invalid."),this.outputSizes_=u,void 0===u?(x.a(x.l(o)&&2===o.length,"The outputPadding parameter is invalid."),this.outputPadding_=o):this.outputPadding_=[0,0],this.bias_=l,this.bias_&&x.r(this.bias_),h instanceof W?(this.fusedActivation_="relu",this.activation_=void 0):this.isRelu6(h)?(this.fusedActivation_="relu6",this.activation_=void 0):h instanceof H?(this.fusedActivation_="leakyrelu",this.leakyreluAlpha_=h.alpha,this.activation_=void 0):h instanceof L?(this.fusedActivation_="sigmoid",this.activation_=void 0):(this.fusedActivation_=void 0,this.activation_=h)}isRelu6(e){if(e instanceof G){const t=e;if(Math.abs(t.minValue-0)<1e-5&&Math.abs(t.maxValue-6)<1e-5)return!0}return!1}getFusedOutputs(){return this.activation_?[this.activation_.apply(this.output)]:[this.output]}inputs(){const e=[this.input_,this.filter_];return this.bias_&&e.push(this.bias_),e}run(e){let t,n,r=e.get(this.input_);if(this.bias_&&(n=e.get(this.bias_)),this.inputLayout_===c.nchw&&(r=i.transpose(r,[0,2,3,1])),void 0===this.filterTensor_){if(t=e.get(this.filter_),this.filterLayout_===p.iohw?t=i.transpose(t,[2,3,1,0]):this.filterLayout_===p.ohwi&&(t=i.transpose(t,[1,2,0,3])),1!==this.groups_)throw new Error("Unsupported the groups parameter by tfjs.convTranspose2d");this.filter_ instanceof s.a&&(this.filterTensor_=t,i.keep(this.filterTensor_))}else t=this.filterTensor_;const a=x.g(r,t,this.padding_,this.strides_,this.dilations_,this.autoPad_,this.outputPadding_);let o;const u=[r.shape[0],0,0,t.shape[2]];if(void 0!==this.outputSizes_)u[1]=this.outputSizes_[0],u[2]=this.outputSizes_[1];else for(let e=0;e<2;++e)u[e+1]=(r.shape[e+1]-1)*this.strides_[e]+t.shape[e]+(t.shape[e]-1)*(this.dilations_[e]-1)-a[e+1][0]-a[e+1][1]+this.outputPadding_[e];if(o=i.conv2dTranspose(r,t,u,this.strides_,a),n&&(o=i.add(o,n)),"relu"===this.fusedActivation_?o=i.relu(o):"relu6"===this.fusedActivation_?o=i.clipByValue(o,0,6):"leakyrelu"===this.fusedActivation_?o=i.leakyRelu(o,this.leakyreluAlpha_):"sigmoid"===this.fusedActivation_?o=i.sigmoid(o):void 0!==this.fusedActivation_&&x.a(!1,`The ${this.fusedActivation_} is un supported.`),this.inputLayout_===c.nchw){o=i.transpose(o,[0,3,1,2]);const e=u[3];u[3]=u[2],u[2]=u[1],u[1]=e}return this.needCheckOutputShape_&&(x.b(o.shape,u),this.needCheckOutputShape_=!1),o}dispose(){this.filterTensor_&&i.dispose(this.filterTensor_)}}class X extends o{constructor(e,t,n,r,a,i={}){super(e.builder),this.needCheckOutputShape_=!0,x.r(e),this.input_=e,x.r(t),this.weight_=t,x.r(n),this.recurrentWeight_=n,x.a(x.k(r)&&r>0,"The steps parameter is invalid."),this.steps_=r,x.a(x.k(a)&&a>0,"The hiddenSize parameter is invalid."),this.hiddenSize_=a,this.initOptions(i.bias,i.recurrentBias,i.initialHiddenState,i.resetAfter,i.returnSequence,i.direction,i.layout,i.activations),this.outputs.push(new s.e(this)),this.returnSequence_&&this.outputs_.push(new s.e(this))}initOptions(e,t,n,r=!0,a=!1,s=f.forward,i=h.zrn,o=[this.builder.sigmoid(),this.builder.tanh()]){x.t(e),this.bias_=e,x.t(t),this.recurrentBias_=t,x.t(n),this.initialHiddenState_=n,x.a(x.i(r),"The resetAfter parameter is not a boolean."),this.resetAfter_=r,x.a(x.i(a),"The resetAfter parameter is not a boolean."),this.returnSequence_=a,x.a(s in f,"The direction parameter is invalid."),this.direction_=s,x.a(i in h,"The layout parameter is invalid."),this.layout_=i,x.a(o instanceof Array&&2===o.length&&o.every((e=>e instanceof j)),"The activations parameter is invalid."),this.activations_=o}inputs(){const e=[this.input_,this.weight_,this.recurrentWeight_];return this.bias_&&e.push(this.bias_),this.recurrentBias_&&e.push(this.recurrentBias_),this.initialHiddenState_&&e.push(this.initialHiddenState_),e}computeImpl(e){const t=e.get(this.input_),n=e.get(this.weight_),r=e.get(this.recurrentWeight_),a=this.bias_?e.get(this.bias_):void 0,s=this.recurrentWeight_?e.get(this.recurrentBias_):void 0,o=this.initialHiddenState_?e.get(this.initialHiddenState_):void 0,u=this.steps_,c=this.hiddenSize_,l=this.resetAfter_,d=this.returnSequence_,p=this.layout_,h=this.activations_,m=this.direction_,b=m===f.both?2:1;let g,y=o;void 0===y&&(y=i.zeros([b,1,c]));const k=[],v=[],w=[],I=[];for(let e=0;e<b;++e)k.push(i.squeeze(i.slice(n,[e,0,0],[1,-1,-1]),[0])),v.push(i.squeeze(i.slice(r,[e,0,0],[1,-1,-1]),[0])),w.push(a?i.squeeze(i.slice(a,[e,0],[1,-1]),[0]):void 0),I.push(s?i.squeeze(i.slice(s,[e,0],[1,-1]),[0]):void 0);for(let e=0;e<u;++e){const n=[];let r;for(let e=0;e<b;++e)n.push(i.squeeze(i.slice(y,[e,0,0],[1,-1,-1]),[0]));for(let a=0;a<b;++a){const s=1===a||m===f.backward?u-e-1:e,o=i.squeeze(i.slice(t,[s,0,0],[1,-1,-1]),[0]),d=i.reshape(Y.compute(o,k[a],v[a],n[a],c,h,w[a],I[a],l,p),[1,-1,c]);r=r?i.concat([r,d],0):d}y=r,d&&(r=i.reshape(r,[1,b,-1,c]),g=g?i.concat([g,r],0):r)}const S=[y];if(d&&S.push(g),this.needCheckOutputShape_){const e=[[b,t.shape[1],c]];d&&e.push([u,b,t.shape[1],c]);for(let t=0;t<S.length;++t)x.b(S[t].shape,e[t]);this.needCheckOutputShape_=!1}return S}}class Y extends u{constructor(e,t,n,r,a,s={}){super(e.builder),this.needCheckOutputShape_=!0,x.r(e),this.input_=e,x.r(t),this.weight_=t,x.r(n),this.recurrentWeight_=n,x.r(r),this.hiddenState_=r,x.a(x.k(a)&&a>0,"The hiddenSize parameter is invalid."),this.hiddenSize_=a,this.initOptions(s.bias,s.recurrentBias,s.resetAfter,s.layout,s.activations)}initOptions(e,t,n=!0,r=h.zrn,a=[this.builder.sigmoid(),this.builder.tanh()]){x.t(e),this.bias_=e,x.t(t),this.recurrentBias_=t,x.a(x.i(n),"The resetAfter parameter is not a boolean."),this.resetAfter_=n,x.a(r in h,"The layout parameter is invalid."),this.layout_=r,x.a(a instanceof Array&&2===a.length&&a.every((e=>e instanceof j)),"The activations parameter is invalid."),this.activations_=a}inputs(){const e=[this.input_,this.weight_,this.recurrentWeight_,this.hiddenState_];return this.bias_&&e.push(this.bias_),this.recurrentBias_&&e.push(this.recurrentBias_),e}static compute(e,t,n,r,a,s,o,u,c=!0,l=h.zrn){const d=i.scalar(1),p=i.scalar(0),f=l===h.zrn?{z:0,r:a,n:2*a}:{r:0,z:a,n:2*a},m=s[0],b=s[1],g=m.runOp(i.add(i.add(o?i.slice(o,[f.z],[a]):p,u?i.slice(u,[f.z],[a]):p),i.add(i.matMul(e,i.transpose(i.slice(t,[f.z,0],[a,-1]))),i.matMul(r,i.transpose(i.slice(n,[f.z,0],[a,-1])))))),x=m.runOp(i.add(i.add(o?i.slice(o,[f.r],[a]):p,u?i.slice(u,[f.r],[a]):p),i.add(i.matMul(e,i.transpose(i.slice(t,[f.r,0],[a,-1]))),i.matMul(r,i.transpose(i.slice(n,[f.r,0],[a,-1]))))));let y;return y=c?b.runOp(i.add(o?i.slice(o,[f.n],[a]):p,i.add(i.matMul(e,i.transpose(i.slice(t,[f.n,0],[a,-1]))),i.mul(x,i.add(u?i.slice(u,[f.n],[a]):p,i.matMul(r,i.transpose(i.slice(n,[f.n,0],[a,-1])))))))):b.runOp(i.add(i.add(o?i.slice(o,[f.n],[a]):p,u?i.slice(u,[f.n],[a]):p),i.add(i.matMul(e,i.transpose(i.slice(t,[f.n,0],[a,-1]))),i.matMul(i.mul(x,r),i.transpose(i.slice(n,[f.n,0],[a,-1])))))),i.add(i.mul(g,r),i.mul(y,i.sub(d,g)))}run(e){const t=e.get(this.input_),n=Y.compute(t,e.get(this.weight_),e.get(this.recurrentWeight_),e.get(this.hiddenState_),this.hiddenSize_,this.activations_,this.bias_?e.get(this.bias_):void 0,this.recurrentBias_?e.get(this.recurrentBias_):void 0,this.resetAfter_,this.layout_);if(this.needCheckOutputShape_){const e=[t.shape[0],this.hiddenSize_];x.b(n.shape,e),this.needCheckOutputShape_=!1}return n}}class Q extends u{constructor(e,t={}){if(super(e.builder),this.needCheckOutputShape_=!0,x.r(e),this.input_=e,x.t(t.scale),this.scale_=t.scale,x.t(t.bias),this.bias_=t.bias,void 0!==t.epsilon){const e=t.epsilon;x.a("number"==typeof e,"The epsilon parameter is invalid"),this.epsilon_=e}else this.epsilon_=1e-5;void 0!==t.layout?(x.a(t.layout in c,"The layout parameter is invalid."),this.layout_=t.layout):this.layout_=c.nchw}inputs(){const e=[this.input_];return this.scale_&&e.push(this.scale_),this.bias_&&e.push(this.bias_),e}run(e){const t=e.get(this.input_);x.a(4===t.rank,"The input operand is not 4-D.");let n,r,a=[2,3],s=[1,-1,1,1],o=t.shape[1];this.layout_===c.nhwc&&(a=[1,2],s=[1,1,1,-1],o=t.shape[3]),this.scale_&&(n=e.get(this.scale_),x.a(1===n.rank,"The scale operand is not 1-D."),x.a(n.shape[0]===o,"The length of scale is not equal to the size of the feature dimension of the input.")),this.bias_&&(r=e.get(this.bias_),x.a(1===r.rank,"The bias operand is not 1-D."),x.a(r.shape[0]===o,"The length of bias is not equal to the size of the feature dimension of the input."));const u=i.mean(t,a,!0),l=i.mean(i.pow(i.sub(t,u),2),a,!0),d=i.div(i.sub(t,u),i.sqrt(i.add(l,this.epsilon_))),p=n?i.mul(i.reshape(n,s),d):d,h=r?i.add(i.reshape(r,s),p):p;return this.needCheckOutputShape_&&(x.b(h.shape,t.shape),this.needCheckOutputShape_=!1),h}}class Z extends u{constructor(e,t,n={}){super(e.builder),this.mode_=m.constant,this.value_=0,this.needCheckOutputShape_=!0,x.r(e),this.input_=e,x.r(t),this.padding_=t,void 0!==n.mode&&(x.a(n.mode in m,"The mode parameter is invalid."),this.mode_=n.mode),void 0!==n.value&&(this.value_=n.value)}inputs(){return[this.input_,this.padding_]}run(e){const t=e.get(this.input_),n=e.get(this.padding_);x.a(2===n.rank&&"int32"===n.dtype&&n.shape[0]===t.rank,"The padding operand is invalid.");const r=n.arraySync(),a=t.shape.map(((e,t)=>e+r[t][0]+r[t][1]));let s;if(this.mode_===m.constant)s=i.pad(t,r,this.value_);else if(this.mode_===m.edge){const e=new Array(r.length);let n=t;for(;;){for(let t=0;t<r.length;++t){e[t]=[0,0];for(let n=0;n<2;++n)r[t][n]>0?(e[t][n]=1,r[t][n]-=1):e[t][n]=0}if(e.every((e=>0===e[0]&&0===e[1])))break;n=i.mirrorPad(n,e,"symmetric")}s=n}else{let e;this.mode_===m.reflection?e="reflect":this.mode_===m.symmetric&&(e="symmetric"),s=i.mirrorPad(t,r,e)}return this.needCheckOutputShape_&&(x.b(s.shape,a),this.needCheckOutputShape_=!1),s}}class J extends u{constructor(e,t={}){super(e.builder),this.needCheckOutputShape_=!0,x.r(e),this.input_=e,this.initOptions(t.windowDimensions,t.padding,t.strides,t.dilations,t.layout,t.autoPad,t.roundingType,t.outputSizes)}initOptions(e=[-1,-1],t=[0,0,0,0],n=[1,1],r=[1,1],a=c.nchw,s=d.explicit,i=b.floor,o){x.a(x.l(e)&&2===e.length,"The padding parameter is invalid."),this.windowDimensions_=e,x.a(x.l(t)&&4===t.length,"The padding parameter is invalid."),this.padding_=t,x.a(x.l(n)&&2===n.length,"The strides parameter is invalid."),this.strides_=n,x.a(x.l(r)&&2===r.length,"The dilations parameter is invalid."),this.dilations_=r,x.a(a in c,"The layout parameter is invalid."),this.layout_=a,x.a(s in d,"The autoPad parameter is invalid."),this.autoPad_=s,x.a(i in b,"The roundingType parameter is invalid."),this.roundingType_=i,o&&x.a(x.l(o)&&2===o.length,"The outputSizes parameter is invalid."),this.outputSizes_=o}inputs(){return[this.input_]}calculateOutputSizes(e,t){const n=e[1],r=e[2],a=this.windowDimensions_[0],s=this.windowDimensions_[1];let i,o=this.padding_[0],u=this.padding_[1],c=this.padding_[2],l=this.padding_[3];if(this.autoPad_!==d.explicit&&([o,u]=x.c(this.autoPad_,this.dilations_[0],n,a,this.strides_[0],o,u),[c,l]=x.c(this.autoPad_,this.dilations_[1],r,s,this.strides_[1],c,l)),void 0===t)i=Math.trunc;else switch(t){case"ceil":i=Math.ceil;break;case"floor":i=Math.floor;break;case"round":i=Math.round}const p=a+(a-1)*(this.dilations_[0]-1),h=s+(s-1)*(this.dilations_[1]-1);return[1+i((n-p+o+u)/this.strides_[0]),1+i((r-h+c+l)/this.strides_[1])]}run(e){let t=e.get(this.input_);this.layout_===c.nchw&&(t=i.transpose(t,[0,2,3,1]));const n=this.windowDimensions_;let r;if(-1===n[0]&&-1===n[1]&&(n[0]=t.shape[1],n[1]=t.shape[2]),void 0!==this.outputSizes_){let e=!1;for(const n of[void 0,"ceil","floor","round"]){const[a,s]=this.calculateOutputSizes(t.shape,n);if(this.outputSizes_[0]===a&&this.outputSizes_[1]===s){r=n,e=!0;break}}x.a(e,`The outputSizes [${this.outputSizes_}] is invalid.`)}else r=this.roundingType_===b.floor?"floor":"ceil";const a=this.getPoolingType();let s,o;if(this.autoPad_===d.explicit)this.padding_.every((e=>0===e))?(s="valid",r=void 0):s=[[0,0],[this.padding_[0],this.padding_[1]],[this.padding_[2],this.padding_[3]],[0,0]];else if(this.autoPad_===d["same-upper"])s="same",r=void 0;else{s=[[0,0],[0,0],[0,0],[0,0]];const e=[0,0];for(let n=0;n<2;++n)e[n]=Math.ceil(t.shape[1+n]/this.strides_[n]);const r=[0,0];for(let a=0;a<2;++a)r[a]=this.strides_[a]*(e[a]-1)+((n[a]-1)*this.dilations_[a]+1)-t.shape[1+a];for(let e=0;e<2;++e)s[e+1][0]=r[e]-Math.floor(r[e]/2),s[e+1][1]=Math.floor(r[e]/2)}if("l2"===a?(t=i.pow(t,2),o=i.sqrt(i.pool(t,this.windowDimensions_,"avg",s,this.dilations_,this.strides_,r))):o=i.pool(t,this.windowDimensions_,a,s,this.dilations_,this.strides_,r),this.layout_===c.nchw&&(o=i.transpose(o,[0,3,1,2])),this.needCheckOutputShape_){let e,n,a;void 0!==this.outputSizes_?(e=this.outputSizes_[0],n=this.outputSizes_[1]):(r=this.roundingType_===b.floor?"floor":"ceil",[e,n]=this.calculateOutputSizes(t.shape,r)),a=this.layout_===c.nchw?[t.shape[0],t.shape[3],e,n]:[t.shape[0],e,n,t.shape[3]],x.b(o.shape,a),this.needCheckOutputShape_=!1}return o}}class ee extends J{getPoolingType(){return"avg"}}class te extends J{getPoolingType(){return"max"}}class ne extends J{getPoolingType(){return"l2"}}class re extends u{constructor(e,t={}){super(e.builder),this.needCheckOutputShape_=!0,x.r(e),this.input_=e,void 0!==t.axes?(x.a(x.l(t.axes),"The axes parameter is invalid."),this.axes_=t.axes):this.axes_=void 0,void 0!==t.keepDimensions?(x.a(x.i(t.keepDimensions),"The keepDimensions parameter is not a boolean."),this.keepDimensions_=t.keepDimensions):this.keepDimensions_=!1}inputs(){return[this.input_]}run(e){var t;const n=e.get(this.input_);x.a(x.q(this.axes_,n.rank),`The axes must be in range [-${n.rank}, ${n.rank})`);const r=this.runOp(n,this.axes_,this.keepDimensions_);if(this.needCheckOutputShape_){const e=null!==(t=this.axes_)&&void 0!==t?t:[...Array(n.rank).keys()];let a=n.shape.slice();for(let t=0;t<e.length;++t)e[t]<0&&(e[t]=n.rank+e[t]),a[e[t]]=1;this.keepDimensions_||(a=a.filter(((t,n)=>!(1===t&&-1!==e.indexOf(n))))),x.b(r.shape,a),this.needCheckOutputShape_=!1}return r}}class ae extends re{runOp(e,t,n){return i.logSumExp(e,t,n)}}class se extends re{runOp(e,t,n){return i.max(e,t,n)}}class ie extends re{runOp(e,t,n){return i.mean(e,t,n)}}class oe extends re{runOp(e,t,n){return i.min(e,t,n)}}class ue extends re{runOp(e,t,n){return i.prod(e,t,n)}}class ce extends re{runOp(e,t,n){return i.sum(e,t,n)}}class le extends re{runOp(e,t,n){return i.sum(i.abs(e),t,n)}}class de extends re{runOp(e,t,n){return i.sqrt(i.sum(i.pow(e,2),t,n))}}class pe extends u{constructor(e,t={}){if(super(e.builder),this.mode_=g["nearest-neighbor"],this.scales_=[1,1],this.axes_=[2,3],this.needCheckOutputShape_=!0,x.r(e),this.input_=e,void 0!==t.scales){const e=t.scales;x.a(e instanceof Array&&e.every((e=>"number"==typeof e))&&2===e.length,"The scales parameter is invalid."),this.scales_=t.scales}void 0!==t.sizes&&(x.a(x.l(t.sizes)&&2===t.sizes.length,"The sizes parameter is invalid."),this.sizes_=t.sizes),void 0!==t.axes&&(x.a(x.l(t.axes)&&2===t.axes.length&&x.n(t.axes),"The axes parameter is invalid."),this.axes_=t.axes),x.a(void 0!==this.scales_||void 0!==this.sizes_,"The scales or sizes parameter is not provied."),void 0!==t.mode&&(x.a(t.mode in g,"The mode parameter is invalid."),this.mode_=t.mode)}inputs(){return[this.input_]}run(e){let t=e.get(this.input_);x.a(4===t.rank,"The input tensor is not 4-D.");const n=t.shape.slice(),r=[0,0];let a;return void 0!==this.sizes_?(r[0]=this.sizes_[0],r[1]=this.sizes_[1]):void 0!==this.scales_&&(r[0]=Math.floor(t.shape[this.axes_[0]]*this.scales_[0]),r[1]=Math.floor(t.shape[this.axes_[1]]*this.scales_[1])),0===this.axes_[0]?t=i.transpose(t,[2,0,1,3]):2===this.axes_[0]&&(t=i.transpose(t,[0,2,3,1])),this.mode_===g["nearest-neighbor"]?a=i.image.resizeNearestNeighbor(t,r,!1,!0):this.mode_===g.linear&&(a=i.image.resizeBilinear(t,r,!1,!0)),0===this.axes_[0]?a=i.transpose(a,[1,2,0,3]):2===this.axes_[0]&&(a=i.transpose(a,[0,3,1,2])),this.needCheckOutputShape_&&(this.axes_.map(((e,t)=>n[e]=r[t])),x.b(a.shape,n),this.needCheckOutputShape_=!1),a}}class he extends u{constructor(e,t){super(e.builder),this.needCheckOutputShape_=!0,x.r(e),this.input_=e,x.a(x.l(t)&&0!==t.length,"The newShape parameter is invalid."),this.newShape_=t}inputs(){return[this.input_]}run(e){const t=e.get(this.input_),n=i.reshape(t,this.newShape_);if(this.needCheckOutputShape_){const e=this.newShape_.slice();-1!==e.indexOf(-1)&&(e[e.indexOf(-1)]=x.o(t.shape)/x.o(e)*-1),x.b(n.shape,e),this.needCheckOutputShape_=!1}return n}}class fe extends u{constructor(e,t,n,r){super(e.builder),this.needCheckOutputShape_=!0,x.r(e),this.input_=e,x.a(x.l(t),"The starts parameter is invalid."),this.starts_=t,x.a(x.l(n)&&n.every((e=>e>0||-1===e)),"The sizes parameter is invalid."),this.sizes_=n,x.a(n.length==n.length,"The length of sizes is not equal to the length of sizes.))"),x.a(void 0===r||x.l(r),"The axes parameter is invalid."),void 0!==r&&x.a(n.length===r.length,"The length of axes is invalid.))"),this.axes_=r}inputs(){return[this.input_]}run(e){const t=e.get(this.input_),n=t.shape.length;if(void 0===this.axes_){this.axes_=[];for(let e=0;e<n;++e)this.axes_.push(e)}x.a(this.axes_.every((e=>e<n&&e>=-n)),"The value of axes is invalid."),x.a(this.starts_.length===this.axes_.length,"The length of starts is invalid."),x.a(this.sizes_.length===this.axes_.length,"The length of sizes is invalid.");const r=new Array(this.axes_.length).fill(0),a=new Array(this.axes_.length).fill(-1);for(let e=0;e<this.axes_.length;++e){let s=this.axes_[e];s<0&&(s=n+s),r[s]=this.starts_[e]>=0?this.starts_[e]:this.starts_[e]+t.shape[s],a[s]=this.sizes_[e]}const s=i.slice(t,r,a);if(this.needCheckOutputShape_){const e=t.shape.slice();for(let r=0;r<this.axes_.length;++r){const a=this.axes_[r]>=0?this.axes_[r]:this.axes_[r]+n,s=t.shape[a],i=this.starts_[r],o=this.sizes_[r];e[a]=o>=0?o:i>=0?s-i:-i}x.b(s.shape,e)}return s}}class me extends u{constructor(e){super(e.builder),this.needCheckOutputShape_=!0,x.r(e),this.x_=e}inputs(){return[this.x_]}run(e){const t=e.get(this.x_);if(2!==t.rank)throw new Error("The rank of x parameter should be 2.");const n=i.softmax(t);return this.needCheckOutputShape_&&(x.b(n.shape,t.shape),this.needCheckOutputShape_=!1),n}}class be extends o{constructor(e,t,n={}){var r;super(e.builder),this.needCheckOutputShape_=!0,x.r(e),this.input_=e,x.a(x.k(t)||x.l(t),"The splits parameter is invalid."),this.splits_=t,x.a(void 0===n.axis||x.k(n.axis),"The options.axis is invalid."),this.axis_=null!==(r=n.axis)&&void 0!==r?r:0;const a=x.k(t)?t:t.length;for(let e=0;e<a;++e)this.outputs.push(new s.e(this))}inputs(){return[this.input_]}computeImpl(e){const t=e.get(this.input_),n=i.split(t,this.splits_,this.axis_);if(this.needCheckOutputShape_){const e=this.axis_>=0?this.axis_:this.axis_+t.rank;let r=[];r="number"==typeof this.splits_?new Array(this.splits_).fill(t.shape[e]/this.splits_):this.splits_.slice();const a=[];for(const n of r){const r=t.shape.slice();r[e]=n,a.push(r)}for(let e=0;e<n.length;++e)x.b(n[e].shape,a[e]);this.needCheckOutputShape_=!1}return n}}class ge extends u{constructor(e,t){super(e.builder),this.needCheckOutputShape_=!0,x.r(e),this.input_=e,void 0!==t&&x.a(x.l(t)&&0!==t.length,"The axes parameter is invalid."),this.axes_=t}inputs(){return[this.input_]}run(e){var t;const n=e.get(this.input_),r=i.squeeze(n,this.axes_);if(this.needCheckOutputShape_){const e=null!==(t=this.axes_)&&void 0!==t?t:[...Array(n.rank).keys()],a=n.shape.filter(((t,n)=>!(1===t&&-1!==e.indexOf(n))));x.b(r.shape,a),this.needCheckOutputShape_=!1}return r}}class xe extends u{constructor(e,t){super(e.builder),this.needCheckOutputShape_=!0,x.r(e),this.input_=e,void 0!==t&&x.a(x.l(t)&&0!==t.length,"The permutation parameter is invalid."),this.permutation_=t}inputs(){return[this.input_]}run(e){var t;const n=e.get(this.input_),r=i.transpose(n,this.permutation_);if(this.needCheckOutputShape_){const e=null!==(t=this.permutation_)&&void 0!==t?t:new Array(n.rank).fill(0).map(((e,t,n)=>n.length-t-1)),a=new Array(n.rank).fill(0).map(((t,r)=>n.shape[e[r]]));x.b(r.shape,a),this.needCheckOutputShape_=!1}return r}}!function(e){e.nchw="nchw",e.nhwc="nhwc"}(c||(c={})),function(e){e.oihw="oihw",e.hwio="hwio",e.ohwi="ohwi",e.ihwo="ihwo"}(l||(l={})),function(e){e.explicit="explicit",e["same-upper"]="same-upper",e["same-lower"]="same-lower"}(d||(d={})),function(e){e.iohw="iohw",e.hwoi="hwoi",e.ohwi="ohwi"}(p||(p={})),function(e){e.zrn="zrn",e.rzn="rzn"}(h||(h={})),function(e){e.forward="forward",e.backward="backward",e.both="both"}(f||(f={})),function(e){e.constant="constant",e.edge="edge",e.reflection="reflection",e.symmetric="symmetric"}(m||(m={})),function(e){e.floor="floor",e.ceil="ceil"}(b||(b={})),function(e){e["nearest-neighbor"]="nearest-neighbor",e.linear="linear"}(g||(g={}));class ye{constructor(e){x.a(e instanceof r.a,"The context paramter is invalid."),this.context_=e}get context(){return this.context_}build(e){return a.a.buildAndCompile(e)}input(e,t){return new s.b(e,t,this)}constant(e,t){return"number"==typeof e?(void 0===t&&(t=s.d.float32),s.a.createScalar(e,t,this)):s.a.createTensor(e,t,this)}batchNormalization(e,t,n,r={}){return this.validateOperandBuilder([e,t,n,r.scale,r.bias]),new y(e,t,n,r).getFusedOutputs()[0]}clamp(e={},t={}){if(e instanceof s.c){const n=e;return this.validateOperandBuilder([n]),new G(n,t).output}return new G(void 0,e)}concat(e,t){return this.validateOperandBuilder(e),new V(e,t).output}conv2d(e,t,n={}){const r=[e,t];return n.bias&&r.push(n.bias),this.validateOperandBuilder(r),new q(e,t,n).getFusedOutputs()[0]}convTranspose2d(e,t,n={}){const r=[e,t];return n.bias&&r.push(n.bias),this.validateOperandBuilder(r),new K(e,t,n).getFusedOutputs()[0]}add(e,t){return this.validateOperandBuilder([e,t]),new v(e,t).output}sub(e,t){return this.validateOperandBuilder([e,t]),new w(e,t).output}mul(e,t){return this.validateOperandBuilder([e,t]),new I(e,t).output}div(e,t){return this.validateOperandBuilder([e,t]),new S(e,t).output}max(e,t){return this.validateOperandBuilder([e,t]),new _(e,t).output}min(e,t){return this.validateOperandBuilder([e,t]),new C(e,t).output}pow(e,t){return this.validateOperandBuilder([e,t]),new O(e,t).output}abs(e){return this.validateOperandBuilder([e]),new A(e).output}ceil(e){return this.validateOperandBuilder([e]),new E(e).output}cos(e){return this.validateOperandBuilder([e]),new N(e).output}exp(e){return this.validateOperandBuilder([e]),new R(e).output}floor(e){return this.validateOperandBuilder([e]),new F(e).output}log(e){return this.validateOperandBuilder([e]),new M(e).output}neg(e){return this.validateOperandBuilder([e]),new D(e).output}sin(e){return this.validateOperandBuilder([e]),new P(e).output}tan(e){return this.validateOperandBuilder([e]),new B(e).output}hardSwish(e){return void 0===e?new U(void 0):(this.validateOperandBuilder([e]),new U(e).output)}relu(e){return void 0===e?new W(void 0):(this.validateOperandBuilder([e]),new W(e).output)}sigmoid(e){return void 0===e?new L(void 0):(this.validateOperandBuilder([e]),new L(e).output)}tanh(e){return void 0===e?new z(void 0):(this.validateOperandBuilder([e]),new z(e).output)}gemm(e,t,n={}){return this.validateOperandBuilder([e,t,n.c]),class{static build(e,t,n,r={}){x.r(t),x.r(n),x.a(void 0===r.c||"number"==typeof r.c||r.c instanceof s.c,"The options.c is invalid."),x.a(void 0===r.aTranspose||x.i(r.aTranspose),"The options.aTranspose is invalid."),x.a(void 0===r.bTranspose||x.i(r.bTranspose),"The options.bTranspose is invalid."),x.a(void 0===r.alpha||"number"==typeof r.alpha,"The options.alpha is invalid."),x.a(void 0===r.beta||"number"==typeof r.beta,"The options.beta is invalid."),r.aTranspose&&(t=e.transpose(t)),r.bTranspose&&(n=e.transpose(n));const a=e.constant(void 0===r.alpha?1:r.alpha),i=e.constant(void 0===r.beta?1:r.beta),o=e.matmul(e.mul(a,t),n);return r.c?e.add(o,e.mul(i,r.c)):o}}.build(this,e,t,n)}gru(e,t,n,r,a,s={}){return this.validateOperandBuilder([e,t,n,s.bias,s.recurrentBias,s.initialHiddenState]),new X(e,t,n,r,a,s).outputs}gruCell(e,t,n,r,a,s={}){return this.validateOperandBuilder([e,t,n,r,s.bias,s.recurrentBias]),new Y(e,t,n,r,a,s).output}instanceNormalization(e,t={}){return this.validateOperandBuilder([e,t.bias,t.scale]),new Q(e,t).output}leakyRelu(e={},t={}){if(e instanceof s.c){const n=e;return this.validateOperandBuilder([n]),new H(n,t.alpha).output}return new H(void 0,e.alpha)}matmul(e,t){return this.validateOperandBuilder([e,t]),new $(e,t).output}pad(e,t,n={}){return this.validateOperandBuilder([e,t]),new Z(e,t,n).output}averagePool2d(e,t={}){return this.validateOperandBuilder([e]),new ee(e,t).output}l2Pool2d(e,t={}){return this.validateOperandBuilder([e]),new ne(e,t).output}maxPool2d(e,t={}){return this.validateOperandBuilder([e]),new te(e,t).output}reduceL1(e,t={}){return this.validateOperandBuilder([e]),new le(e,t).output}reduceL2(e,t={}){return this.validateOperandBuilder([e]),new de(e,t).output}reduceLogSumExp(e,t={}){return this.validateOperandBuilder([e]),new ae(e,t).output}reduceMax(e,t={}){return this.validateOperandBuilder([e]),new se(e,t).output}reduceMean(e,t={}){return this.validateOperandBuilder([e]),new ie(e,t).output}reduceMin(e,t={}){return this.validateOperandBuilder([e]),new oe(e,t).output}reduceProduct(e,t={}){return this.validateOperandBuilder([e]),new ue(e,t).output}reduceSum(e,t={}){return this.validateOperandBuilder([e]),new ce(e,t).output}resample2d(e,t={}){return this.validateOperandBuilder([e]),new pe(e,t).output}reshape(e,t){return this.validateOperandBuilder([e]),new he(e,t).output}slice(e,t,n,r={}){return this.validateOperandBuilder([e]),new fe(e,t,n,r.axes).output}softmax(e){return this.validateOperandBuilder([e]),new me(e).output}split(e,t,n={}){return this.validateOperandBuilder([e]),new be(e,t,n).outputs}squeeze(e,t={}){return this.validateOperandBuilder([e]),new ge(e,t.axes).output}transpose(e,t={}){return this.validateOperandBuilder([e]),new xe(e,t.permutation).output}validateOperandBuilder(e){x.a(e.every((e=>!e||e instanceof s.c&&e.builder===this)),"The operand is not built by this builder.")}}},function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t){var n,r,a=e.exports={};function s(){throw new Error("setTimeout has not been defined")}function i(){throw new Error("clearTimeout has not been defined")}function o(e){if(n===setTimeout)return setTimeout(e,0);if((n===s||!n)&&setTimeout)return n=setTimeout,setTimeout(e,0);try{return n(e,0)}catch(t){try{return n.call(null,e,0)}catch(t){return n.call(this,e,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:s}catch(e){n=s}try{r="function"==typeof clearTimeout?clearTimeout:i}catch(e){r=i}}();var u,c=[],l=!1,d=-1;function p(){l&&u&&(l=!1,u.length?c=u.concat(c):d=-1,c.length&&h())}function h(){if(!l){var e=o(p);l=!0;for(var t=c.length;t;){for(u=c,c=[];++d<t;)u&&u[d].run();d=-1,t=c.length}u=null,l=!1,function(e){if(r===clearTimeout)return clearTimeout(e);if((r===i||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(e);try{r(e)}catch(t){try{return r.call(null,e)}catch(t){return r.call(this,e)}}}(e)}}function f(e,t){this.fun=e,this.array=t}function m(){}a.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];c.push(new f(e,t)),1!==c.length||l||o(h)},f.prototype.run=function(){this.fun.apply(null,this.array)},a.title="browser",a.browser=!0,a.env={},a.argv=[],a.version="",a.versions={},a.on=m,a.addListener=m,a.once=m,a.off=m,a.removeListener=m,a.removeAllListeners=m,a.emit=m,a.prependListener=m,a.prependOnceListener=m,a.listeners=function(e){return[]},a.binding=function(e){throw new Error("process.binding is not supported")},a.cwd=function(){return"/"},a.chdir=function(e){throw new Error("process.chdir is not supported")},a.umask=function(){return 0}},function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,t){(function(t){e.exports=t}).call(this,{})},function(e,t,n){"use strict";n.d(t,"c",(function(){return i})),n.d(t,"a",(function(){return o})),n.d(t,"b",(function(){return u}));var r=n(0),a=n(12),s=n(13);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const i=Object(a.a)(((e,t)=>e===t?1:0)),o=Object(s.a)(r.Equal,i,null,"bool"),u={kernelName:r.Equal,backendName:"cpu",kernelFunc:o}},function(e,t,n){"use strict";n.d(t,"c",(function(){return i})),n.d(t,"a",(function(){return o})),n.d(t,"b",(function(){return u}));var r=n(0),a=n(21),s=n(8);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const i=Object(a.a)((e=>Math.exp(e))),o=Object(s.b)(r.Exp,i,"float32"),u={kernelName:r.Exp,backendName:"cpu",kernelFunc:o}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n,a,s){const i=t.length,o=r.util.sizeFromShape(t),u=r.util.computeStrides(t),c=r.util.computeStrides(s),l=r.util.getTypedArrayFromDType(n,r.util.sizeFromShape(s));for(let t=0;t<o;++t){const n=r.util.indexToLoc(t,i,u),s=new Array(n.length);for(let e=0;e<s.length;e++)s[e]=n[a[e]];l[r.util.locToIndex(s,i,c)]=e[t]}return l}},function(e,t,n){"use strict";n.d(t,"c",(function(){return i})),n.d(t,"a",(function(){return o})),n.d(t,"b",(function(){return u}));var r=n(0),a=n(21),s=n(8);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const i=Object(a.a)((e=>1/(1+Math.exp(-e)))),o=Object(s.a)(r.Sigmoid,(e=>1/(1+Math.exp(-e)))),u={kernelName:r.Sigmoid,backendName:"cpu",kernelFunc:o}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n,a,s,i=!1,o=0){const u=a.length,c=[t[0],e.length/t[0]],l=c[1],d=u>0?s[u-1]+1:0;if(d<0)throw new Error(r.backend_util.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());const p=t.slice();p[0]=d;const h=p.reduce(((e,t)=>e*t),1),f=r.util.getArrayFromDType(n,h);if(0===u)return d>0&&f.fill(o),[f,p];if(d<=0)throw new Error(r.backend_util.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=0,b=1,g=0,x=s[m];for(;;){let t=0;if(b<u){if(t=s[b],x===t){++b;continue}if(x>=t)throw new Error(r.backend_util.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(x<0||x>=d)throw new Error(r.backend_util.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(x,d));x>g&&f.fill(o,g*l,x*l);for(let t=m;t<b;++t){const n=a[t];if(n<0||n>=c[0])throw new Error(r.backend_util.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(t,a[t],c[0]));for(let t=0;t<l;t++)f[x*l+t]+=e[n*l+t]}if(i)for(let e=0;e<l;e++)f[x*l+e]/=b-m;if(m=b,++b,g=x+1,x=t,b>u)break}return g<d&&f.fill(o,g*l,d*l),[f,p]}},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));n(96),n(97),n(98);var r,a,s=n(89),i=n(0),o=n(5);!function(e){e.default="default",e["high-performance"]="high-performance",e["low-power"]="low-power"}(r||(r={})),function(e){e.default="default",e.gpu="gpu",e.cpu="cpu"}(a||(a={}));class u{constructor(e={}){o.a(e instanceof Object,"Invalid options."),void 0!==e.powerPreference&&o.a(e.powerPreference in r,"Invalid power preference."),this.options_=e}get options(){return this.options_}get tf(){return s.a(`https://unpkg.com/@tensorflow/tfjs-backend-wasm@${i.version_core}/dist/`),i}}},function(e,t,n){var r=n(111),a=n(112),s=n(113),i=n(114),o=n(115),u=n(116),c=n(117);c.alea=r,c.xor128=a,c.xorwow=s,c.xorshift7=i,c.xor4096=o,c.tychei=u,e.exports=c},function(e,t,n){"use strict";(function(e){n(3);var t=n(54),r=n(9);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const a=Object(r.c)();a.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),a.registerFlag("IS_BROWSER",(()=>t.isBrowser())),a.registerFlag("IS_NODE",(()=>"undefined"!=typeof e&&"undefined"!=typeof e.versions&&"undefined"!=typeof e.versions.node)),a.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),a.registerFlag("PROD",(()=>!1)),a.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>a.getBool("DEBUG"))),a.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),a.registerFlag("IS_TEST",(()=>!1)),a.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),a.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),a.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1))}).call(this,n(40))},function(e,t,n){"use strict";n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return a}));class r{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class a{refCount(e){return s("refCount")}incRef(e){return s("incRef")}timerAvailable(){return!0}time(e){return s("time")}read(e){return s("read")}readSync(e){return s("readSync")}readToGPU(e,t){return s("readToGPU")}numDataIds(){return s("numDataIds")}disposeData(e,t){return s("disposeData")}write(e,t,n){return s("write")}move(e,t,n,r,a){return s("move")}memory(){return s("memory")}floatPrecision(){return s("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return s("dispose")}}function s(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8}},function(e,t){},function(e,t,n){"use strict";let r;function a(e){r=e}function s(e){if(void 0!==r)return r;if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function i(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}n.r(t),n.d(t,"mockIsMobile",(function(){return a})),n.d(t,"isMobile",(function(){return s})),n.d(t,"isBrowser",(function(){return i}))},function(e,t,n){"use strict";n.d(t,"b",(function(){return s})),n.d(t,"a",(function(){return i}));var r=n(0),a=n(7);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function s(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const i={kernelName:r.Abs,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;Object(a.a)(t,"abs");let i=new Float32Array(r.util.sizeFromShape(t.shape));return i=s(n.data.get(t.dataId).values),n.makeOutput(i,t.shape,t.dtype)}}},function(e,t,n){"use strict";n.d(t,"b",(function(){return i})),n.d(t,"a",(function(){return u}));var r=n(0),a=n(21),s=n(8);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const i=Object(a.a)((e=>Math.ceil(e))),o=Object(s.b)(r.Ceil,i),u={kernelName:r.Ceil,backendName:"cpu",kernelFunc:o}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n,a){const s=r.util.getArrayFromDType(n,r.util.sizeFromShape(t));if(a&&"string"!==n){let t=0;e.forEach((e=>{const n=r.util.sizeFromShape(e.shape);s.set(e.vals,t),t+=n}))}else{let a=0;e.forEach((e=>{const i="string"===n?r.backend_util.fromUint8ToStringArray(e.vals):e.vals;let o=0;for(let n=0;n<e.shape[0];++n){const r=n*t[1]+a;for(let t=0;t<e.shape[1];++t)s[r+t]=i[o++]}a+=e.shape[1]}))}return s}},function(e,t,n){"use strict";n.d(t,"b",(function(){return i})),n.d(t,"a",(function(){return u}));var r=n(0),a=n(21),s=n(8);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const i=Object(a.a)((e=>Math.expm1(e))),o=Object(s.b)(r.Expm1,i),u={kernelName:r.Expm1,backendName:"cpu",kernelFunc:o}},function(e,t,n){"use strict";n.d(t,"b",(function(){return i})),n.d(t,"a",(function(){return u}));var r=n(0),a=n(21),s=n(8);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const i=Object(a.a)((e=>Math.floor(e))),o=Object(s.b)(r.Floor,i),u={kernelName:r.Floor,backendName:"cpu",kernelFunc:o}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n,a,s,i,o,u,c){const l=Object(r.buffer)([a,i],n);for(let n=0;n<a;n++){const r=[];let a=0;for(let t=0;t<s;t++){const i=e[n*s+t];a+=i*o[t],r.push(i)}if(a<0||a>=c/i)throw new Error(`Invalid indices: ${r} does not index into ${u}`);for(let e=0;e<i;e++)l.values[n*i+e]=t.get(...t.indexToLoc(a*i+e))}return l}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n){const a=Object(r.buffer)(n,e.dtype);for(let n=0;n<a.size;++n){const r=a.indexToLoc(n).slice(),s=r[0],i=r[2],o=t.locToIndex([s,i]);r[2]=t.values[o];const u=e.locToIndex(r);0<=u&&u<e.values.length&&(a.values[n]=e.values[u])}return a}},function(e,t,n){"use strict";n.d(t,"b",(function(){return i})),n.d(t,"a",(function(){return u}));var r=n(0),a=n(12),s=n(13);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const i=Object(a.a)(((e,t)=>e>t?1:0)),o=Object(s.a)(r.Greater,i,null,"bool"),u={kernelName:r.Greater,backendName:"cpu",kernelFunc:o}},function(e,t,n){"use strict";n.d(t,"b",(function(){return i})),n.d(t,"a",(function(){return u}));var r=n(0),a=n(12),s=n(13);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const i=Object(a.a)(((e,t)=>e>=t?1:0)),o=Object(s.a)(r.GreaterEqual,i,null,"bool"),u={kernelName:r.GreaterEqual,backendName:"cpu",kernelFunc:o}},function(e,t,n){"use strict";n.d(t,"b",(function(){return i})),n.d(t,"a",(function(){return u}));var r=n(0),a=n(12),s=n(13);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const i=Object(a.a)(((e,t)=>e<t?1:0)),o=Object(s.a)(r.Less,i,null,"bool"),u={kernelName:r.Less,backendName:"cpu",kernelFunc:o}},function(e,t,n){"use strict";n.d(t,"b",(function(){return i})),n.d(t,"a",(function(){return u}));var r=n(0),a=n(12),s=n(13);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const i=Object(a.a)(((e,t)=>e<=t?1:0)),o=Object(s.a)(r.LessEqual,i,null,"bool"),u={kernelName:r.LessEqual,backendName:"cpu",kernelFunc:o}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n){const a=(t-e)/(n-1),s=r.util.makeZerosTypedArray(n,"float32");s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+a;return s}},function(e,t,n){"use strict";n.d(t,"b",(function(){return i})),n.d(t,"a",(function(){return u}));var r=n(0),a=n(21),s=n(8);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const i=Object(a.a)((e=>Math.log(e))),o=Object(s.b)(r.Log,i),u={kernelName:r.Log,backendName:"cpu",kernelFunc:o}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n,a){const s=r.util.getTypedArrayFromDType(a,r.util.sizeFromShape(n));for(let n=0;n<s.length;++n){const r=n*t;let a=e[r];for(let n=0;n<t;++n){const t=e[r+n];(Number.isNaN(t)||t>a)&&(a=t)}s[n]=a}return s}},function(e,t,n){"use strict";n.d(t,"b",(function(){return i})),n.d(t,"a",(function(){return u}));var r=n(0),a=n(12),s=n(13);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const i=Object(a.a)(((e,t)=>Math.max(e,t))),o=Object(s.a)(r.Maximum,i),u={kernelName:r.Maximum,backendName:"cpu",kernelFunc:o}},function(e,t,n){"use strict";n.d(t,"b",(function(){return i})),n.d(t,"a",(function(){return u}));var r=n(0),a=n(12),s=n(13);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const i=Object(a.a)(((e,t)=>Math.min(e,t))),o=Object(s.a)(r.Minimum,i),u={kernelName:r.Minimum,backendName:"cpu",kernelFunc:o}},function(e,t,n){"use strict";n.d(t,"b",(function(){return i})),n.d(t,"a",(function(){return o}));var r=n(0),a=n(7),s=n(28);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t,n){const a=r.util.createScalarValue(-1,n);return Object(s.c)([],t,a,e,n)}const o={kernelName:r.Neg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;Object(a.a)(r,"neg");const s=n.data.get(r.dataId).values,[o,u]=i(s,r.shape,r.dtype);return n.makeTensorInfo(u,r.dtype,o)}}},function(e,t,n){"use strict";n.d(t,"b",(function(){return i})),n.d(t,"a",(function(){return u}));var r=n(0),a=n(12),s=n(13);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const i=Object(a.a)(((e,t)=>e!==t?1:0)),o=Object(s.a)(r.NotEqual,i,null,"bool"),u={kernelName:r.NotEqual,backendName:"cpu",kernelFunc:o}},function(e,t,n){"use strict";n.d(t,"b",(function(){return i})),n.d(t,"a",(function(){return o}));var r=n(0),a=n(7),s=n(16);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t,n,a){const[s,i]=r.backend_util.computeOutAndReduceShapes(e,a),o=Object(r.upcastType)(t,"int32"),u=r.util.makeZerosTypedArray(r.util.sizeFromShape(s),o),c=r.util.sizeFromShape(i);for(let e=0;e<u.length;++e){const t=e*c;let r=1;for(let e=0;e<c;++e)r*=n[t+e];u[e]=r}return{outVals:u,outShape:s,outDtype:o}}const o={kernelName:r.Prod,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:o}=e,{x:u}=t,{axis:c,keepDims:l}=o;Object(a.a)(u,"prod");const d=u.shape.length,p=r.util.parseAxisParam(c,u.shape),h=r.backend_util.getAxesPermutation(p,d);let f=p,m=u;const b=[];null!=h&&(m=Object(s.a)({inputs:{x:u},backend:n,attrs:{perm:h}}),b.push(m),f=r.backend_util.getInnerMostAxes(f.length,d));const g=n.data.get(m.dataId).values,{outVals:x,outShape:y,outDtype:k}=i(m.shape,m.dtype,g,f);let v=y;return l&&(v=r.backend_util.expandShapeToKeepDim(y,p)),b.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(v,k,x)}}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n,a){if(e===t||e<t&&n<0||t<e&&n>1)return r.util.makeZerosTypedArray(0,a);const s=Math.abs(Math.ceil((t-e)/n)),i=r.util.makeZerosTypedArray(s,a);t<e&&1===n&&(n=-1),i[0]=e;for(let e=1;e<i.length;e++)i[e]=i[e-1]+n;return i}},function(e,t,n){"use strict";n.d(t,"b",(function(){return i})),n.d(t,"a",(function(){return u}));var r=n(0),a=n(21),s=n(8);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const i=Object(a.a)((e=>1/Math.sqrt(e))),o=Object(s.b)(r.Rsqrt,i),u={kernelName:r.Rsqrt,backendName:"cpu",kernelFunc:o}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n,a,s,i,o){const u=t[0],c=i[0],l=new Array(c),d=new Array(u),p=t[1];if(0===c){if(0!==u)throw new Error(r.backend_util.getSparseFillEmptyRowsIndicesDenseShapeMismatch(u));return[r.util.getArrayFromDType(n,0),[0,p],r.util.getArrayFromDType(s,0),l,d]}let h=!0,f=0;const m=new Array(c).fill(0);for(let t=0;t<u;++t){const n=e[t*p];if(n<0)throw new Error(r.backend_util.getSparseFillEmptyRowsNegativeIndexErrorMessage(t,n));if(n>=c)throw new Error(r.backend_util.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(t,n,c));++m[n],h=h&&n>=f,f=n}let b=!0;for(let e=0;e<c;++e){const t=0===m[e];l[e]=t,b=b&&!t,m[e]=Math.max(m[e],1),e>0&&(m[e]+=m[e-1])}if(b&&h){const t=e,n=a;for(let e=0;e<u;++e)d[e]=e;return[t,[u,p],n,l,d]}{const t=m[c-1],i=r.util.getArrayFromDType(n,t*p),h=r.util.getArrayFromDType(s,t),f=new Array(c).fill(0);for(let t=0;t<u;++t){const n=e[t*p],r=f[n],s=(0===n?0:m[n-1])+r;f[n]++;for(let n=0;n<p;++n)i[s*p+n]=e[t*p+n];h[s]=a[t],d[t]=s}for(let e=0;e<c;++e){if(0===f[e]){const t=0===e?0:m[e-1];i[t*p+0]=e;for(let e=1;e<p;++e)i[t*p+e]=0;h[t]=o}}return[i,[t,p],h,l,d]}}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n,a,s){const i=r.util.sizeFromShape(a),o=t[0],u=s.length,c=[];let l=1,d=-1;for(let e=0;e<u;++e){const t=s[e];if(-1===t){if(-1!==d)throw new Error(r.backend_util.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(d,e));d=e,c.push(1)}else{if(t<0)throw new Error(r.backend_util.getSparseReshapeNegativeOutputDimErrorMessage(e,t));l*=t,c.push(t)}}if(-1!==d){if(l<=0)throw new Error(r.backend_util.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());const e=Math.trunc(i/l);if(l*e!==i)throw new Error(r.backend_util.getSparseReshapeInputOutputMultipleErrorMessage(a,c));c[d]=e}if(r.util.sizeFromShape(c)!==i)throw new Error(r.backend_util.getSparseReshapeInputOutputMismatchErrorMessage(a,c));const p=a.length,h=[];if(p>0){h[p-1]=1;for(let e=p-2;e>=0;--e)h[e]=h[e+1]*a[e+1]}const f=[];if(u>0){f[u-1]=1;for(let e=u-2;e>=0;--e)f[e]=f[e+1]*c[e+1]}const m=r.util.getArrayFromDType(n,o*u);for(let t=0;t<o;++t){let n=0;for(let r=0;r<p;++r)n+=e[t*p+r]*h[r];for(let e=0;e<u;++e)m[t*u+e]=Math.trunc(n/f[e]),n%=f[e]}return[m,[o,u],c]}},function(e,t,n){"use strict";n.d(t,"b",(function(){return i})),n.d(t,"a",(function(){return u}));var r=n(0),a=n(21),s=n(8);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const i=Object(a.a)((e=>Math.sqrt(e))),o=Object(s.a)(r.Sqrt,(e=>Math.sqrt(e))),u={kernelName:r.Sqrt,backendName:"cpu",kernelFunc:o}},function(e,t,n){"use strict";n.d(t,"b",(function(){return i})),n.d(t,"a",(function(){return u}));var r=n(0),a=n(12),s=n(13);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const i=Object(a.a)(((e,t)=>{const n=e-t;return n*n})),o=Object(s.a)(r.SquaredDifference,i),u={kernelName:r.SquaredDifference,backendName:"cpu",kernelFunc:o}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n,a){const s=Object(r.buffer)(e,t.dtype);for(let e=0;e<s.size;e++){const r=s.indexToLoc(e),i=new Array(r.length);for(let e=0;e<i.length;e++)i[e]=r[e]*n[e]+a[e];s.set(t.get(...i),...r)}return s}},function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var r=n(0);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class a{constructor(e,t,n,a,s,i){this.separator=r.util.encodeString(e),this.nGramWidths=t,this.leftPad=r.util.encodeString(n),this.rightPad=r.util.encodeString(a),this.padWidth=s,this.preserveShort=i}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,a,s){for(let i=0;i<a;++i){const o=this.getPadWidth(s),u=Math.max(0,o-i),c=Math.max(0,o-(a-(i+1))),l=s-(u+c),d=t+(u>0?0:i-o);let p=0;p+=u*this.leftPad.length;for(let t=0;t<l;++t)p+=e[d+t].length;p+=c*this.rightPad.length;p+=(u+c+l-1)*this.separator.length,n[r+i]=new Uint8Array(p);const h=n[r+i];let f=0;const m=e=>e.forEach((e=>h[f++]=e));for(let e=0;e<u;++e)m(this.leftPad),m(this.separator);for(let t=0;t<l-1;++t)m(e[d+t]),m(this.separator);if(l>0){m(e[d+l-1]);for(let e=0;e<c;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<c-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,a=t.length;if(a>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let r=1;r<a;++r){let a=t[r]>=e;if(a=a&&t[r]<=n,!a)throw new Error(`Invalid split value ${t[r]}, must be in [${e}, ${n}]`);e=t[r]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const s=a-1,i=r.util.getArrayFromDType("int32",a);if(0===n||0===a){const e=new Array(n);for(let e=0;e<=s;++e)i[e]=0;return[e,i]}i[0]=0;for(let e=1;e<=s;++e){const n=t[e]-t[e-1];let r=0;this.nGramWidths.forEach((e=>{r+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===r&&(r=1),i[e]=i[e-1]+r}const o=new Array(i[s]);for(let n=0;n<s;++n){const r=t[n];let a=i[n];if(this.nGramWidths.forEach((s=>{const i=t[n+1]-t[n],u=this.getNumNGrams(i,s);this.createNGrams(e,r,o,a,u,s),a+=u})),this.preserveShort&&a===i[n]){const s=t[n+1]-t[n];if(0===s)continue;const i=s+2*this.padWidth,u=1;this.createNGrams(e,r,o,a,u,i)}}return[o,i]}}function s(e,t,n,r,s,i,o,u){return new a(n,r,s,i,o,u).compute(e,t)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var r=n(0);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const a=t[0];let s=e.indexOf(a);for(;-1!==s;){const t=e.subarray(0,s);n&&0===t.length||r.push(t),s=(e=e.subarray(s+1)).indexOf(a)}return void(n&&0===e.length||r.push(e))}let a=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){const t=e.subarray(a,s);n&&0===t.length||r.push(t),a=s+1}}function s(e,t,n){const s=e.length,i=[];let o=0,u=0;const c=new Array(s);for(let r=0;r<s;++r){const s=i.length;a(e[r],t,n,i);const l=i.length-s;c[r]=l,o+=l,u=Math.max(u,l)}const l=r.util.getArrayFromDType("int32",2*o),d=new Array(o),p=[s,u];let h=0;for(let e=0;e<s;++e)for(let t=0;t<c[e];++t)l[2*h]=e,l[2*h+1]=t,d[h]=i[h],++h;return[l,d,p]}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t){const n=r.util.getArrayFromDType("int32",e.length);for(let a=0;a<e.length;++a)n[a]=r.util.fingerPrint64(e[a]).modulo(t).getLowBitsUnsigned();return n}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const a=Object(r.buffer)(n,e.dtype);for(let t=0;t<a.values.length;++t){const n=a.indexToLoc(t),r=new Array(e.rank);for(let t=0;t<r.length;t++)r[t]=n[t]%e.shape[t];const s=e.locToIndex(r);a.values[t]=e.values[s]}return a}},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(0);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function s(e,t,n=0,i=e.length-1){for(;i>n;){if(i-n>600){const r=i-n+1,a=t-n+1,o=Math.log(r),u=.5*Math.exp(2*o/3),c=.5*Math.sqrt(o*u*(r-u)/r)*Math.sign(a-r/2);s(e,t,Math.max(n,Math.floor(t-a*u/r+c)),Math.min(i,Math.floor(t+(r-a)*u/r+c)))}const o=e[t];let u=n,c=i;for(r.util.swap(e,n,t),a(e[i],o)>0&&r.util.swap(e,n,i);u<c;){for(r.util.swap(e,u,c),u++,c--;a(e[u],o)<0;)u+=1;for(;a(e[c],o)>0;)c-=1}0===a(e[n],o)?r.util.swap(e,n,c):(c+=1,r.util.swap(e,c,i)),c<=t&&(n=c+1),t<=c&&(i=c-1)}}function i(e,t,n,i,o){const u=t[t.length-1],[c,l]=[e.length/u,u],d=r.util.getTypedArrayFromDType(n,c*i),p=r.util.getTypedArrayFromDType("int32",c*i);for(let t=0;t<c;t++){const n=t*l,r=e.subarray(n,n+l);let u=new Array(r.length);r.forEach(((e,t)=>u[t]={value:e,index:t})),i<u.length&&(s(u,i),u=u.slice(0,i)),o&&u.sort(a);const c=t*i,h=d.subarray(c,c+i),f=p.subarray(c,c+i);for(let e=0;e<i;e++)h[e]=u[e].value,f[e]=u[e].index}const h=t.slice();return h[h.length-1]=i,[Object(r.buffer)(h,n,d),Object(r.buffer)(h,"int32",p)]}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n,a){const s=r.util.parseAxisParam(t,n)[0],i=[1,n[0],1];for(let e=0;e<s;e++)i[0]*=n[e];i[1]=n[s];for(let e=s+1;e<n.length;e++)i[2]*=n[e];const o={},u=new Int32Array(n[s]),c=new r.TensorBuffer(i,a,e),l=[],d=1===i[0]&&1===i[2];for(let t=0;t<n[s];t++){let n;if(d)n=e[t].toString();else{const e=[];for(let n=0;n<i[0];n++)for(let r=0;r<i[2];r++)e.push(c.get(n,t,r));n=e.join(",")}if(void 0!==o[n])u[t]=o[n];else{const e=Object.keys(o).length;o[n]=e,u[t]=e,l.push(t)}}const p=i.slice();p[1]=Object.keys(o).length;const h=new r.TensorBuffer(p,a);l.forEach(((e,t)=>{for(let n=0;n<i[0];n++)for(let r=0;r<i[2];r++)h.set(c.get(n,e,r),n,t,r)}));const f=n.slice();return f[s]=p[1],{outputValues:h.values,outputShape:f,indices:u}}},function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var r=n(0),a=n(18);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function s(e,t,n="float32"){if("complex64"===n){const n=s(e,t,"float32"),r=s(e,t,"float32");return Object(a.a)({inputs:{real:n,imag:r},backend:e})}const i=r.util.makeZerosTypedArray(r.util.sizeFromShape(t),n);return e.makeTensorInfo(t,n,i)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));n(96),n(97),n(98),n(89);var r=n(0),a=n(11),s=n(5);class i{constructor(e,t,n,r){this.constantTenosrs_=e,this.operandRefs_=r,this.allocateInputTensors(t,n),this.outputTensors_=new Map,this.outputOperands_=new Set}allocateInputTensors(e,t){this.inputTensors_=new Map;for(const n in t){const r=t[n],a=e.get(n);let i,o;void 0!==r.dimensions?(i={type:a.desc.type,dimensions:r.dimensions},o=r.resource):(i=a.desc,o=r),this.inputTensors_.set(a,{ref:this.operandRefs_.get(a),tensor:s.e(i,o)})}}compute(e){for(const t of e.values())this.outputOperands_.add(t);const t={};for(const n of e.keys())t[n]=this.getTensor(e.get(n));return t}setOutputTensor(e,t){s.a(!this.outputTensors_.has(e),"MLOutput already has tensor."),this.outputTensors_.set(e,{ref:this.operandRefs_.get(e),tensor:t})}releaseTensor(e){let t;if(e instanceof a.b)t=this.inputTensors_;else{if(!(e instanceof a.e))return;if(this.outputOperands_.has(e))return;t=this.outputTensors_}const n=t.get(e);s.a(void 0!==n,"No tensor found for operand."),n.ref--,0===n.ref&&(r.dispose(n.tensor),t.delete(e))}getTensor(e){if(e instanceof a.a)return this.constantTenosrs_.get(e);if(e instanceof a.b)return this.inputTensors_.get(e).tensor;if(e instanceof a.e)return this.outputTensors_.has(e)||(e.operation.compute(this),s.a(this.outputTensors_.has(e),"No output is set.")),this.outputTensors_.get(e).tensor;throw new Error("The operand is invalid.")}}class o{constructor(e){this.inputs_=new Map,this.outputs_=new Map,this.constants_=new Set,this.operandRefs_=new Map,this.constantTensors_=new Map,s.a(void 0!==e,"Invalid argument");for(const t in e)s.a("string"==typeof t&&e[t]instanceof a.e,"The outputs parameter is invalid."),this.outputs_.set(t,e[t]);s.a(0!==this.outputs_.size,"The outputs is empty")}compute(e,t){this.validateInputs(e),s.a(0!==Object.keys(t).length,"The outputs is invalid.");const n=new Map;for(const e in t)s.a("string"==typeof e&&this.outputs_.has(e),"The name of the output is invalid."),s.a(s.m(t[e]),"Only output of ArrayBufferView type is supported."),n.set(e,this.outputs_.get(e));const a=r.tidy((()=>new i(this.constantTensors_,this.inputs_,e,this.operandRefs_).compute(n)));for(const e of Object.keys(a)){const n=a[e],i=s.d(n),o=t[e];s.u(o,i.type,i.dimensions),o.set(n.dataSync()),r.dispose(n)}}validateInputs(e){for(const t in e){s.a("string"==typeof t&&this.inputs_.has(t),"The name of the input is invalid.");const n=this.inputs_.get(t);let r,a;if(void 0!==e[t].dimensions){const i=e[t];r=i.resource,a=i.dimensions,s.a(void 0!==r,"The resource of input is undefined."),s.a(!0===s.l(a),"The type of the input dimensions is invalid."),s.a(a.length===n.desc.dimensions.length,"The rank of the input dimensions is invalid."),s.a(!s.j(a),"The value of input dimensions is negative.");for(let e=0;e<n.desc.dimensions.length;++e){const t=n.desc.dimensions[e];t>0&&s.a(t===a[e],"The value of the input dimensions is invalid.")}}else r=e[t],s.a(!s.j(n.desc.dimensions),"The input dimensions is not specified."),a=n.desc.dimensions;s.a(s.m(r),"Only resource of ArrayBufferView type is supported."),s.u(r,n.desc.type,a)}}static buildAndCompile(e){const t=new o(e);return t.build(),t.compile(),t}build(){const e=new Set;for(const t of this.outputs_.values())this.buildOperation(t.operation,e)}buildOperation(e,t){if(!t.has(e)){t.add(e);for(const n of e.inputs()){if(this.operandRefs_.has(n)){let e=this.operandRefs_.get(n);e++,this.operandRefs_.set(n,e)}else this.operandRefs_.set(n,1);if(n instanceof a.b){if(this.inputs_.has(n.name)){if(this.inputs_.get(n.name)!==n)throw new Error("The name of this input is existed.");continue}this.inputs_.set(n.name,n)}else n instanceof a.a?this.constants_.has(n)||this.constants_.add(n):n instanceof a.e&&this.buildOperation(n.operation,t)}}}compile(){this.allocateConstants(),this.computeOnce()}allocateConstants(){for(const e of this.constants_)this.constantTensors_.set(e,s.e(e.desc,e.value))}computeOnce(){const e={};for(const t of this.inputs_.keys()){const n=this.inputs_.get(t),r=n.desc.dimensions.map((e=>e<0?1:e)),a=new(s.h(n.desc.type))(s.p(n.desc.dimensions));e[t]={resource:a,dimensions:r}}const t=r.tidy((()=>new i(this.constantTensors_,this.inputs_,e,this.operandRefs_).compute(this.outputs_)));for(const e of Object.keys(t)){const n=t[e];n.dataSync(),r.dispose(n)}}dispose(){for(const e of this.constantTensors_.values())r.dispose(e);const e=new Set;for(const t of this.outputs_.values())this.disposeOperation(t.operation,e)}disposeOperation(e,t){if(!t.has(e)){e.dispose(),t.add(e);for(const n of e.inputs())n instanceof a.e&&this.disposeOperation(n.operation,t)}}}},function(e,t,n){"use strict";n.d(t,"a",(function(){return Vn}));var r,a,s=n(0);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
let i;!function(e){e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64"}(r||(r={})),function(e){e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid",e[e.elu=6]="elu"}(a||(a={}));const o={kernelName:s._FusedMatMul,backendName:"wasm",setupFunc:function(e){i=e.wasm.cwrap(s._FusedMatMul,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:o,b:u,bias:c,preluActivationWeights:l}=t;if("float32"!==o.dtype||"float32"!==u.dtype)throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");const{transposeA:d,transposeB:p,activation:h,leakyreluAlpha:f}=r,m=n.dataIdMap.get(o.dataId).id,b=n.dataIdMap.get(u.dataId).id;let g=0;if(null!=c){const e=n.dataIdMap.get(c.dataId);if(1!==e.shape.length)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${e.shape.length}.`);g=e.id}const x=null==l?0:n.dataIdMap.get(l.dataId).id,y=a[h];if(null==y)throw new Error(`${h} activation not yet supported for FusedConv2D in the wasm backend.`);const k=d?o.shape[2]:o.shape[1],v=p?u.shape[1]:u.shape[2],w=s.broadcast_util.assertAndGetBroadcastShape(o.shape.slice(0,-2),u.shape.slice(0,-2)),I=n.makeOutput([...w,k,v],o.dtype),S=n.dataIdMap.get(I.dataId).id,_=new Uint8Array(new Int32Array(o.shape).buffer),C=new Uint8Array(new Int32Array(u.shape).buffer);return i(m,_,o.shape.length,b,C,u.shape.length,d,p,y,g,x,f||0,S),I}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u(e,t){let n;return{kernelName:e,backendName:"wasm",setupFunc:function(t){n=t.wasm.cwrap(e,null,["number","number","number"])},kernelFunc:function(e){const{backend:a,inputs:{x:i}}=e,o=a.dataIdMap.get(i.dataId).id,u=a.makeOutput(i.shape,t||i.dtype),c=a.dataIdMap.get(u.dataId).id;return 0===s.util.sizeFromShape(u.shape)||n(o,r[i.dtype],c),u}}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c=u(s.Abs);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l(e,t,n){let a;return{kernelName:e,backendName:"wasm",setupFunc:function(t){a=t.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:i}=e,{a:o,b:u}=i,c=t.dataIdMap.get(o.dataId).id,l=t.dataIdMap.get(u.dataId).id,d=null!=n?n:o.dtype,p=s.backend_util.assertAndGetBroadcastShape(o.shape,u.shape),h=t.makeOutput(p,d);if(0===s.util.sizeFromShape(p))return h;const f=new Uint8Array(new Int32Array(o.shape).buffer),m=new Uint8Array(new Int32Array(u.shape).buffer),b=t.dataIdMap.get(h.dataId).id;return a(c,f,o.shape.length,l,m,u.shape.length,r[o.dtype],b),h}}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d=l(s.Add);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
let p;const h={kernelName:s.AddN,backendName:"wasm",setupFunc:function(e){p=e.wasm.cwrap(s.AddN,null,["array","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n}=e,a=n.makeOutput(t[0].shape,t[0].dtype);if(0===s.util.sizeFromShape(a.shape))return a;const i=t.map((e=>n.dataIdMap.get(e.dataId).id)),o=new Uint8Array(new Int32Array(i).buffer),u=n.dataIdMap.get(a.dataId).id;return p(o,i.length,r[a.dtype],u),a}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype),a=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(r).set(a),r}const m={kernelName:s.Identity,backendName:"wasm",kernelFunc:f};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let b;function g(e){const{inputs:t,backend:n,attrs:a}=e,[s,i]=function(e,t){const n=[],r=[];for(let a=0;a<e.length;++a)1!==e[a]&&n.push(e[a]),1!==e[t[a]]&&r.push(t[a]);for(let e=0;e<r.length;++e){let t=-1;for(let n=0;n<r.length;++n)r[n]>=e&&(-1===t||r[t]>r[n])&&(t=n);r[t]=e}return[n,r]}(t.x.shape,a.perm);let o=!0;for(let e=0;e<i.length;e++)i[e]!==e&&(o=!1);const u=function(e,t){const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];return n}(t.x.shape,a.perm),c={dataId:t.x.dataId,shape:s,dtype:t.x.dtype};if(o){const e=f({inputs:t,backend:n});return e.shape=u,e}const l=n.makeOutput(u,c.dtype),d=n.dataIdMap.get(c.dataId).id,p=n.dataIdMap.get(l.dataId).id,h=new Uint8Array(new Int32Array(i).buffer),m=new Uint8Array(new Int32Array(c.shape).buffer);return b(d,m,c.shape.length,r[c.dtype],p,h,i.length),l}const x={kernelName:s.Transpose,backendName:"wasm",kernelFunc:g,setupFunc:function(e){b=e.wasm.cwrap(s.Transpose,null,["number","array","number","number","number","array","number"])}};
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y(e,t,n){const r=e.shape,a=e.shape.length,i=s.util.parseAxisParam(t,r);let o=i;const u=s.backend_util.getAxesPermutation(o,a);let c=null,l=!1;if(null!=u){const t=new Array(a);for(let e=0;e<t.length;e++)t[e]=r[u[e]];o=s.backend_util.getInnerMostAxes(o.length,a),c=g({inputs:{x:e},attrs:{perm:u},backend:n});const i=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(c.dataId).id!==i&&(l=!0)}return{transposed:c,originalAxes:i,axes:o,inputWasTransposed:l}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let k;const v={kernelName:s.All,backendName:"wasm",setupFunc:function(e){k=e.wasm.cwrap(s.All,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:i}=r,{x:o}=n;let u=t.dataIdMap.get(o.dataId).id,c=o;const{transposed:l,axes:d,originalAxes:p,inputWasTransposed:h}=y(o,a,t);if(h){c=l,u=t.dataIdMap.get(l.dataId).id}const f=c.shape.length;s.backend_util.assertAxesAreInnerMostDims("all",d,f);const[m,b]=s.backend_util.computeOutAndReduceShapes(c.shape,d),g=s.util.sizeFromShape(b),x=t.makeOutput(m,o.dtype);if(0!==s.util.sizeFromShape(c.shape)){const e=t.dataIdMap.get(x.dataId).id;k(u,g,e)}if(h&&t.disposeData(l.dataId),i){const e=s.backend_util.expandShapeToKeepDim(x.shape,p);x.shape=e}return x}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let w;const I={kernelName:s.Any,backendName:"wasm",setupFunc:function(e){w=e.wasm.cwrap(s.Any,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:i}=r,{x:o}=n;let u=t.dataIdMap.get(o.dataId).id,c=o;const{transposed:l,axes:d,originalAxes:p,inputWasTransposed:h}=y(o,a,t);if(h){c=l,u=t.dataIdMap.get(l.dataId).id}const f=c.shape.length;s.backend_util.assertAxesAreInnerMostDims("any",d,f);const[m,b]=s.backend_util.computeOutAndReduceShapes(c.shape,d),g=s.util.sizeFromShape(b),x=t.makeOutput(m,o.dtype);if(0!==s.util.sizeFromShape(c.shape)){const e=t.dataIdMap.get(x.dataId).id;w(u,g,e)}if(h&&t.disposeData(l.dataId),i){const e=s.backend_util.expandShapeToKeepDim(x.shape,p);x.shape=e}return x}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let S;const _={kernelName:s.ArgMax,backendName:"wasm",kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{axis:i}=a,{x:o}=n,u=t.dataIdMap.get(o.dataId).id;let c=u,l=o;const{transposed:d,axes:p,inputWasTransposed:h}=y(o,i,t);if(h){const e=t.dataIdMap.get(d.dataId).id;e!==u&&(l=d,c=e)}const f=l.shape.slice(0,-1),m=t.makeOutput(f,"int32"),b=t.dataIdMap.get(m.dataId).id,g=s.util.sizeFromShape(m.shape),x=l.shape[p[0]];return S(c,r[l.dtype],g,x,b),h&&t.disposeData(d.dataId),m},setupFunc:function(e){S=e.wasm.cwrap(s.ArgMax,null,["number","number","number","number","number"])}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let C;const O={kernelName:s.AvgPool,backendName:"wasm",setupFunc:function(e){C=e.wasm.cwrap(s.AvgPool,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,a=t.x,i=r.dataIdMap.get(a.dataId).id,{filterSize:o,strides:u,pad:c,dimRoundingMode:l}=n,d=s.backend_util.computePool2DInfo(a.shape,o,u,1,c,l),p=d.filterHeight,h=d.filterWidth,f=d.padInfo.top,m=d.padInfo.right,b=d.padInfo.bottom,g=d.padInfo.left,x=d.strideHeight,y=d.strideWidth,k=d.inChannels;if("channelsLast"!==d.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${d.dataFormat}'. Please use 'channelsLast'.`);if(1!==d.dilationWidth||1!==d.dilationHeight)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${d.dilationHeight}, ${d.dilationWidth}].`);const v=r.makeOutput(d.outShape,"float32"),w=r.dataIdMap.get(v.dataId).id;return C(i,a.shape[0],a.shape[1],a.shape[2],p,h,f,m,b,g,x,y,k,w),v}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $(e){const{inputs:t,attrs:n}=e,{x:r}=t,{shape:a}=n,i=s.util.sizeFromShape(r.shape),o=s.util.inferFromImplicitShape(a,i);return s.util.assert(i===s.util.sizeFromShape(o),(()=>`new shape: ${o}, old shape: ${r.shape}. New shape and old shape must have the same number of elements.`)),e.backend.incRef(r.dataId),{dataId:r.dataId,shape:o,dtype:r.dtype}}const T={kernelName:s.Reshape,backendName:"wasm",kernelFunc:$};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let A;const E={kernelName:s.BatchMatMul,backendName:"wasm",setupFunc:function(e){A=e.wasm.cwrap(s.BatchMatMul,null,["number","array","number","number","array","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:i}=t,{transposeA:o,transposeB:u}=r;if("float32"!==a.dtype||"float32"!==i.dtype)throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");const c=a.shape.length,l=i.shape.length,d=o?a.shape[c-2]:a.shape[c-1],p=u?i.shape[l-1]:i.shape[l-2],h=o?a.shape[c-1]:a.shape[c-2],f=u?i.shape[l-2]:i.shape[l-1],m=a.shape.slice(0,-2),b=i.shape.slice(0,-2),g=s.util.sizeFromShape(m),x=s.util.sizeFromShape(b),y=s.broadcast_util.assertAndGetBroadcastShape(a.shape.slice(0,-2),i.shape.slice(0,-2)).concat([h,f]);s.util.assert(d===p,(()=>`Error in matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${a.shape} and ${i.shape} and transposeA=${o} and transposeB=${u} must match.`));const k=u?[x,f,p]:[x,p,f],v=$({inputs:{x:a},backend:n,attrs:{shape:o?[g,d,h]:[g,h,d]}}),w=$({inputs:{x:i},backend:n,attrs:{shape:k}}),I=n.dataIdMap.get(v.dataId).id,S=n.dataIdMap.get(w.dataId).id,_=o?v.shape[2]:v.shape[1],C=u?w.shape[1]:w.shape[2],O=Math.max(g,x),T=n.makeOutput([O,_,C],v.dtype),E=n.dataIdMap.get(T.dataId).id,N=new Uint8Array(new Int32Array(v.shape).buffer),R=new Uint8Array(new Int32Array(w.shape).buffer);return A(I,N,v.shape.length,S,R,w.shape.length,o,u,E),n.disposeData(v.dataId),n.disposeData(w.dataId),T.shape=y,T}};var N=n(57),R=n(23),F=n(74),M=n(81),D=n(82),P=n(83);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function B(e){const{inputs:{x:t},attrs:{begin:n,size:r},backend:a}=e,[i,o]=s.slice_util.parseSliceParams(t,n,r),u=s.slice_util.isSliceContinous(t.shape,i,o),c=a.readSync(t.dataId),l=a.makeOutput(o,t.dtype),d=s.util.computeStrides(t.shape),p=a.dataIdMap.get(l.dataId);if(u){const e=s.slice_util.computeFlatOffset(i,d);if("string"===t.dtype)p.stringBytes=c.slice(e,e+s.util.sizeFromShape(o));else{a.typedArrayFromHeap(l).set(c.subarray(e,e+s.util.sizeFromShape(o)))}return l}if("string"===t.dtype){const e=Object(R.c)(c,i,o,t.shape,t.dtype);return p.stringBytes=e,l}const h=a.typedArrayFromHeap(l),f=t.shape.length;if(2===f)!function(e,t,n,r,a){let s=0;const i=r[0],o=r[1],u=i+a[0];for(let r=i;r<u;r++){const i=r*t+o;n.set(e.subarray(i,i+a[1]),s),s+=a[1]}}(c,d[0],h,i,o);else if(3===f)!function(e,t,n,r,a,s){let i=0;const o=a[0],u=a[1],c=a[2],l=o+s[0],d=u+s[1];for(let a=o;a<l;a++)for(let o=u;o<d;o++){const u=a*t+o*n+c;r.set(e.subarray(u,u+s[2]),i),i+=s[2]}}(c,d[0],d[1],h,i,o);else if(4===f)!function(e,t,n,r,a,s,i){let o=0;const u=s[0],c=s[1],l=s[2],d=u+i[0],p=c+i[1],h=l+i[2],f=s[3];for(let s=u;s<d;s++)for(let u=c;u<p;u++)for(let c=l;c<h;c++){const l=s*t+u*n+c*r+f;a.set(e.subarray(l,l+i[3]),o),o+=i[3]}}(c,d[0],d[1],d[2],h,i,o);else{const e=Object(R.c)(c,i,o,t.shape,t.dtype);h.set(e)}return l}const j={kernelName:s.Slice,backendName:"wasm",kernelFunc:B};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L={kernelName:s.BatchToSpaceND,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:i,crops:o}=r,u=i.reduce(((e,t)=>e*t)),c=s.backend_util.getReshaped(a.shape,i,u),l=s.backend_util.getPermuted(c.length,i.length),d=s.backend_util.getReshapedPermuted(a.shape,i,u),p=s.backend_util.getSliceBeginCoords(o,i.length),h=s.backend_util.getSliceSize(d,o,i.length),f=$({inputs:{x:a},backend:n,attrs:{shape:c}}),m=g({inputs:{x:f},backend:n,attrs:{perm:l}}),b=B({inputs:{x:$({inputs:{x:m},backend:n,attrs:{shape:d}})},backend:n,attrs:{begin:p,size:h}});return n.disposeData(f.dataId),n.disposeData(m.dataId),n.disposeData(f.dataId),b}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z(e){const{inputs:{x:t},attrs:{dtype:n},backend:r}=e,a=r.makeOutput(t.shape,n),s=r.typedArrayFromHeap(t);return r.typedArrayFromHeap(a).set(s),a}const W={kernelName:s.Cast,backendName:"wasm",kernelFunc:z},U=u(s.Ceil);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
let G;const V={kernelName:s.ClipByValue,backendName:"wasm",setupFunc:function(e){G=e.wasm.cwrap(s.ClipByValue,null,["number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r,o=n.dataIdMap.get(a.dataId).id,u=n.makeOutput(a.shape,a.dtype),c=n.dataIdMap.get(u.dataId).id;return G(o,s,i,c),u}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H(e){const{inputs:t,backend:n}=e,r=s.util.parseAxisParam(e.attrs.axis,t[0].shape)[0];let a=s.backend_util.computeOutShape(t.map((e=>e.shape)),r);const i=t.filter((e=>s.util.sizeFromShape(e.shape)>0));if(1===i.length)return f({inputs:{x:i[0]},backend:n});const o=n.makeOutput(a,t[0].dtype);if(0===s.util.sizeFromShape(a))return o;const u=i.map((e=>e.shape));if(s.backend_util.assertParamsConsistent(u,r),"string"===i[0].dtype){const e=i.map((e=>{const t=s.util.sizeFromShape(e.shape.slice(r));return $({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),u=e.map((e=>({vals:n.readSync(e.dataId),shape:e.shape})));a=s.backend_util.computeOutShape(e.map((e=>e.shape)),1);const c=1===e[0].shape[0],l=Object(N.a)(u,a,t[0].dtype,c),d=s.backend_util.computeOutShape(i.map((e=>e.shape)),r);o.shape=d;return n.dataIdMap.get(o.dataId).stringBytes=s.backend_util.fromStringArrayToUint8(l),e.forEach((e=>n.disposeData(e.dataId))),o}const c=s.util.sizeFromShape(i[0].shape.slice(0,r));let l=0;const d=i.map((e=>{const t=s.util.sizeFromShape(e.shape.slice(r));return l+=t,t})),p=i.map((e=>n.typedArrayFromHeap(e))),h=n.typedArrayFromHeap(o);for(let e=0;e<c;e++){let t=e*l;for(let n=0;n<p.length;n++){const r=d[n],a=e*r,s=p[n].subarray(a,a+r);h.set(s,t),t+=r}}return o}const q={kernelName:s.Concat,backendName:"wasm",kernelFunc:H};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let K;const X={kernelName:s.Conv2D,backendName:"wasm",setupFunc:function(e){K=e.wasm.cwrap(s.Conv2D,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:i}=t,o=r.dataIdMap.get(a.dataId).id,u=r.dataIdMap.get(i.dataId).id,{strides:c,dilations:l,pad:d,dimRoundingMode:p,dataFormat:h}=n,f=s.backend_util.convertConv2DDataFormat(h),m=s.backend_util.computeConv2DInfo(a.shape,i.shape,c,l,d,p,!1,f),b=m.filterHeight,g=m.filterWidth,x=m.padInfo.top,y=m.padInfo.right,k=m.padInfo.bottom,v=m.padInfo.left,w=m.dilationHeight,I=m.dilationWidth,S=m.strideHeight,_=m.strideWidth,C=m.inChannels,O=m.outChannels,$="SAME"===m.padInfo.type?1:0;if("channelsLast"!==m.dataFormat)throw new Error(`wasm backend Conv2D does not support dataFormat:'${m.dataFormat}'. Please use 'channelsLast'.`);const T=r.makeOutput(m.outShape,"float32"),A=r.dataIdMap.get(T.dataId).id;return K(o,a.shape[0],a.shape[1],a.shape[2],u,b,g,x,y,k,v,$,w,I,S,_,C,O,A),T}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Y;const Q={kernelName:s.Conv2DBackpropInput,backendName:"wasm",setupFunc:function(e){Y=e.wasm.cwrap(s.Conv2DBackpropInput,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{dy:a,filter:i}=n,{strides:o,pad:u,dataFormat:c,dimRoundingMode:l,inputShape:d}=r,p=s.backend_util.convertConv2DDataFormat(c),h=s.backend_util.computeConv2DInfo(d,i.shape,o,1,u,l,!1,p),{batchSize:f,filterHeight:m,filterWidth:b,inChannels:g,inHeight:x,inWidth:y,outChannels:k,outHeight:v,outWidth:w,strideHeight:I,strideWidth:S}=h,_=m-1-h.padInfo.top,C=b-1-h.padInfo.left,O="channelsLast"===h.dataFormat,$=s.util.computeStrides(h.inShape),T=s.util.computeStrides(a.shape),[A,E,N]=s.util.computeStrides(i.shape),R=$[0],F=O?$[1]:$[2],M=O?$[2]:1,D=O?1:$[1],P=T[0],B=O?T[1]:T[2],j=O?T[2]:1,L=O?1:T[1],z=t.makeOutput(h.inShape,"float32"),W=t.dataIdMap.get(z.dataId).id,U=t.dataIdMap.get(a.dataId).id,G=t.dataIdMap.get(i.dataId).id;return Y(U,G,f,m,b,x,y,g,v,w,k,I,S,_,C,A,E,N,R,F,M,D,P,B,j,L,W),z}},Z=u(s.Cos),J=u(s.Cosh);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
var ee;let te;!function(e){e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest"}(ee||(ee={}));const ne={kernelName:s.CropAndResize,backendName:"wasm",setupFunc:function(e){te=e.wasm.cwrap(s.CropAndResize,null,["number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{method:a,extrapolationValue:s,cropSize:i}=r,{image:o,boxes:u,boxInd:c}=n,l=u.shape[0],[d,p]=i,h=[l,d,p,o.shape[3]];let f,m=t.dataIdMap.get(o.dataId);"float32"!==o.dtype&&(f=z({backend:t,inputs:{x:o},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(f.dataId));const b=m.id,g=t.dataIdMap.get(u.dataId).id,x=t.dataIdMap.get(c.dataId).id,y=t.makeOutput(h,"float32"),k=t.dataIdMap.get(y.dataId).id,v=new Uint8Array(new Int32Array(o.shape).buffer);return te(b,g,x,l,v,d,p,ee[a],s,k),null!=f&&t.disposeData(f.dataId),y}};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let re;const ae={kernelName:s.Cumprod,backendName:"wasm",setupFunc:function(e){re=e.wasm.cwrap(s.Cumprod,null,["number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:i}=t,{axis:o,exclusive:u,reverse:c}=a,l=i.shape.length;s.util.assert("float32"===i.dtype||"int32"===i.dtype,(()=>`cumprod does not support ${i.dtype} tensors in the WASM backend`));const d=s.backend_util.getAxesPermutation([o],l);let p=i;null!==d&&(p=g({inputs:{x:i},attrs:{perm:d},backend:n}));const h=s.backend_util.getInnerMostAxes(1,l)[0];s.backend_util.assertAxesAreInnerMostDims("cumprod",[h],l);const f=n.makeOutput(p.shape,p.dtype),m=p.shape[h],b=n.dataIdMap.get(p.dataId).id,x=n.dataIdMap.get(f.dataId).id;re(b,u?1:0,c?1:0,m,x,r[i.dtype]);let y=f;if(null!==d){y=g({inputs:{x:f},attrs:{perm:s.backend_util.getUndoAxesPermutation(d)},backend:n}),n.disposeData(p.dataId),n.disposeData(f.dataId)}return y}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let se;const ie={kernelName:s.Cumsum,backendName:"wasm",setupFunc:function(e){se=e.wasm.cwrap(s.Cumsum,null,["number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:i}=t,{axis:o,exclusive:u,reverse:c}=a,l=i.shape.length;s.util.assert("float32"===i.dtype||"int32"===i.dtype,(()=>`cumsum does not support ${i.dtype} tensors in the WASM backend`));const d=s.backend_util.getAxesPermutation([o],l);let p=i;null!==d&&(p=g({inputs:{x:i},attrs:{perm:d},backend:n}));const h=s.backend_util.getInnerMostAxes(1,l)[0];s.backend_util.assertAxesAreInnerMostDims("cumsum",[h],l);const f=n.makeOutput(p.shape,p.dtype),m=p.shape[h],b=n.dataIdMap.get(p.dataId).id,x=n.dataIdMap.get(f.dataId).id;se(b,u?1:0,c?1:0,m,x,r[i.dtype]);let y=f;if(null!==d){y=g({inputs:{x:f},attrs:{perm:s.backend_util.getUndoAxesPermutation(d)},backend:n}),n.disposeData(p.dataId),n.disposeData(f.dataId)}return y}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let oe;const ue={kernelName:s.DepthToSpace,backendName:"wasm",setupFunc:function(e){oe=e.wasm.cwrap(s.DepthToSpace,null,["number","number","number","array","number","array","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{x:a}=n,{blockSize:i,dataFormat:o}=r,u=a.shape[0],c=("NHWC"===o?a.shape[1]:a.shape[2])*i,l=("NHWC"===o?a.shape[2]:a.shape[3])*i,d=("NHWC"===o?a.shape[3]:a.shape[1])/(i*i),p="NHWC"===o?[u,c,l,d]:[u,d,c,l],h=t.makeOutput(p,"float32"),f=t.dataIdMap.get(a.dataId).id,m=new Uint8Array(new Int32Array(s.util.computeStrides(a.shape)).buffer),b=new Uint8Array(new Int32Array(p).buffer),g=new Uint8Array(new Int32Array(s.util.computeStrides(p)).buffer),x=t.dataIdMap.get(h.dataId).id;return oe(f,i,"NHWC"===o?1:0,m,a.shape.length-1,b,g,p.length,x),h}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let ce;const le={kernelName:s.DepthwiseConv2dNative,backendName:"wasm",setupFunc:function(e){ce=e.wasm.cwrap(s.DepthwiseConv2dNative,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:i}=t,o=r.dataIdMap.get(a.dataId).id,u=r.dataIdMap.get(i.dataId).id,{strides:c,dilations:l,pad:d,dimRoundingMode:p}=n,h=null==l?[1,1]:l,f=s.backend_util.computeConv2DInfo(a.shape,i.shape,c,h,d,p,!0),m=f.filterHeight,b=f.filterWidth,g=f.padInfo.top,x=f.padInfo.right,y=f.padInfo.bottom,k=f.padInfo.left,v=f.dilationHeight,w=f.dilationWidth,I=f.strideHeight,S=f.strideWidth,_=f.inChannels,C=f.outChannels,O="SAME"===f.padInfo.type?1:0;if("channelsLast"!==f.dataFormat)throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);const $=r.makeOutput(f.outShape,"float32"),T=r.dataIdMap.get($.dataId).id;return ce(o,a.shape[0],a.shape[1],a.shape[2],u,m,b,g,x,y,k,O,v,w,I,S,_,C,T),$}},de=u(s.Elu),pe=l(s.Equal,0,"bool"),he=u(s.Exp,"float32");
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function fe(e){const{inputs:t,attrs:n,backend:r}=e,{input:a}=t,{dim:i}=n,o=a.shape.length,u=a.shape.slice();let c=i;return i<0&&(s.util.assert(-(o+1)<=i,(()=>`Axis must be in the interval [${-(o+1)}, ${o}]`)),c=o+i+1),u.splice(c,0,1),$({inputs:{x:a},backend:r,attrs:{shape:u}})}const me={kernelName:s.ExpandDims,backendName:"wasm",kernelFunc:fe};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function be(e){const{attrs:{shape:t,value:n,dtype:r},backend:a}=e,s=a.makeOutput(t,r);return a.typedArrayFromHeap(s).fill(n),s}const ge={kernelName:s.Fill,backendName:"wasm",kernelFunc:be};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let xe;const ye={kernelName:s.FlipLeftRight,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,{image:r}=t,a=n.makeOutput(r.shape,r.dtype),s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,[o,u,c,l]=r.shape;return xe(s,o,u,c,l,i),a},setupFunc:function(e){xe=e.wasm.cwrap(s.FlipLeftRight,null,["number","number","number","number","number","number"])}},ke=u(s.Floor),ve=l(s.FloorDiv);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
let we;const Ie={kernelName:s.FusedBatchNorm,backendName:"wasm",setupFunc:function(e){we=e.wasm.cwrap(s.FusedBatchNorm,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{varianceEpsilon:a}=r,{x:i,mean:o,variance:u,offset:c,scale:l}=n,d=t.dataIdMap.get(i.dataId).id,p=t.dataIdMap.get(o.dataId).id,h=t.dataIdMap.get(u.dataId).id,f=null!=c?t.dataIdMap.get(c.dataId).id:0,m=null!=l?t.dataIdMap.get(l.dataId).id:0,b=t.makeOutput(i.shape,i.dtype);if(0===s.util.sizeFromShape(i.shape))return b;const g=t.dataIdMap.get(b.dataId).id;return we(d,p,h,f,m,a,g),b}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Se;const _e={kernelName:s.FusedConv2D,backendName:"wasm",setupFunc:function(e){Se=e.wasm.cwrap(s.FusedConv2D,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:i,filter:o,bias:u,preluActivationWeights:c}=t,{strides:l,pad:d,dilations:p,dataFormat:h,dimRoundingMode:f,activation:m,leakyreluAlpha:b}=n,g=s.backend_util.computeConv2DInfo(i.shape,o.shape,l,p,d,f),x=a[m];if(null==x)throw new Error(`${m} activation not yet supported for FusedConv2D in the wasm backend.`);const y=r.dataIdMap.get(i.dataId).id,k=r.dataIdMap.get(o.dataId).id,v=g.outChannels;let w=0;if(null!=u){const e=r.dataIdMap.get(u.dataId);if(1!==e.shape.length)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==v)throw new Error(`FusedConv2D bias shape (${e.shape}) does not match the number of output channels (${v})`);w=e.id}const I=g.filterHeight,S=g.filterWidth,_=g.padInfo.top,C=g.padInfo.right,O=g.padInfo.bottom,$=g.padInfo.left,T=g.dilationHeight,A=g.dilationWidth,E=g.strideHeight,N=g.strideWidth,R=g.inChannels,F="SAME"===g.padInfo.type?1:0,M=g.batchSize,D=g.inHeight,P=g.inWidth;if("NHWC"!==h)throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${h}'. Please use 'NHWC'.`);const B=r.makeOutput(g.outShape,"float32"),j=r.dataIdMap.get(B.dataId).id,L=null==c?0:r.dataIdMap.get(c.dataId).id;return Se(y,M,D,P,k,I,S,w,_,C,O,$,F,T,A,E,N,R,v,x,L,b||0,j),B}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Ce;const Oe={kernelName:s.FusedDepthwiseConv2D,backendName:"wasm",setupFunc:function(e){Ce=e.wasm.cwrap(s.FusedDepthwiseConv2D,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:i,filter:o,bias:u,preluActivationWeights:c}=t,{strides:l,pad:d,dilations:p,dataFormat:h,dimRoundingMode:f,activation:m,leakyreluAlpha:b}=n,g=s.backend_util.computeConv2DInfo(i.shape,o.shape,l,p,d,f,!0),x=a[m];if(null==x)throw new Error(`${m} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);const y=r.dataIdMap.get(i.dataId).id,k=r.dataIdMap.get(o.dataId).id,v=g.outChannels;let w=0;if(null!=u){const e=r.dataIdMap.get(u.dataId);if(1!==e.shape.length)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==v)throw new Error(`FusedDepthwiseConv2D bias shape (${e.shape}) does not match the number of output channels (${v})`);w=e.id}const I=g.filterHeight,S=g.filterWidth,_=g.padInfo.top,C=g.padInfo.right,O=g.padInfo.bottom,$=g.padInfo.left,T=g.dilationHeight,A=g.dilationWidth,E=g.strideHeight,N=g.strideWidth,R=g.inChannels,F="SAME"===g.padInfo.type?1:0,M=g.batchSize,D=g.inHeight,P=g.inWidth;if("NHWC"!==h)throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${h}'. Please use 'NHWC'.`);const B=r.makeOutput(g.outShape,"float32"),j=r.dataIdMap.get(B.dataId).id,L=null==c?0:r.dataIdMap.get(c.dataId).id;return Ce(y,M,D,P,k,I,S,w,_,C,O,$,F,T,A,E,N,R,v,x,L,b||0,j),B}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let $e;const Te={kernelName:s.GatherNd,backendName:"wasm",setupFunc:function(e){$e=e.wasm.cwrap(s.GatherNd,null,["number","number","number","number","number","number","array","number"])},kernelFunc:function(e){const{backend:t,inputs:n}=e,{params:a,indices:i}=n,[o,u,c,l]=s.gather_util.prepareAndValidate(a,i),d=t.makeOutput(o,a.dtype);if(0===u)return d;const p=i.shape,h=p[p.length-1],f=t.dataIdMap.get(a.dataId).id,m=t.dataIdMap.get(i.dataId).id,b=new Uint8Array(new Int32Array(l).buffer),g=t.dataIdMap.get(d.dataId).id;return $e(f,r[a.dtype],m,u,h,c,b,g),d}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Ae;const Ee={kernelName:s.GatherV2,backendName:"wasm",setupFunc:function(e){Ae=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{x:i,indices:o}=n,{axis:u,batchDims:c}=a,l=s.util.parseAxisParam(u,i.shape)[0],d=t.readSync(o.dataId),p=i.shape[l];for(let e=0;e<d.length;++e){const t=d[e];s.util.assert(t<=p-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${p-1}]`))}const h=s.backend_util.segment_util.collectGatherOpShapeInfo(i,o,l,c),f=$({inputs:{x:i},attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]},backend:t}),m=s.util.sizeFromShape(o.shape),b=$({inputs:{x:o},attrs:{shape:[h.batchSize,m/h.batchSize]},backend:t}),g=[h.batchSize,h.outerSize,m/h.batchSize,h.sliceSize],x=t.makeOutput(g,i.dtype);if(0===s.util.sizeFromShape(i.shape))return x;const y=f.shape.length-1,k=t.dataIdMap.get(f.dataId).id,v=t.dataIdMap.get(b.dataId).id,w=t.dataIdMap.get(x.dataId).id,I=new Uint8Array(new Int32Array(s.util.computeStrides(f.shape)).buffer),S=new Uint8Array(new Int32Array(s.util.computeStrides(g)).buffer);return Ae(k,r[i.dtype],I,y,v,h.batchSize,S,w),t.disposeData(f.dataId),t.disposeData(b.dataId),x.shape=h.outputShape,x}},Ne=l(s.Greater,0,"bool"),Re=l(s.GreaterEqual,0,"bool");
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
let Fe;const Me={kernelName:s.LeakyRelu,backendName:"wasm",setupFunc:function(e){Fe=e.wasm.cwrap(s.LeakyRelu,null,["number","number","number","number"])},kernelFunc:function(e){const{inputs:{x:t},attrs:{alpha:n},backend:a}=e,i=a.dataIdMap.get(t.dataId).id,o=a.makeOutput(t.shape,"float32");if(0!==s.util.sizeFromShape(t.shape)){const e=a.dataIdMap.get(o.dataId).id;Fe(i,r[t.dtype],n,e)}return o}},De=l(s.Less,0,"bool"),Pe=l(s.LessEqual,0,"bool"),Be=u(s.Log),je=l(s.LogicalAnd,0,"bool"),Le=u(s.LogicalNot),ze=l(s.LogicalOr,0,"bool"),We=l(s.LogicalXor,0,"bool");
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
let Ue;const Ge={kernelName:s.Max,backendName:"wasm",setupFunc:function(e){Ue=e.wasm.cwrap(s.Max,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{reductionIndices:i,keepDims:o}=a,{x:u}=n;let c=t.dataIdMap.get(u.dataId).id,l=u;const{transposed:d,axes:p,originalAxes:h,inputWasTransposed:f}=y(u,i,t);if(f){l=d,c=t.dataIdMap.get(d.dataId).id}const m=l.shape.length;s.backend_util.assertAxesAreInnerMostDims("max",p,m);const[b,g]=s.backend_util.computeOutAndReduceShapes(l.shape,p),x=s.util.sizeFromShape(g),k=t.makeOutput(b,u.dtype);if(0!==s.util.sizeFromShape(l.shape)){const e=t.dataIdMap.get(k.dataId).id;Ue(c,r[u.dtype],x,e)}if(f&&t.disposeData(d.dataId),o){const e=s.backend_util.expandShapeToKeepDim(k.shape,h);k.shape=e}return k}},Ve=l(s.Maximum);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
let He;const qe={kernelName:s.MaxPool,backendName:"wasm",setupFunc:function(e){He=e.wasm.cwrap(s.MaxPool,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,a=t.x,i=r.dataIdMap.get(a.dataId).id;s.util.assert("float32"===a.dtype,(()=>`Error in MaxPool: only float32 input is supported. Got ${a.dtype}.`));const{filterSize:o,strides:u,pad:c,dimRoundingMode:l}=n,d=s.backend_util.computePool2DInfo(a.shape,o,u,1,c,l),p=d.filterHeight,h=d.filterWidth,f=d.padInfo.top,m=d.padInfo.right,b=d.padInfo.bottom,g=d.padInfo.left,x=d.dilationHeight,y=d.dilationWidth,k=d.strideHeight,v=d.strideWidth,w=d.inChannels,I=d.outChannels;if("channelsLast"!==d.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${d.dataFormat}'. Please use 'channelsLast'.`);const S=r.makeOutput(d.outShape,"float32"),_=r.dataIdMap.get(S.dataId).id;return He(i,a.shape[0],a.shape[1],a.shape[2],p,h,f,m,b,g,x,y,k,v,w,I,_),S}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Ke;const Xe={kernelName:s.Mean,backendName:"wasm",setupFunc:function(e){Ke=e.wasm.cwrap(s.Mean,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:i}=r,{x:o}=n,u=t.dataIdMap.get(o.dataId).id;let c=u,l=o;const{transposed:d,axes:p,originalAxes:h,inputWasTransposed:f}=y(o,a,t);let m=p;if(f){const e=t.dataIdMap.get(d.dataId).id;e!==u&&(l=d,c=e,m=s.backend_util.getInnerMostAxes(m.length,l.shape.length))}s.backend_util.assertAxesAreInnerMostDims("mean",m,l.shape.length);const[b,g]=s.backend_util.computeOutAndReduceShapes(l.shape,m),x=s.util.sizeFromShape(g);let k=l;"float32"!==l.dtype&&(k=z({backend:t,inputs:{x:l},attrs:{dtype:"float32"}}),c=t.dataIdMap.get(k.dataId).id);const v=t.makeOutput(b,"float32");if(0!==s.util.sizeFromShape(l.shape)){const e=t.dataIdMap.get(v.dataId).id;Ke(c,x,e)}if(f&&t.disposeData(d.dataId),i){const e=s.backend_util.expandShapeToKeepDim(v.shape,h);v.shape=e}return"float32"!==l.dtype&&t.disposeData(k.dataId),v}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Ye;const Qe={kernelName:s.Min,backendName:"wasm",setupFunc:function(e){Ye=e.wasm.cwrap(s.Min,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{axis:i,keepDims:o}=a,{x:u}=n,c=t.dataIdMap.get(u.dataId).id;let l=c,d=u;const{transposed:p,axes:h,originalAxes:f,inputWasTransposed:m}=y(u,i,t);if(m){const e=t.dataIdMap.get(p.dataId).id;e!==c&&(d=p,l=e)}const b=d.shape.length;s.backend_util.assertAxesAreInnerMostDims("min",h,b);const[g,x]=s.backend_util.computeOutAndReduceShapes(d.shape,h),k=s.util.sizeFromShape(x),v=t.makeOutput(g,d.dtype);if(0!==s.util.sizeFromShape(d.shape)){const e=t.dataIdMap.get(v.dataId).id;Ye(l,r[u.dtype],k,e)}if(m&&t.disposeData(p.dataId),o){const e=s.backend_util.expandShapeToKeepDim(v.shape,f);v.shape=e}return v}},Ze=l(s.Minimum);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
var Je;let et;!function(e){e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric"}(Je||(Je={}));const tt={kernelName:s.MirrorPad,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n,attrs:{paddings:a,mode:s}}=e,i=a.map(((e,n)=>e[0]+t.shape[n]+e[1])),o=n.dataIdMap.get(t.dataId).id,u=n.makeOutput(i,t.dtype),c=n.dataIdMap.get(u.dataId).id,l=new Uint8Array(new Int32Array(t.shape).buffer),d=a.map((e=>e[0])),p=a.map((e=>e[1])),h=new Uint8Array(new Int32Array(d).buffer),f=new Uint8Array(new Int32Array(p).buffer);return et(o,l,t.shape.length,r[t.dtype],h,f,Je[s],c),u},setupFunc:function(e){et=e.wasm.cwrap(s.MirrorPad,null,["number","array","number","number","array","array","number","number"])}},nt=l(s.Multiply),rt=u(s.Neg);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function at(e,t){const n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),r=n[0],a=n[1],s=n[2],i=n[3];return e.wasm._free(t),{pSelectedIndices:r,selectedSize:a,pSelectedScores:s,pValidOutputs:i}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let st;const it={kernelName:s.NonMaxSuppressionV3,backendName:"wasm",setupFunc:function(e){st=e.wasm.cwrap(s.NonMaxSuppressionV3,"number",["number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i}=r,{boxes:o,scores:u}=n,c=t.dataIdMap.get(o.dataId).id,l=t.dataIdMap.get(u.dataId).id,d=st(c,l,s,a,i),{pSelectedIndices:p,selectedSize:h,pSelectedScores:f,pValidOutputs:m}=at(t,d);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([h],"int32",p)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let ot;const ut={kernelName:s.NonMaxSuppressionV4,backendName:"wasm",setupFunc:function(e){ot=e.wasm.cwrap(s.NonMaxSuppressionV4,"number",["number","number","number","number","number","bool"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,padToMaxOutputSize:o}=r,{boxes:u,scores:c}=n,l=t.dataIdMap.get(u.dataId).id,d=t.dataIdMap.get(c.dataId).id,p=ot(l,d,s,a,i,o),{pSelectedIndices:h,selectedSize:f,pSelectedScores:m,pValidOutputs:b}=at(t,p);return t.wasm._free(m),[t.makeOutput([f],"int32",h),t.makeOutput([],"int32",b)]}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let ct;const lt={kernelName:s.NonMaxSuppressionV5,backendName:"wasm",setupFunc:function(e){ct=e.wasm.cwrap(s.NonMaxSuppressionV5,"number",["number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,softNmsSigma:o}=r,{boxes:u,scores:c}=n,l=t.dataIdMap.get(u.dataId).id,d=t.dataIdMap.get(c.dataId).id,p=ct(l,d,s,a,i,o),{pSelectedIndices:h,selectedSize:f,pSelectedScores:m,pValidOutputs:b}=at(t,p);return t.wasm._free(b),[t.makeOutput([f],"int32",h),t.makeOutput([f],"float32",m)]}},dt=l(s.NotEqual,0,"bool");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
let pt;const ht={kernelName:s.OneHot,backendName:"wasm",setupFunc:function(e){pt=e.wasm.cwrap(s.OneHot,null,["number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r,u=n.makeOutput([...a.shape,s],"int32"),c=n.dataIdMap.get(u.dataId).id,l=n.dataIdMap.get(a.dataId).id;return pt(l,s,i,o,c),u}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ft={kernelName:s.OnesLike,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(1),r}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mt={kernelName:s.Pack,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return fe({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const i=t[0].shape,o=t[0].dtype;t.forEach((e=>{s.util.assertShapesMatch(i,e.shape,"All tensors passed to stack must have matching shapes"),s.util.assert(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const u=[],c=H({inputs:t.map((e=>{const t=fe({inputs:{input:e},backend:n,attrs:{dim:a}});return u.push(t),t})),backend:n,attrs:{axis:a}});return u.forEach((e=>n.disposeData(e.dataId))),c}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let bt;const gt={kernelName:s.PadV2,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n,attrs:{paddings:a,constantValue:i}}=e,o=a.map(((e,n)=>e[0]+t.shape[n]+e[1]));if(0===s.util.sizeFromShape(t.shape))return be({backend:n,attrs:{shape:o,value:i,dtype:t.dtype}});const u=n.dataIdMap.get(t.dataId).id,c=n.makeOutput(o,t.dtype),l=n.dataIdMap.get(c.dataId).id,d=new Uint8Array(new Int32Array(t.shape).buffer),p=a.map((e=>e[0])),h=a.map((e=>e[1])),f=new Uint8Array(new Int32Array(p).buffer),m=new Uint8Array(new Int32Array(h).buffer);return bt(u,d,t.shape.length,r[t.dtype],f,m,i,l),c},setupFunc:function(e){bt=e.wasm.cwrap(s.PadV2,null,["number","array","number","number","array","array","number","number"])}},xt=l(s.Pow);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
let yt;const kt={kernelName:s.Prelu,backendName:"wasm",setupFunc:function(e){yt=e.wasm.cwrap(s.Prelu,null,["number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id;let o=s;const u=r;let c=u;"float32"!==u.dtype&&(c=z({backend:n,inputs:{x:r},attrs:{dtype:"float32"}}),o=n.dataIdMap.get(c.dataId).id);const l=n.makeOutput(r.shape,"float32"),d=n.dataIdMap.get(l.dataId).id;return yt(o,i,d),"float32"!==u.dtype&&n.disposeData(c.dataId),l}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let vt;const wt={kernelName:s.Prod,backendName:"wasm",setupFunc:function(e){vt=e.wasm.cwrap(s.Prod,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{axis:i,keepDims:o}=a,{x:u}=n,c=t.dataIdMap.get(u.dataId).id;let l=c,d=u;const{transposed:p,axes:h,originalAxes:f,inputWasTransposed:m}=y(u,i,t);let b=h;if(m){const e=t.dataIdMap.get(p.dataId).id;e!==c&&(d=p,l=e,b=s.backend_util.getInnerMostAxes(b.length,d.shape.length))}s.backend_util.assertAxesAreInnerMostDims("prod",b,d.shape.length);const[g,x]=s.backend_util.computeOutAndReduceShapes(d.shape,b),k=s.util.sizeFromShape(x),v=t.makeOutput(g,d.dtype);if(0!==s.util.sizeFromShape(d.shape)){const e=t.dataIdMap.get(v.dataId).id;vt(l,k,r[v.dtype],e)}if(m&&t.disposeData(p.dataId),o){const e=s.backend_util.expandShapeToKeepDim(v.shape,f);v.shape=e}return v}},It={kernelName:s.Range,backendName:"wasm",kernelFunc:e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=Object(F.a)(r,a,s,i),u=t.makeOutput([o.length],i);return t.typedArrayFromHeap(u).set(o),u}},St=l(s.RealDiv),_t=u(s.Relu),Ct=u(s.Relu6);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
let Ot;const $t={kernelName:s.ResizeBilinear,backendName:"wasm",setupFunc:function(e){Ot=e.wasm.cwrap(s.ResizeBilinear,null,["number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{images:a}=n,{alignCorners:i,halfPixelCenters:o,size:u}=r,[c,l]=u,[d,p,h,f]=a.shape,m=[d,c,l,f];let b,g=t.dataIdMap.get(a.dataId);"float32"!==g.dtype&&(b=z({backend:t,inputs:{x:a},attrs:{dtype:"float32"}}),g=t.dataIdMap.get(b.dataId));const x=g.id,y=t.makeOutput(m,"float32");if(0===s.util.sizeFromShape(a.shape))return y;const k=t.dataIdMap.get(y.dataId).id;return Ot(x,d,p,h,f,c,l,i?1:0,o?1:0,k),null!=b&&t.disposeData(b.dataId),y}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Tt;const At={kernelName:s.ResizeNearestNeighbor,backendName:"wasm",setupFunc:function(e){Tt=e.wasm.cwrap(s.ResizeNearestNeighbor,null,["number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{images:a}=n,{alignCorners:i,halfPixelCenters:o,size:u}=r,[c,l]=u,[d,p,h,f]=a.shape,m=[d,c,l,f],b=t.makeOutput(m,"float32");if(0===s.util.sizeFromShape(a.shape))return b;let g,x=t.dataIdMap.get(a.dataId);"float32"!==x.dtype&&(g=z({backend:t,inputs:{x:a},attrs:{dtype:"float32"}}),x=t.dataIdMap.get(g.dataId));const y=x.id,k=t.dataIdMap.get(b.dataId).id;return Tt(y,d,p,h,f,c,l,i?1:0,o?1:0,k),null!=g&&t.disposeData(g.dataId),b}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Et;const Nt={kernelName:s.Reverse,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:i}=r,o=s.util.parseAxisParam(i,a.shape);if(0===a.shape.length)return f({inputs:{x:a},backend:n});const u=n.makeOutput(a.shape,a.dtype),c=n.dataIdMap.get(a.dataId).id,l=n.dataIdMap.get(u.dataId).id,d=new Uint8Array(new Int32Array(o).buffer),p=new Uint8Array(new Int32Array(a.shape).buffer);Et(c,d,o.length,p,a.shape.length,l);const h=$({inputs:{x:u},attrs:{shape:a.shape},backend:n});return n.disposeData(u.dataId),h},setupFunc:function(e){Et=e.wasm.cwrap(s.Reverse,null,["number","array","number","array","number","number"])}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Rt;const Ft={kernelName:s.RotateWithOffset,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{radians:i,fillValue:o,center:u}=r,c=n.makeOutput(a.shape,a.dtype),l=n.dataIdMap.get(a.dataId).id,d=n.dataIdMap.get(c.dataId).id,[p,h,f,m]=a.shape,[b,g]=s.backend_util.getImageCenter(u,h,f),x="number"==typeof o?[o,o,o,0===o?0:255]:[...o,255],y=new Uint8Array(new Int32Array(x).buffer);return Rt(l,p,h,f,m,i,b,g,y,x.length,d),c},setupFunc:function(e){Rt=e.wasm.cwrap(s.RotateWithOffset,null,["number","number","number","number","number","number","number","number","array","number","number"])}},Mt=u(s.Round),Dt=u(s.Rsqrt);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
let Pt;const Bt={kernelName:s.ScatterNd,backendName:"wasm",setupFunc:function(e){Pt=e.wasm.cwrap(s.ScatterNd,null,["number","number","number","number","number","number","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{indices:i,updates:o}=n,{shape:u}=a,c=t.makeOutput(u,o.dtype);if(0===s.util.sizeFromShape(u))return c;const{sliceRank:l,numUpdates:d,sliceSize:p,strides:h,outputSize:f}=s.scatter_util.calculateShapes(o,i,u),m=t.dataIdMap.get(i.dataId).id,b=t.dataIdMap.get(o.dataId).id,g=new Uint8Array(new Int32Array(h).buffer),x=t.dataIdMap.get(c.dataId).id;return Pt(m,b,r[o.dtype],l,d,p,g,f,x),c}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let jt;const Lt={kernelName:s.Select,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:i}=t,o=n.dataIdMap.get(r.dataId).id,u=n.dataIdMap.get(a.dataId).id,c=n.dataIdMap.get(i.dataId).id,l=n.makeOutput(a.shape,a.dtype),d=n.dataIdMap.get(l.dataId).id,p=r.shape.length,h=a.shape.length,f=0===p||p>1||1===h?1:s.util.sizeFromShape(a.shape.slice(1));return jt(o,u,c,f,d),l},setupFunc:function(e){jt=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let zt;const Wt={kernelName:"Sigmoid",backendName:"wasm",setupFunc:function(e){zt=e.wasm.cwrap(s.Sigmoid,null,["number","number"])},kernelFunc:function(e){const{backend:t,inputs:{x:n}}=e,r=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),i=t.dataIdMap.get(a.dataId).id;return 0===s.util.sizeFromShape(a.shape)||zt(r,i),a}},Ut=u(s.Sin);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
let Gt;const Vt={kernelName:s.Softmax,backendName:"wasm",setupFunc:function(e){Gt=e.wasm.cwrap(s.Softmax,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:{logits:n},attrs:{dim:r}}=e,a=t.dataIdMap.get(n.dataId).id,i=t.makeOutput(n.shape,n.dtype),o=t.dataIdMap.get(i.dataId).id,u=n.shape[r],c=s.util.sizeFromShape(n.shape)/u;return 0===s.util.sizeFromShape(i.shape)||Gt(a,o,u,c),i}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ht={kernelName:s.SpaceToBatchND,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:i,paddings:o}=r,u=s.util.sizeFromShape(i),c=[[0,0]];c.push(...o);for(let e=1+i.length;e<a.shape.length;++e)c.push([0,0]);const l=gt.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:c,constantValue:0}}),d=s.backend_util.getReshaped(l.shape,i,u,!1),p=s.backend_util.getPermuted(d.length,i.length,!1),h=s.backend_util.getReshapedPermuted(l.shape,i,u,!1),f=$({inputs:{x:l},backend:n,attrs:{shape:d}}),m=g({inputs:{x:f},backend:n,attrs:{perm:p}}),b=$({inputs:{x:m},backend:n,attrs:{shape:h}});return n.disposeData(l.dataId),n.disposeData(f.dataId),n.disposeData(m.dataId),b}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let qt;const Kt={kernelName:s.SparseFillEmptyRows,backendName:"wasm",setupFunc:function(e){qt=e.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n}=e,{indices:a,values:i,denseShape:o,defaultValue:u}=n,c=a.shape[0],l=a.shape[1],d=t.readSync(o.dataId)[0],p=[c+d,l],h=t.dataIdMap.get(a.dataId).id,f=t.dataIdMap.get(i.dataId).id,m=t.dataIdMap.get(u.dataId).id,b=t.makeOutput(p,a.dtype),g=t.dataIdMap.get(b.dataId).id,x=t.makeOutput(p.slice(0,1),i.dtype),y=t.dataIdMap.get(x.dataId).id,k=t.makeOutput([d],"bool"),v=t.dataIdMap.get(k.dataId).id,w=t.makeOutput([c],a.dtype),I=t.dataIdMap.get(w.dataId).id,S=t.makeOutput([4],"int32"),_=t.dataIdMap.get(S.dataId).id,C=qt(h,f,r[i.dtype],c,d,l,m,g,y,v,I,_),O=t.readSync(S.dataId);let $;switch(O[0]){case 1:$=s.backend_util.getSparseFillEmptyRowsIndicesDenseShapeMismatch(O[1]);break;case 2:$=s.backend_util.getSparseFillEmptyRowsNegativeIndexErrorMessage(O[1],O[2]);break;case 3:$=s.backend_util.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(O[1],O[2],O[3]);break;default:$=""}if(t.disposeData(S.dataId),$)throw t.disposeData(b.dataId),t.disposeData(x.dataId),t.disposeData(k.dataId),t.disposeData(w.dataId),new Error($);let T=b,A=x;return C!==p[0]&&(T=B({inputs:{x:b},attrs:{begin:0,size:[C,l]},backend:t}),A=B({inputs:{x:x},attrs:{begin:0,size:C},backend:t}),t.disposeData(b.dataId),t.disposeData(x.dataId)),[T,A,k,w]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Xt;const Yt={kernelName:s.SparseReshape,backendName:"wasm",setupFunc:function(e){Xt=e.wasm.cwrap(s.SparseReshape,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n}=e,{inputIndices:r,inputShape:a,newShape:i}=n;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==i.shape.length)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const o=t.dataIdMap.get(r.dataId).id,u=t.dataIdMap.get(a.dataId).id,c=t.dataIdMap.get(i.dataId).id,l=r.shape[0],d=s.util.sizeFromShape(i.shape),p=t.makeOutput([l,d],r.dtype),h=t.dataIdMap.get(p.dataId).id,f=t.makeOutput([d],i.dtype),m=t.dataIdMap.get(f.dataId).id,b=t.makeOutput([3],"int32"),g=t.dataIdMap.get(b.dataId).id;Xt(o,u,c,l,h,m,g);const x=t.readSync(b.dataId);let y;switch(x[0]){case 0:y=s.backend_util.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(x[1],x[2]);break;case 1:y=s.backend_util.getSparseReshapeNegativeOutputDimErrorMessage(x[1],x[2]);break;case 2:y=s.backend_util.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{const e=Array.from(t.readSync(a.dataId)),n=Array.from(t.readSync(f.dataId));y=s.backend_util.getSparseReshapeInputOutputMultipleErrorMessage(e,n);break}case 4:{const e=Array.from(t.readSync(a.dataId)),n=Array.from(t.readSync(f.dataId));y=s.backend_util.getSparseReshapeInputOutputMismatchErrorMessage(e,n);break}default:y=""}if(t.disposeData(b.dataId),y)throw t.disposeData(p.dataId),t.disposeData(f.dataId),new Error(y);return[p,f]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Qt;function Zt(e){Qt=e.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function Jt(e,t){const{backend:n,inputs:a}=e,{data:i,indices:o,segmentIds:u}=a,c=o.shape[0],l=n.readSync(u.dataId,c-1,c)[0],d=c>0?l+1:0;if(d<0)throw new Error(s.backend_util.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());const p=i.shape.slice();p[0]=d;const h=n.dataIdMap.get(i.dataId).id,f=n.dataIdMap.get(o.dataId).id,m=n.dataIdMap.get(u.dataId).id,b=n.makeOutput(p,i.dtype),g=n.dataIdMap.get(b.dataId).id,x=n.makeOutput([4],"int32"),y=n.dataIdMap.get(x.dataId).id;Qt(h,r[i.dtype],i.shape[0],f,m,g,y,t,0);const k=n.readSync(x.dataId);let v;switch(k[0]){case 0:v=s.backend_util.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break;case 1:v=s.backend_util.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break;case 2:v=s.backend_util.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(k[1],k[2]);break;case 3:v=s.backend_util.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(k[1],k[2],k[3]);break;default:v=""}if(n.disposeData(x.dataId),v)throw n.disposeData(b.dataId),new Error(v);return b}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const en={kernelName:s.SparseSegmentMean,backendName:"wasm",setupFunc:Zt,kernelFunc:function(e){return Jt(e,!0)}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tn={kernelName:s.SparseSegmentSum,backendName:"wasm",setupFunc:Zt,kernelFunc:function(e){return Jt(e,!1)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nn={kernelName:s.SplitV,backendName:"wasm",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{numOrSizeSplits:i,axis:o}=n,u=s.util.parseAxisParam(o,a.shape)[0],c=s.backend_util.prepareSplitSize(a,i,u),l=new Array(a.shape.length).fill(0),d=a.shape.slice();return c.map((e=>{const t=[...d];t[u]=e;const n=B({inputs:{x:a},attrs:{begin:l,size:t},backend:r});return l[u]+=e,n}))}},rn=u(s.Sqrt),an=u(s.Square),sn=l(s.SquaredDifference);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
let on;const un={kernelName:s.Step,backendName:"wasm",setupFunc:function(e){on=e.wasm.cwrap(s.Step,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{alpha:s}=a,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,u=t.makeOutput(i.shape,i.dtype),c=t.dataIdMap.get(u.dataId).id;return on(o,s,r[i.dtype],c),u}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let cn;const ln={kernelName:s.StridedSlice,backendName:"wasm",setupFunc:function(e){cn=e.wasm.cwrap(s.StridedSlice,null,["number","array","number","array","array","array","array","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{x:a}=n,{begin:i,end:o,strides:u,beginMask:c,endMask:l,ellipsisMask:d,newAxisMask:p,shrinkAxisMask:h}=r,{finalShapeSparse:f,finalShape:m,isIdentity:b,sliceDim0:g,isSimpleSlice:x,begin:y,end:k,strides:v}=s.slice_util.sliceInfo(a.shape,i,o,u,c,l,d,p,h);let w;if(b)w=$({inputs:{x:a},backend:t,attrs:{shape:m}});else if(g||x){s.util.assert(a.shape.length>=1,(()=>`Input must have rank at least 1, got: ${a.shape.length}`));const e=s.slice_util.computeOutShape(y,k,v),n=B({inputs:{x:a},backend:t,attrs:{begin:y,size:e}});w=$({inputs:{x:n},backend:t,attrs:{shape:m}}),t.disposeData(n.dataId)}else{const e=t.makeOutput(f,"float32"),n=t.dataIdMap.get(a.dataId).id,r=new Uint8Array(new Int32Array(s.util.computeStrides(a.shape)).buffer),i=new Uint8Array(new Int32Array(y).buffer),o=new Uint8Array(new Int32Array(k).buffer),u=new Uint8Array(new Int32Array(v).buffer),c=new Uint8Array(new Int32Array(f).buffer),l=new Uint8Array(new Int32Array(s.util.computeStrides(f)).buffer),d=t.dataIdMap.get(e.dataId).id;cn(n,r,a.shape.length,i,o,u,c,l,f.length,d),w=$({inputs:{x:e},backend:t,attrs:{shape:m}}),t.disposeData(e.dataId)}return w}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dn={kernelName:s.StringNGrams,backendName:"wasm",kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{data:a,dataSplits:s}=n,{separator:i,nGramWidths:o,leftPad:u,rightPad:c,padWidth:l,preserveShortSequences:d}=r,p=t.readSync(a.dataId),h=t.readSync(s.dataId),[f,m]=Object(M.a)(p,h,i,o,u,c,l,d),b=t.makeOutput([f.length],"string");t.dataIdMap.get(b.dataId).stringBytes=f;const g=t.makeOutput(s.shape,"int32");return t.typedArrayFromHeap(g).set(m),[b,g]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pn={kernelName:s.StringSplit,backendName:"wasm",kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{input:a,delimiter:s}=n,{skipEmpty:i}=r,o=t.readSync(a.dataId),u=t.readSync(s.dataId),[c,l,d]=Object(D.a)(o,u[0],i),p=l.length,h=t.makeOutput([p,2],"int32");t.typedArrayFromHeap(h).set(c);const f=t.makeOutput([p],"string");t.dataIdMap.get(f.dataId).stringBytes=l;const m=t.makeOutput([2],"int32");return t.typedArrayFromHeap(m).set(d),[h,f,m]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hn={kernelName:s.StringToHashBucketFast,backendName:"wasm",kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{input:a}=n,{numBuckets:s}=r,i=t.readSync(a.dataId),o=Object(P.a)(i,s),u=t.makeOutput(a.shape,"int32");return t.typedArrayFromHeap(u).set(o),u}},fn=l(s.Sub);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
let mn;const bn={kernelName:s.Sum,backendName:"wasm",setupFunc:function(e){mn=e.wasm.cwrap(s.Sum,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{axis:i,keepDims:o}=a,{x:u}=n,c=t.dataIdMap.get(u.dataId).id;let l=c,d=u;const{transposed:p,axes:h,originalAxes:f,inputWasTransposed:m}=y(u,i,t);let b=h;if(m){const e=t.dataIdMap.get(p.dataId).id;e!==c&&(d=p,l=e,b=s.backend_util.getInnerMostAxes(b.length,d.shape.length))}s.backend_util.assertAxesAreInnerMostDims("sum",b,d.shape.length);const[g,x]=s.backend_util.computeOutAndReduceShapes(d.shape,b),k=s.util.sizeFromShape(x),v=t.makeOutput(g,d.dtype);if(0!==s.util.sizeFromShape(d.shape)){const e=t.dataIdMap.get(v.dataId).id;mn(l,k,r[v.dtype],e)}if(m&&t.disposeData(p.dataId),o){const e=s.backend_util.expandShapeToKeepDim(v.shape,f);v.shape=e}return v}},gn=u(s.Tan),xn=u(s.Tanh);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
let yn;const kn={kernelName:s.Tile,backendName:"wasm",setupFunc:function(e){yn=e.wasm.cwrap(s.Tile,null,["number","array","number","array","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,i=n.dataIdMap.get(s.dataId).id,{reps:o}=a,u=new Array(s.shape.length);for(let e=0;e<u.length;e++)u[e]=s.shape[e]*o[e];const c=new Uint8Array(new Int32Array(s.shape).buffer),l=new Uint8Array(new Int32Array(u).buffer),d=n.makeOutput(u,s.dtype),p=n.dataIdMap.get(d.dataId).id;return yn(i,c,s.shape.length,l,u.length,r[d.dtype],p),d}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let vn;const wn={kernelName:s.TopK,backendName:"wasm",setupFunc:function(e){vn=e.wasm.cwrap(s.TopK,null,["number","array","number","number","number","bool","number","number"])},kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a}=e,{k:s,sorted:i}=n,o=t.dataIdMap.get(a.dataId).id,u=new Uint8Array(new Int32Array(a.shape).buffer),c=a.shape.slice();c[c.length-1]=s;const l=t.makeOutput(c,a.dtype),d=t.dataIdMap.get(l.dataId).id,p=t.makeOutput(c,"int32"),h=t.dataIdMap.get(p.dataId).id;return vn(o,u,a.shape.length,r[a.dtype],s,i,d,h),[l,p]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
let In;const Sn={kernelName:s.Transform,backendName:"wasm",setupFunc:function(e){In=e.wasm.cwrap(s.Transform,null,["number","number","bool","number","number","number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{image:a,transforms:i}=n,{interpolation:o,fillMode:u,fillValue:c,outputShape:l}=r,[d,p,h,f]=a.shape,[m,b]=null!=l?l:[p,h],g=[d,m,b,f],x=new Uint8Array(new Int32Array(s.util.computeStrides(a.shape)).buffer),y=t.makeOutput(g,a.dtype),k=t.dataIdMap.get(y.dataId).id,v=t.dataIdMap.get(a.dataId).id,w=t.dataIdMap.get(i.dataId).id,I="nearest"===o?1:2;let S;switch(u){case"constant":default:S=1;break;case"reflect":S=2;break;case"wrap":S=3;break;case"nearest":S=4}return In(v,w,i.shape[0]>1,d,m,b,f,h,p,x,a.shape.length-1,I,S,c,k),y}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _n={kernelName:s.Unpack,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a.shape[s],o=a.shape.length,u=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==s&&(u[c++]=a.shape[e]);const l=new Array(i),d=new Array(o).fill(0),p=a.shape.slice();p[s]=1;for(let e=0;e<l.length;e++)d[s]=e,l[e]=B({inputs:{x:a},attrs:{begin:d,size:p},backend:n});return l.map((({dataId:e,dtype:t})=>({dataId:e,dtype:t,shape:u})))}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cn={kernelName:s.ZerosLike,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(0),r}},On=[o,c,d,h,v,I,_,O,E,L,W,U,V,q,X,Q,Z,J,ne,ae,ie,ue,le,de,pe,he,me,ge,ye,ke,ve,Ie,_e,Oe,Te,Ee,Ne,Re,m,Me,De,Pe,Be,je,Le,ze,We,Ge,Ve,qe,Xe,Qe,Ze,tt,nt,rt,it,ut,lt,dt,ht,ft,mt,gt,xt,kt,wt,It,St,_t,Ct,T,$t,At,Nt,Ft,Mt,Dt,Bt,Lt,Wt,Ut,j,Vt,Ht,Kt,Yt,en,tn,nn,rn,an,sn,un,ln,dn,pn,hn,fn,bn,gn,xn,kn,wn,Sn,x,_n,Cn];
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */for(const e of On)Object(s.registerKernel)(e);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $n=Object(s.env)();$n.registerFlag("WASM_HAS_SIMD_SUPPORT",(async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])))),$n.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",(async()=>{if($n.get("IS_NODE"))return!1;try{return(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(e){return!1}}));var Tn=n(92),An=n.n(Tn),En=n(99),Nn=n(93),Rn=n.n(Nn);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Fn=An.a||Tn,Mn=Rn.a||Nn;class Dn extends s.KernelBackend{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(Hn),qn=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new s.DataStorage(this,Object(s.engine)())}write(e,t,n){const r={id:this.dataIdNextNumber++};return this.move(r,e,t,n,1),r}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){const t=s.util.now();e();return{kernelMs:s.util.now()-t}}move(e,t,n,r,a){const i=this.dataIdNextNumber++;if("string"===r){const s=t;return void this.dataIdMap.set(e,{id:i,stringBytes:s,shape:n,dtype:r,memoryOffset:null,refCount:a})}const o=s.util.sizeFromShape(n),u=o*s.util.bytesPerElement(r),c=this.wasm._malloc(u);this.dataIdMap.set(e,{id:i,memoryOffset:c,shape:n,dtype:r,refCount:a}),this.wasm.tfjs.registerTensor(i,o,c),null!=t&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,u),c)}async read(e){return this.readSync(e)}readSync(e,t,n){const{memoryOffset:r,dtype:a,shape:i,stringBytes:o}=this.dataIdMap.get(e);if("string"===a)return null!=t&&0!==t||!(null==n||n>=o.length)?o.slice(t,n):o;t=t||0,n=n||s.util.sizeFromShape(i);const u=s.util.bytesPerElement(a);return function(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}(this.wasm.HEAPU8.slice(r+t*u,r+n*u).buffer,a)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){const n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){if(this.dataIdMap.has(e)){return this.dataIdMap.get(e).refCount}return 0}incRef(e){const t=this.dataIdMap.get(e);null!=t&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let r;if(null==n)r=this.write(null,e,t);else{const a=this.dataIdNextNumber++;r={id:a},this.dataIdMap.set(r,{id:a,memoryOffset:n,shape:e,dtype:t,refCount:1});const i=s.util.sizeFromShape(e);this.wasm.tfjs.registerTensor(a,i,n)}return{dataId:r,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){const r=this.wasm.HEAPU8.buffer,{memoryOffset:a}=this.dataIdMap.get(n),i=s.util.sizeFromShape(e);switch(t){case"float32":return new Float32Array(r,a,i);case"int32":return new Int32Array(r,a,i);case"bool":return new Uint8Array(r,a,i);default:throw new Error(`Unknown dtype ${t}`)}}}function Pn(e,t,n){if(null!=Ln)return Ln;let r="tfjs-backend-wasm.wasm";return e&&t?r="tfjs-backend-wasm-threaded-simd.wasm":e&&(r="tfjs-backend-wasm-simd.wasm"),null!=Wn&&null!=Wn[r]?Wn[r]:n+r}async function Bn(){const[e,t]=await Promise.all([Object(s.env)().getAsync("WASM_HAS_SIMD_SUPPORT"),Object(s.env)().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise(((n,r)=>{const a={};var i;a.locateFile=(n,r)=>{if(n.endsWith(".worker.js")){const e=En.wasmWorkerContents.replace(/\n/g,"\\n"),t=new Blob([e],{type:"application/javascript"});return URL.createObjectURL(t)}return n.endsWith(".wasm")?Pn(e,t,null!=zn?zn:r):r+n},Gn&&(a.instantiateWasm=(i=Pn(e,t,null!=zn?zn:""),(e,t)=>(s.util.fetch(i,{credentials:"same-origin"}).then((n=>{n.ok||e.env.a(`failed to load wasm binary file at '${i}'`),n.arrayBuffer().then((n=>{WebAssembly.instantiate(n,e).then((e=>{t(e.instance,e.module)}))}))})),{})));let o,u=!1;a.onAbort=()=>{if(u)return;if(Un)return;Un=!0;r({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"})},t&&e&&null==Ln?(a.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+Fn.toString()],{type:"text/javascript"}),o=Fn(a)):o=Mn(a),o.then((e=>{u=!0,Un=!1;e.tfjs={init:e.cwrap("init",null,[]),initWithThreadsCount:e.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:e.cwrap("get_threads_count","number",[]),registerTensor:e.cwrap("register_tensor",null,["number","number","number"]),disposeData:e.cwrap("dispose_data",null,["number"]),dispose:e.cwrap("dispose",null,[])},n({wasm:e})})).catch(r)}))}const jn=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"];let Ln=null,zn=null,Wn={},Un=!1,Gn=!1;function Vn(e,t=!1){if(Un)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if("string"==typeof e)zn=e;else{Wn=e;const t=jn.filter((e=>null==Wn[e]));if(t.length>0)throw new Error(`There were no entries found for the following binaries: ${t.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}Gn=t}let Hn=-1,qn=-1;Object(s.registerBackend)("wasm",(async()=>{const{wasm:e}=await Bn();return new Dn(e)}),2)},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(48);class a{constructor(){}createContext(e={}){return new r.a(e)}}},function(e,t){e.exports=r;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function r(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function a(e){return!0===(e&&e.__isLong__)}r.prototype.__isLong__,Object.defineProperty(r.prototype,"__isLong__",{value:!0}),r.isLong=a;var s={},i={};function o(e,t){var n,r,a;return t?(a=0<=(e>>>=0)&&e<256)&&(r=i[e])?r:(n=c(e,(0|e)<0?-1:0,!0),a&&(i[e]=n),n):(a=-128<=(e|=0)&&e<128)&&(r=s[e])?r:(n=c(e,e<0?-1:0,!1),a&&(s[e]=n),n)}function u(e,t){if(isNaN(e))return t?x:g;if(t){if(e<0)return x;if(e>=f)return I}else{if(e<=-m)return S;if(e+1>=m)return w}return e<0?u(-e,t).neg():c(e%h|0,e/h|0,t)}function c(e,t,n){return new r(e,t,n)}r.fromInt=o,r.fromNumber=u,r.fromBits=c;var l=Math.pow;function d(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return d(e.substring(1),t,n).neg();for(var a=u(l(n,8)),s=g,i=0;i<e.length;i+=8){var o=Math.min(8,e.length-i),c=parseInt(e.substring(i,i+o),n);if(o<8){var p=u(l(n,o));s=s.mul(p).add(u(c))}else s=(s=s.mul(a)).add(u(c))}return s.unsigned=t,s}function p(e,t){return"number"==typeof e?u(e,t):"string"==typeof e?d(e,t):c(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}r.fromString=d,r.fromValue=p;var h=4294967296,f=h*h,m=f/2,b=o(1<<24),g=o(0);r.ZERO=g;var x=o(0,!0);r.UZERO=x;var y=o(1);r.ONE=y;var k=o(1,!0);r.UONE=k;var v=o(-1);r.NEG_ONE=v;var w=c(-1,2147483647,!1);r.MAX_VALUE=w;var I=c(-1,-1,!0);r.MAX_UNSIGNED_VALUE=I;var S=c(0,-2147483648,!1);r.MIN_VALUE=S;var _=r.prototype;_.toInt=function(){return this.unsigned?this.low>>>0:this.low},_.toNumber=function(){return this.unsigned?(this.high>>>0)*h+(this.low>>>0):this.high*h+(this.low>>>0)},_.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(S)){var t=u(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var a=u(l(e,6),this.unsigned),s=this,i="";;){var o=s.div(a),c=(s.sub(o.mul(a)).toInt()>>>0).toString(e);if((s=o).isZero())return c+i;for(;c.length<6;)c="0"+c;i=""+c+i}},_.getHighBits=function(){return this.high},_.getHighBitsUnsigned=function(){return this.high>>>0},_.getLowBits=function(){return this.low},_.getLowBitsUnsigned=function(){return this.low>>>0},_.getNumBitsAbs=function(){if(this.isNegative())return this.eq(S)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},_.isZero=function(){return 0===this.high&&0===this.low},_.eqz=_.isZero,_.isNegative=function(){return!this.unsigned&&this.high<0},_.isPositive=function(){return this.unsigned||this.high>=0},_.isOdd=function(){return 1==(1&this.low)},_.isEven=function(){return 0==(1&this.low)},_.equals=function(e){return a(e)||(e=p(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&(this.high===e.high&&this.low===e.low)},_.eq=_.equals,_.notEquals=function(e){return!this.eq(e)},_.neq=_.notEquals,_.ne=_.notEquals,_.lessThan=function(e){return this.comp(e)<0},_.lt=_.lessThan,_.lessThanOrEqual=function(e){return this.comp(e)<=0},_.lte=_.lessThanOrEqual,_.le=_.lessThanOrEqual,_.greaterThan=function(e){return this.comp(e)>0},_.gt=_.greaterThan,_.greaterThanOrEqual=function(e){return this.comp(e)>=0},_.gte=_.greaterThanOrEqual,_.ge=_.greaterThanOrEqual,_.compare=function(e){if(a(e)||(e=p(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},_.comp=_.compare,_.negate=function(){return!this.unsigned&&this.eq(S)?S:this.not().add(y)},_.neg=_.negate,_.add=function(e){a(e)||(e=p(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,s=65535&this.low,i=e.high>>>16,o=65535&e.high,u=e.low>>>16,l=0,d=0,h=0,f=0;return h+=(f+=s+(65535&e.low))>>>16,d+=(h+=r+u)>>>16,l+=(d+=n+o)>>>16,l+=t+i,c((h&=65535)<<16|(f&=65535),(l&=65535)<<16|(d&=65535),this.unsigned)},_.subtract=function(e){return a(e)||(e=p(e)),this.add(e.neg())},_.sub=_.subtract,_.multiply=function(e){if(this.isZero())return g;if(a(e)||(e=p(e)),n)return c(n.mul(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(S))return e.isOdd()?S:g;if(e.eq(S))return this.isOdd()?S:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(b)&&e.lt(b))return u(this.toNumber()*e.toNumber(),this.unsigned);var t=this.high>>>16,r=65535&this.high,s=this.low>>>16,i=65535&this.low,o=e.high>>>16,l=65535&e.high,d=e.low>>>16,h=65535&e.low,f=0,m=0,x=0,y=0;return x+=(y+=i*h)>>>16,m+=(x+=s*h)>>>16,x&=65535,m+=(x+=i*d)>>>16,f+=(m+=r*h)>>>16,m&=65535,f+=(m+=s*d)>>>16,m&=65535,f+=(m+=i*l)>>>16,f+=t*h+r*d+s*l+i*o,c((x&=65535)<<16|(y&=65535),(f&=65535)<<16|(m&=65535),this.unsigned)},_.mul=_.multiply,_.divide=function(e){if(a(e)||(e=p(e)),e.isZero())throw Error("division by zero");var t,r,s;if(n)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?c((this.unsigned?n.div_u:n.div_s)(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?x:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return x;if(e.gt(this.shru(1)))return k;s=x}else{if(this.eq(S))return e.eq(y)||e.eq(v)?S:e.eq(S)?y:(t=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?y:v:(r=this.sub(e.mul(t)),s=t.add(r.div(e)));if(e.eq(S))return this.unsigned?x:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=g}for(r=this;r.gte(e);){t=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(t)/Math.LN2),o=i<=48?1:l(2,i-48),d=u(t),h=d.mul(e);h.isNegative()||h.gt(r);)h=(d=u(t-=o,this.unsigned)).mul(e);d.isZero()&&(d=y),s=s.add(d),r=r.sub(h)}return s},_.div=_.divide,_.modulo=function(e){return a(e)||(e=p(e)),n?c((this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},_.mod=_.modulo,_.rem=_.modulo,_.not=function(){return c(~this.low,~this.high,this.unsigned)},_.and=function(e){return a(e)||(e=p(e)),c(this.low&e.low,this.high&e.high,this.unsigned)},_.or=function(e){return a(e)||(e=p(e)),c(this.low|e.low,this.high|e.high,this.unsigned)},_.xor=function(e){return a(e)||(e=p(e)),c(this.low^e.low,this.high^e.high,this.unsigned)},_.shiftLeft=function(e){return a(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?c(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):c(0,this.low<<e-32,this.unsigned)},_.shl=_.shiftLeft,_.shiftRight=function(e){return a(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?c(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):c(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},_.shr=_.shiftRight,_.shiftRightUnsigned=function(e){if(a(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?c(this.low>>>e|t<<32-e,t>>>e,this.unsigned):c(32===e?t:t>>>e-32,0,this.unsigned)},_.shru=_.shiftRightUnsigned,_.shr_u=_.shiftRightUnsigned,_.toSigned=function(){return this.unsigned?c(this.low,this.high,!1):this},_.toUnsigned=function(){return this.unsigned?this:c(this.low,this.high,!0)},_.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},_.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},_.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},r.fromBytes=function(e,t,n){return n?r.fromBytesLE(e,t):r.fromBytesBE(e,t)},r.fromBytesLE=function(e,t){return new r(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},r.fromBytesBE=function(e,t){return new r(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},function(e,t,n){(function(t,r,a,s){var i,o=(i=(i="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||t,function(e){function t(){return M.buffer!=U&&Z(M.buffer),G}function o(){return M.buffer!=U&&Z(M.buffer),V}function u(){return M.buffer!=U&&Z(M.buffer),H}function c(){return M.buffer!=U&&Z(M.buffer),q}var l,d,p,h="undefined"!=typeof(e=e||{})?e:{};h.ready=new Promise((function(e,t){l=e,d=t})),"undefined"!=typeof r&&r.listeners&&(p={uncaughtException:r.listeners("uncaughtException"),unhandledRejection:r.listeners("unhandledRejection")});var f,m,b,g,x,y,k=Object.assign({},h),v=[],w=(e,t)=>{throw t},I="object"==typeof window,S="function"==typeof importScripts,_="object"==typeof r&&"object"==typeof r.versions&&"string"==typeof r.versions.node,C=h.ENVIRONMENT_IS_PTHREAD||!1,O="";function $(e){return h.locateFile?h.locateFile(e,O):O+e}if(_){let e;O=S?n(53).dirname(O)+"/":a+"/",y=()=>{x||(g=n(95),x=n(53))},f=function(e,t){return y(),e=x.normalize(e),g.readFileSync(e,t?void 0:"utf8")},b=e=>{var t=f(e,!0);return t.buffer||(t=new Uint8Array(t)),t},m=(e,t,n)=>{y(),e=x.normalize(e),g.readFile(e,(function(e,r){e?n(e):t(r.buffer)}))},r.argv.length>1&&r.argv[1].replace(/\\/g,"/"),v=r.argv.slice(2),r.on("uncaughtException",(function(e){if(!(e instanceof dt))throw e})),r.on("unhandledRejection",(function(e){throw e})),w=(e,t)=>{if(se())throw r.exitCode=e,t;var n;(n=t)instanceof dt||R("exiting due to exception: "+n),r.exit(e)},h.inspect=function(){return"[Emscripten Module object]"};try{e=n(121)}catch(e){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),e}s.Worker=e.Worker}else(I||S)&&(S?O=self.location.href:"undefined"!=typeof document&&document.currentScript&&(O=document.currentScript.src),"undefined"!=typeof i&&i&&(O=i),O=0!==O.indexOf("blob:")?O.substr(0,O.replace(/[?#].*/,"").lastIndexOf("/")+1):"",_||(f=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},S&&(b=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),m=(e,t,n)=>{var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=()=>{200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)}));_&&"undefined"==typeof performance&&(s.performance=n(122).performance);var T=console.log.bind(console),A=console.warn.bind(console);_&&(y(),T=e=>g.writeSync(1,e+"\n"),A=e=>g.writeSync(2,e+"\n"));var E,N=h.print||T,R=h.printErr||A;function F(e){F.shown||(F.shown={}),F.shown[e]||(F.shown[e]=1,R(e))}Object.assign(h,k),k=null,h.arguments&&(v=h.arguments),h.thisProgram&&h.thisProgram,h.quit&&(w=h.quit),Atomics.load,Atomics.store,Atomics.compareExchange,h.wasmBinary&&(E=h.wasmBinary);var M,D,P=h.noExitRuntime||!0;"object"!=typeof WebAssembly&&de("no native wasm support detected");var B,j=!1;function L(e){return h["_"+e]}function z(e,n,r,a,s){var i={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);Q(e,t=ct(n),n)}return t},array:function(e){var n=ct(e.length);return function(e,n){t().set(e,n)}(e,n),n}},o=L(e),u=[],c=0;if(a)for(var l=0;l<a.length;l++){var d=i[r[l]];d?(0===c&&(c=ot()),u[l]=d(a[l])):u[l]=a[l]}var p=o.apply(null,u);return p=function(e){return 0!==c&&ut(c),function(e){return"string"===n?Y(e):"boolean"===n?Boolean(e):e}(e)}(p)}function W(e){var t=new TextDecoder(e);this.decode=e=>(e.buffer instanceof SharedArrayBuffer&&(e=new Uint8Array(e)),t.decode.call(t,e))}var U,G,V,H,q,K="undefined"!=typeof TextDecoder?new W("utf8"):void 0;function X(e,t,n){for(var r=t+n,a=t;e[a]&&!(a>=r);)++a;if(a-t>16&&e.subarray&&K)return K.decode(e.subarray(t,a));for(var s="";t<a;){var i=e[t++];if(128&i){var o=63&e[t++];if(192!=(224&i)){var u=63&e[t++];if((i=224==(240&i)?(15&i)<<12|o<<6|u:(7&i)<<18|o<<12|u<<6|63&e[t++])<65536)s+=String.fromCharCode(i);else{var c=i-65536;s+=String.fromCharCode(55296|c>>10,56320|1023&c)}}else s+=String.fromCharCode((31&i)<<6|o)}else s+=String.fromCharCode(i)}return s}function Y(e,t){return e?X(o(),e,t):""}function Q(e,t,n){return function(e,t,n,r){if(!(r>0))return 0;for(var a=n,s=n+r-1,i=0;i<e.length;++i){var o=e.charCodeAt(i);if(o>=55296&&o<=57343&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++i)),o<=127){if(n>=s)break;t[n++]=o}else if(o<=2047){if(n+1>=s)break;t[n++]=192|o>>6,t[n++]=128|63&o}else if(o<=65535){if(n+2>=s)break;t[n++]=224|o>>12,t[n++]=128|o>>6&63,t[n++]=128|63&o}else{if(n+3>=s)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63,t[n++]=128|o>>6&63,t[n++]=128|63&o}}return t[n]=0,n-a}(e,o(),t,n)}function Z(e){U=e,h.HEAP8=G=new Int8Array(e),h.HEAP16=new Int16Array(e),h.HEAP32=H=new Int32Array(e),h.HEAPU8=V=new Uint8Array(e),h.HEAPU16=new Uint16Array(e),h.HEAPU32=new Uint32Array(e),h.HEAPF32=new Float32Array(e),h.HEAPF64=q=new Float64Array(e)}"undefined"!=typeof TextDecoder&&new W("utf-16le"),C&&(U=h.buffer);var J,ee=h.INITIAL_MEMORY||16777216;if(C)M=h.wasmMemory,U=h.buffer;else if(h.wasmMemory)M=h.wasmMemory;else if(!((M=new WebAssembly.Memory({initial:ee/65536,maximum:32768,shared:!0})).buffer instanceof SharedArrayBuffer))throw R("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),_&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");M&&(U=M.buffer),ee=U.byteLength,Z(U);var te=[],ne=[],re=[],ae=[];function se(){return P||!1}function ie(){C||be(ne)}var oe,ue=0,ce=null,le=null;function de(e){C?postMessage({cmd:"onAbort",arg:e}):h.onAbort&&h.onAbort(e),R(e="Aborted("+e+")"),j=!0,B=1,e+=". Build with -s ASSERTIONS=1 for more info.";var t=new WebAssembly.RuntimeError(e);throw d(t),t}function pe(e){return e.startsWith("data:application/octet-stream;base64,")}function he(e){return e.startsWith("file://")}function fe(e){try{if(e==oe&&E)return new Uint8Array(E);if(b)return b(e);throw"both async and sync fetching of the wasm failed"}catch(e){de(e)}}h.preloadedImages={},h.preloadedAudios={},pe(oe="tfjs-backend-wasm-threaded-simd.wasm")||(oe=$(oe));var me={};function be(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?Se(n)():Se(n)(t.arg):n(void 0===t.arg?null:t.arg)}else t(h)}}function ge(e){var t=ot(),n=e();return ut(t),n}function xe(e){var t=ke.pthreads[e];if(t){u()[e>>2]=0;var n=t.worker;ke.returnWorkerToPool(n)}}function ye(e){!function(e,t){if(B=e,!t&&C)throw ve(e),"unwind";var n;se()||C||ke.terminateAllThreads(),B=n=e,se()||(ke.terminateAllThreads(),h.onExit&&h.onExit(n),j=!0),w(n,new dt(n))}(e)}var ke={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],init:function(){C?ke.initWorker():ke.initMainThread()},initMainThread:function(){for(var e=0;e<8;++e)ke.allocateUnusedWorker()},initWorker:function(){P=!1},pthreads:{},setExitStatus:function(e){B=e},terminateAllThreads:function(){for(var e in ke.pthreads){var t=ke.pthreads[e];t&&t.worker&&ke.returnWorkerToPool(t.worker)}for(var n=0;n<ke.unusedWorkers.length;++n)ke.unusedWorkers[n].terminate();ke.unusedWorkers=[]},returnWorkerToPool:function(e){ke.runWithoutMainThreadQueuedCalls((function(){delete ke.pthreads[e.pthread.threadInfoStruct],ke.unusedWorkers.push(e),ke.runningWorkers.splice(ke.runningWorkers.indexOf(e),1),st(e.pthread.threadInfoStruct),e.pthread=void 0}))},runWithoutMainThreadQueuedCalls:function(e){u()[lt>>2]=0;try{e()}finally{u()[lt>>2]=1}},receiveObjectTransfer:function(e){},threadInit:function(){for(var e in ke.tlsInitFunctions)ke.tlsInitFunctions[e]()},loadWasmModuleToWorker:function(e,t){e.onmessage=n=>{var r,a=n.data,s=a.cmd;if(e.pthread&&(ke.currentProxiedOperationCallerThread=e.pthread.threadInfoStruct),a.targetThread&&a.targetThread!=Je()){var i=ke.pthreads[a.targetThread];return i?i.worker.postMessage(a,a.transferList):R('Internal error! Worker sent a message "'+s+'" to target pthread '+a.targetThread+", but that thread no longer exists!"),void(ke.currentProxiedOperationCallerThread=void 0)}"processQueuedMainThreadWork"===s?et():"spawnThread"===s?Ce(a):"cleanupThread"===s?xe(a.thread):"killThread"===s?function(e){u()[e>>2]=0;var t=ke.pthreads[e];delete ke.pthreads[e],t.worker.terminate(),st(e),ke.runningWorkers.splice(ke.runningWorkers.indexOf(t.worker),1),t.worker.pthread=void 0}(a.thread):"cancelThread"===s?(r=a.thread,ke.pthreads[r].worker.postMessage({cmd:"cancel"})):"loaded"===s?(e.loaded=!0,t&&t(e),e.runPthread&&(e.runPthread(),delete e.runPthread)):"print"===s?N("Thread "+a.threadId+": "+a.text):"printErr"===s?R("Thread "+a.threadId+": "+a.text):"alert"===s?alert("Thread "+a.threadId+": "+a.text):"setimmediate"===a.target?e.postMessage(a):"onAbort"===s?h.onAbort&&h.onAbort(a.arg):R("worker sent an unknown command "+s),ke.currentProxiedOperationCallerThread=void 0},e.onerror=e=>{throw R("worker sent an error! "+e.filename+":"+e.lineno+": "+e.message),e},_&&(e.on("message",(function(t){e.onmessage({data:t})})),e.on("error",(function(t){e.onerror(t)})),e.on("detachedExit",(function(){}))),e.postMessage({cmd:"load",urlOrBlob:h.mainScriptUrlOrBlob||i,wasmMemory:M,wasmModule:D})},allocateUnusedWorker:function(){var e=$("tfjs-backend-wasm-threaded-simd.worker.js");ke.unusedWorkers.push(new Worker(e))},getNewWorker:function(){return 0==ke.unusedWorkers.length&&(ke.allocateUnusedWorker(),ke.loadWasmModuleToWorker(ke.unusedWorkers[0])),ke.unusedWorkers.pop()}};function ve(e){if(C)return $e(1,0,e);try{ye(e)}catch(e){!function(e){if(e instanceof dt||"unwind"==e)return B;w(1,e)}(e)}}h.establishStackSpace=function(){var e=Je(),t=u()[e+44>>2],n=u()[e+48>>2];it(t,t-n),ut(t)};var we,Ie=[];function Se(e){var t=Ie[e];return t||(e>=Ie.length&&(Ie.length=e+1),Ie[e]=t=J.get(e)),t}function _e(e,t){var n,r;if(0===e)n=Date.now();else{if(1!==e&&4!==e)return r=28,u()[Ze()>>2]=r,-1;n=we()}return u()[t>>2]=n/1e3|0,u()[t+4>>2]=n%1e3*1e3*1e3|0,0}function Ce(e){var t=ke.getNewWorker();if(!t)return 6;ke.runningWorkers.push(t);var n=ke.pthreads[e.pthread_ptr]={worker:t,threadInfoStruct:e.pthread_ptr};t.pthread=n;var r={cmd:"run",start_routine:e.startRoutine,arg:e.arg,threadInfoStruct:e.pthread_ptr};return t.runPthread=()=>{r.time=performance.now(),t.postMessage(r,e.transferList)},t.loaded&&(t.runPthread(),delete t.runPthread),0}function Oe(){return 2147483648}function $e(e,t){var n=arguments.length-2,r=arguments;return ge((function(){for(var a=n,s=ct(8*a),i=s>>3,o=0;o<n;o++){var u=r[2+o];c()[i+o]=u}return rt(e,a,s,t)}))}h.invokeEntryPoint=function(e,t){return Se(e)(t)},we=_?()=>{var e=r.hrtime();return 1e3*e[0]+e[1]/1e6}:C?()=>performance.now()-h.__performance_now_clock_drift:()=>performance.now();var Te=[];function Ae(e){try{return M.grow(e-U.byteLength+65535>>>16),Z(M.buffer),1}catch(e){}}var Ee={inEventHandler:0,removeAllEventListeners:function(){for(var e=Ee.eventHandlers.length-1;e>=0;--e)Ee._removeHandler(e);Ee.eventHandlers=[],Ee.deferredCalls=[]},registerRemoveEventListeners:function(){Ee.removeEventListenersRegistered||(re.push(Ee.removeAllEventListeners),Ee.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(e,t,n){function r(e,t){if(e.length!=t.length)return!1;for(var n in e)if(e[n]!=t[n])return!1;return!0}for(var a in Ee.deferredCalls){var s=Ee.deferredCalls[a];if(s.targetFunction==e&&r(s.argsList,n))return}Ee.deferredCalls.push({targetFunction:e,precedence:t,argsList:n}),Ee.deferredCalls.sort((function(e,t){return e.precedence<t.precedence}))},removeDeferredCalls:function(e){for(var t=0;t<Ee.deferredCalls.length;++t)Ee.deferredCalls[t].targetFunction==e&&(Ee.deferredCalls.splice(t,1),--t)},canPerformEventHandlerRequests:function(){return Ee.inEventHandler&&Ee.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(Ee.canPerformEventHandlerRequests())for(var e=0;e<Ee.deferredCalls.length;++e){var t=Ee.deferredCalls[e];Ee.deferredCalls.splice(e,1),--e,t.targetFunction.apply(null,t.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(e,t){for(var n=0;n<Ee.eventHandlers.length;++n)Ee.eventHandlers[n].target!=e||t&&t!=Ee.eventHandlers[n].eventTypeString||Ee._removeHandler(n--)},_removeHandler:function(e){var t=Ee.eventHandlers[e];t.target.removeEventListener(t.eventTypeString,t.eventListenerFunc,t.useCapture),Ee.eventHandlers.splice(e,1)},registerOrRemoveHandler:function(e){var t=function(t){++Ee.inEventHandler,Ee.currentEventHandler=e,Ee.runDeferredCalls(),e.handlerFunc(t),Ee.runDeferredCalls(),--Ee.inEventHandler};if(e.callbackfunc)e.eventListenerFunc=t,e.target.addEventListener(e.eventTypeString,t,e.useCapture),Ee.eventHandlers.push(e),Ee.registerRemoveEventListeners();else for(var n=0;n<Ee.eventHandlers.length;++n)Ee.eventHandlers[n].target==e.target&&Ee.eventHandlers[n].eventTypeString==e.eventTypeString&&Ee._removeHandler(n--)},queueEventHandlerOnThread_iiii:function(e,t,n,r,a){ge((function(){var s=ct(12);u()[s>>2]=n,u()[s+4>>2]=r,u()[s+8>>2]=a,at(e,637534208,t,r,s)}))},getTargetThreadForEventCallback:function(e){switch(e){case 1:return 0;case 2:return ke.currentProxiedOperationCallerThread;default:return e}},getNodeNameForTarget:function(e){return e?e==window?"#window":e==screen?"#screen":e&&e.nodeName?e.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function Ne(e,t,n,r){ge((function(){var a,s,i,o=ct(12),c=0;t&&(s=function(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);r>=55296&&r<=57343&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),r<=127?++t:t+=r<=2047?2:r<=65535?3:4}return t}(a=t)+1,i=Ye(s),Q(a,i,s),c=i),u()[o>>2]=c,u()[o+4>>2]=n,u()[o+8>>2]=r,at(e,657457152,0,c,o)}))}var Re=[0,"undefined"!=typeof document?document:0,"undefined"!=typeof window?window:0];function Fe(e){var t;return e=(t=e)>2?Y(t):t,Re[e]||("undefined"!=typeof document?document.querySelector(e):void 0)}function Me(e){return Fe(e)}function De(e,t,n){var r=Me(e);if(!r)return-4;if(r.canvasSharedPtr&&(u()[r.canvasSharedPtr>>2]=t,u()[r.canvasSharedPtr+4>>2]=n),!r.offscreenCanvas&&r.controlTransferredOffscreen)return r.canvasSharedPtr?(function(e,t,n,r){Ne(e,t=t?Y(t):"",n,r)}(u()[r.canvasSharedPtr+8>>2],e,t,n),1):-4;r.offscreenCanvas&&(r=r.offscreenCanvas);var a=!1;if(r.GLctxObject&&r.GLctxObject.GLctx){var s=r.GLctxObject.GLctx.getParameter(2978);a=0===s[0]&&0===s[1]&&s[2]===r.width&&s[3]===r.height}return r.width=t,r.height=n,a&&r.GLctxObject.GLctx.viewport(0,0,t,n),0}function Pe(e,t,n){return C?$e(2,1,e,t,n):De(e,t,n)}var Be,je={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},queries:[],stringCache:{},unpackAlignment:4,recordError:function(e){je.lastError||(je.lastError=e)},getNewId:function(e){for(var t=je.counter++,n=e.length;n<t;n++)e[n]=null;return t},getSource:function(e,t,n,r){for(var a="",s=0;s<t;++s){var i=r?u()[r+4*s>>2]:-1;a+=Y(u()[n+4*s>>2],i<0?void 0:i)}return a},createContext:function(e,t){e.getContextSafariWebGL2Fixed||(e.getContextSafariWebGL2Fixed=e.getContext,e.getContext=function(t,n){var r=e.getContextSafariWebGL2Fixed(t,n);return"webgl"==t==r instanceof WebGLRenderingContext?r:null});var n=e.getContext("webgl",t);return n?je.registerContext(n,t):0},registerContext:function(e,t){var n=Ye(8);u()[n+4>>2]=Je();var r={handle:n,attributes:t,version:t.majorVersion,GLctx:e};return e.canvas&&(e.canvas.GLctxObject=r),je.contexts[n]=r,("undefined"==typeof t.enableExtensionsByDefault||t.enableExtensionsByDefault)&&je.initExtensions(r),n},makeContextCurrent:function(e){return je.currentContext=je.contexts[e],h.ctx=Be=je.currentContext&&je.currentContext.GLctx,!(e&&!Be)},getContext:function(e){return je.contexts[e]},deleteContext:function(e){je.currentContext===je.contexts[e]&&(je.currentContext=null),"object"==typeof Ee&&Ee.removeAllHandlersOnTarget(je.contexts[e].GLctx.canvas),je.contexts[e]&&je.contexts[e].GLctx.canvas&&(je.contexts[e].GLctx.canvas.GLctxObject=void 0),Qe(je.contexts[e].handle),je.contexts[e]=null},initExtensions:function(e){if(e||(e=je.currentContext),!e.initExtensionsDone){e.initExtensionsDone=!0;var t,n=e.GLctx;!function(e){var t=e.getExtension("ANGLE_instanced_arrays");t&&(e.vertexAttribDivisor=function(e,n){t.vertexAttribDivisorANGLE(e,n)},e.drawArraysInstanced=function(e,n,r,a){t.drawArraysInstancedANGLE(e,n,r,a)},e.drawElementsInstanced=function(e,n,r,a,s){t.drawElementsInstancedANGLE(e,n,r,a,s)})}(n),function(e){var t=e.getExtension("OES_vertex_array_object");t&&(e.createVertexArray=function(){return t.createVertexArrayOES()},e.deleteVertexArray=function(e){t.deleteVertexArrayOES(e)},e.bindVertexArray=function(e){t.bindVertexArrayOES(e)},e.isVertexArray=function(e){return t.isVertexArrayOES(e)})}(n),function(e){var t=e.getExtension("WEBGL_draw_buffers");t&&(e.drawBuffers=function(e,n){t.drawBuffersWEBGL(e,n)})}(n),n.disjointTimerQueryExt=n.getExtension("EXT_disjoint_timer_query"),(t=n).multiDrawWebgl=t.getExtension("WEBGL_multi_draw"),(n.getSupportedExtensions()||[]).forEach((function(e){e.includes("lose_context")||e.includes("debug")||n.getExtension(e)}))}}},Le=["default","low-power","high-performance"],ze={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=ze.buffers[e];0===t||10===t?((1===e?N:R)(X(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return ze.varargs+=4,u()[ze.varargs-4>>2]},getStr:function(e){return Y(e)},get64:function(e,t){return e}};function We(e){return C?$e(3,1,e):0}function Ue(e,t,n,r,a){if(C)return $e(4,1,e,t,n,r,a)}function Ge(e,t,n,r){if(C)return $e(5,1,e,t,n,r);for(var a=0,s=0;s<n;s++){var i=u()[t>>2],c=u()[t+4>>2];t+=8;for(var l=0;l<c;l++)ze.printChar(e,o()[i+l]);a+=c}return u()[r>>2]=a,0}ke.init();var Ve,He,qe,Ke=[null,ve,Pe,We,Ue,Ge],Xe={__clock_gettime:function(e,t){return _e(e,t)},__emscripten_init_main_thread_js:function(e){tt(e,!S,1,!I),ke.threadInit()},__emscripten_thread_cleanup:function(e){C?postMessage({cmd:"cleanupThread",thread:e}):xe(e)},__pthread_create_js:function(e,t,n,r){if("undefined"==typeof SharedArrayBuffer)return R("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var a=[];if(C&&0===a.length)return nt(687865856,e,t,n,r);var s={startRoutine:n,pthread_ptr:e,arg:r,transferList:a};return C?(s.cmd="spawnThread",postMessage(s,a),0):Ce(s)},_emscripten_default_pthread_stack_size:function(){return 2097152},_emscripten_notify_thread_queue:function(e,t){if(e==t)postMessage({cmd:"processQueuedMainThreadWork"});else if(C)postMessage({targetThread:e,cmd:"processThreadQueue"});else{var n=ke.pthreads[e],r=n&&n.worker;if(!r)return;r.postMessage({cmd:"processThreadQueue"})}return 1},abort:function(){de("")},emscripten_check_blocking_allowed:function(){_||S||F("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")},emscripten_get_heap_max:Oe,emscripten_get_now:we,emscripten_memcpy_big:function(e,t,n){o().copyWithin(e,t,t+n)},emscripten_num_logical_cores:function(){return _?n(123).cpus().length:navigator.hardwareConcurrency},emscripten_receive_on_main_thread_js:function(e,t,n){Te.length=t;for(var r=n>>3,a=0;a<t;a++)Te[a]=c()[r+a];return(e<0?me[-e-1]:Ke[e]).apply(null,Te)},emscripten_resize_heap:function(e){var t=o().length;if((e>>>=0)<=t)return!1;var n,r,a=2147483648;if(e>a)return!1;for(var s=1;s<=4;s*=2){var i=t*(1+.2/s);if(i=Math.min(i,e+100663296),Ae(Math.min(a,((n=Math.max(e,i))%(r=65536)>0&&(n+=r-n%r),n))))return!0}return!1},emscripten_set_canvas_element_size:function(e,t,n){return Me(e)?De(e,t,n):Pe(e,t,n)},emscripten_unwind_to_js_event_loop:function(){throw"unwind"},emscripten_webgl_create_context:function(e,t){return n=e,r=t>>2,a=u()[r+6],s={alpha:!!u()[r+0],depth:!!u()[r+1],stencil:!!u()[r+2],antialias:!!u()[r+3],premultipliedAlpha:!!u()[r+4],preserveDrawingBuffer:!!u()[r+5],powerPreference:Le[a],failIfMajorPerformanceCaveat:!!u()[r+7],majorVersion:u()[r+8],minorVersion:u()[r+9],enableExtensionsByDefault:u()[r+10],explicitSwapControl:u()[r+11],proxyContextToMainThread:u()[r+12],renderViaOffscreenBackBuffer:u()[r+13]},(i=Me(n))?s.explicitSwapControl?0:je.createContext(i,s):0;var n,r,a,s,i},exit:ye,fd_close:We,fd_seek:Ue,fd_write:Ge,memory:M||h.wasmMemory,setTempRet0:function(e){}},Ye=(function(){var e={env:Xe,wasi_snapshot_preview1:Xe};function t(e,t){var n,r,a=e.exports;if(h.asm=a,n=h.asm.emscripten_tls_init,ke.tlsInitFunctions.push(n),J=h.asm.__indirect_function_table,r=h.asm.__wasm_call_ctors,ne.unshift(r),D=t,!C){var s=ke.unusedWorkers.length;ke.unusedWorkers.forEach((function(e){ke.loadWasmModuleToWorker(e,(function(){--s||function(e){if(ue--,h.monitorRunDependencies&&h.monitorRunDependencies(ue),0==ue&&(null!==ce&&(clearInterval(ce),ce=null),le)){var t=le;le=null,t()}}()}))}))}}function n(e){t(e.instance,e.module)}function r(t){return function(){if(!E&&(I||S)){if("function"==typeof fetch&&!he(oe))return fetch(oe,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+oe+"'";return e.arrayBuffer()})).catch((function(){return fe(oe)}));if(m)return new Promise((function(e,t){m(oe,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return fe(oe)}))}().then((function(t){return WebAssembly.instantiate(t,e)})).then((function(e){return e})).then(t,(function(e){R("failed to asynchronously prepare wasm: "+e),de(e)}))}if(C||(ue++,h.monitorRunDependencies&&h.monitorRunDependencies(ue)),h.instantiateWasm)try{return h.instantiateWasm(e,t)}catch(e){return R("Module.instantiateWasm callback failed with error: "+e),!1}(E||"function"!=typeof WebAssembly.instantiateStreaming||pe(oe)||he(oe)||"function"!=typeof fetch?r(n):fetch(oe,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){return R("wasm streaming compile failed: "+e),R("falling back to ArrayBuffer instantiation"),r(n)}))}))).catch(d)}(),h.___wasm_call_ctors=function(){return(h.___wasm_call_ctors=h.asm.__wasm_call_ctors).apply(null,arguments)},h._init=function(){return(h._init=h.asm.init).apply(null,arguments)},h._init_with_threads_count=function(){return(h._init_with_threads_count=h.asm.init_with_threads_count).apply(null,arguments)},h._get_threads_count=function(){return(h._get_threads_count=h.asm.get_threads_count).apply(null,arguments)},h._register_tensor=function(){return(h._register_tensor=h.asm.register_tensor).apply(null,arguments)},h._dispose_data=function(){return(h._dispose_data=h.asm.dispose_data).apply(null,arguments)},h._dispose=function(){return(h._dispose=h.asm.dispose).apply(null,arguments)},h._Abs=function(){return(h._Abs=h.asm.Abs).apply(null,arguments)},h._Add=function(){return(h._Add=h.asm.Add).apply(null,arguments)},h._AddN=function(){return(h._AddN=h.asm.AddN).apply(null,arguments)},h._All=function(){return(h._All=h.asm.All).apply(null,arguments)},h._Any=function(){return(h._Any=h.asm.Any).apply(null,arguments)},h._ArgMax=function(){return(h._ArgMax=h.asm.ArgMax).apply(null,arguments)},h._AvgPool=function(){return(h._AvgPool=h.asm.AvgPool).apply(null,arguments)},h._BatchMatMul=function(){return(h._BatchMatMul=h.asm.BatchMatMul).apply(null,arguments)},h._Ceil=function(){return(h._Ceil=h.asm.Ceil).apply(null,arguments)},h._ClipByValue=function(){return(h._ClipByValue=h.asm.ClipByValue).apply(null,arguments)},h._Conv2D=function(){return(h._Conv2D=h.asm.Conv2D).apply(null,arguments)},h._Conv2DBackpropInput=function(){return(h._Conv2DBackpropInput=h.asm.Conv2DBackpropInput).apply(null,arguments)},h._Cos=function(){return(h._Cos=h.asm.Cos).apply(null,arguments)},h._Cosh=function(){return(h._Cosh=h.asm.Cosh).apply(null,arguments)},h._CropAndResize=function(){return(h._CropAndResize=h.asm.CropAndResize).apply(null,arguments)},h._Cumprod=function(){return(h._Cumprod=h.asm.Cumprod).apply(null,arguments)},h._Cumsum=function(){return(h._Cumsum=h.asm.Cumsum).apply(null,arguments)},h._DepthToSpace=function(){return(h._DepthToSpace=h.asm.DepthToSpace).apply(null,arguments)},h._DepthwiseConv2dNative=function(){return(h._DepthwiseConv2dNative=h.asm.DepthwiseConv2dNative).apply(null,arguments)},h._Elu=function(){return(h._Elu=h.asm.Elu).apply(null,arguments)},h._Equal=function(){return(h._Equal=h.asm.Equal).apply(null,arguments)},h._Exp=function(){return(h._Exp=h.asm.Exp).apply(null,arguments)},h._FlipLeftRight=function(){return(h._FlipLeftRight=h.asm.FlipLeftRight).apply(null,arguments)},h._Floor=function(){return(h._Floor=h.asm.Floor).apply(null,arguments)},h._FloorDiv=function(){return(h._FloorDiv=h.asm.FloorDiv).apply(null,arguments)},h._FusedBatchNorm=function(){return(h._FusedBatchNorm=h.asm.FusedBatchNorm).apply(null,arguments)},h._FusedConv2D=function(){return(h._FusedConv2D=h.asm.FusedConv2D).apply(null,arguments)},h._FusedDepthwiseConv2D=function(){return(h._FusedDepthwiseConv2D=h.asm.FusedDepthwiseConv2D).apply(null,arguments)},h._Gather=function(){return(h._Gather=h.asm.Gather).apply(null,arguments)},h._GatherNd=function(){return(h._GatherNd=h.asm.GatherNd).apply(null,arguments)},h._Greater=function(){return(h._Greater=h.asm.Greater).apply(null,arguments)},h._GreaterEqual=function(){return(h._GreaterEqual=h.asm.GreaterEqual).apply(null,arguments)},h._LeakyRelu=function(){return(h._LeakyRelu=h.asm.LeakyRelu).apply(null,arguments)},h._Less=function(){return(h._Less=h.asm.Less).apply(null,arguments)},h._LessEqual=function(){return(h._LessEqual=h.asm.LessEqual).apply(null,arguments)},h._Log=function(){return(h._Log=h.asm.Log).apply(null,arguments)},h._LogicalAnd=function(){return(h._LogicalAnd=h.asm.LogicalAnd).apply(null,arguments)},h._LogicalNot=function(){return(h._LogicalNot=h.asm.LogicalNot).apply(null,arguments)},h._LogicalOr=function(){return(h._LogicalOr=h.asm.LogicalOr).apply(null,arguments)},h._LogicalXor=function(){return(h._LogicalXor=h.asm.LogicalXor).apply(null,arguments)},h._Max=function(){return(h._Max=h.asm.Max).apply(null,arguments)},h._MaxPool=function(){return(h._MaxPool=h.asm.MaxPool).apply(null,arguments)},h._Maximum=function(){return(h._Maximum=h.asm.Maximum).apply(null,arguments)},h._Mean=function(){return(h._Mean=h.asm.Mean).apply(null,arguments)},h._Min=function(){return(h._Min=h.asm.Min).apply(null,arguments)},h._Minimum=function(){return(h._Minimum=h.asm.Minimum).apply(null,arguments)},h._MirrorPad=function(){return(h._MirrorPad=h.asm.MirrorPad).apply(null,arguments)},h._Multiply=function(){return(h._Multiply=h.asm.Multiply).apply(null,arguments)},h._Neg=function(){return(h._Neg=h.asm.Neg).apply(null,arguments)},h._NonMaxSuppressionV3=function(){return(h._NonMaxSuppressionV3=h.asm.NonMaxSuppressionV3).apply(null,arguments)},h._NonMaxSuppressionV4=function(){return(h._NonMaxSuppressionV4=h.asm.NonMaxSuppressionV4).apply(null,arguments)},h._NonMaxSuppressionV5=function(){return(h._NonMaxSuppressionV5=h.asm.NonMaxSuppressionV5).apply(null,arguments)},h._NotEqual=function(){return(h._NotEqual=h.asm.NotEqual).apply(null,arguments)},h._OneHot=function(){return(h._OneHot=h.asm.OneHot).apply(null,arguments)},h._PadV2=function(){return(h._PadV2=h.asm.PadV2).apply(null,arguments)},h._Pow=function(){return(h._Pow=h.asm.Pow).apply(null,arguments)},h._Prelu=function(){return(h._Prelu=h.asm.Prelu).apply(null,arguments)},h._Prod=function(){return(h._Prod=h.asm.Prod).apply(null,arguments)},h._RealDiv=function(){return(h._RealDiv=h.asm.RealDiv).apply(null,arguments)},h._Relu=function(){return(h._Relu=h.asm.Relu).apply(null,arguments)},h._Relu6=function(){return(h._Relu6=h.asm.Relu6).apply(null,arguments)},h._ResizeBilinear=function(){return(h._ResizeBilinear=h.asm.ResizeBilinear).apply(null,arguments)},h._ResizeNearestNeighbor=function(){return(h._ResizeNearestNeighbor=h.asm.ResizeNearestNeighbor).apply(null,arguments)},h._Reverse=function(){return(h._Reverse=h.asm.Reverse).apply(null,arguments)},h._RotateWithOffset=function(){return(h._RotateWithOffset=h.asm.RotateWithOffset).apply(null,arguments)},h._Round=function(){return(h._Round=h.asm.Round).apply(null,arguments)},h._Rsqrt=function(){return(h._Rsqrt=h.asm.Rsqrt).apply(null,arguments)},h._ScatterNd=function(){return(h._ScatterNd=h.asm.ScatterNd).apply(null,arguments)},h._SelectV2=function(){return(h._SelectV2=h.asm.SelectV2).apply(null,arguments)},h._Sigmoid=function(){return(h._Sigmoid=h.asm.Sigmoid).apply(null,arguments)},h._Sin=function(){return(h._Sin=h.asm.Sin).apply(null,arguments)},h._Softmax=function(){return(h._Softmax=h.asm.Softmax).apply(null,arguments)},h._SparseFillEmptyRows=function(){return(h._SparseFillEmptyRows=h.asm.SparseFillEmptyRows).apply(null,arguments)},h._SparseReshape=function(){return(h._SparseReshape=h.asm.SparseReshape).apply(null,arguments)},h._SparseSegmentReduction=function(){return(h._SparseSegmentReduction=h.asm.SparseSegmentReduction).apply(null,arguments)},h._Sqrt=function(){return(h._Sqrt=h.asm.Sqrt).apply(null,arguments)},h._Square=function(){return(h._Square=h.asm.Square).apply(null,arguments)},h._SquaredDifference=function(){return(h._SquaredDifference=h.asm.SquaredDifference).apply(null,arguments)},h._Step=function(){return(h._Step=h.asm.Step).apply(null,arguments)},h._StridedSlice=function(){return(h._StridedSlice=h.asm.StridedSlice).apply(null,arguments)},h._Sub=function(){return(h._Sub=h.asm.Sub).apply(null,arguments)},h._Sum=function(){return(h._Sum=h.asm.Sum).apply(null,arguments)},h._Tan=function(){return(h._Tan=h.asm.Tan).apply(null,arguments)},h._Tanh=function(){return(h._Tanh=h.asm.Tanh).apply(null,arguments)},h._Tile=function(){return(h._Tile=h.asm.Tile).apply(null,arguments)},h._TopK=function(){return(h._TopK=h.asm.TopK).apply(null,arguments)},h._Transform=function(){return(h._Transform=h.asm.Transform).apply(null,arguments)},h._Transpose=function(){return(h._Transpose=h.asm.Transpose).apply(null,arguments)},h.__FusedMatMul=function(){return(h.__FusedMatMul=h.asm._FusedMatMul).apply(null,arguments)},h._malloc=function(){return(Ye=h._malloc=h.asm.malloc).apply(null,arguments)}),Qe=h._free=function(){return(Qe=h._free=h.asm.free).apply(null,arguments)},Ze=(h._emscripten_tls_init=function(){return(h._emscripten_tls_init=h.asm.emscripten_tls_init).apply(null,arguments)},h.___errno_location=function(){return(Ze=h.___errno_location=h.asm.__errno_location).apply(null,arguments)}),Je=h._pthread_self=function(){return(Je=h._pthread_self=h.asm.pthread_self).apply(null,arguments)},et=h._emscripten_main_thread_process_queued_calls=function(){return(et=h._emscripten_main_thread_process_queued_calls=h.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},tt=(h.__emscripten_thread_crashed=function(){return(h.__emscripten_thread_crashed=h.asm._emscripten_thread_crashed).apply(null,arguments)},h.__emscripten_thread_init=function(){return(tt=h.__emscripten_thread_init=h.asm._emscripten_thread_init).apply(null,arguments)}),nt=(h._emscripten_current_thread_process_queued_calls=function(){return(h._emscripten_current_thread_process_queued_calls=h.asm.emscripten_current_thread_process_queued_calls).apply(null,arguments)},h._emscripten_main_browser_thread_id=function(){return(h._emscripten_main_browser_thread_id=h.asm.emscripten_main_browser_thread_id).apply(null,arguments)},h._emscripten_sync_run_in_main_thread_2=function(){return(h._emscripten_sync_run_in_main_thread_2=h.asm.emscripten_sync_run_in_main_thread_2).apply(null,arguments)},h._emscripten_sync_run_in_main_thread_4=function(){return(nt=h._emscripten_sync_run_in_main_thread_4=h.asm.emscripten_sync_run_in_main_thread_4).apply(null,arguments)}),rt=h._emscripten_run_in_main_runtime_thread_js=function(){return(rt=h._emscripten_run_in_main_runtime_thread_js=h.asm.emscripten_run_in_main_runtime_thread_js).apply(null,arguments)},at=h._emscripten_dispatch_to_thread_=function(){return(at=h._emscripten_dispatch_to_thread_=h.asm.emscripten_dispatch_to_thread_).apply(null,arguments)},st=h.__emscripten_thread_free_data=function(){return(st=h.__emscripten_thread_free_data=h.asm._emscripten_thread_free_data).apply(null,arguments)},it=(h.__emscripten_thread_exit=function(){return(h.__emscripten_thread_exit=h.asm._emscripten_thread_exit).apply(null,arguments)},h._memalign=function(){return(h._memalign=h.asm.memalign).apply(null,arguments)},h._emscripten_stack_set_limits=function(){return(it=h._emscripten_stack_set_limits=h.asm.emscripten_stack_set_limits).apply(null,arguments)}),ot=h.stackSave=function(){return(ot=h.stackSave=h.asm.stackSave).apply(null,arguments)},ut=h.stackRestore=function(){return(ut=h.stackRestore=h.asm.stackRestore).apply(null,arguments)},ct=h.stackAlloc=function(){return(ct=h.stackAlloc=h.asm.stackAlloc).apply(null,arguments)},lt=(h.dynCall_iijjiiii=function(){return(h.dynCall_iijjiiii=h.asm.dynCall_iijjiiii).apply(null,arguments)},h.dynCall_jiji=function(){return(h.dynCall_jiji=h.asm.dynCall_jiji).apply(null,arguments)},h.__emscripten_allow_main_runtime_queued_calls=21672);function dt(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function pt(e){if(e=e||v,!(ue>0)){if(C)return l(h),ie(),void postMessage({cmd:"loaded"});!function(){if(h.preRun)for("function"==typeof h.preRun&&(h.preRun=[h.preRun]);h.preRun.length;)e=h.preRun.shift(),te.unshift(e);var e;be(te)}(),ue>0||(h.setStatus?(h.setStatus("Running..."),setTimeout((function(){setTimeout((function(){h.setStatus("")}),1),t()}),1)):t())}function t(){Ve||(Ve=!0,h.calledRun=!0,j||(ie(),l(h),h.onRuntimeInitialized&&h.onRuntimeInitialized(),function(){if(!C){if(h.postRun)for("function"==typeof h.postRun&&(h.postRun=[h.postRun]);h.postRun.length;)e=h.postRun.shift(),ae.unshift(e);var e;be(ae)}}()))}}if(h.cwrap=function(e,t,n,r){var a=(n=n||[]).every((function(e){return"number"===e}));return"string"!==t&&a&&!r?L(e):function(){return z(e,t,n,arguments)}},h.keepRuntimeAlive=se,h.PThread=ke,h.PThread=ke,h.wasmMemory=M,h.ExitStatus=dt,le=function e(){Ve||pt(),Ve||(le=e)},h.run=pt,h.preInit)for("function"==typeof h.preInit&&(h.preInit=[h.preInit]);h.preInit.length>0;)h.preInit.pop()();if(pt(),p&&(He={uncaughtException:r.listeners("uncaughtException").filter((function(e){return!p.uncaughtException.indexOf(e)>-1})),unhandledRejection:r.listeners("unhandledRejection").filter((function(e){return!p.unhandledRejection.indexOf(e)>-1}))}),"undefined"!=typeof WasmBackendModule)qe=WasmBackendModule;else{if("undefined"==typeof e)throw new Error("Could not find wasm module in post.js");qe=e}if(He){var ht=qe._dispose;qe._dispose=function(){ht(),He.uncaughtException.forEach((function(e){r.removeListener("uncaughtException",e)})),He.unhandledRejection.forEach((function(e){r.removeListener("unhandledRejection",e)}))}}return e.ready});e.exports=o}).call(this,"/index.js",n(40),"/",n(39))},function(e,t,n){(function(t,r,a){var s,i=(s=(s="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||t,function(e){var t,i,o,u="undefined"!=typeof(e=e||{})?e:{};u.ready=new Promise((function(e,n){t=e,i=n})),"undefined"!=typeof r&&r.listeners&&(o={uncaughtException:r.listeners("uncaughtException"),unhandledRejection:r.listeners("unhandledRejection")});var c,l,d,p,h,f,m=Object.assign({},u),b=[],g="object"==typeof window,x="function"==typeof importScripts,y="object"==typeof r&&"object"==typeof r.versions&&"string"==typeof r.versions.node,k="";y?(k=x?n(53).dirname(k)+"/":a+"/",f=()=>{h||(p=n(95),h=n(53))},c=function(e,t){return f(),e=h.normalize(e),p.readFileSync(e,t?void 0:"utf8")},d=e=>{var t=c(e,!0);return t.buffer||(t=new Uint8Array(t)),t},l=(e,t,n)=>{f(),e=h.normalize(e),p.readFile(e,(function(e,r){e?n(e):t(r.buffer)}))},r.argv.length>1&&r.argv[1].replace(/\\/g,"/"),b=r.argv.slice(2),r.on("uncaughtException",(function(e){if(!(e instanceof ue))throw e})),r.on("unhandledRejection",(function(e){throw e})),u.inspect=function(){return"[Emscripten Module object]"}):(g||x)&&(x?k=self.location.href:"undefined"!=typeof document&&document.currentScript&&(k=document.currentScript.src),s&&(k=s),k=0!==k.indexOf("blob:")?k.substr(0,k.replace(/[?#].*/,"").lastIndexOf("/")+1):"",c=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},x&&(d=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),l=(e,t,n)=>{var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=()=>{200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)});var v,w=u.print||console.log.bind(console),I=u.printErr||console.warn.bind(console);Object.assign(u,m),m=null,u.arguments&&(b=u.arguments),u.thisProgram&&u.thisProgram,u.quit&&u.quit,u.wasmBinary&&(v=u.wasmBinary);var S;u.noExitRuntime;"object"!=typeof WebAssembly&&V("no native wasm support detected");var _=!1;function C(e){return u["_"+e]}function O(e,t,n,r,a){var s={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);!function(e,t,n){!function(e,t,n,r){if(!(r>0))return 0;for(var a=n+r-1,s=0;s<e.length;++s){var i=e.charCodeAt(s);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++s)),i<=127){if(n>=a)break;t[n++]=i}else if(i<=2047){if(n+1>=a)break;t[n++]=192|i>>6,t[n++]=128|63&i}else if(i<=65535){if(n+2>=a)break;t[n++]=224|i>>12,t[n++]=128|i>>6&63,t[n++]=128|63&i}else{if(n+3>=a)break;t[n++]=240|i>>18,t[n++]=128|i>>12&63,t[n++]=128|i>>6&63,t[n++]=128|63&i}}t[n]=0}(e,A,t,n)}(e,t=oe(n),n)}return t},array:function(e){var t=oe(e.length);return function(e,t){T.set(e,t)}(e,t),t}},i=C(e),o=[],u=0;if(r)for(var c=0;c<r.length;c++){var l=s[n[c]];l?(0===u&&(u=se()),o[c]=l(r[c])):o[c]=r[c]}var d=i.apply(null,o);return d=function(e){return 0!==u&&ie(u),function(e){return"string"===t?F(e):"boolean"===t?Boolean(e):e}(e)}(d)}var $,T,A,E,N="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function R(e,t,n){for(var r=t+n,a=t;e[a]&&!(a>=r);)++a;if(a-t>16&&e.subarray&&N)return N.decode(e.subarray(t,a));for(var s="";t<a;){var i=e[t++];if(128&i){var o=63&e[t++];if(192!=(224&i)){var u=63&e[t++];if((i=224==(240&i)?(15&i)<<12|o<<6|u:(7&i)<<18|o<<12|u<<6|63&e[t++])<65536)s+=String.fromCharCode(i);else{var c=i-65536;s+=String.fromCharCode(55296|c>>10,56320|1023&c)}}else s+=String.fromCharCode((31&i)<<6|o)}else s+=String.fromCharCode(i)}return s}function F(e,t){return e?R(A,e,t):""}function M(e){$=e,u.HEAP8=T=new Int8Array(e),u.HEAP16=new Int16Array(e),u.HEAP32=E=new Int32Array(e),u.HEAPU8=A=new Uint8Array(e),u.HEAPU16=new Uint16Array(e),u.HEAPU32=new Uint32Array(e),u.HEAPF32=new Float32Array(e),u.HEAPF64=new Float64Array(e)}"undefined"!=typeof TextDecoder&&new TextDecoder("utf-16le"),u.INITIAL_MEMORY;var D,P=[],B=[],j=[];var L,z,W=0,U=null,G=null;function V(e){u.onAbort&&u.onAbort(e),I(e="Aborted("+e+")"),_=!0,e+=". Build with -s ASSERTIONS=1 for more info.";var t=new WebAssembly.RuntimeError(e);throw i(t),t}function H(e){return e.startsWith("data:application/octet-stream;base64,")}function q(e){return e.startsWith("file://")}function K(e){try{if(e==L&&v)return new Uint8Array(v);if(d)return d(e);throw"both async and sync fetching of the wasm failed"}catch(e){V(e)}}function X(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?Q(n)():Q(n)(t.arg):n(void 0===t.arg?null:t.arg)}else t(u)}}u.preloadedImages={},u.preloadedAudios={},H(L="tfjs-backend-wasm.wasm")||(z=L,L=u.locateFile?u.locateFile(z,k):k+z);var Y=[];function Q(e){var t=Y[e];return t||(e>=Y.length&&(Y.length=e+1),Y[e]=t=D.get(e)),t}function Z(){return 2147483648}function J(e){try{return S.grow(e-$.byteLength+65535>>>16),M(S.buffer),1}catch(e){}}var ee,te,ne,re={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=re.buffers[e];0===t||10===t?((1===e?w:I)(R(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return re.varargs+=4,E[re.varargs-4>>2]},getStr:function(e){return F(e)},get64:function(e,t){return e}},ae={abort:function(){V("")},emscripten_get_heap_max:Z,emscripten_memcpy_big:function(e,t,n){A.copyWithin(e,t,t+n)},emscripten_resize_heap:function(e){var t,n,r=A.length,a=2147483648;if((e>>>=0)>a)return!1;for(var s=1;s<=4;s*=2){var i=r*(1+.2/s);if(i=Math.min(i,e+100663296),J(Math.min(a,((t=Math.max(e,i))%(n=65536)>0&&(t+=n-t%n),t))))return!0}return!1},fd_close:function(e){return 0},fd_seek:function(e,t,n,r,a){},fd_write:function(e,t,n,r){for(var a=0,s=0;s<n;s++){var i=E[t>>2],o=E[t+4>>2];t+=8;for(var u=0;u<o;u++)re.printChar(e,A[i+u]);a+=o}return E[r>>2]=a,0},setTempRet0:function(e){}},se=(function(){var e={env:ae,wasi_snapshot_preview1:ae};function t(e,t){var n,r=e.exports;u.asm=r,M((S=u.asm.memory).buffer),D=u.asm.__indirect_function_table,n=u.asm.__wasm_call_ctors,B.unshift(n),function(e){if(W--,u.monitorRunDependencies&&u.monitorRunDependencies(W),0==W&&(null!==U&&(clearInterval(U),U=null),G)){var t=G;G=null,t()}}()}function n(e){t(e.instance)}function r(t){return function(){if(!v&&(g||x)){if("function"==typeof fetch&&!q(L))return fetch(L,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+L+"'";return e.arrayBuffer()})).catch((function(){return K(L)}));if(l)return new Promise((function(e,t){l(L,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return K(L)}))}().then((function(t){return WebAssembly.instantiate(t,e)})).then((function(e){return e})).then(t,(function(e){I("failed to asynchronously prepare wasm: "+e),V(e)}))}if(W++,u.monitorRunDependencies&&u.monitorRunDependencies(W),u.instantiateWasm)try{return u.instantiateWasm(e,t)}catch(e){return I("Module.instantiateWasm callback failed with error: "+e),!1}(v||"function"!=typeof WebAssembly.instantiateStreaming||H(L)||q(L)||"function"!=typeof fetch?r(n):fetch(L,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){return I("wasm streaming compile failed: "+e),I("falling back to ArrayBuffer instantiation"),r(n)}))}))).catch(i)}(),u.___wasm_call_ctors=function(){return(u.___wasm_call_ctors=u.asm.__wasm_call_ctors).apply(null,arguments)},u._init=function(){return(u._init=u.asm.init).apply(null,arguments)},u._init_with_threads_count=function(){return(u._init_with_threads_count=u.asm.init_with_threads_count).apply(null,arguments)},u._get_threads_count=function(){return(u._get_threads_count=u.asm.get_threads_count).apply(null,arguments)},u._register_tensor=function(){return(u._register_tensor=u.asm.register_tensor).apply(null,arguments)},u._dispose_data=function(){return(u._dispose_data=u.asm.dispose_data).apply(null,arguments)},u._dispose=function(){return(u._dispose=u.asm.dispose).apply(null,arguments)},u._Abs=function(){return(u._Abs=u.asm.Abs).apply(null,arguments)},u._Add=function(){return(u._Add=u.asm.Add).apply(null,arguments)},u._AddN=function(){return(u._AddN=u.asm.AddN).apply(null,arguments)},u._All=function(){return(u._All=u.asm.All).apply(null,arguments)},u._Any=function(){return(u._Any=u.asm.Any).apply(null,arguments)},u._ArgMax=function(){return(u._ArgMax=u.asm.ArgMax).apply(null,arguments)},u._AvgPool=function(){return(u._AvgPool=u.asm.AvgPool).apply(null,arguments)},u._BatchMatMul=function(){return(u._BatchMatMul=u.asm.BatchMatMul).apply(null,arguments)},u._Ceil=function(){return(u._Ceil=u.asm.Ceil).apply(null,arguments)},u._ClipByValue=function(){return(u._ClipByValue=u.asm.ClipByValue).apply(null,arguments)},u._Conv2D=function(){return(u._Conv2D=u.asm.Conv2D).apply(null,arguments)},u._Conv2DBackpropInput=function(){return(u._Conv2DBackpropInput=u.asm.Conv2DBackpropInput).apply(null,arguments)},u._Cos=function(){return(u._Cos=u.asm.Cos).apply(null,arguments)},u._Cosh=function(){return(u._Cosh=u.asm.Cosh).apply(null,arguments)},u._CropAndResize=function(){return(u._CropAndResize=u.asm.CropAndResize).apply(null,arguments)},u._Cumprod=function(){return(u._Cumprod=u.asm.Cumprod).apply(null,arguments)},u._Cumsum=function(){return(u._Cumsum=u.asm.Cumsum).apply(null,arguments)},u._DepthToSpace=function(){return(u._DepthToSpace=u.asm.DepthToSpace).apply(null,arguments)},u._DepthwiseConv2dNative=function(){return(u._DepthwiseConv2dNative=u.asm.DepthwiseConv2dNative).apply(null,arguments)},u._Elu=function(){return(u._Elu=u.asm.Elu).apply(null,arguments)},u._Equal=function(){return(u._Equal=u.asm.Equal).apply(null,arguments)},u._Exp=function(){return(u._Exp=u.asm.Exp).apply(null,arguments)},u._FlipLeftRight=function(){return(u._FlipLeftRight=u.asm.FlipLeftRight).apply(null,arguments)},u._Floor=function(){return(u._Floor=u.asm.Floor).apply(null,arguments)},u._FloorDiv=function(){return(u._FloorDiv=u.asm.FloorDiv).apply(null,arguments)},u._FusedBatchNorm=function(){return(u._FusedBatchNorm=u.asm.FusedBatchNorm).apply(null,arguments)},u._FusedConv2D=function(){return(u._FusedConv2D=u.asm.FusedConv2D).apply(null,arguments)},u._FusedDepthwiseConv2D=function(){return(u._FusedDepthwiseConv2D=u.asm.FusedDepthwiseConv2D).apply(null,arguments)},u._Gather=function(){return(u._Gather=u.asm.Gather).apply(null,arguments)},u._GatherNd=function(){return(u._GatherNd=u.asm.GatherNd).apply(null,arguments)},u._Greater=function(){return(u._Greater=u.asm.Greater).apply(null,arguments)},u._GreaterEqual=function(){return(u._GreaterEqual=u.asm.GreaterEqual).apply(null,arguments)},u._LeakyRelu=function(){return(u._LeakyRelu=u.asm.LeakyRelu).apply(null,arguments)},u._Less=function(){return(u._Less=u.asm.Less).apply(null,arguments)},u._LessEqual=function(){return(u._LessEqual=u.asm.LessEqual).apply(null,arguments)},u._Log=function(){return(u._Log=u.asm.Log).apply(null,arguments)},u._LogicalAnd=function(){return(u._LogicalAnd=u.asm.LogicalAnd).apply(null,arguments)},u._LogicalNot=function(){return(u._LogicalNot=u.asm.LogicalNot).apply(null,arguments)},u._LogicalOr=function(){return(u._LogicalOr=u.asm.LogicalOr).apply(null,arguments)},u._LogicalXor=function(){return(u._LogicalXor=u.asm.LogicalXor).apply(null,arguments)},u._Max=function(){return(u._Max=u.asm.Max).apply(null,arguments)},u._MaxPool=function(){return(u._MaxPool=u.asm.MaxPool).apply(null,arguments)},u._Maximum=function(){return(u._Maximum=u.asm.Maximum).apply(null,arguments)},u._Mean=function(){return(u._Mean=u.asm.Mean).apply(null,arguments)},u._Min=function(){return(u._Min=u.asm.Min).apply(null,arguments)},u._Minimum=function(){return(u._Minimum=u.asm.Minimum).apply(null,arguments)},u._MirrorPad=function(){return(u._MirrorPad=u.asm.MirrorPad).apply(null,arguments)},u._Multiply=function(){return(u._Multiply=u.asm.Multiply).apply(null,arguments)},u._Neg=function(){return(u._Neg=u.asm.Neg).apply(null,arguments)},u._NonMaxSuppressionV3=function(){return(u._NonMaxSuppressionV3=u.asm.NonMaxSuppressionV3).apply(null,arguments)},u._NonMaxSuppressionV4=function(){return(u._NonMaxSuppressionV4=u.asm.NonMaxSuppressionV4).apply(null,arguments)},u._NonMaxSuppressionV5=function(){return(u._NonMaxSuppressionV5=u.asm.NonMaxSuppressionV5).apply(null,arguments)},u._NotEqual=function(){return(u._NotEqual=u.asm.NotEqual).apply(null,arguments)},u._OneHot=function(){return(u._OneHot=u.asm.OneHot).apply(null,arguments)},u._PadV2=function(){return(u._PadV2=u.asm.PadV2).apply(null,arguments)},u._Pow=function(){return(u._Pow=u.asm.Pow).apply(null,arguments)},u._Prelu=function(){return(u._Prelu=u.asm.Prelu).apply(null,arguments)},u._Prod=function(){return(u._Prod=u.asm.Prod).apply(null,arguments)},u._RealDiv=function(){return(u._RealDiv=u.asm.RealDiv).apply(null,arguments)},u._Relu=function(){return(u._Relu=u.asm.Relu).apply(null,arguments)},u._Relu6=function(){return(u._Relu6=u.asm.Relu6).apply(null,arguments)},u._ResizeBilinear=function(){return(u._ResizeBilinear=u.asm.ResizeBilinear).apply(null,arguments)},u._ResizeNearestNeighbor=function(){return(u._ResizeNearestNeighbor=u.asm.ResizeNearestNeighbor).apply(null,arguments)},u._Reverse=function(){return(u._Reverse=u.asm.Reverse).apply(null,arguments)},u._RotateWithOffset=function(){return(u._RotateWithOffset=u.asm.RotateWithOffset).apply(null,arguments)},u._Round=function(){return(u._Round=u.asm.Round).apply(null,arguments)},u._Rsqrt=function(){return(u._Rsqrt=u.asm.Rsqrt).apply(null,arguments)},u._ScatterNd=function(){return(u._ScatterNd=u.asm.ScatterNd).apply(null,arguments)},u._SelectV2=function(){return(u._SelectV2=u.asm.SelectV2).apply(null,arguments)},u._Sigmoid=function(){return(u._Sigmoid=u.asm.Sigmoid).apply(null,arguments)},u._Sin=function(){return(u._Sin=u.asm.Sin).apply(null,arguments)},u._Softmax=function(){return(u._Softmax=u.asm.Softmax).apply(null,arguments)},u._SparseFillEmptyRows=function(){return(u._SparseFillEmptyRows=u.asm.SparseFillEmptyRows).apply(null,arguments)},u._SparseReshape=function(){return(u._SparseReshape=u.asm.SparseReshape).apply(null,arguments)},u._SparseSegmentReduction=function(){return(u._SparseSegmentReduction=u.asm.SparseSegmentReduction).apply(null,arguments)},u._Sqrt=function(){return(u._Sqrt=u.asm.Sqrt).apply(null,arguments)},u._Square=function(){return(u._Square=u.asm.Square).apply(null,arguments)},u._SquaredDifference=function(){return(u._SquaredDifference=u.asm.SquaredDifference).apply(null,arguments)},u._Step=function(){return(u._Step=u.asm.Step).apply(null,arguments)},u._StridedSlice=function(){return(u._StridedSlice=u.asm.StridedSlice).apply(null,arguments)},u._Sub=function(){return(u._Sub=u.asm.Sub).apply(null,arguments)},u._Sum=function(){return(u._Sum=u.asm.Sum).apply(null,arguments)},u._Tan=function(){return(u._Tan=u.asm.Tan).apply(null,arguments)},u._Tanh=function(){return(u._Tanh=u.asm.Tanh).apply(null,arguments)},u._Tile=function(){return(u._Tile=u.asm.Tile).apply(null,arguments)},u._TopK=function(){return(u._TopK=u.asm.TopK).apply(null,arguments)},u._Transform=function(){return(u._Transform=u.asm.Transform).apply(null,arguments)},u._Transpose=function(){return(u._Transpose=u.asm.Transpose).apply(null,arguments)},u.__FusedMatMul=function(){return(u.__FusedMatMul=u.asm._FusedMatMul).apply(null,arguments)},u._malloc=function(){return(u._malloc=u.asm.malloc).apply(null,arguments)},u._free=function(){return(u._free=u.asm.free).apply(null,arguments)},u.___errno_location=function(){return(u.___errno_location=u.asm.__errno_location).apply(null,arguments)},u._emscripten_main_thread_process_queued_calls=function(){return(u._emscripten_main_thread_process_queued_calls=u.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},u.stackSave=function(){return(se=u.stackSave=u.asm.stackSave).apply(null,arguments)}),ie=u.stackRestore=function(){return(ie=u.stackRestore=u.asm.stackRestore).apply(null,arguments)},oe=u.stackAlloc=function(){return(oe=u.stackAlloc=u.asm.stackAlloc).apply(null,arguments)};function ue(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function ce(e){function n(){ee||(ee=!0,u.calledRun=!0,_||(X(B),t(u),u.onRuntimeInitialized&&u.onRuntimeInitialized(),function(){if(u.postRun)for("function"==typeof u.postRun&&(u.postRun=[u.postRun]);u.postRun.length;)e=u.postRun.shift(),j.unshift(e);var e;X(j)}()))}e=e||b,W>0||(function(){if(u.preRun)for("function"==typeof u.preRun&&(u.preRun=[u.preRun]);u.preRun.length;)e=u.preRun.shift(),P.unshift(e);var e;X(P)}(),W>0||(u.setStatus?(u.setStatus("Running..."),setTimeout((function(){setTimeout((function(){u.setStatus("")}),1),n()}),1)):n()))}if(u.dynCall_iijjiiii=function(){return(u.dynCall_iijjiiii=u.asm.dynCall_iijjiiii).apply(null,arguments)},u.dynCall_jiji=function(){return(u.dynCall_jiji=u.asm.dynCall_jiji).apply(null,arguments)},u.cwrap=function(e,t,n,r){var a=(n=n||[]).every((function(e){return"number"===e}));return"string"!==t&&a&&!r?C(e):function(){return O(e,t,n,arguments)}},G=function e(){ee||ce(),ee||(G=e)},u.run=ce,u.preInit)for("function"==typeof u.preInit&&(u.preInit=[u.preInit]);u.preInit.length>0;)u.preInit.pop()();if(ce(),o&&(te={uncaughtException:r.listeners("uncaughtException").filter((function(e){return!o.uncaughtException.indexOf(e)>-1})),unhandledRejection:r.listeners("unhandledRejection").filter((function(e){return!o.unhandledRejection.indexOf(e)>-1}))}),"undefined"!=typeof e)ne=e;else{if("undefined"==typeof WasmBackendModuleThreadedSimd)throw new Error("Could not find wasm module in post.js");ne=WasmBackendModuleThreadedSimd}if(te){var le=ne._dispose;ne._dispose=function(){le(),te.uncaughtException.forEach((function(e){r.removeListener("uncaughtException",e)})),te.unhandledRejection.forEach((function(e){r.removeListener("unhandledRejection",e)}))}}return e.ready});e.exports=i}).call(this,"/index.js",n(40),"/")},function(e,t,n){"use strict";(function(e){n.d(t,"a",(function(){return a}));
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof e?e:e=>e();function a(){return new Promise((e=>r((()=>e()))))}}).call(this,n(119).setImmediate)},function(e,t){},function(e,t,n){"use strict";var r=n(0);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a={},s={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function i(e,t){if(!(e in a)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e):t;if(n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete a[e]}),!1),1===e)return n.getContext("webgl",s)||n.getContext("experimental-webgl",s);return n.getContext("webgl2",s)}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;a[e]=n}const n=a[e];return null==n||n.isContextLost()?(delete a[e],i(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),a[e])}var o,u,c;function l(e,t){return[t,e]}function d(e){const t=r.util.sizeFromShape(e),n=Math.ceil(t/4);return r.util.sizeToSquarishShape(n)}function p(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function h(e,t){const n=e;let a,s,i,o,u,c,l,d,p,h;return 2===Object(r.env)().getNumber("WEBGL_VERSION")?(a=n.R32F,s=n.R16F,i=n.RGBA16F,o=n.RGBA32F,u=n.RED,l=4,d=1,p=n.HALF_FLOAT,h=n.FLOAT,c=n.RGBA8):(a=e.RGBA,s=e.RGBA,i=e.RGBA,o=n.RGBA,u=e.RGBA,l=4,d=4,p=null!=t?t.HALF_FLOAT_OES:null,h=e.FLOAT,c=e.RGBA),{internalFormatFloat:a,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:i,internalFormatPackedFloat:o,textureFormatFloat:u,downloadTextureFormat:c,downloadUnpackNumChannels:l,defaultNumChannels:d,textureTypeHalfFloat:p,textureTypeFloat:h}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f(e,t){const n=t();return Object(r.env)().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(o||(o={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(u||(u={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(c||(c={}));function m(e){return!!(Object(r.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function b(e,t){return _(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}const g=/ERROR: [0-9]+:([0-9]+):/g;function x(e,t){const n=g.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const a=+n[1],s=e.split("\n"),i=s.length.toString().length+2,o=s.map(((e,t)=>r.util.rightPad((t+1).toString(),i)+e));let u=0;for(let e=0;e<o.length;e++)u=Math.max(o[e].length,u);const c=o.slice(0,a-1),l=o.slice(a-1,a),d=o.slice(a);console.log(c.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${r.util.rightPad(l[0],u)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(d.join("\n"))}function y(e,t){if(f(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function k(e,t,n,r,a,s,i){const o=e.getAttribLocation(t,n);return-1!==o&&(f(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),f(e,(()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,s,i))),f(e,(()=>e.enableVertexAttribArray(o))),!0)}function v(e,t,n,r){f(e,(()=>function(e,t,n){C(e,n),f(e,(()=>e.activeTexture(e.TEXTURE0+n))),f(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,r))),f(e,(()=>e.uniform1i(n,r)))}function w(e,t,n){f(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),f(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function I(e,t){f(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),f(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function S(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function _(e,t,n){const r=f(e,(()=>t()));if(null==r)throw new Error(n);return r}function C(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${n}]`}.`)}}function O(e,t=2){return r.util.sizeFromShape(e.slice(0,e.length-t))}function $(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function T(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[O(e),...$(e)]),t}function A(e){return e%2==0}function E(e,t){if(e=e.slice(-2),t=t.slice(-2),r.util.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(A(n)&&A(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&A(e[0])&&A(t[0])}let N,R;function F(e,t){return null!=e.getExtension(t)}function M(e){try{if(null!=i(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function D(e){if(0===e)return!1;const t=i(e);if(1!==e){if(F(t,"EXT_color_buffer_float"))return P(t);const e="EXT_color_buffer_half_float";if(F(t,e)){const n=t.getExtension(e);return function(e,t){const n=h(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);const a=1,s=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,a,s,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const i=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,i),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(i),o}(t,n)}return!1}if(!F(t,"OES_texture_float"))return!1;if(!F(t,"WEBGL_color_buffer_float"))return!1;return P(t)}function P(e){const t=h(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function B(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&r.util.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j=Object(r.env)();
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function L(){let e,t,n,a,s,i,o,u,c,l;return 2===Object(r.env)().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",a="in",s="texture",i="outputColor",o="out vec4 outputColor;",u="\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",c="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",a="varying",s="texture2D",i="gl_FragColor",o="",u="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",c="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:a,texture2D:s,output:i,defineOutput:o,defineSpecialNaN:u,defineSpecialInf:c,defineRound:l}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z(e,t,n="index"){const a=r.util.computeStrides(t);return a.map(((t,r)=>`${`int ${e[r]} = ${n} / ${t}`}; ${r===a.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${t}`:`index -= ${e[r]} * ${t}`};`)).join("")}function W(e,t,n="index"){const a=r.util.computeStrides(t);return a.map(((t,r)=>`${`int ${e[r]} = ${n} / outShapeStrides[${r}]`}; ${r===a.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * outShapeStrides[${r}]`:`index -= ${e[r]} * outShapeStrides[${r}]`};`)).join("")}function U(e,t,n="index"){const r=function(e,t){const n=e.length,r=e.map((e=>`${t}[${e}]`)),a=new Array(n-1);a[n-2]=r[n-1];for(let e=n-3;e>=0;--e)a[e]=`(${a[e+1]} * ${r[e+1]})`;return a}(e.map(((e,t)=>t)),t);return r.map(((t,a)=>`${`int ${e[a]} = ${n} / ${r[a]}`}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${r[a]}`:`index -= ${e[a]} * ${r[a]}`};`)).join("")}function G(e){const t=r.util.computeStrides(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}j.registerFlag("HAS_WEBGL",(()=>j.getNumber("WEBGL_VERSION")>0)),j.registerFlag("WEBGL_VERSION",(()=>M(2)?2:M(1)?1:0)),j.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),j.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===j.get("WEBGL_VERSION"))),j.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),j.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),j.registerFlag("WEBGL_PACK",(()=>j.getBool("HAS_WEBGL"))),j.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>j.getBool("WEBGL_PACK"))),j.registerFlag("WEBGL_PACK_CLIP",(()=>j.getBool("WEBGL_PACK"))),j.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>j.getBool("WEBGL_PACK"))),j.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>j.getBool("WEBGL_PACK"))),j.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>j.getBool("WEBGL_PACK"))),j.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>j.getBool("WEBGL_PACK"))),j.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>j.getBool("WEBGL_PACK"))),j.registerFlag("WEBGL_PACK_REDUCE",(()=>j.getBool("WEBGL_PACK"))),j.registerFlag("WEBGL_LAZILY_UNPACK",(()=>j.getBool("WEBGL_PACK"))),j.registerFlag("WEBGL_CONV_IM2COL",(()=>j.getBool("WEBGL_PACK"))),j.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==N){const t=i(e);N=t.getParameter(t.MAX_TEXTURE_SIZE)}return N}(j.getNumber("WEBGL_VERSION")))),j.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==R){const t=i(e);R=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,R)}(j.getNumber("WEBGL_VERSION")))),j.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=j.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=i(e);return t=F(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:F(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),j.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>j.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!r.device_util.isMobile())),j.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=i(e);if(1===e){if(!F(t,"OES_texture_float"))return!1}else if(!F(t,"EXT_color_buffer_float"))return!1;return P(t)}(j.getNumber("WEBGL_VERSION")))),j.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!j.getBool("WEBGL_FORCE_F16_TEXTURES")&&j.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),j.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>D(j.getNumber("WEBGL_VERSION")))),j.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=j.getNumber("WEBGL_VERSION"))&&null!=i(e).fenceSync;var e})),j.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>j.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),j.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),j.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>r.device_util.isMobile()?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),j.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),j.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),j.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),j.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128));const V="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:H}=r.backend_util;
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q(e,t,n){const a=[];if(e.forEach((e=>{const t=r.util.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?a.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(a.push(`uniform sampler2D ${e.name};`),a.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=ae(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:a.push(`uniform int ${e.name}Shape;`);break;case 2:a.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:a.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:a.push(`uniform ivec4 ${e.name}Shape;`)}a.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:a.push("uniform int outShape;");break;case 2:a.push("uniform ivec2 outShape;"),a.push("uniform int outShapeStrides;");break;case 3:a.push("uniform ivec3 outShape;"),a.push("uniform ivec2 outShapeStrides;");break;case 4:a.push("uniform ivec4 outShape;"),a.push("uniform ivec3 outShapeStrides;")}a.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{a.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const s=a.join("\n"),i=e.map((e=>function(e,t,n=!1,a){let s="";s+=n?X(e,a):K(e,a);const i=e.shapeInfo.logicalShape,o=t.logicalShape;i.length<=o.length&&(s+=n?function(e,t){const n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),s="get"+a+"AtOutCoords",i=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,u=H(e.shapeInfo.logicalShape,t.logicalShape),c=re(o),l=o-i;let d;const p=["x","y","z","w","u","v"];d=0===i?"":o<2&&u.length>=1?"coords = 0;":u.map((e=>`coords.${p[e+l]} = 0;`)).join("\n");let h="";h=o<2&&i>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+l]}`)).join(", ");let f="return outputValue;";const m=1===r.util.sizeFromShape(e.shapeInfo.logicalShape),b=1===r.util.sizeFromShape(t.logicalShape);if(1!==i||m||b){if(m&&!b)f=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(u.length){const e=i-2,t=i-1;u.indexOf(e)>-1&&u.indexOf(t)>-1?f="return vec4(outputValue.x);":u.indexOf(e)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":u.indexOf(t)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}}else f="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${c} coords = getOutputCoords();\n      ${d}\n      vec4 outputValue = get${a}(${h});\n      ${f}\n    }\n  `}(e,t):function(e,t){const n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),s="get"+a+"AtOutCoords",i=t.texShape,o=e.shapeInfo.texShape,u=e.shapeInfo.logicalShape.length,c=t.logicalShape.length;if(!e.shapeInfo.isUniform&&u===c&&null==e.shapeInfo.flatOffset&&r.util.arraysEqual(o,i))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const l=re(c),d=H(e.shapeInfo.logicalShape,t.logicalShape),p=c-u;let h;const f=["x","y","z","w","u","v"];h=0===u?"":c<2&&d.length>=1?"coords = 0;":d.map((e=>`coords.${f[e+p]} = 0;`)).join("\n");let m="";m=c<2&&u>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${f[t+p]}`)).join(", ");return`\n    float ${s}() {\n      ${l} coords = getOutputCoords();\n      ${h}\n      return get${a}(${m});\n    }\n  `}(e,t));return s}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),o=t.texShape,u=L(),c=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(u);let l,d,p=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${Y}\n    ${Q}\n    ${Z}\n  `}(u);t.isPacked?(l=function(e,t,n){switch(e.length){case 0:return ee();case 1:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(1===r[0])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `;if(1===r[1])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `;if(n)return"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ";return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(r.util.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${a[0]}, ${a[1]}));\n      }\n    `;const s=Math.ceil(e[1]/2);if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ";return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${a[0]}, ${a[1]}));\n\n      int index = resTexRC.x * ${a[1]} + resTexRC.y;\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[2]/2),s=a*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),s=a*Math.ceil(e[e.length-2]/2);let i=s,o="",u="b, r, c";for(let t=2;t<e.length-1;t++)i*=e[e.length-t-1],o=`\n      int b${t} = index / ${i};\n      index -= b${t} * ${i};\n    `+o,u=`b${t}, `+u;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec${e.length}(${u});\n    }\n  `}(e,t,n)}}(t.logicalShape,o,n.enableShapeUniforms),d=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(u)):(l=function(e,t,n){switch(e.length){case 0:return ee();case 1:return function(e,t,n){if(1===t[0])return n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `;if(1===t[1])return n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `;if(n)return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ";return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){if(r.util.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `;if(1===e[1])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `;if(1===e[0])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `;if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ";return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n){return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${W(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`}const r=z(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n){return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${W(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `}const r=z(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=z(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=z(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,o,n.enableShapeUniforms),d=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(u)),n.packedInputs&&(p+=J);return[p,c,d,s,l,i,n.userCode].join("\n")}function K(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[a,s]=e.shapeInfo.texShape;if(1===a&&1===s)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=te(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,u]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${u}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${ne(e)}\n      }\n    `;const a=e.shapeInfo.texShape,s=a[0],i=a[1];if(1===i&&1===s)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=te(n);if(1===i)return t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(1===s)return t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(t)return`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,s="get"+a.charAt(0).toUpperCase()+a.slice(1),i=e.shapeInfo.texShape;if(null!=i&&r.util.arraysEqual(n,i)){if(t)return`\n      float ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `;const e=i[0];return`\n    float ${s}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${i[1]}.0, ${e}.0);\n      return sampleTexture(${a}, uv);\n    }\n  `}const{newShape:o,keptDims:u}=r.util.squeezeShape(n),c=o;if(c.length<n.length){const n=["row","col"];return`\n      ${K(se(e,c),t)}\n      float ${s}(int row, int col) {\n        return ${s}(${ie(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${ne(e)}\n      }\n    `;const l=i[0],d=i[1],p=te(a);if(1===d)return t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${p}), vec3(${a}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${a}TexShape[0]));\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${p}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${a}, uv);\n    }\n  `;if(1===l)return t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${p}), vec3(${a}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${a}TexShape[1]), 0.5);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${p}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${d}.0, 0.5);\n      return sampleTexture(${a}, uv);\n    }\n  `;if(t)return`\n      float ${s}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a}Shape[1] + col + ${p};\n        vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index);\n        return sampleTexture(${a}, uv);\n      }\n    `;return`\n  float ${s}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${p};\n    vec2 uv = uvFromFlat(${l}, ${d}, index);\n    return sampleTexture(${a}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,s="get"+a.charAt(0).toUpperCase()+a.slice(1),i=n[1]*n[2],o=n[2],{newShape:u,keptDims:c}=r.util.squeezeShape(n),l=u;if(l.length<n.length){const n=["row","col","depth"];return`\n        ${K(se(e,l),t)}\n        float ${s}(int row, int col, int depth) {\n          return ${s}(${ie(n,c)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${i}, ${o}, 1)));\n        ${ne(e)}\n      }\n    `;const d=e.shapeInfo.texShape,p=d[0],h=d[1],f=e.shapeInfo.flatOffset;if(h===i&&null==f)return t?`\n      float ${s}(int row, int col, int depth) {\n        int stride1 = ${a}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n        float ${s}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${o}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${h}.0, ${p}.0);\n          return sampleTexture(${a}, uv);\n        }\n      `;if(h===o&&null==f)return t?`\n      float ${s}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${a}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n    float ${s}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${p}.0);\n      return sampleTexture(${a}, uv);\n    }\n  `;const m=te(a);if(t)return`\n    float ${s}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${a}Shape[1] * ${a}Shape[2];\n      int stride1 = ${a}Shape[2];\n      int index = row * ${i} + col * ${o} + depth + ${m};\n      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index);\n      return sampleTexture(${a}, uv);\n    }\n    `;return`\n      float ${s}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${i} + col * ${o} + depth + ${m};\n        vec2 uv = uvFromFlat(${p}, ${h}, index);\n        return sampleTexture(${a}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,s="get"+a.charAt(0).toUpperCase()+a.slice(1),i=n[3],o=n[2]*i,u=n[1]*o,{newShape:c,keptDims:l}=r.util.squeezeShape(n);if(c.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${K(se(e,c),t)}\n      float ${s}(int row, int col, int depth, int depth2) {\n        return ${s}(${ie(n,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${u}, ${o}, ${i}, 1)));\n        ${ne(e)}\n      }\n    `;const d=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,h=p[0],f=p[1],m=`int stride2 = ${a}Shape[3];`,b=`int stride1 = ${a}Shape[2] * stride2;`,g=`int stride0 = ${a}Shape[1] * stride1;`;if(f===u&&null==d)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        ${m}\n        ${b}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${o}, ${i}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${h}.0);\n        return sampleTexture(${a}, uv);\n      }\n    `;if(f===i&&null==d)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${a}Shape[1] * ${a}Shape[2], ${a}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${h}.0);\n        return sampleTexture(${a}, uv);\n      }\n    `;const x=te(a);if(t)return`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${m}\n      ${b}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index + ${x});\n      return sampleTexture(${a}, uv);\n    }\n  `;return`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${u} + col * ${o} +\n          depth * ${i} + depth2;\n      vec2 uv = uvFromFlat(${h}, ${f}, index + ${x});\n      return sampleTexture(${a}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[4],i=t[3]*s,o=t[2]*i,u=t[1]*o,{newShape:c,keptDims:l}=r.util.squeezeShape(t);if(c.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${K(se(e,c))}\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        return ${a}(${ie(t,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${u}, ${o}, ${i}, ${s})) +\n          depth3;\n        ${ne(e)}\n      }\n    `;const d=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,h=p[0],f=p[1];if(f===u&&null==d)return`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${o}, ${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===s&&null==d)return`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const m=te(n);return`\n    float ${a}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${u} + col * ${o} + depth * ${i} +\n          depth2 * ${s} + depth3 + ${m};\n      vec2 uv = uvFromFlat(${h}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:i}=r.util.squeezeShape(t);if(s.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${K(se(e,s))}\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${a}(${ie(t,i)});\n      }\n    `}const o=t[5],u=t[4]*o,c=t[3]*u,l=t[2]*c,d=t[1]*l;if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${d}, ${l}, ${c}, ${u})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${o}, 1)));\n        ${ne(e)}\n      }\n    `;const p=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,f=h[0],m=h[1];if(m===d&&null==p)return`\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${l}, ${c}, ${u}, ${o})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(m===o&&null==p)return`\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const b=te(n);return`\n    float ${a}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${d} + col * ${l} + depth * ${c} +\n          depth2 * ${u} + depth3 * ${o} + depth4 + ${b};\n      vec2 uv = uvFromFlat(${f}, ${m}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function X(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=L();return`\n    vec4 ${n}() {\n      return ${r.texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=L();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `;const i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,s="get"+a.charAt(0).toUpperCase()+a.slice(1),i=e.shapeInfo.texShape,o=i[0],u=i[1],c=L();if(null!=i&&r.util.arraysEqual(n,i))return t?`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);\n\n        return ${c.texture2D}(${a}, uv);\n      }\n    `:`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${u}.0, ${o}.0);\n\n        return ${c.texture2D}(${a}, uv);\n      }\n    `;if(t)return`\n    vec4 ${s}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${a}TexShape[0]) / 2.0), ceil(float(${a}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${a}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${c.texture2D}(${a}, uv);\n    }\n  `;const l=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],d=Math.ceil(n[1]/2);return`\n    vec4 ${s}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${d}, ${l[0]}, ${l[1]}, row, col);\n      return ${c.texture2D}(${a}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){const r=[1,2],s=["b","row","col"];return`\n        ${X(se(e,n.slice(1)),t)}\n        vec4 ${a}(int b, int row, int col) {\n          return ${a}(${ie(s,r)});\n        }\n      `}const o=L();if(t)return`\n    vec4 ${a}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;const u=i[0],c=i[1],l=Math.ceil(n[2]/2),d=l*Math.ceil(n[1]/2);return`\n    vec4 ${a}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${u}, ${c}, ${d}, ${l}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=L();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${n}, uv);\n    }\n  `;const s=e.shapeInfo.logicalShape,i=s.length,o=e.shapeInfo.texShape,u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],c=u[0],l=u[1],d=Math.ceil(s[i-1]/2);let p=d*Math.ceil(s[i-2]/2),h="int b, int row, int col",f=`b * ${p} + (row / 2) * ${d} + (col / 2)`;for(let e=2;e<i-1;e++)h=`int b${e}, `+h,p*=s[i-e-1],f=`b${e} * ${p} + `+f;return`\n    vec4 ${r}(${h}) {\n      int index = ${f};\n      int texR = index / ${l};\n      int texC = index - texR * ${l};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${c});\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const Y="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Q="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Z="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",J="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function ee(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function te(e){return`offset${e}`}function ne(e){const t=e.name,n=r.util.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function re(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function ae(e,t,n){const{newShape:a,keptDims:s}=r.util.squeezeShape(t),i=t.length,o=e&&3===i&&1===t[0],u=o?t.slice(1):a,c=!e&&i>1&&!r.util.arraysEqual(t,n)&&a.length<i||o;return{useSqueezeShape:c,uniformShape:c?u:t,keptDims:s}}function se(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function ie(e,t){return t.map((t=>e[t])).join(", ")}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oe(e,t,n,a){const s=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),i=s.map((e=>e.shapeInfo)),o={logicalShape:a.shape,texShape:a.texData.texShape,isUniform:!1,isPacked:a.texData.isPacked,flatOffset:null},u=q(s,o,t),c=function(e,t){const n=_(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(f(e,(()=>e.shaderSource(n,t))),f(e,(()=>e.compileShader(n))),Object(r.env)().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw x(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,u),l=e.createProgram(c);return Object(r.env)().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:c,source:u,webGLProgram:l,inShapeInfos:i,outShapeInfo:o,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:t,fragmentShader:c,source:u,webGLProgram:l,inShapeInfos:i,outShapeInfo:o},ue(e,t,l))}function ue(e,t,n){const a={},s={},i={},o=[];let u,c,l,d=null,p=null;p=e.getUniformLocation(n,"NAN",!1),1===Object(r.env)().getNumber("WEBGL_VERSION")&&(d=e.getUniformLocation(n,"INFINITY",!1));const h=!1;for(let r=0;r<t.variableNames.length;r++){const o=t.variableNames[r];a[o]=e.getUniformLocation(n,o,h),a[`offset${o}`]=e.getUniformLocation(n,`offset${o}`,h),t.enableShapeUniforms&&(s[`${o}Shape`]=e.getUniformLocation(n,`${o}Shape`,h),i[`${o}TexShape`]=e.getUniformLocation(n,`${o}TexShape`,h))}return t.enableShapeUniforms&&(u=e.getUniformLocation(n,"outShape",h),l=e.getUniformLocation(n,"outShapeStrides",h),c=e.getUniformLocation(n,"outTexShape",h)),t.customUniforms&&t.customUniforms.forEach(((t,r)=>{o[r]=e.getUniformLocation(n,t.name,h)})),{uniformLocations:a,customUniformLocations:o,infLoc:d,nanLoc:p,inShapesLocations:s,inTexShapesLocations:i,outShapeLocation:u,outShapeStridesLocation:l,outTexShapeLocation:c}}function ce(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const a=e.logicalShape,s=t[n],i=s.shape;if(!r.util.arraysEqual(a,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${a} and ${i} must match`);if(e.isUniform&&s.isUniform)return;const o=e.texShape,u=s.isUniform?null:s.texData.texShape;if(!r.util.arraysEqual(o,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${u} must match`)}))}function le(e){return Object(r.env)().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class de{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=o.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=L();this.outputShape=e,this.enableShapeUniforms=le(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?W(["r","c","d"],e):z(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pe{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=o.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=L();this.outputShape=e,this.enableShapeUniforms=le(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?W(["r","c","d"],e):z(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class he{constructor(e){this.variableNames=["A"],this.outTexUsage=u.DOWNLOAD;const t=L();this.outputShape=e,this.userCode=`\n      ${V}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fe{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=u.DOWNLOAD;const t=L();this.outputShape=e,this.userCode=`\n      ${V}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class me{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=L();this.outputShape=e,this.enableShapeUniforms=le(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)"),this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":G(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / texShape[1];\n        int c = imod(flatIndex, texShape[1]);\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n        vec4 values = ${n.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${n.output} = vec4(${r}, 0., 0., 0.);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class be{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=L();this.outputShape=e,this.enableShapeUniforms=le(this.outputShape.length);let r="",a="result";t&&(a="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let a=0;a<=1;a++){const s=2*t+a;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${a};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${s}] = values[0];\n            } else if (offset == 1) {\n              result[${s}] = values[1];\n            } else if (offset == 2) {\n              result[${s}] = values[2];\n            } else {\n              result[${s}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":G(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${a};\n        }\n    `}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ge(e){const t=L();return function(e,t){const n=_(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(f(e,(()=>e.shaderSource(n,t))),f(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function xe(e){return function(e,t){const n=_(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return f(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),f(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function ye(e){return function(e,t){const n=_(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return f(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),f(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}function ke(e,t,n,a,s,i){!function(e,t){const n=Object(r.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const o=function(e){return _(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),u=e.TEXTURE_2D;return f(e,(()=>e.bindTexture(u,o))),f(e,(()=>e.texParameteri(u,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),f(e,(()=>e.texParameteri(u,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),f(e,(()=>e.texParameteri(u,e.TEXTURE_MIN_FILTER,e.NEAREST))),f(e,(()=>e.texParameteri(u,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===Object(r.env)().getNumber("WEBGL_VERSION")?f(e,(()=>e.texImage2D(u,0,a,t,n,0,s,i,null))):f(e,(()=>e.texStorage2D(u,1,a,t,n))),f(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:o,texShape:[n,t]}}function ve(e){return e.internalFormatFloat}function we(e){return e.internalFormatHalfFloat}function Ie(e){return e.downloadTextureFormat}function Se(e){return e.internalFormatPackedFloat}function _e(e){return e.internalFormatPackedHalfFloat}function Ce(e,t,n,r,a,s,i,o){const u=e,c=new Float32Array(function(e,t){const[n,r]=p(e,t);return n*r*4}(s,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,c),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),c}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Oe{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=Object(r.env)().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){a[e]=t}(t,e)):this.gl=i(t);let n="WEBGL_color_buffer_float";const s="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===Object(r.env)().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=b(this.gl,e),F(this.gl,t))this.textureHalfFloatExtension=b(this.gl,t);else if(Object(r.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),F(this.gl,s))this.colorBufferHalfFloatExtension=b(this.gl,s);else if(Object(r.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",F(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!F(this.gl,s))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(s)}this.vertexBuffer=xe(this.gl),this.indexBuffer=ye(this.gl),this.framebuffer=function(e){return _(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=h(this.gl,this.textureHalfFloatExtension)}get debug(){return Object(r.env)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;f(e,(()=>e.finish())),f(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),f(e,(()=>e.deleteFramebuffer(this.framebuffer))),f(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),f(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),f(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=l(t,n);return ke(e,a,s,ve(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=l(t,n);return ke(e,a,s,we(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=l(t,n);return ke(e,a,s,Ie(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){f(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===Object(r.env)().getNumber("WEBGL_VERSION")?f(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):f(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===Object(r.env)().getNumber("WEBGL_VERSION")?f(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):f(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),f(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,a){this.throwIfDisposed(),function(e,t,n,a,s,i){let o,u,c;f(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),s instanceof Uint8Array?(o=new Uint8Array(n*a*4),u=e.UNSIGNED_BYTE,c=e.RGBA):(o=new Float32Array(n*a*4),u=e.FLOAT,c=i.internalFormatPackedFloat),o.set(s),2===Object(r.env)().getNumber("WEBGL_VERSION")?f(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,a,e.RGBA,u,o))):f(e,(()=>e.texImage2D(e.TEXTURE_2D,0,c,n,a,0,e.RGBA,u,o))),f(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,a,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=p(t,n);return ke(e,a,s,_e(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=p(t,n);return ke(e,a,s,Se(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(I(this.gl,this.framebuffer),this.outputTexture=null),f(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,r){const[a,s]=l(t,n),i=new Uint8Array(t*n*4);return f(e,(()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return Ce(this.gl,e,0,0,0,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n,r){const a=e.createBuffer();f(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a)));const s=16*t*n;return f(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ))),f(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),f(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),a}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Object(r.env)().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(a,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=a}else Object(r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Object(r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const r=new Float32Array(t*n*4);return f(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=ge(t));const n=function(e){return _(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);return f(t,(()=>t.attachShader(n,this.vertexShader))),f(t,(()=>t.attachShader(n,e))),function(e,t){if(f(e,(()=>e.linkProgram(t))),!Object(r.env)().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n),this.debug&&y(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=function(e,t,n){return f(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),k(e,t,"clipSpacePos",n,3,20,0)&&k(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&f(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&y(this.gl,this.program),f(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return _(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),f(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),v(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,a]=p(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&y(this.gl,this.program),S(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),f(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),f(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=b(this.gl,2===Object(r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Object(r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Object(r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await r.util.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,Object(r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,Object(r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length;++t){if(!e[t]())break}return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||r.util.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),w(this.gl,e,this.framebuffer),this.debug&&S(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(w(this.gl,this.outputTexture,this.framebuffer),this.debug&&S(this.gl)):I(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;w(r,e,this.framebuffer),this.debug&&S(r),this.outputTexture=e,f(r,(()=>r.viewport(0,0,t,n))),f(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),f(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}var $e=n(27);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:Te,bincountImpl:Ae,bincountReduceImpl:Ee,ceilImpl:Ne,concatImpl:Re,equalImpl:Fe,expImpl:Me,expm1Impl:De,floorImpl:Pe,gatherNdImpl:Be,gatherV2Impl:je,greaterImpl:Le,greaterEqualImpl:ze,lessImpl:We,lessEqualImpl:Ue,linSpaceImpl:Ge,logImpl:Ve,maxImpl:He,maximumImpl:qe,minimumImpl:Ke,multiplyImpl:Xe,negImpl:Ye,notEqualImpl:Qe,prodImpl:Ze,rangeImpl:Je,rsqrtImpl:et,scatterImpl:tt,sigmoidImpl:nt,simpleAbsImpl:rt,sliceImpl:at,sparseFillEmptyRowsImpl:st,sparseReshapeImpl:it,sparseSegmentReductionImpl:ot,sqrtImpl:ut,stridedSliceImpl:ct,stringNGramsImpl:lt,stringSplitImpl:dt,stringToHashBucketFastImpl:pt,subImpl:ht,tileImpl:ft,topKImpl:mt,transposeImpl:bt,uniqueImpl:gt}=$e;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xt(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function yt(e,t){return 1===t?[e]:xt(e,t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class kt{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=le(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=yt("rc",this.rank),t=re(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),a=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${a}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let a=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)a=`${e[e.length-1-t]},`+a;t.push(a)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);if(1===this.rank){return`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`}return`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vt{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=le(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var r,a;
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */this.userCode=`\n      ${r=t,a=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${a?U(["r","c","d"],"inputShape"):z(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":G(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class wt{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=St(t,n),a=_t(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const s=It(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const e=this.freeTextures[a].shift();return this.usedTextures[a].push(e),e}let i;return r===c.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===c.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===c.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===c.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===c.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(i),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),i}releaseTexture(e,t,n,a){if(null==this.freeTextures)return;const s=St(n,a),i=_t(t,s,a);i in this.freeTextures||(this.freeTextures[i]=[]);const o=It(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,a),u=Object(r.env)().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==u&&this._numBytesAllocated>u?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=o):(this.freeTextures[i].push(e),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;const c=this.usedTextures[i],l=c.indexOf(e);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");c.splice(l,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function It(e,t,n,r,a){const s=function(e,t){switch(e){case c.PACKED_2X2_FLOAT32:return Se(t);case c.PACKED_2X2_FLOAT16:return _e(t);case c.UNPACKED_FLOAT32:return ve(t);case c.UNPACKED_FLOAT16:return we(t);case c.PACKED_4X1_UNSIGNED_BYTE:return Ie(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let i;if(a){const[t,n]=p(e[0],e[1]);i=t*n}else{const[t,n]=l(e[0],e[1]);i=t*n}const o=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,s);return i*o}function St(e,t){if(e===u.UPLOAD)return c.PACKED_2X2_FLOAT32;if(e===u.RENDER||null==e)return function(e){return Object(r.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?c.PACKED_2X2_FLOAT32:c.UNPACKED_FLOAT32:e?c.PACKED_2X2_FLOAT16:c.UNPACKED_FLOAT16}(t);if(e===u.DOWNLOAD||e===u.PIXELS)return c.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function _t(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ct{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=le(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const Ot="return abs(x);";const $t="return x;";class Tt{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=le(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class At{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=le(this.outputShape.length);const t=e.length,n=yt("rc",t),r=re(t),a=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Et=r.kernel_impls.whereImpl,Nt={};const Rt=Object(r.env)().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class Ft extends r.KernelBackend{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Object(r.env)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof Oe)t=e;else{const n=i(Object(r.env)().getNumber("WEBGL_VERSION"),e);t=new Oe(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=i(Object(r.env)().getNumber("WEBGL_VERSION"));t=new Oe(e),this.binaryCache=((n=Object(r.env)().getNumber("WEBGL_VERSION"))in Nt||(Nt[n]={}),Nt[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new wt(this.gpgpu),this.numMBBeforeWarning=null==Object(r.env)().global.screen?1024:Object(r.env)().global.screen.height*Object(r.env)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new r.DataStorage(this,Object(r.engine)())}nextDataId(){return Ft.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((Object(r.env)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Object(r.env)().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const a={id:this.nextDataId()};return this.texData.set(a,{shape:t,dtype:n,values:e,usage:u.UPLOAD,refCount:1}),a}refCount(e){if(this.texData.has(e)){return this.texData.get(e).refCount}return 0}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}move(e,t,n,a,s){if(Object(r.env)().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===a)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:a,values:t,usage:u.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:a,complexTensorInfos:s,slice:i,shape:o,isPacked:u}=t;if(null!=i){let t;t=u?new Tt(o,$t):new Ct(o,$t);const n=this.runWebGLProgram(t,[{dataId:e,shape:o,dtype:a}],a),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===a)return n;const c=null!=this.activeTimers;let l,d;if(c&&(l=r.util.now()),"complex64"===a){const e=this.readSync(s.real.dataId),t=this.readSync(s.imag.dataId);d=r.backend_util.mergeRealAndImagArrays(e,t)}else d=this.getValuesFromTexture(e);return c&&(this.downloadWaitMs+=r.util.now()-l),this.convertAndCacheOnCPU(e,d)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:a,slice:s,dtype:i,complexTensorInfos:o,isPacked:u}=t;if(null!=s){let t;t=u?new Tt(a,$t):new Ct(a,$t);const n=this.runWebGLProgram(t,[{dataId:e,shape:a,dtype:i}],i),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if(Object(r.env)().getBool("DEBUG")&&!Object(r.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Object(r.env)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c,l,p=null;if("complex64"!==i&&Object(r.env)().get("WEBGL_BUFFER_SUPPORTED")){c=this.decode(e);const t=this.texData.get(c.dataId);p=this.gpgpu.createBufferFromTexture(t.texture.texture,...d(a))}if(this.pendingRead.set(e,[]),"complex64"!==i&&await this.gpgpu.createAndWaitForFence(),"complex64"===i){const e=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]),t=e[0],n=e[1];l=r.backend_util.mergeRealAndImagArrays(t,n)}else if(null==p)l=this.getValuesFromTexture(e);else{const e=r.util.sizeFromShape(a);l=this.gpgpu.downloadFloat32MatrixFromBuffer(p,e)}if(null!=c&&this.disposeIntermediateTensorInfo(c),null!=p){const e=this.gpgpu.gl;f(e,(()=>e.deleteBuffer(p)))}const h=this.convertAndCacheOnCPU(e,l),m=this.pendingRead.get(e);return this.pendingRead.delete(e),m.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Object(r.engine)().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e,t={}){const n=this.texData.get(e),{values:a,shape:s,slice:i,dtype:o,isPacked:u,texture:c}=n;if("complex64"===o)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=i){let n;n=u?new Tt(s,$t):new Ct(s,$t);const r=this.runWebGLProgram(n,[{dataId:e,shape:s,dtype:o}],o),a=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),a}if(null==c)throw null!=a?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const l=this.decode(e,t.customTexShape),d=Object(r.engine)().makeTensorFromTensorInfo(l),p=this.texData.get(l.dataId);return Object.assign({tensorRef:d},p.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>r.util.decodeString(e)));return Object(r.buffer)(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Object(r.buffer)(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!m(n)){if(Object(r.env)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:a}=this.texData.get(e),s=r.util.sizeFromShape(t);if(Object(r.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...d(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),a}const i=Object(r.env)().getBool("WEBGL_PACK")&&!0===a,o=i?T(t):t,u=i?new fe(o):new he(o),c=this.runWebGLProgram(u,[{shape:o,dtype:n,dataId:e}],"float32"),l=this.texData.get(c.dataId),p=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture.texture,l.texShape[0],l.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(c),p}timerAvailable(){return Object(r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let a=!1;null==this.programTimersStack?(this.programTimersStack=n,a=!0):this.activeTimers.push(n),this.activeTimers=n,e();const s=r.util.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),i=r.util.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,a&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(Object(r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(s);o.kernelMs=r.util.sum(e),o.getExtraProfileInfo=()=>e.map(((e,t)=>({name:i[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Object(r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:r.util.now(),endMs:null}}endTimer(e){return Object(r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=r.util.now(),e)}async getQueryTime(e){if(Object(r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:a,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,s)));const c=this.texData.get(e);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=Rt){return Object(r.env)().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&r.util.sizeFromShape(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){r.backend_util.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return Et(e.shape,t)}packedUnaryOp(e,t,n){const a=new Tt(e.shape,t),s=this.compileAndRun(a,[e],n);return Object(r.engine)().makeTensorFromTensorInfo(s)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=rt(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Object(r.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Ot,e.dtype);const t=new Ct(e.shape,Ot),n=this.compileAndRun(t,[e]);return Object(r.engine)().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&r.util.isString(n[0])){const s=n.map((e=>r.util.encodeString(e)));a=this.write(s,e,t)}else a=this.write(n,e,t);return this.texData.get(a).usage=null,{dataId:a,shape:e,dtype:t}}makeOutput(e,t,n){return Object(r.engine)().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new At(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new kt(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[O(e.shape),...$(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[O(t),...$(t)],s=new vt(a,n),i=[n],o=this.runWebGLProgram(s,[r],e.dtype,i,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:a,shape:s,dtype:i}=n;if(null!=t){const e=r.util.sizeFromShape(s),n=t[0]*t[1]*4;r.util.assert(e<=n,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}const o=T(s);let u;u=a?new pe(o):new de(o);const c=[null!=t?t:d(o)];return{dtype:i,shape:s,dataId:this.runWebGLProgram(u,[{shape:o,dtype:i,dataId:e}],i,c,!0,t).dataId}}runWebGLProgram(e,t,n,a,s=!1,i){const u=this.makeTensorInfo(e.outputShape,n),c=this.texData.get(u.dataId);if(e.packedOutput&&(c.isPacked=!0),e.outPackingScheme===o.DENSE){const t=null!=i?i:d(e.outputShape);c.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(c.usage=e.outTexUsage),0===r.util.sizeFromShape(u.shape))return c.values=r.util.getTypedArrayFromDType(u.dtype,0),u;const l=[],p=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&r.util.sizeFromShape(t.shape)<=Object(r.env)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),l.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!E(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),l.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(u.dataId);const h={shape:u.shape,texData:c,isUniform:!1},f=function(e,t,n){let a="";t.concat(n).forEach((t=>{const s=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const i=t.texData.texShape,{useSqueezeShape:o,uniformShape:u,keptDims:c}=ae(e.packedInputs,t.shape,i);let l="",d="",p="";if(1===u.length&&e.packedInputs){const e=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];l=`${e[0]>1}_${e[1]>1}`}else if(2!==u.length||e.packedInputs){if(u.length>2&&!e.packedInputs){const e=r.util.computeStrides(u);p=`${e[0]===i[1]}_${e[e.length-1]===i[1]}`}}else d=`${u[0]>1}_${u[1]>1}`;const h=t.shape.length,f=2===u.length&&r.util.arraysEqual(t.shape,i),m=1===r.util.sizeFromShape(t.shape),b=r.backend_util.getBroadcastDims(t.shape,n.shape),g=!e.packedInputs&&h===n.shape.length&&r.util.arraysEqual(i,n.texData.texShape),x=e.packedInputs||u.length>2?"":`${i[0]>1}_${i[1]>1}`;a+=`${h}_${g}_${o?c:""}_${u.length}_${m}_${b}_${f}_${l}_${d}_${p}_${x}_${s}`}else{const e=t.isUniform?"uniform":t.texData.texShape;a+=`${t.shape}_${e}_${s}`}}));const s=e.userCode;let i=e.constructor.name;return i+="_"+a+"_"+s+`${Object(r.env)().getNumber("WEBGL_VERSION")}`,i}(e,p,h),m=this.getAndSaveBinary(f,(()=>oe(this.gpgpu,e,p,h))),b=null!=this.activeTimers;let g;b&&(g=this.startTimer()),Object(r.env)().get("ENGINE_COMPILE_ONLY")||function(e,t,n,a,s){t.program.enableShapeUniforms||(ce(t.inShapeInfos,n),ce([t.outShapeInfo],[a]));const i=a.texData.texture,o=a.texData.texShape;a.texData.isPacked?e.setOutputPackedMatrixTexture(i.texture,o[0],o[1]):e.setOutputMatrixTexture(i.texture,o[0],o[1]),e.setProgram(t.webGLProgram),1===Object(r.env)().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,a)=>{const s=t.program.variableNames[a],i=t.uniformLocations[s],o=t.uniformLocations[`offset${s}`],u=t.inShapesLocations[`${s}Shape`],c=t.inTexShapesLocations[`${s}TexShape`];if(u){const{uniformShape:r}=ae(t.program.packedInputs,n.shape,n.texData.texShape);switch(r.length){case 1:e.gl.uniform1iv(u,new Int32Array(r));break;case 2:e.gl.uniform2iv(u,new Int32Array(r));break;case 3:e.gl.uniform3iv(u,new Int32Array(r));break;case 4:e.gl.uniform4iv(u,new Int32Array(r))}}if(c&&e.gl.uniform2i(c,n.texData.texShape[0],n.texData.texShape[1]),null!=i)if(n.isUniform)if(r.util.sizeFromShape(n.shape)<2)e.gl.uniform1f(i,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(i,t)}else null!=n.texData.slice&&null!=o&&e.gl.uniform1i(o,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture.texture,i,a)}));const u=t.outShapeLocation;if(u)switch(a.shape.length){case 1:e.gl.uniform1iv(u,new Int32Array(a.shape));break;case 2:e.gl.uniform2iv(u,new Int32Array(a.shape));break;case 3:e.gl.uniform3iv(u,new Int32Array(a.shape));break;case 4:e.gl.uniform4iv(u,new Int32Array(a.shape))}if(t.outShapeStridesLocation){const n=r.util.computeStrides(a.shape);switch(a.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,a.texData.texShape[0],a.texData.texShape[1]),t.program.customUniforms&&s&&t.program.customUniforms.forEach(((n,r)=>{const a=t.customUniformLocations[r],i=s[r];if("float"===n.type)e.gl.uniform1fv(a,i);else if("vec2"===n.type)e.gl.uniform2fv(a,i);else if("vec3"===n.type)e.gl.uniform3fv(a,i);else if("vec4"===n.type)e.gl.uniform4fv(a,i);else if("int"===n.type)e.gl.uniform1iv(a,i);else if("ivec2"===n.type)e.gl.uniform2iv(a,i);else if("ivec3"===n.type)e.gl.uniform3iv(a,i);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(a,i)}})),e.executeProgram()}(this.gpgpu,m,p,h,a),l.forEach((e=>this.disposeIntermediateTensorInfo(e))),b&&(g=this.endTimer(g),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(g)}));const x=Object(r.env)().get("WEBGL_FLUSH_THRESHOLD");if(x>0){const e=r.util.now();e-this.lastGlFlushTime>x&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!Object(r.env)().getBool("WEBGL_LAZILY_UNPACK")&&c.isPacked&&!1===s){const e=this.unpackTensor(u);return this.disposeIntermediateTensorInfo(u),e}return u}compileAndRun(e,t,n,r,a=!1){n=n||t[0].dtype;return this.runWebGLProgram(e,t,n,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!Object(r.env)().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Object(r.tidy)((()=>{if(!Object(r.env)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=Object(r.env)().getBool("DEBUG");Object(r.env)().set("DEBUG",!1);const t=this.abs(Object(r.scalar)(1e-8)).dataSync()[0];if(Object(r.env)().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:a,values:s,texture:i,usage:o,isPacked:c}=t;if(null!=i)return;const l=null!=this.activeTimers;let d;l&&(d=r.util.now());let h=t.texShape;if(null==h&&(h=function(e,t=!1){let n=Object(r.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?r.util.nearestLargerEven(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=r.util.squeezeShape(e);e=t.newShape}let a=r.util.sizeFromShape(e);if(e.length<=1&&a<=n)return[1,a];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=O(e);let n=2,s=2;return e.length&&([n,s]=$(e)),a=t*(n/2)*(s/2),r.util.sizeToSquarishShape(a).map((e=>2*e))}return r.util.sizeToSquarishShape(a)}(n,c),t.texShape=h),null!=s){const e=T(n);let i,o=h[1],f=h[0];const m=s instanceof Uint8Array||s instanceof Uint8ClampedArray;!c&&m||([o,f]=p(h[0],h[1])),i=c?new be(e,m):new me(e,m);const b=m?[f,o]:h,g=this.makeTensorInfo(b,a),x=this.texData.get(g.dataId);x.usage=m?u.PIXELS:u.UPLOAD,x.texShape=b,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(g.dataId),o,f,s);const y=[[f,o]],k=!0,v=this.runWebGLProgram(i,[g],a,y,k),w=this.texData.get(v.dataId);t.texShape=w.texShape,t.isPacked=w.isPacked,t.usage=w.usage,Object(r.env)().get("ENGINE_COMPILE_ONLY")?this.disposeData(v.dataId):(t.texture=w.texture,t.values=null,this.texData.delete(v.dataId)),this.disposeIntermediateTensorInfo(g),l&&(this.uploadWaitMs+=r.util.now()-d)}else{const e=this.acquireTexture(h,o,a,c);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*r.util.bytesPerElement(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(e){throw e}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await Object(r.nextFrame)(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw x(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const[,e]of Object.entries(this.binaryCache)){const{uniformLocations:t,customUniformLocations:n,infLoc:r,nanLoc:a,inShapesLocations:s,inTexShapesLocations:i,outShapeLocation:o,outShapeStridesLocation:u,outTexShapeLocation:c}=ue(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=t,e.customUniformLocations=n,e.infLoc=r,e.nanLoc=a,e.inShapesLocations=s,e.inTexShapesLocations=i,e.outShapeLocation=o,e.outShapeStridesLocation=u,e.outTexShapeLocation=c}}}Ft.nextDataId=0,
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
r.device_util.isBrowser()&&Object(r.registerBackend)("webgl",(()=>new Ft),2);class Mt{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=r.backend_util.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=le(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Dt{constructor(e,t,n,a=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r.backend_util.assertAndGetBroadcastShape(t,n);const s=this.outputShape.length;this.enableShapeUniforms=le(s);let i="";if(a)if(0===s||1===r.util.sizeFromShape(this.outputShape))i="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{if(i=`\n          ${re(s)} coords = getOutputCoords();\n        `,1===s)this.enableShapeUniforms?i+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":i+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=yt("coords",s);this.enableShapeUniforms?i+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= outShape[${s} - 2];\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= outShape[${s} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:i+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${i}\n\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pt(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const Bt={kernelName:r.Identity,backendName:"webgl",kernelFunc:Pt};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jt(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(s.dataId),o=Pt({inputs:{x:r},backend:n}),u=Pt({inputs:{x:a},backend:n});return i.complexTensorInfos={real:o,imag:u},s}const Lt={kernelName:r.Complex,backendName:"webgl",kernelFunc:jt},zt="return (a < 0.) ? b * a : a;",Wt="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ut={kernelName:r.LeakyRelu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{alpha:i}=a,o=n.makeTensorInfo([],"float32",r.util.createScalarValue(i,"float32")),u=Object(r.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Dt(Wt,s.shape,o.shape):new Mt(zt,s.shape,o.shape),c=n.runWebGLProgram(u,[s,o],"float32");return n.disposeIntermediateTensorInfo(o),c}},Gt="return (a < 0.) ? b * a : a;",Vt="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ht={kernelName:r.Prelu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a,alpha:s}=t,i=Object(r.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Dt(Vt,a.shape,s.shape):new Mt(Gt,a.shape,s.shape);return n.runWebGLProgram(i,[a,s],"float32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qt({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:a}){return({inputs:s,backend:i})=>{const{x:o}=s,u=i,c=a||o.dtype;if(u.shouldExecuteOnCPU([o])&&null!=n){const e=u.texData.get(o.dataId),t=n(e.values,c);return u.makeTensorInfo(o.shape,c,t)}let l;return l=Object(r.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new Tt(o.shape,t):new Ct(o.shape,e),u.runWebGLProgram(l,[o],c)}}function Kt({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:a=!1,cpuKernelImpl:s,dtype:i}){return({inputs:o,backend:u})=>{const{a:c,b:l}=o,d=u;if(a&&"complex64"===c.dtype){const t=d.texData.get(c.dataId),n=d.texData.get(l.dataId),[a,s]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,a]=t,s={dataId:n.dataId,dtype:n.dtype,shape:c.shape},i={dataId:a.dataId,dtype:a.dtype,shape:l.shape},o=new Mt(e,c.shape,l.shape);return d.runWebGLProgram(o,[s,i],Object(r.upcastType)(n.dtype,a.dtype))})),i=jt({inputs:{real:a,imag:s},backend:d});return d.disposeIntermediateTensorInfo(a),d.disposeIntermediateTensorInfo(s),i}const p=i||Object(r.upcastType)(c.dtype,l.dtype);if(("string"===c.dtype||"string"===l.dtype||d.shouldExecuteOnCPU([c,l]))&&null!=s){const e=d.texData.get(c.dataId).values,t=d.texData.get(l.dataId).values,n="string"===c.dtype?r.backend_util.fromUint8ToStringArray(e):e,a="string"===c.dtype?r.backend_util.fromUint8ToStringArray(t):t,[i,o]=s(c.shape,l.shape,n,a,p),u=d.makeTensorInfo(o,p);return d.texData.get(u.dataId).values=i,u}let h;return h=Object(r.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new Dt(t,c.shape,l.shape,n):new Mt(e,c.shape,l.shape),d.runWebGLProgram(h,[c,l],p)}}function Xt(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?Vt:Gt;if("leakyrelu"===e)return t?Wt:zt;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yt{constructor(e,t,n,r=!1,a=!1,s=!1,i=null,o=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=le(this.outputShape.length);const c=r?e[1]:e[2],l=Math.ceil(c/2),d=r?"i * 2, rc.y":"rc.y, i * 2",p=a?"rc.z, i * 2":"i * 2, rc.z",h=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",b="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,b="result = activation(result);");const g=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let x="rc.x",y="rc.x";e[0]<t[0]?x=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(y=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${l}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${l}; i++) {\n          int batchA = ${x};\n          int batchB = ${y};\n          vec4 a = getMatrixA(batchA, ${d});\n          vec4 b = getMatrixB(batchB, ${p});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${h[0]} * ${f[0]});\n          result += (${h[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${g}\n\n        ${b}\n\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qt="return areal * breal - aimag * bimag;",Zt="return areal * bimag + aimag * breal;";class Jt{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=r.backend_util.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const en="return a * b;";function tn(e){const{inputs:t,backend:n}=e,{a:a,b:s}=t,i=r.backend_util.upcastType(a.dtype,s.dtype);if("complex64"===a.dtype){const e=n.texData.get(a.dataId),t=n.texData.get(s.dataId),r=new Jt(Qt,a.shape,s.shape),i=new Jt(Zt,a.shape,s.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:a.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],u=n.runWebGLProgram(r,o,"float32"),c=n.runWebGLProgram(i,o,"float32"),l=jt({inputs:{real:u,imag:c},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),l}if(n.shouldExecuteOnCPU([a,s])){const e=n.texData.get(a.dataId),t=n.texData.get(s.dataId),[r,o]=Xe(a.shape,s.shape,e.values,t.values,i),u=n.makeTensorInfo(o,i);return n.texData.get(u.dataId).values=r,u}let o;return o=Object(r.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Dt(en,a.shape,s.shape):new Mt(en,a.shape,s.shape),n.runWebGLProgram(o,[a,s],i)}const nn={kernelName:r.Multiply,backendName:"webgl",kernelFunc:tn};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function rn(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{shape:i}=a,o=n,u=r.util.sizeFromShape(s.shape),c=r.util.inferFromImplicitShape(i,u),l=r.util.sizeFromShape(c);r.util.assert(u===l,(()=>`The new shape (${c}) has ${l} elements and the old shape (${s.shape}) has ${u} elements. The new shape and old shape must have the same number of elements.`));const d=o.texData.get(s.dataId);return!d.isPacked||E(s.shape,c)||null!==d.texture&&E(d.shape,c)?(o.incRef(s.dataId),{dataId:s.dataId,shape:c,dtype:s.dtype}):function(e,t,n){const r=[O(e.shape),...$(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},s=[O(t),...$(t)],i=new vt(s,r),o=[r],u=n.runWebGLProgram(i,[a],e.dtype,o,!0);return{dataId:u.dataId,shape:t,dtype:u.dtype}}(s,c,o)}const an={kernelName:r.Reshape,backendName:"webgl",kernelFunc:rn};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sn{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:s,outSize:i}=e;this.outputShape=[a,i];const o=4*Math.floor(n/4),u=n%4;let c="sumValue += dot(values, ones);";if(null!=t){const e=1/t;c=`sumValue += dot(values * ${r.util.isInt(e)?e.toPrecision(2):e}, ones);`}let l="";s%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${c}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${c}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${c}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${c}\n        }\n        setOutput(sumValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class on{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const c=4*Math.floor(n/4),l=n%4;let d=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,p="vec4";"all"===t?(i="1.0",d="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===t&&(i="0.0",d="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let h="";a%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${h}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${c}; i += 4) {\n          int inIdx = inOffset + i;\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${d}\n        }\n\n        int inIdx = inOffset + ${c};\n        if (${1===l}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${2===l}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${3===l}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${d}\n        }\n        setOutput(${u});\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function un(e,t,n,a){const s=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],a=r.backend_util.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:a,outSize:Math.ceil(n/a)})}return t}(e.shape);let i=e;for(let r=0;r<s.length;r++){const{inSize:o,windowSize:u,outSize:c}=s[r];let l,d;l="mean"===n?0===r?new sn({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:c},o):new sn({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:c}):new on({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:c},n),d=i,i=a.runWebGLProgram(l,[i],t),d.dataId!==e.dataId&&a.disposeIntermediateTensorInfo(d)}return i}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cn{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=re(this.rank),a=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}}class ln{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=re(this.rank),a=xt("rc",this.rank),s=new Array(this.rank);for(let e=0;e<t.length;e++)s[t[e]]=a[e];const i=`vec2(${s.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${o}) {\n        result[1] = ${u};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${o}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dn(e,t,n){const a=Object(r.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ln(e.shape,t):new cn(e.shape,t);return n.runWebGLProgram(a,[e],e.dtype)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function pn(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:i,keepDims:o}=a;return function(e,t,n,a){const s=t,i=e.shape.length,o=r.util.parseAxisParam(s,e.shape);let u=o;const c=r.backend_util.getAxesPermutation(u,i),l=null!=c;let d=e;l&&(d=dn(e,c,a),u=r.backend_util.getInnerMostAxes(u.length,i)),r.backend_util.assertAxesAreInnerMostDims("sum",u,i);const[p,h]=r.backend_util.computeOutAndReduceShapes(d.shape,u);let f=p;n&&(f=r.backend_util.expandShapeToKeepDim(p,o));const m=r.util.sizeFromShape(h),b=rn({inputs:{x:d},attrs:{shape:[r.util.sizeFromShape(e.shape)/m,m]},backend:a}),g=un(b,Object(r.sumOutType)(e.dtype),"sum",a),x=rn({inputs:{x:g},attrs:{shape:f},backend:a});return a.disposeIntermediateTensorInfo(b),a.disposeIntermediateTensorInfo(g),l&&a.disposeIntermediateTensorInfo(d),x}(s,i,o,n)}const hn={kernelName:r.Sum,backendName:"webgl",kernelFunc:pn};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fn(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{perm:s}=r,i=n,o=a.shape.length,u=new Array(o);for(let e=0;e<u.length;e++)u[e]=a.shape[s[e]];let c;if(i.shouldExecuteOnCPU([a])){const e=i.texData.get(a.dataId).values,t=bt(e,a.shape,a.dtype,s,u);c=i.makeTensorInfo(u,a.dtype);i.texData.get(c.dataId).values=t}else c=dn(a,s,i);return c}const mn={kernelName:r.Transpose,backendName:"webgl",kernelFunc:fn};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bn({a:e,b:t,transposeA:n,transposeB:a,backend:s,bias:i=null,preluActivationWeights:o=null,leakyreluAlpha:u=0,activation:c=null}){const l=e.shape.length,d=t.shape.length,p=n?e.shape[l-2]:e.shape[l-1],h=a?t.shape[d-1]:t.shape[d-2],f=n?e.shape[l-1]:e.shape[l-2],m=a?t.shape[d-2]:t.shape[d-1],b=e.shape.slice(0,-2),g=t.shape.slice(0,-2),x=r.util.sizeFromShape(b),y=r.util.sizeFromShape(g),k=r.broadcast_util.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([f,m]);r.util.assert(p===h,(()=>`Error in matMul: inner shapes (${p}) and (${h}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${a} must match.`));const v=n?[x,p,f]:[x,f,p],w=a?[y,m,h]:[y,h,m],I=rn({inputs:{x:e},backend:s,attrs:{shape:v}}),S=rn({inputs:{x:t},backend:s,attrs:{shape:w}}),_=[I,S],C=Math.max(x,y),O=n?I.shape[1]:I.shape[2],$=null!=i,T=null!=o,A="leakyrelu"===c,E=null!=c?Xt(c,!0):null;let N;if((1===f||1===m)&&O>1e3&&!1===($||T||A||null!=E)){let e=I,t=S;n&&(e=fn({inputs:{x:I},backend:s,attrs:{perm:[0,2,1]}}),_.push(e)),a&&(t=fn({inputs:{x:S},backend:s,attrs:{perm:[0,2,1]}}),_.push(t));const r=1===m;let i=e;1!==m&&(i=rn({inputs:{x:e},backend:s,attrs:{shape:[C,O,1]}}),_.push(i));const o=1===m?2:1;let u=t;r&&(u=rn({inputs:{x:t},backend:s,attrs:{shape:[C,1,O]}}),_.push(u));const c=tn({inputs:{a:i,b:u},backend:s});N=pn({inputs:{x:c},backend:s,attrs:{axis:o,keepDims:!0}}),_.push(c)}else{const c=Object(r.upcastType)(e.dtype,t.dtype),l=new Yt(v,w,[C,f,m],n,a,$,E,T,A),d=[I,S];if(null!=i&&d.push(i),T&&d.push(o),A){const e=s.makeTensorInfo([],"float32",r.util.createScalarValue(u,"float32"));d.push(e),_.push(e)}N=s.runWebGLProgram(l,d,c)}const R=rn({inputs:{x:N},backend:s,attrs:{shape:k}});_.push(N);for(const e of _)s.disposeIntermediateTensorInfo(e);return R}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gn={kernelName:r._FusedMatMul,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:d}=r;return bn({a:a,b:s,transposeA:u,transposeB:c,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:d,activation:l})}},xn="return abs(x);";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yn={kernelName:r.Abs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])&&"complex64"!==a.dtype){const e=n.texData.get(a.dataId),t=rt(e.values);return n.makeTensorInfo(a.shape,a.dtype,t)}let s;return s=Object(r.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Tt(a.shape,xn):new Ct(a.shape,xn),n.runWebGLProgram(s,[a],a.dtype)}},kn=qt({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),vn={kernelName:r.Acos,backendName:"webgl",kernelFunc:kn},wn=qt({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),In={kernelName:r.Acosh,backendName:"webgl",kernelFunc:wn},Sn="return a + b;",_n=Kt({opSnippet:Sn,packedOpSnippet:Sn,supportsComplex:!0,cpuKernelImpl:Te}),Cn={kernelName:r.Add,backendName:"webgl",kernelFunc:_n};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class On{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $n{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tn={kernelName:r.AddN,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a}=t,s=n;if(1===s.length)return Pt({inputs:{x:s[0]},backend:a});if(s.length>Object(r.env)().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(s.length/2),n=e({inputs:s.slice(0,t),backend:a}),r=e({inputs:s.slice(t),backend:a});return e({inputs:[n,r],backend:a})}const i=s.map((e=>e.dtype)).reduce(((e,t)=>Object(r.upcastType)(e,t))),o=s.map((e=>e.shape)),u=Object(r.env)().getBool("WEBGL_PACK")?new $n(s[0].shape,o):new On(s[0].shape,o);return a.runWebGLProgram(u,s,i)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const An={kernelName:r.All,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:i,keepDims:o}=a,u=s.shape.length,c=r.util.parseAxisParam(i,s.shape);let l=c;const d=r.backend_util.getAxesPermutation(l,u);let p=s;null!=d&&(p=fn({inputs:{x:s},backend:n,attrs:{perm:d}}),l=r.backend_util.getInnerMostAxes(l.length,u)),r.backend_util.assertAxesAreInnerMostDims("all",l,u);const[h,f]=r.backend_util.computeOutAndReduceShapes(p.shape,l),m=rn({inputs:{x:p},backend:n,attrs:{shape:[-1,r.util.sizeFromShape(f)]}}),b=un(m,m.dtype,"all",n);let g;if(o){g=rn({inputs:{x:b},backend:n,attrs:{shape:r.backend_util.expandShapeToKeepDim(h,c)}})}else g=rn({inputs:{x:b},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),null!=d&&n.disposeIntermediateTensorInfo(p),g}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const En={kernelName:r.Any,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:i,keepDims:o}=a,u=s.shape.length,c=r.util.parseAxisParam(i,s.shape);let l=c;const d=r.backend_util.getAxesPermutation(l,u);let p=s;null!=d&&(p=fn({inputs:{x:s},backend:n,attrs:{perm:d}}),l=r.backend_util.getInnerMostAxes(l.length,u)),r.backend_util.assertAxesAreInnerMostDims("any",l,u);const[h,f]=r.backend_util.computeOutAndReduceShapes(p.shape,l),m=rn({inputs:{x:p},backend:n,attrs:{shape:[-1,r.util.sizeFromShape(f)]}}),b=un(m,m.dtype,"any",n);let g;if(o){g=rn({inputs:{x:b},backend:n,attrs:{shape:r.backend_util.expandShapeToKeepDim(h,c)}})}else g=rn({inputs:{x:b},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),null!=d&&n.disposeIntermediateTensorInfo(p),g}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Nn{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:a,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rn{constructor(e,t,n,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,r.util.assert(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const s=e[e.length-1],i=Math.ceil(s/t);this.outputShape=e.slice(0,-1),i>1&&this.outputShape.push(i),a||this.variableNames.push("bestIndicesA");const o=this.outputShape,u=o.length,c=re(u),l=yt("coords",u);let d,p;if(1===i){p=u+1;const e=re(p);d=`\n        ${e} sourceLocR = ${e}(${l.join()}, 0);\n        ++${l[u-1]};\n        ${e} sourceLocG = ${e}(${l.join()}, 0);\n        ++${l[u-2]};\n        ${e} sourceLocA = ${e}(${l.join()}, 0);\n        --${l[u-1]};\n        ${e} sourceLocB = ${e}(${l.join()}, 0);\n        --${l[u-2]};`}else p=u,d=`\n        ${c} sourceLocR = coords;\n        ++${l[u-1]};\n        ${c} sourceLocG = coords;\n        ++${l[u-2]};\n        ${c} sourceLocA = coords;\n        --${l[u-1]};\n        ${c} sourceLocB = coords;\n        --${l[u-2]};`;const h=["x","y","z","w","u","v"].slice(0,p),f="."+h[p-1],m=h.map((e=>"int "+e)),b=yt("sourceLocR",p-1).concat("inIdx.r"),g=yt("sourceLocG",p-1).concat("inIdx.g"),x=yt("sourceLocB",p-1).concat("inIdx.b"),y=yt("sourceLocA",p-1).concat("inIdx.a"),k="max"===n?"greaterThan":"lessThan",v=a?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${x.join()}),\n                             getBestIndicesAChannel(${y.join()})));`,w=`vec4(\n            getAChannel(${b.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${x.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${y.join()}) : 0.)`,I=a?"":`\n      float getBestIndicesAChannel(${m.join()}) {\n        return getChannel(getBestIndicesA(${h.join()}),\n                                          vec2(${h.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${m.join()}) {\n        return getChannel(getA(${h.join()}),\n                               vec2(${h.slice(-2).join()}));\n      }\n      ${I}\n      void main() {\n        ${c} coords = getOutputCoords();\n        bool hasNextCol = ${l[u-1]} < ${o[u-1]-1};\n        bool hasNextRow = ${l[u-2]} < ${o[u-2]-1};\n        ${d}\n        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},\n          sourceLocB${f}, sourceLocA${f}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${k}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fn(e,t,n,a=null){let s=t.shape[0],i=t.shape[1];null!=a&&(s=a.shape[0],i=a.shape[1]);const o=r.backend_util.computeOptimalWindowSize(i),u={windowSize:o,inSize:i,batchSize:s,outSize:Math.ceil(i/o)},c=new Nn(u,n,null==a),l=[t];null!=a&&l.push(a);const d=e.runWebGLProgram(c,l,"int32");if(1===d.shape[1])return d;const p=Fn(e,t,n,d);return e.disposeIntermediateTensorInfo(d),p}function Mn(e,t,n,a=null){const s=null!=a?a.shape:t.shape,i=s[s.length-1],o=r.backend_util.computeOptimalWindowSize(i),u=new Rn(s,o,n,null==a),c=null==a?[t]:[t,a],l=e.runWebGLProgram(u,c,"int32");if(l.shape.length===t.shape.length){const r=Mn(e,t,n,l);return e.disposeIntermediateTensorInfo(l),r}return l}function Dn(e,t,n,a){const s=[n];if(r.backend_util.assertAxesAreInnerMostDims("arg"+a.charAt(0).toUpperCase()+a.slice(1),s,t.shape.length),!Object(r.env)().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],i=e.texData.get(t.dataId);let o=t;null!==i&&i.isPacked&&(o=e.unpackTensor(t),n.push(o));const[u,c]=r.backend_util.computeOutAndReduceShapes(o.shape,s),l=r.util.sizeFromShape(c),d=rn({inputs:{x:o},backend:e,attrs:{shape:[-1,l]}});n.push(d);const p=Fn(e,d,a);n.push(p);const h=rn({inputs:{x:p},backend:e,attrs:{shape:u}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),h}return Mn(e,t,a)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pn={kernelName:r.ArgMax,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:i}=a;let o=r.util.parseAxisParam(i,s.shape);const u=r.backend_util.getAxesPermutation(o,s.shape.length);let c=s;const l=[];null!=u&&(c=fn({inputs:{x:s},backend:n,attrs:{perm:u}}),l.push(c),o=r.backend_util.getInnerMostAxes(o.length,c.shape.length)),r.backend_util.assertAxesAreInnerMostDims("argMax",[o[0]],c.shape.length);const d=Dn(n,c,o[0],"max");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bn={kernelName:r.ArgMin,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:i}=a;let o=r.util.parseAxisParam(i,s.shape);const u=r.backend_util.getAxesPermutation(o,s.shape.length);let c=s;const l=[];null!=u&&(c=fn({inputs:{x:s},backend:n,attrs:{perm:u}}),l.push(c),o=r.backend_util.getInnerMostAxes(o.length,c.shape.length)),r.backend_util.assertAxesAreInnerMostDims("argMin",[o[0]],c.shape.length);const d=Dn(n,c,o[0],"min");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},jn=qt({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),Ln={kernelName:r.Asin,backendName:"webgl",kernelFunc:jn},zn=qt({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),Wn={kernelName:r.Asinh,backendName:"webgl",kernelFunc:zn},Un=qt({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),Gn={kernelName:r.Atan,backendName:"webgl",kernelFunc:Un},Vn=Kt({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Hn={kernelName:r.Atan2,backendName:"webgl",kernelFunc:Vn},qn=qt({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),Kn={kernelName:r.Atanh,backendName:"webgl",kernelFunc:qn};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Xn{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,l=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=e.padInfo.top,h=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,b=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let g="0.0";if(f||(g="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${p}, ${h});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${l};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d};\n                wC += ${c}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?m:b:`wR * ${d} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(x="avgValue / count");const y=4*Math.floor(s/4),k=s%4,v=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${p}, ${h});\n      const float initializationValue = ${g};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${g});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${l};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${y}; wC += 4) {\n            int xC = xCCorner + wC * ${c};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              getValue(batch, xR, xC + 2 * ${c}, d),\n              getValue(batch, xR, xC + 3 * ${c}, d)\n            );\n\n            ${v}\n          }\n\n          int xC = xCCorner + ${y};\n          if (${1===k}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${2===k}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${3===k}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              getValue(batch, xR, xC + 2 * ${c}, d),\n              initializationValue\n            );\n\n            ${v}\n          }\n        }\n        setOutput(${x});\n      }\n    `}}class Yn{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,u=e.strideWidth,c=e.dilationDepth,l=e.dilationHeight,d=e.dilationWidth,p=e.effectiveFilterDepth,h=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,b=e.padInfo.top,g=e.padInfo.left;this.outputShape=e.outShape;const x="avg"===t;let y="0.0";if(x||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${u});\n        const ivec3 pads = ivec3(${m}, ${b}, ${g});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${p};\n              wD += ${c}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${h};\n                wR += ${l}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${d}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${h} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let k=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(k="avgValue / count");const v=4*Math.floor(s/4),w=s%4,I=`\n      if (${x}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${u});\n      const ivec3 pads = ivec3(${m}, ${b}, ${g});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${c}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h};\n            wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC += 4) {\n              int xC = xCCorner + wC * ${d};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${d}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${v};\n            if (${1===w}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===w}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===w}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${k});\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qn={kernelName:r.AvgPool,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t;B(s,"avgPool");const{filterSize:i,strides:o,pad:u,dimRoundingMode:c}=a;r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(o,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const l=r.backend_util.computePool2DInfo(s.shape,i,o,1,u,c);if(1===l.filterWidth&&1===l.filterHeight&&r.util.arraysEqual(l.inShape,l.outShape))return Pt({inputs:{x:s},backend:n});const d=new Xn(l,"avg",!1);return n.runWebGLProgram(d,[s],"float32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zn={kernelName:r.AvgPool3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:c,dataFormat:l}=a,d=r.backend_util.computePool3DInfo(s.shape,i,o,[1,1,1],u,c,l),p=new Yn(d,"avg",!1);return n.runWebGLProgram(p,[s],"float32")}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jn{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=o-1-e.padInfo.top,l=u-1-e.padInfo.left,d=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${c}, ${l});\n      const float avgMultiplier = float(${d});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class er{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,l=e.effectiveFilterDepth,d=e.effectiveFilterHeight,p=e.effectiveFilterWidth,h=l-1-e.padInfo.front,f=d-1-e.padInfo.top,m=p-1-e.padInfo.left,b=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${h}, ${f}, ${m});\n      const float avgMultiplier = float(${b});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${l};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${a}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${d};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${p};\n                wC += ${c}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tr={kernelName:r.AvgPool3DGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,input:i}=t,o=i,{filterSize:u,strides:c,pad:l,dimRoundingMode:d}=a,p=r.backend_util.computePool3DInfo(o.shape,u,c,[1,1,1],l,d),h=new er(p);return n.runWebGLProgram(h,[s],o.dtype)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nr={kernelName:r.AvgPoolGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,input:i}=t,o=i;B([s,i],"avgPoolGrad");const{filterSize:u,strides:c,pad:l}=a,d=r.backend_util.computePool2DInfo(o.shape,u,c,1,l),p=new Jn(d);return n.runWebGLProgram(p,[s],o.dtype)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rr={kernelName:r.BatchMatMul,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:s}=t,{transposeA:i,transposeB:o}=r;return bn({a:a,b:s,transposeA:i,transposeB:o,backend:n})}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ar{constructor(e,t,n,a,s,i){this.outputShape=[],this.variableNames=["x","mean","variance"],r.backend_util.assertAndGetBroadcastShape(e,t),r.backend_util.assertAndGetBroadcastShape(e,n);let o="0.0";null!=a&&(r.backend_util.assertAndGetBroadcastShape(e,a),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let u="1.0";null!=s&&(r.backend_util.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${o};\n        float scale = ${u};\n        float inv = scale * inversesqrt(variance + float(${i}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sr{constructor(e,t,n,a,s,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],r.backend_util.assertAndGetBroadcastShape(e,t),r.backend_util.assertAndGetBroadcastShape(e,n);let o="vec4(0.0)";null!=a&&(r.backend_util.assertAndGetBroadcastShape(e,a),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let u="vec4(1.0)";null!=s&&(r.backend_util.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${o};\n        vec4 scale = ${u};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${i}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ir={kernelName:r.FusedBatchNorm,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,mean:s,variance:i,offset:o,scale:u}=e;r.util.assert(s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),r.util.assert(null==o||s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),r.util.assert(null==u||s.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:c}=n;null==c&&(c=.001);const l=[a,s,i];let d=null;null!=o&&(d=o.shape,l.push(o));let p=null;null!=u&&(p=u.shape,l.push(u));const h=Object(r.env)().getBool("WEBGL_PACK_NORMALIZATION")?new sr(a.shape,s.shape,i.shape,d,p,c):new ar(a.shape,s.shape,i.shape,d,p,c);return t.runWebGLProgram(h,l,l[0].dtype)}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class or{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=re(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return ur.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(this.rank);let r;r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${ur[t]} = start[${t}] + coords.${ur[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const ur=["x","y","z","w","u","v"];class cr{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=re(this.rank),n=yt("coords",this.rank),r=yt("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,i=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lr(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{begin:i,size:o}=a,[u,c]=r.slice_util.parseSliceParams(s,i,o);if(r.slice_util.assertParamsValid(s,u,c),0===r.util.sizeFromShape(c))return n.makeTensorInfo(c,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||"string"===s.dtype){const e=n.texData.get(s.dataId),t=at(e.values,u,c,s.shape,s.dtype);return n.makeTensorInfo(c,s.dtype,t)}const{isPacked:l}=n.texData.get(s.dataId),d=r.slice_util.isSliceContinous(s.shape,u,c);if(l||!d){const e=Object(r.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new cr(c):new or(c),t=[u];return n.runWebGLProgram(e,[s],s.dtype,t)}return n.uploadToGPU(s.dataId),function(e,t,n,a){const s=a.texData.get(e.dataId),i=a.makeTensorInfo(n,e.dtype),o=a.texData.get(i.dataId);Object.assign(o,s),o.refCount=1,o.shape=n,o.dtype=e.dtype;let u=r.slice_util.computeFlatOffset(t,r.util.computeStrides(e.shape));s.slice&&(u+=s.slice.flatOffset),o.slice={flatOffset:u,origDataId:s.slice&&s.slice.origDataId||e.dataId};const c=a.dataRefCount.get(o.slice.origDataId)||1;return a.dataRefCount.set(o.slice.origDataId,c+1),i}(s,u,c,n)}const dr={kernelName:r.Slice,backendName:"webgl",kernelFunc:lr},pr={kernelName:r.BatchToSpaceND,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{blockShape:i,crops:o}=a;r.util.assert(s.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const u=i.reduce(((e,t)=>e*t)),c=r.backend_util.getReshaped(s.shape,i,u),l=r.backend_util.getPermuted(c.length,i.length),d=r.backend_util.getReshapedPermuted(s.shape,i,u),p=r.backend_util.getSliceBeginCoords(o,i.length),h=r.backend_util.getSliceSize(d,o,i.length),f=[],m=rn({inputs:{x:s},backend:n,attrs:{shape:c}}),b=fn({inputs:{x:m},backend:n,attrs:{perm:l}}),g=rn({inputs:{x:b},backend:n,attrs:{shape:d}}),x=lr({inputs:{x:g},backend:n,attrs:{begin:p,size:h}});return f.push(m),f.push(b),f.push(g),f.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hr={kernelName:r.Bincount,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=n.readSync(a.dataId),u=n.readSync(s.dataId),c=Ae(o,u,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,c)}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fr={kernelName:r.BroadcastArgs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:a,s1:s}=t,i=n.readSync(a.dataId),o=n.readSync(s.dataId),u=r.backend_util.assertAndGetBroadcastShape(Array.from(i),Array.from(o));return n.makeTensorInfo([u.length],"int32",Int32Array.from(u))}},mr=Kt({opSnippet:"return float(a != b);",cpuKernelImpl:Qe,dtype:"bool"}),br={kernelName:r.NotEqual,backendName:"webgl",kernelFunc:mr};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function gr(e){const{inputs:t,backend:n}=e,{input:r}=t;return Pt({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const xr={kernelName:r.Real,backendName:"webgl",kernelFunc:gr};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yr={kernelName:r.Cast,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function e(t){const{inputs:n,backend:a,attrs:s}=t,{x:i}=n,{dtype:o}=s;if("complex64"===o){if("complex64"===i.dtype)return Pt({inputs:{x:i},backend:a});const t=r.zeros(i.shape),n=e({inputs:{x:i},backend:a,attrs:{dtype:"float32"}}),s=jt({inputs:{real:n,imag:t},backend:a});return t.dispose(),a.disposeIntermediateTensorInfo(n),s}if("complex64"===i.dtype){const t=gr({inputs:{input:i},backend:a}),n=e({inputs:{x:t},backend:a,attrs:{dtype:o}});return a.disposeIntermediateTensorInfo(t),n}if(!r.util.hasEncodingLoss(i.dtype,o)){const e=Pt({inputs:{x:i},backend:a});return{dataId:e.dataId,shape:e.shape,dtype:o}}if("int32"===o)return function(e,t){const n=new Ct(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(i,a);if("bool"===o){const e=a.makeTensorInfo([],"bool",r.util.getTypedArrayFromDType("bool",1)),t=mr({inputs:{a:i,b:e},backend:a});return a.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${i.dtype} to ${o}`)}},kr="return ceil(x);",vr=qt({opSnippet:kr,packedOpSnippet:kr,cpuKernelImpl:Ne}),wr={kernelName:r.Ceil,backendName:"webgl",kernelFunc:vr};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Ir{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Sr{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _r={kernelName:r.ClipByValue,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{clipValueMin:i,clipValueMax:o}=a;let u;u=Object(r.env)().getBool("WEBGL_PACK_CLIP")?new Sr(s.shape):new Ir(s.shape);const c=[[i],[o]];return n.runWebGLProgram(u,[s],s.dtype,c)}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cr{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Or(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const $r={kernelName:r.ComplexAbs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),s=new Cr(r.shape),i=[Or(r,a.complexTensorInfos.real),Or(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,i,i[0].dtype)}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Tr{constructor(e){this.outputShape=[],this.outputShape=r.backend_util.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}const a=t.length,s=t[t.length-1];n.push(`else setOutput(getT${a}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ar{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=r.backend_util.computeOutShape(e,t);const n=this.outputShape,a=n.length,s=re(a),i=yt("coords",a),o=["x","y","z","w","u","v"].slice(0,a);this.variableNames=e.map(((e,t)=>`T${t}`));const u=new Array(e.length-1);u[0]=e[0][t];for(let n=1;n<u.length;n++)u[n]=u[n-1]+e[n][t];const c=o[t],l=o.slice(-2),d=o.join();let p=`if (${c} < ${u[0]}) {\n        return getChannel(\n            getT0(${d}), vec2(${l.join()}));\n        }`;for(let e=1;e<u.length;e++){const t=u[e-1];p+=`\n        if (${c} < ${u[e]}  && ${c} >= ${u[e-1]}) {\n          return getChannel(\n            getT${e}(${Er(o,c,t)}),\n            vec2(${Er(l,c,t)}));\n        }`}const h=u.length,f=u[u.length-1];p+=`\n        return getChannel(\n          getT${h}(${Er(o,c,f)}),\n          vec2(${Er(l,c,f)}));`,this.userCode=`\n      float getValue(${o.map((e=>"int "+e))}) {\n        ${p}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${i}), 0., 0., 0.);\n\n        ${i[a-1]} = ${i[a-1]} + 1;\n        if (${i[a-1]} < ${n[a-1]}) {\n          result.g = getValue(${i});\n        }\n\n        ${i[a-2]} = ${i[a-2]} + 1;\n        if (${i[a-2]} < ${n[a-2]}) {\n          result.a = getValue(${i});\n        }\n\n        ${i[a-1]} = ${i[a-1]} - 1;\n        if (${i[a-2]} < ${n[a-2]} &&\n            ${i[a-1]} < ${n[a-1]}) {\n          result.b = getValue(${i});\n        }\n        setOutput(result);\n      }\n    `}}function Er(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nr(e){const{inputs:t,backend:n}=e,{input:r}=t;return Pt({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const Rr={kernelName:r.Imag,backendName:"webgl",kernelFunc:Nr};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fr(e,t,n){const a=e[0].dtype;if("complex64"===a){const r=e.map((e=>gr({inputs:{input:e},backend:n}))),a=e.map((e=>Nr({inputs:{input:e},backend:n}))),s=Fr(r,t,n),i=Fr(a,t,n),o=jt({inputs:{real:s,imag:i},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),a.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}let s=n.shouldExecuteOnCPU(e);if("string"===a&&(s=!0),s){const s=e.map((e=>{const a=r.util.sizeFromShape(e.shape.slice(t));return rn({inputs:{x:e},backend:n,attrs:{shape:[-1,a]}})})),i=s.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),o=r.backend_util.computeOutShape(s.map((e=>e.shape)),1),u=1===s[0].shape[0],c=Re(i,o,a,u),l=r.backend_util.computeOutShape(e.map((e=>e.shape)),t),d=n.makeTensorInfo(l,a,c);return s.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}const i=Object(r.env)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(e.length>i){const r=[];for(let a=0;a<e.length;a+=i){const s=e.slice(a,a+i);r.push(Fr(s,t,n))}const a=Fr(r,t,n);for(const e of r)n.disposeIntermediateTensorInfo(e);return a}if(Object(r.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const r=new Ar(e.map((e=>e.shape)),t);return n.runWebGLProgram(r,e,a)}const{tensors2D:o,outShape:u}=function(e,t,n){const a=r.backend_util.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>rn({inputs:{x:e},attrs:{shape:[-1,r.util.sizeFromShape(e.shape.slice(t))]},backend:n}))),outShape:a}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(e,t,n),c=new Tr(o.map((e=>e.shape))),l=n.runWebGLProgram(c,o,a);o.forEach((e=>n.disposeIntermediateTensorInfo(e)));const d=rn({inputs:{x:l},attrs:{shape:u},backend:n});return n.disposeIntermediateTensorInfo(l),d}function Mr(e){const{inputs:t,backend:n,attrs:a}=e,{axis:s}=a,i=r.util.parseAxisParam(s,t[0].shape)[0],o=r.backend_util.computeOutShape(t.map((e=>e.shape)),i);if(0===r.util.sizeFromShape(o))return n.makeTensorInfo(o,t[0].dtype,[]);const u=t.filter((e=>r.util.sizeFromShape(e.shape)>0));if(1===u.length)return Pt({inputs:{x:u[0]},backend:n});const c=u.map((e=>e.shape));return r.backend_util.assertParamsConsistent(c,i),Fr(u,i,n)}const Dr={kernelName:r.Concat,backendName:"webgl",kernelFunc:Mr};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pr{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,u=e.strideWidth,c=e.dilationHeight,l=e.dilationWidth,d=e.filterHeight,p=e.filterWidth,h=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,b=m?1:2,g=m?2:3,x=m?3:1;let y="",k="";n&&(y=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,k="result = activation(result);");const v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${y}\n\n      const ivec2 strides = ivec2(${o}, ${u});\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${x}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${b}], coords[${g}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${d}; wR++) {\n          int xR = xRCorner + wR * ${c};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${l};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${h}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${h}) *\n                    getW(wR, wC, ${h}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${h}, xR, xC) *\n                    getW(wR, wC, ${h}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${h}, d2),\n                getW(wR, wC, ${h} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${h}),\n                  getX(batch, xR, xC, ${h} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${h}, xR, xC),\n                  getX(batch, ${h} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${h}, d2),\n                getW(wR, wC, ${h} + 1, d2),\n                getW(wR, wC, ${h} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${h}),\n                  getX(batch, xR, xC, ${h} + 1),\n                  getX(batch, xR, xC, ${h} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${h}, xR, xC),\n                  getX(batch, ${h} + 1, xR, xC),\n                  getX(batch, ${h} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${v}\n        ${k}\n        setOutput(result);\n      }\n    `}}class Br{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,l=e.filterDepth,d=e.filterHeight,p=e.filterWidth,h=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${s}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${l}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p}; wC++) {\n              int xC = xCCorner + wC * ${c};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${h}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${h}) *\n                  getW(wF, wR, wC, ${h}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${h}),\n                  getX(batch, xF, xR, xC, ${h} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${h}, d2),\n                  getW(wF, wR, wC, ${h} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${h}),\n                  getX(batch, xF, xR, xC, ${h} + 1),\n                  getX(batch, xF, xR, xC, ${h} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${h}, d2),\n                  getW(wF, wR, wC, ${h} + 1, d2),\n                  getW(wF, wR, wC, ${h} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jr{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=le(this.outputShape.length);const{dataFormat:n}=t,r=L(),a="channelsLast"===n,s=a?1:2,i=a?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let u="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)u+=`\n          blockIndex = rc.z + ${t};\n          pos = rc.y + ${e};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${s}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${a}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${u}\n\n        ${r.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lr(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function zr({x:e,filter:t,convInfo:n,backend:a,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:u=null}){const c=e.shape,l=a.texData.get(e.dataId),d=n.inChannels,p=c[0]*c[1]*c[2],h=n.outChannels,f="channelsLast"===n.dataFormat;let m;const b=[];if(null!=i){const e=Lr(i.shape,f);null!=e&&(i=rn({inputs:{x:i},backend:a,attrs:{shape:e}}),b.push(i))}if(null!=s){const e=Lr(s.shape,f);null!=e&&(s=rn({inputs:{x:s},backend:a,attrs:{shape:e}}),b.push(s))}if(!((1===p||1===h)&&d>1e3)&&l.isPacked&&f&&null!=l.texture&&c[2]%2!=0&&r.util.arraysEqual(l.shape.slice(-3),c.slice(-3))){const d=c[0]*c[1]*(c[2]+1),p={dataId:e.dataId,shape:[1,d,n.inChannels],dtype:e.dtype},h=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,r.util.assert(E(l.shape,p.shape),(()=>`packed reshape ${l.shape} to ${p.shape} isn't free`));const f=rn({inputs:{x:t},backend:a,attrs:{shape:[1,n.inChannels,n.outChannels]}});b.push(f);const g=bn({a:p,b:f,backend:a,transposeA:false,transposeB:false,bias:s,activation:u,preluActivationWeights:i,leakyreluAlpha:o}),x=a.texData.get(g.dataId);r.util.assert(x.isPacked,(()=>"batchMatMul result is expected to be packed")),l.shape=h,x.shape=n.outShape,m=Pt({inputs:{x:g},backend:a}),m.shape=n.outShape,b.push(g)}else{const r=n.outHeight*n.outWidth,c=rn({inputs:{x:e},backend:a,attrs:{shape:f?[n.batchSize,r,n.inChannels]:[n.batchSize,n.inChannels,r]}}),l=rn({inputs:{x:t},backend:a,attrs:{shape:[1,n.inChannels,n.outChannels]}}),d=bn({a:f?c:l,b:f?l:c,transposeA:!f,transposeB:false,backend:a,bias:s,activation:u,preluActivationWeights:i,leakyreluAlpha:o});m=rn({inputs:{x:d},backend:a,attrs:{shape:n.outShape}}),b.push(c),b.push(l),b.push(d)}for(const e of b)a.disposeIntermediateTensorInfo(e);return m}function Wr({x:e,filter:t,convInfo:n,backend:a,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:u=null}){const{filterWidth:c,filterHeight:l,inChannels:d,outWidth:p,outHeight:h,dataFormat:f}=n,m="channelsLast"===f,b=c*l*d,g=h*p,x=[n.batchSize,b,g],y=[];if(null!=i){const e=Lr(i.shape,m);null!=e&&(i=rn({inputs:{x:i},backend:a,attrs:{shape:e}}),y.push(i))}if(null!=s){const e=Lr(s.shape,m);null!=e&&(s=rn({inputs:{x:s},backend:a,attrs:{shape:e}}),y.push(s))}const k=rn({inputs:{x:t},backend:a,attrs:{shape:[1,b,r.util.sizeFromShape(t.shape)/b]}});y.push(k);const v=new jr(x,n),w=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],I=a.runWebGLProgram(v,[e],"float32",w),S=rn({inputs:{x:I},backend:a,attrs:{shape:x}});y.push(I),y.push(S);const _=null!=s,C=null!=i,O="leakyrelu"===u,$=u?Xt(u,!0):null,T=new Yt(m?S.shape:k.shape,m?k.shape:S.shape,m?[n.batchSize,g,n.outChannels]:[n.batchSize,n.outChannels,g],!0,!1,_,$,C,O),A=m?[S,k]:[k,S];if(s&&A.push(s),C&&A.push(i),O){const e=a.makeTensorInfo([],"float32",r.util.createScalarValue(o,"float32"));A.push(e),y.push(e)}const E=a.runWebGLProgram(T,A,"float32"),N=rn({inputs:{x:E},backend:a,attrs:{shape:n.outShape}});y.push(E);for(const e of y)a.disposeIntermediateTensorInfo(e);return N}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ur={kernelName:r.Conv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:i}=t,{strides:o,pad:u,dataFormat:c,dilations:l,dimRoundingMode:d}=a,p=r.backend_util.convertConv2DDataFormat(c),h=r.backend_util.computeConv2DInfo(s.shape,i.shape,o,l,u,d,!1,p);let f;if(1!==h.filterHeight||1!==h.filterWidth||1!==h.dilationHeight||1!==h.dilationWidth||1!==h.strideHeight||1!==h.strideWidth||"SAME"!==h.padInfo.type&&"VALID"!==h.padInfo.type)if(Object(r.env)().getBool("WEBGL_CONV_IM2COL"))f=Wr({x:s,filter:i,convInfo:h,backend:n});else{const e=new Pr(h);f=n.runWebGLProgram(e,[s,i],"float32")}else f=zr({x:s,filter:i,convInfo:h,backend:n});const m=rn({inputs:{x:f},backend:n,attrs:{shape:h.outShape}});return n.disposeIntermediateTensorInfo(f),m}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Gr{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${s}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Vr{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,u=s?1:2,c=s?2:3,l=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${l}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${c}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Hr{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${a};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class qr{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,u=n-1-e.padInfo.top,c=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${u}, ${c});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${a}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kr={kernelName:r.Conv2DBackpropFilter,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,dy:i}=t,{strides:o,pad:u,dataFormat:c,dimRoundingMode:l,filterShape:d}=a,p=r.backend_util.convertConv2DDataFormat(c),h=r.backend_util.computeConv2DInfo(s.shape,d,o,1,u,l,!1,p),f=new Gr(h);return n.runWebGLProgram(f,[s,i],"float32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xr={kernelName:r.Conv2DBackpropInput,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,filter:i}=t,{inputShape:o,strides:u,pad:c,dataFormat:l,dimRoundingMode:d}=a,p=r.backend_util.convertConv2DDataFormat(l),h=r.backend_util.computeConv2DInfo(o,i.shape,u,1,c,d,!1,p),f=new Vr(h);return n.runWebGLProgram(f,[s,i],"float32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yr={kernelName:r.Conv3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:i}=t,{strides:o,pad:u,dilations:c}=a,l=r.backend_util.computeConv3DInfo(s.shape,i.shape,o,c,u),d=new Br(l);return n.runWebGLProgram(d,[s,i],"float32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qr={kernelName:r.Conv3DBackpropFilterV2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,dy:i}=t,{strides:o,pad:u,filterShape:c}=a,l=r.backend_util.computeConv3DInfo(s.shape,c,o,1,u),d=new Hr(l);return n.runWebGLProgram(d,[s,i],"float32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zr={kernelName:r.Conv3DBackpropInputV2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,filter:i}=t,{pad:o,strides:u,inputShape:c}=a,l=r.backend_util.computeConv3DInfo(c,i.shape,u,1,o),d=new qr(l);return n.runWebGLProgram(d,[s,i],"float32")}},Jr=qt({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),ea={kernelName:r.Cos,backendName:"webgl",kernelFunc:Jr},ta=qt({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),na={kernelName:r.Cosh,backendName:"webgl",kernelFunc:ta};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class ra{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,i,o,u]=e,[c]=t,[l,d]=n;this.outputShape=[c,l,d,u];const p="bilinear"===r?1:0,[h,f]=[i-1+".0",o-1+".0"],[m,b,g]=l>1?[""+(i-1)/(l-1),"(y2-y1) * height_ratio",`y1*${h} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${h}`],[x,y,k]=d>1?[""+(o-1)/(d-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${x});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${b};\n        float width_scale = ${y};\n\n        float in_y = ${g};\n        if( in_y < 0.0 || in_y > ${h} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${k};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${p} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aa={kernelName:r.CropAndResize,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:c}=r,l=new ra(a.shape,s.shape,o,u,c);return n.runWebGLProgram(l,[a,s,i],"float32")}};var sa;!function(e){e.Prod="*",e.Sum="+"}(sa||(sa={}));class ia{constructor(e,t,n,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const a=this.outputShape.length,s=this.op===sa.Prod?"1.0":"0.0",i=n?s:`getX(${oa(a,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1];let u="",c="";n?(u=r?"end != "+(o-1):"end != 0",c=r?"end + 1":"end - 1"):(u=r?`end + pow2 < ${o}`:"end >= pow2",c=r?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${re(a)} coords = getOutputCoords();\n        int end = ${ua(a,"coords",this.op)};\n        float val = ${i};\n        int pow2 = int(pow(2.0, index));\n        if (${u}) {\n          int idx = ${c};\n          ${ua(a,"coords",this.op)} = idx;\n          val ${this.op}= getX(${oa(a,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function oa(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function ua(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ca(e,t,n,a,s,i){const o=t.shape.length,u=r.backend_util.getAxesPermutation([a],o);let c=t;null!=u&&(c=fn({inputs:{x:t},backend:n,attrs:{perm:u}}));const l=r.backend_util.getInnerMostAxes(1,o)[0];if(l!==o-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${a}`);const d=c.shape[l];let p=Pt({inputs:{x:c},backend:n});for(let t=0;t<=Math.ceil(Math.log2(d))-1;t++){const r=new ia(e,c.shape,!1,i),a=[[t]],s=p;p=n.runWebGLProgram(r,[p],p.dtype,a),n.disposeIntermediateTensorInfo(s)}if(s){const t=new ia(e,c.shape,s,i),r=p;p=n.runWebGLProgram(t,[p],p.dtype),n.disposeIntermediateTensorInfo(r)}if(null!=u){const e=fn({inputs:{x:p},backend:n,attrs:{perm:r.backend_util.getUndoAxesPermutation(u)}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(c),e}return p}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const la={kernelName:r.Cumprod,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;return ca(sa.Prod,a,n,s,i,o)}};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const da={kernelName:r.Cumsum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;return ca(sa.Sum,a,n,s,i,o)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pa={kernelName:r.DenseBincount,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){const e=n.readSync(a.dataId),t=n.readSync(s.dataId),r=Ae(e,t,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,r)}if(2===a.shape.length){const e=n.bufferSync(a),t=n.bufferSync(s),r=Ee(e,t,i,o);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ha{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fa={kernelName:r.DepthToSpace,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r,o=a.shape[0],u=("NHWC"===i?a.shape[1]:a.shape[2])*s,c=("NHWC"===i?a.shape[2]:a.shape[3])*s,l=("NHWC"===i?a.shape[3]:a.shape[1])/(s*s),d=new ha("NHWC"===i?[o,u,c,l]:[o,l,u,c],s,i);return n.runWebGLProgram(d,[a],a.dtype)}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ma{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=le(this.outputShape.length);const s=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels;let u="",c="";n&&(u=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,c="result = activation(result);");const l=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${u}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${s}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${l}\n        ${c}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ba{constructor(e,t=!1,n=null,a=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=le(this.outputShape.length);const i=e.outChannels/e.inChannels,o=e.padInfo.left,u=e.strideWidth,c=e.dilationWidth,l=e.filterHeight,d=e.filterWidth,p=d;let h="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<d;e++)h+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;h+=`\n    for (int r = 0; r < ${l}; r++) {\n      `;for(let e=0;e<d;e++)h+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;h+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(p+1)/2;e++){const t=2*e;if(h+=`\n          xC = xCCorner + ${t*c};\n          `,1===u){if(t<d&&(o%2==1?(h+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,h+=1===c&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):h+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<d)){const e=o%2==0?r.util.nearestLargerEven(c):c;c%2==0&&o%2==1||c%2!=0&&o%2!=1?(h+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,c>1&&(h+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                      xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${t}Ready = 1;\n                    }\n                    `),h+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                  `):h+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<d&&(o%2==1?(h+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<d&&(h+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(h+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<d&&(h+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<d&&(h+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<d&&(h+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}h+="\n    }\n  ",h+="\n      }\n    ";let f="",m="";n&&(f=a?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,m="result = activation(result);");const b=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${f}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${i};\n        int q = d2 - d1 * ${i};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${h}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${b}\n        ${m}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ga={kernelName:r.DepthwiseConv2dNative,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:i}=t,{strides:o,pad:u,dilations:c,dimRoundingMode:l}=a;let d=c;null==d&&(d=[1,1]),r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(o,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${d}'`));const p=r.backend_util.computeConv2DInfo(s.shape,i.shape,o,d,u,l,!0);let h;h=Object(r.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels==1?new ba(p):new ma(p);const f=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];return n.runWebGLProgram(h,[s,i],"float32",f)}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xa{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ya{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ka={kernelName:r.DepthwiseConv2dNativeBackpropFilter,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,dy:i}=t,{strides:o,dilations:u,pad:c,dimRoundingMode:l,filterShape:d}=a,p=r.backend_util.computeConv2DInfo(s.shape,d,o,u,c,l,!0),h=new xa(p);return n.runWebGLProgram(h,[s,i],"float32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const va={kernelName:r.DepthwiseConv2dNativeBackpropInput,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,filter:i}=t,{strides:o,dilations:u,pad:c,dimRoundingMode:l,inputShape:d}=a,p=r.backend_util.computeConv2DInfo(d,i.shape,o,u,c,l,!0),h=new ya(p);return n.runWebGLProgram(h,[s,i],"float32")}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wa{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ia={kernelName:r.Diag,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,s=[...a.shape,...a.shape],i=r.util.sizeFromShape(a.shape),o=rn({inputs:{x:a},backend:n,attrs:{shape:[i]}}),u=new wa(i),c=n.runWebGLProgram(u,[o],o.dtype),l=rn({inputs:{x:c},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(c),l}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Sa{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:u,dilationWidth:c}=e,{top:l,left:d}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${s});\n      const ivec2 pads = ivec2(${l}, ${d});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${c};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _a={kernelName:r.Dilation2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:i}=t,{strides:o,pad:u,dilations:c}=a,l=r.backend_util.computeDilation2DInfo(s.shape,i.shape,o,u,"NHWC",c);let d;const p=new Sa(l);d=n.runWebGLProgram(p,[s,i],"float32");const h=rn({inputs:{x:d},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(d),h}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ca={kernelName:r.Einsum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{equation:s}=a,i=t,{allDims:o,summedDims:u,idDims:c}=r.backend_util.decodeEinsumEquation(s,i.length);r.backend_util.checkEinsumDimSizes(o.length,c,i);const{path:l,steps:d}=r.backend_util.getEinsumComputePath(u,c),p=d.length;let h=null,f=o.length;const m=[];for(let e=0;e<p;++e){for(const t of d[e]){const{permutationIndices:e,expandDims:a}=r.backend_util.getEinsumPermutation(f,c[t]);let s;r.backend_util.isIdentityPermutation(e)?s=i[t]:(s=fn({inputs:{x:i[t]},backend:n,attrs:{perm:e}}),m.push(s));const o=s.shape.slice();for(let e=0;e<a.length;++e)o.splice(a[e],0,1);r.util.arraysEqual(s.shape,o)||(s=rn({inputs:{x:s},backend:n,attrs:{shape:o}}),m.push(s)),null===h?h=s:(h=tn({inputs:{a:s,b:h},backend:n}),m.push(h))}e<p-1&&(l[e]>=0&&(h=pn({inputs:{x:h},backend:n,attrs:{axis:l[e]-(o.length-f),keepDims:!1}}),m.push(h)),f--)}for(const e of m)e!==h&&n.disposeIntermediateTensorInfo(e);return h}},Oa=qt({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),$a={kernelName:r.Elu,backendName:"webgl",kernelFunc:Oa},Ta={kernelName:r.EluGrad,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:a,y:s}=t,i=Object(r.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Dt("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",a.shape,s.shape):new Mt("return (b >= 1.0) ? a : a * (b + 1.0);",a.shape,s.shape);return n.runWebGLProgram(i,[a,s],a.dtype)}},Aa=Kt({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:Fe}),Ea={kernelName:r.Equal,backendName:"webgl",kernelFunc:Aa},Na=qt({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${r.backend_util.ERF_P};\n  float a1 = ${r.backend_util.ERF_A1};\n  float a2 = ${r.backend_util.ERF_A2};\n  float a3 = ${r.backend_util.ERF_A3};\n  float a4 = ${r.backend_util.ERF_A4};\n  float a5 = ${r.backend_util.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),Ra={kernelName:r.Erf,backendName:"webgl",kernelFunc:Na},Fa=qt({opSnippet:"if (isnan(x)) return x;\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:Me,dtype:"float32"}),Ma={kernelName:r.Exp,backendName:"webgl",kernelFunc:Fa};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Da(e){const{inputs:t,attrs:n,backend:a}=e,{dim:s}=n,{input:i}=t,o=i.shape.length,u=i.shape.slice();let c=s;return s<0&&(r.util.assert(-(o+1)<=s,(()=>`Axis must be in the interval [${-(o+1)}, ${o}]`)),c=o+s+1),u.splice(c,0,1),rn({inputs:{x:i},backend:a,attrs:{shape:u}})}const Pa={kernelName:r.ExpandDims,backendName:"webgl",kernelFunc:Da},Ba="return exp(x) - 1.0;",ja=qt({opSnippet:Ba,packedOpSnippet:Ba,cpuKernelImpl:De}),La={kernelName:r.Expm1,backendName:"webgl",kernelFunc:ja};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class za{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const a=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=n?`${r}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${a};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${s};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wa(e,t,n){const a=n.texData.get(e.dataId),s=r.util.sizeFromShape(e.shape),i=e.shape[e.shape.length-1],o=rn({inputs:{x:e},backend:n,attrs:{shape:[s/i,i]}}),u=o.shape,c=new za("real",u,t),l=new za("imag",u,t),d=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:u},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:u}],p=n.runWebGLProgram(c,d,"float32"),h=n.runWebGLProgram(l,d,"float32"),f=jt({inputs:{real:p,imag:h},backend:n});n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h);const m=rn({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(f),m}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ua={kernelName:r.FFT,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return Wa(r,!1,n)}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ga{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Va(e){const{backend:t,attrs:n}=e,{shape:a,value:s}=n;let{dtype:i}=n;if(i=i||r.util.inferDtype(s),"string"===i){const e=r.util.getArrayFromDType(i,r.util.sizeFromShape(a));return e.fill(s),t.makeTensorInfo(a,i,e)}{const e=new Ga(a,s),n=[[s]];return t.runWebGLProgram(e,[],i,n)}}const Ha={kernelName:r.Fill,backendName:"webgl",kernelFunc:Va};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qa{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ka={kernelName:r.FlipLeftRight,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,a=new qa(n.shape);return r.runWebGLProgram(a,[n],n.dtype)}},Xa="return floor(x);",Ya=qt({opSnippet:Xa,packedOpSnippet:Xa,cpuKernelImpl:Pe}),Qa={kernelName:r.Floor,backendName:"webgl",kernelFunc:Ya},Za=Kt({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),Ja={kernelName:r.FloorDiv,backendName:"webgl",kernelFunc:Za};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class es{constructor(e){this.variableNames=["A"];const t=L(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ts{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=L(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ns={kernelName:r.FromPixels,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e;let{pixels:s}=t;const{numChannels:i}=a,o="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,c="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,[l,d]=o?[s.videoWidth,s.videoHeight]:[s.width,s.height],p=[d,l],h=[d,l,i];(c||o)&&(null==rs&&(rs=document.createElement("canvas").getContext("2d")),rs.canvas.width=l,rs.canvas.height=d,rs.drawImage(s,0,0,l,d),s=rs.canvas);const f=n.makeTensorInfo(p,"int32");n.texData.get(f.dataId).usage=u.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(f.dataId),s);const m=Object(r.env)().getBool("WEBGL_PACK")?new ts(h):new es(h),b=n.runWebGLProgram(m,[f],"int32");return n.disposeData(f.dataId),b}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */};let rs;const as={kernelName:r.FusedConv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:i,bias:o,preluActivationWeights:u}=t,{strides:c,pad:l,dataFormat:d,dilations:p,dimRoundingMode:h,activation:f,leakyreluAlpha:m}=a,b=r.backend_util.convertConv2DDataFormat(d),g=r.backend_util.computeConv2DInfo(s.shape,i.shape,c,p,l,h,!1,b);let x;const y=[];if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(Object(r.env)().getBool("WEBGL_CONV_IM2COL"))x=Wr({x:s,filter:i,convInfo:g,backend:n,bias:o,activation:f,preluActivationWeights:u,leakyreluAlpha:m});else{const e=null!=o,t=null!=u,a="leakyrelu"===f,c=f?Xt(f,!1):null,l=new Pr(g,e,c,t,a),p=[s,i],h=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=rn({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return y.push(t),t}return e};if(e&&p.push(h(o,d)),t&&p.push(h(u,d)),a){const e=n.makeTensorInfo([],"float32",r.util.createScalarValue(m,"float32"));p.push(e),y.push(e)}x=n.runWebGLProgram(l,p,"float32")}else x=zr({x:s,filter:i,convInfo:g,backend:n,bias:o,activation:f,preluActivationWeights:u,leakyreluAlpha:m});const k=rn({inputs:{x:x},backend:n,attrs:{shape:g.outShape}});return y.push(x),y.forEach((e=>n.disposeIntermediateTensorInfo(e))),k}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ss={kernelName:r.FusedDepthwiseConv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:i,bias:o,preluActivationWeights:u}=t,{strides:c,pad:l,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=a,m=[];let b=d;null==b&&(b=[1,1]),r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(c,b),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${c} and dilations '${b}'`));const g=r.backend_util.computeConv2DInfo(s.shape,i.shape,c,b,l,p,!0),x=Object(r.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,y=h?Xt(h,x):null,k=[s,i],v=null!=o,w=null!=u,I="leakyrelu"===h;if(v&&k.push(o),w&&k.push(u),I){const e=n.makeTensorInfo([],"float32",r.util.createScalarValue(f,"float32"));k.push(e),m.push(e)}let S;S=x?new ba(g,v,y,w,I):new ma(g,v,y,w,I);const _=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],C=n.runWebGLProgram(S,k,"float32",_);return m.forEach((e=>n.disposeIntermediateTensorInfo(e))),C}};class is{constructor(e,t,n,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=n;const a=re(t.length),s=re(n.length),i=this.sliceDim>1?"strides[j]":"strides",o=re(r.length),u=r.length>1?"paramsShape[j]":"paramsShape";this.userCode=`\n        ${a} strides = ${a}(${this.strides});\n        ${o} paramsShape = ${o}(${this.paramsShape});\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            out_of_bounds = out_of_bounds || index < 0;\n            out_of_bounds = out_of_bounds || index >= ${u};\n            flattenIndex += index * ${i};\n          }\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const os={kernelName:r.GatherNd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:s}=t,i=s.shape,o=i[i.length-1],u=r.util.sizeFromShape(a.shape),[c,l,d,p]=r.backend_util.prepareAndValidate(a,s),h=rn({inputs:{x:s},backend:n,attrs:{shape:[l,o]}}),f=rn({inputs:{x:a},backend:n,attrs:{shape:[r.util.sizeFromShape(a.shape)/d,d]}});if(n.shouldExecuteOnCPU([a,s])||"string"===a.dtype){const e=n.readSync(s.dataId),t=n.bufferSync(a),r=Be(e,t,a.dtype,l,o,d,p,a.shape,u);return n.makeTensorInfo(c,a.dtype,r.values)}const m=new is(o,p,[l,d],a.shape),b=n.runWebGLProgram(m,[f,h],f.dtype),g=rn({inputs:{x:b},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(b),g}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class us{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=re(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let t=0;t<e.length;t++)2===t?r.push("index"):r.push(`${n[t]}`);return r.join()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}function cs(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,indices:i}=t,{axis:o,batchDims:u}=a,c=r.util.parseAxisParam(o,s.shape)[0];if(Object(r.env)().get("DEBUG")){const e=n.readSync(i.dataId),t=s.shape[c];for(let n=0;n<e.length;++n){const a=e[n];r.util.assert(a<=t-1&&a>=0,(()=>`GatherV2: the index value ${a} is not in [0, ${t-1}]`))}}const l=r.backend_util.segment_util.collectGatherOpShapeInfo(s,i,c,u),d=r.util.sizeFromShape(i.shape),p=[],h=rn({inputs:{x:s},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),f=rn({inputs:{x:i},backend:n,attrs:{shape:[l.batchSize,d/l.batchSize]}});p.push(h),p.push(f);const m=[l.batchSize,l.outerSize,d/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([s,i])||"string"===s.dtype){const e=n.bufferSync(f),t=n.bufferSync(h),r=je(t,e,m);return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(l.outputShape,r.dtype,r.values)}const b=new us(h.shape,m),g=n.runWebGLProgram(b,[h,f],h.dtype);p.push(g);const x=rn({inputs:{x:g},backend:n,attrs:{shape:l.outputShape}});return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}const ls={kernelName:r.GatherV2,backendName:"webgl",kernelFunc:cs},ds=Kt({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:Le,dtype:"bool"}),ps={kernelName:r.Greater,backendName:"webgl",kernelFunc:ds},hs=Kt({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:ze}),fs={kernelName:r.GreaterEqual,backendName:"webgl",kernelFunc:hs};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ms={kernelName:r.IFFT,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n}=e,{input:r}=t;return Wa(r,!0,n)}},bs=qt({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),gs={kernelName:r.IsFinite,backendName:"webgl",kernelFunc:bs},xs=qt({opSnippet:"return float(isinf(x));",dtype:"bool"}),ys={kernelName:r.IsInf,backendName:"webgl",kernelFunc:xs},ks=qt({opSnippet:"return float(isnan(x));",dtype:"bool"}),vs={kernelName:r.IsNan,backendName:"webgl",kernelFunc:ks},ws=Kt({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:We,dtype:"bool"}),Is={kernelName:r.Less,backendName:"webgl",kernelFunc:ws},Ss=Kt({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:Ue,dtype:"bool"}),_s={kernelName:r.LessEqual,backendName:"webgl",kernelFunc:Ss};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cs={kernelName:r.LinSpace,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=Ge(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},Os=qt({opSnippet:"if (isnan(x)) return x;\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:Ve}),$s={kernelName:r.Log,backendName:"webgl",kernelFunc:Os},Ts=qt({opSnippet:"if (isnan(x)) return x;\n  return log(1.0 + x);\n"}),As={kernelName:r.Log1p,backendName:"webgl",kernelFunc:Ts},Es=Kt({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),Ns={kernelName:r.LogicalAnd,backendName:"webgl",kernelFunc:Es},Rs=qt({opSnippet:"return float(!(x >= 1.0));"}),Fs={kernelName:r.LogicalNot,backendName:"webgl",kernelFunc:Rs},Ms=Kt({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),Ds={kernelName:r.LogicalOr,backendName:"webgl",kernelFunc:Ms};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Ps{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];const s=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Bs{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const js={kernelName:r.LRN,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{depthRadius:i,bias:o,alpha:u,beta:c}=a,l=Object(r.env)().getBool("WEBGL_PACK_NORMALIZATION")?new Bs(s.shape,i,o,u,c):new Ps(s.shape,i,o,u,c);return n.runWebGLProgram(l,[s],s.dtype)}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Ls{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zs={kernelName:r.LRNGrad,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:u,alpha:c,beta:l}=r,d=new Ls(a.shape,o,u,c,l);return n.runWebGLProgram(d,[a,s,i],a.dtype)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ws(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{reductionIndices:i,keepDims:o}=a,u=s.shape.length,c=r.util.parseAxisParam(i,s.shape);let l=c;const d=r.backend_util.getAxesPermutation(l,u),p=null!=d,h=n.shouldExecuteOnCPU([s]);let f=s;if(p){if(h){const e=n.texData.get(f.dataId).values,t=new Array(u);for(let e=0;e<t.length;e++)t[e]=s.shape[d[e]];const r=bt(e,s.shape,s.dtype,d,t);f=n.makeTensorInfo(t,s.dtype);n.texData.get(f.dataId).values=r}else f=dn(s,d,n);l=r.backend_util.getInnerMostAxes(l.length,u)}r.backend_util.assertAxesAreInnerMostDims("max",l,u);const[m,b]=r.backend_util.computeOutAndReduceShapes(f.shape,l);let g,x=m;if(o&&(x=r.backend_util.expandShapeToKeepDim(m,c)),h){const e=n.texData.get(f.dataId).values,t=He(e,r.util.sizeFromShape(b),x,s.dtype);g=n.makeTensorInfo(x,s.dtype);n.texData.get(g.dataId).values=t}else g=
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t,n,a){const s=r.util.sizeFromShape(t),i=rn({inputs:{x:e},attrs:{shape:[r.util.sizeFromShape(e.shape)/s,s]},backend:a}),o=un(i,e.dtype,"max",a),u=rn({inputs:{x:o},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(i),a.disposeIntermediateTensorInfo(o),u}(f,b,x,n);return p&&n.disposeIntermediateTensorInfo(f),g}const Us={kernelName:r.Max,backendName:"webgl",kernelFunc:Ws},Gs=Kt({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:qe}),Vs={kernelName:r.Maximum,backendName:"webgl",kernelFunc:Gs};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hs={kernelName:r.MaxPool,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t;B(s,"maxPool");const{filterSize:i,strides:o,pad:u,dimRoundingMode:c}=a;r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(o,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const l=r.backend_util.computePool2DInfo(s.shape,i,o,1,u,c);if(1===l.filterWidth&&1===l.filterHeight&&r.util.arraysEqual(l.inShape,l.outShape))return Pt({inputs:{x:s},backend:n});const d=new Xn(l,"max",!1);return n.runWebGLProgram(d,[s],s.dtype)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qs={kernelName:r.MaxPool3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{filterSize:i,strides:o,pad:u,dataFormat:c,dimRoundingMode:l}=a,d=r.backend_util.computePool3DInfo(s.shape,i,o,[1,1,1],u,l,c),p=new Yn(d,"max",!1);return n.runWebGLProgram(p,[s],s.dtype)}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ks{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=a-1-e.padInfo.top,o=s-1-e.padInfo.left,u=a*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Xs{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,u=e.effectiveFilterHeight,c=e.effectiveFilterWidth,l=o-1-e.padInfo.front,d=u-1-e.padInfo.top,p=c-1-e.padInfo.left,h=o*u*c-1;this.userCode=`\n      const ivec3 pads = ivec3(${l}, ${d}, ${p});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${c};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${h} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${c} +\n                  wR * ${c} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ys={kernelName:r.MaxPool3DGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,input:i}=t,o=i,{filterSize:u,strides:c,pad:l,dimRoundingMode:d}=a,p=r.backend_util.computePool3DInfo(o.shape,u,c,[1,1,1],l,d),h=new Yn(p,"max",!0),f=n.runWebGLProgram(h,[o],o.dtype),m=new Xs(p),b=n.runWebGLProgram(m,[s,f],o.dtype);return n.disposeIntermediateTensorInfo(f),b}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qs={kernelName:r.MaxPoolGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,input:i,output:o}=t,u=i;B([i,o],"maxPoolGrad");const{filterSize:c,strides:l,pad:d,dimRoundingMode:p}=a,h=r.backend_util.computePool2DInfo(u.shape,c,l,1,d,p),f=new Xn(h,"max",!0),m=n.runWebGLProgram(f,[u],u.dtype),b=new Ks(h),g=n.runWebGLProgram(b,[s,m],u.dtype);return n.disposeIntermediateTensorInfo(m),g}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Zs={kernelName:r.MaxPoolWithArgmax,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:a}=e,{filterSize:s,strides:i,pad:o,includeBatchInIndex:u}=t,c=n;r.util.assert(4===a.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${a.shape.length}.`));const l=[1,1];r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(i,l),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`));const d=r.backend_util.computePool2DInfo(a.shape,s,i,l,o),[p,h]=function(e,t,n,r){let a=new Xn(n,"max",!1);const s=r.runWebGLProgram(a,[e],"float32");return a=new Xn(n,"max",!0,!0,t),[s,r.runWebGLProgram(a,[e],"float32")]}(a,u,d,c);return[p,h]}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Js={kernelName:r.Mean,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:a}=e,{keepDims:s,axis:i}=t,o=n,u=a.shape.length,c=r.util.parseAxisParam(i,a.shape);let l=c;const d=r.backend_util.getAxesPermutation(l,u),p=null!=d,h=o.shouldExecuteOnCPU([a]),f=[];let m=a;if(p){if(h){const e=o.texData.get(m.dataId).values,t=new Array(u);for(let e=0;e<t.length;e++)t[e]=a.shape[d[e]];const n=bt(e,a.shape,a.dtype,d,t);m=o.makeTensorInfo(t,a.dtype);o.texData.get(m.dataId).values=n}else m=dn(a,d,o);f.push(m),l=r.backend_util.getInnerMostAxes(l.length,u)}r.backend_util.assertAxesAreInnerMostDims("sum",l,u);const[b,g]=r.backend_util.computeOutAndReduceShapes(m.shape,l);let x=b;s&&(x=r.backend_util.expandShapeToKeepDim(b,c));const y=function(e,t,n,a){const s=r.util.sizeFromShape(t),i=rn({inputs:{x:e},attrs:{shape:[r.util.sizeFromShape(e.shape)/s,s]},backend:a}),o=un(i,"float32","mean",a),u=rn({inputs:{x:o},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(i),a.disposeIntermediateTensorInfo(o),u}(m,g,x,o);for(const e of f)o.disposeIntermediateTensorInfo(e);return y}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ei={kernelName:r.Min,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:i,keepDims:o}=a,u=s.shape.length,c=r.util.parseAxisParam(i,s.shape);let l=c;const d=r.backend_util.getAxesPermutation(l,u);let p=s;null!=d&&(p=fn({inputs:{x:s},backend:n,attrs:{perm:d}}),l=r.backend_util.getInnerMostAxes(l.length,s.shape.length)),r.backend_util.assertAxesAreInnerMostDims("min",l,u);const[h,f]=r.backend_util.computeOutAndReduceShapes(p.shape,l),m=rn({inputs:{x:p},backend:n,attrs:{shape:[-1,r.util.sizeFromShape(f)]}}),b=un(m,m.dtype,"min",n);let g;if(o){g=rn({inputs:{x:b},backend:n,attrs:{shape:r.backend_util.expandShapeToKeepDim(h,c)}})}else g=rn({inputs:{x:b},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),null!=d&&n.disposeIntermediateTensorInfo(p),g}},ti=Kt({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:Ke}),ni={kernelName:r.Minimum,backendName:"webgl",kernelFunc:ti};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class ri{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=re(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ai{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=re(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=yt("rc",r),u=yt("source",r),c=`${o[r-1]} < ${this.outputShape[r-1]}`,l=1===r?"source":`vec2(${u.slice(-2).join()})`,d="reflect"===n?0:1;let p="";if(1===r){const e=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${d};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${d};\n        }\n        source -= start;\n      `;p=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${l});\n        ${o[r-1]} += 1;\n        if(${c}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${l});\n        }\n      `}else{const e=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${d}) +\n                gte * ((end - 1) * 2 - source + ${d});\n        source -= start;\n      `;p=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${l});\n        ${o[r-1]} += 1;\n        if(${c}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${l});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${l});\n          ${o[r-1]} += 1;\n          if(${c}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${l});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const si={kernelName:r.MirrorPad,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a}=e,{paddings:s,mode:i}=n,o=Object(r.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ai(a.shape,s,i):new ri(a.shape,s,i);return t.runWebGLProgram(o,[a],a.dtype)}},ii=Kt({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),oi={kernelName:r.Mod,backendName:"webgl",kernelFunc:ii};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class ui{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ci=Kt({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),li={kernelName:r.RealDiv,backendName:"webgl",kernelFunc:ci},di="return a - b;",pi=Kt({opSnippet:di,packedOpSnippet:di,supportsComplex:!0,cpuKernelImpl:ht}),hi={kernelName:r.Sub,backendName:"webgl",kernelFunc:pi};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function fi(e){const{inputs:t,backend:n,attrs:a}=e,{logits:s}=t,{dim:i}=a,o=r.util.parseAxisParam([i],s.shape),u=Ws({inputs:{x:s},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),c=r.backend_util.expandShapeToKeepDim(u.shape,o),l=rn({inputs:{x:u},backend:n,attrs:{shape:c}}),d=pi({inputs:{a:s,b:l},backend:n}),p=Fa({inputs:{x:d},backend:n}),h=pn({inputs:{x:p},backend:n,attrs:{axis:o,keepDims:!1}}),f=rn({inputs:{x:h},backend:n,attrs:{shape:c}}),m=ci({inputs:{a:p,b:f},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),m}const mi={kernelName:r.Softmax,backendName:"webgl",kernelFunc:fi};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bi={kernelName:r.Multinomial,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r,u=o?a:fi({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),c=u.shape[0],l=u.shape[1],d=new ui(c,l,s),p=[[i]],h=n.runWebGLProgram(d,[u],"int32",p);return o||n.disposeIntermediateTensorInfo(u),h}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gi={kernelName:r.Neg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])){const e=n.texData.get(a.dataId),[t,r]=Ye(e.values,a.shape,a.dtype);return n.makeTensorInfo(r,a.dtype,t)}let s;return s=Object(r.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Tt(a.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new Ct(a.shape,"if (isnan(x)) return x;\n  return -x;\n"),n.runWebGLProgram(s,[a],a.dtype)}},xi=r.kernel_impls.nonMaxSuppressionV3Impl;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yi={kernelName:r.NonMaxSuppressionV3,backendName:"webgl",kernelFunc:function(e){r.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:s,scores:i}=t,{maxOutputSize:o,iouThreshold:u,scoreThreshold:c}=a,l=n.readSync(s.dataId),d=n.readSync(i.dataId),{selectedIndices:p}=xi(l,d,o,u,c);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}},ki=r.kernel_impls.nonMaxSuppressionV4Impl;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vi={kernelName:r.NonMaxSuppressionV4,backendName:"webgl",kernelFunc:function(e){r.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:s,scores:i}=t,{maxOutputSize:o,iouThreshold:u,scoreThreshold:c,padToMaxOutputSize:l}=a,d=n.readSync(s.dataId),p=n.readSync(i.dataId),{selectedIndices:h,validOutputs:f}=ki(d,p,o,u,c,l);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}},wi=r.kernel_impls.nonMaxSuppressionV5Impl;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ii={kernelName:r.NonMaxSuppressionV5,backendName:"webgl",kernelFunc:function(e){r.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:s,scores:i}=t,{maxOutputSize:o,iouThreshold:u,scoreThreshold:c,softNmsSigma:l}=a,d=n.readSync(s.dataId),p=n.readSync(i.dataId),h=o,f=u,m=c,b=l,{selectedIndices:g,selectedScores:x}=wi(d,p,h,f,m,b);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([x.length],"float32",new Float32Array(x))]}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Si{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _i={kernelName:r.OneHot,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{indices:s}=t,{depth:i,onValue:o,offValue:u}=a,c=r.util.sizeFromShape(s.shape),l=new Si(c,i,o,u),d=rn({inputs:{x:s},backend:n,attrs:{shape:[c]}}),p=n.runWebGLProgram(l,[d],s.dtype);n.disposeIntermediateTensorInfo(d);const h=rn({inputs:{x:p},backend:n,attrs:{shape:[...s.shape,i]}});return n.disposeIntermediateTensorInfo(p),h}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ci(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=gr({inputs:{input:r},backend:n}),t=Ci({inputs:{x:e},backend:n}),a=Nr({inputs:{input:r},backend:n}),s=Ci({inputs:{x:a},backend:n}),i=jt({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return Va({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const Oi={kernelName:r.ZerosLike,backendName:"webgl",kernelFunc:Ci};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $i={kernelName:r.OnesLike,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){const t=gr({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=Nr({inputs:{input:a},backend:r}),i=Ci({inputs:{x:s},backend:r}),o=jt({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return Va({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r})}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ti={kernelName:r.Pack,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{axis:s}=a;if(1===t.length)return Da({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const i=t[0].shape,o=t[0].dtype;t.forEach((e=>{r.util.assertShapesMatch(i,e.shape,"All tensors passed to stack must have matching shapes"),r.util.assert(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const u=[],c=Mr({inputs:t.map((e=>{const t=Da({inputs:{input:e},backend:n,attrs:{dim:s}});return u.push(t),t})),backend:n,attrs:{axis:s}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ai{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=re(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ei{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=re(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=yt("rc",r),u=yt("source",r),c=`${o[r-1]} < ${this.outputShape[r-1]}`,l=1===r?"source":`vec2(${u.slice(-2).join()})`,d=[`${a} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${c}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${c}) {`],p=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let h="";for(let e=0,t=1===r?2:4;e<t;e++)h+=`\n        ${d[e]}\n        if (${p}) {\n          result[${e}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${e}] = getChannel(getX(${u.join()}), ${l});\n        }\n      `;h+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${h}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ni=e=>{const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{paddings:i,constantValue:o}=a;if(0===r.util.sizeFromShape(s.shape)){return Va({backend:n,attrs:{shape:i.map(((e,t)=>e[0]+s.shape[t]+e[1])),value:o,dtype:s.dtype}})}const u=Object(r.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Ei(s.shape,i,o):new Ai(s.shape,i,o),c=[[o]];return n.runWebGLProgram(u,[s],s.dtype,c)},Ri={kernelName:r.PadV2,backendName:"webgl",kernelFunc:Ni},Fi=Kt({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Mi={kernelName:r.Pow,backendName:"webgl",kernelFunc:Fi};const Di={kernelName:r.Prod,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:i,keepDims:o}=a,u=s.shape.length,c=[],l=r.util.parseAxisParam(i,s.shape);let d=l;const p=r.backend_util.getAxesPermutation(d,u);let h,f=s;if(null!=p&&(f=fn({inputs:{x:s},backend:n,attrs:{perm:p}}),d=r.backend_util.getInnerMostAxes(d.length,u),c.push(f)),r.backend_util.assertAxesAreInnerMostDims("prod",d,u),n.shouldExecuteOnCPU([f])){const e=n.texData.get(f.dataId).values,{outVals:t,outShape:r,outDtype:a}=Ze(f.shape,f.dtype,e,d);h=n.makeTensorInfo(r,a,t)}else{const[e,t]=r.backend_util.computeOutAndReduceShapes(f.shape,d),a=r.util.sizeFromShape(t),i=rn({inputs:{x:f},backend:n,attrs:{shape:[-1,a]}}),o=un(i,Object(r.sumOutType)(s.dtype),"prod",n);h=rn({inputs:{x:o},backend:n,attrs:{shape:e}}),c.push(i),c.push(o)}if(o){c.push(h);const e=r.backend_util.expandShapeToKeepDim(h.shape,l);h=rn({inputs:{x:h},backend:n,attrs:{shape:e}})}return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},Pi=e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=Je(r,a,s,i);return t.makeTensorInfo([o.length],i,o)},Bi={kernelName:r.Range,backendName:"webgl",kernelFunc:Pi},ji=qt({opSnippet:"return 1.0 / x;"}),Li={kernelName:r.Reciprocal,backendName:"webgl",kernelFunc:ji},zi=qt({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),Wi={kernelName:r.Relu,backendName:"webgl",kernelFunc:zi},Ui=qt({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),Gi={kernelName:r.Relu6,backendName:"webgl",kernelFunc:Ui};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Vi{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const c=[r&&t>1?i-1:i,r&&n>1?o-1:o],l=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${c[0]/l[0]},\n          ${c[1]/l[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Hi{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const c=[r&&t>1?i-1:i,r&&n>1?o-1:o],l=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${c[0]/l[0]},\n          ${c[1]/l[1]},\n          ${c[1]/l[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qi={kernelName:r.ResizeBilinear,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:s}=t,{alignCorners:i,halfPixelCenters:o,size:u}=a,[c,l]=u,d=Object(r.env)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Hi(s.shape,c,l,i,o):new Vi(s.shape,c,l,i,o);return n.runWebGLProgram(d,[s],"float32")}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ki{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],u=[n&&s>1?s-1:s,n&&i>1?i-1:i],c=o[0]/u[0],l=o[1]/u[1],d=1/c,p=1/l,h=2*Math.ceil(d)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${c});\n        const float widthScale = float(${l});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${h});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xi={kernelName:r.ResizeBilinearGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new Ki(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yi{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const c=[r&&t>1?i-1:i,r&&n>1?o-1:o],l=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";let p;p=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${c[0]/l[0]},\n          ${c[1]/l[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qi{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const c=[r&&t>1?i-1:i,r&&n>1?o-1:o],l=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";let p;p=a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${c[0]/l[0]},\n          ${c[1]/l[1]},\n          ${c[1]/l[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zi={kernelName:r.ResizeNearestNeighbor,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:s}=t,{alignCorners:i,halfPixelCenters:o,size:u}=a,[c,l]=u,d=Object(r.env)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Qi(s.shape,c,l,i,o):new Yi(s.shape,c,l,i,o);return n.runWebGLProgram(d,[s],s.dtype)}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ji{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],u=[n&&s>1?s-1:s,n&&i>1?i-1:i],c=o[0]/u[0],l=o[1]/u[1],d=1/c,p=1/l,h=2*Math.ceil(d)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${c});\n        const float widthScale = float(${l});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${h});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eo={kernelName:r.ResizeNearestNeighborGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new Ji(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class to{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),a=re(n);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class no{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=yt("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=re(n);function o(n){const r=e.map(((r,a)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(a,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(r.slice())};\n          if(${a}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())};\n          }\n          if(${s}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            if(${a}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ro={kernelName:r.Reverse,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{dims:i}=a,o=s.shape.length,u=r.util.parseAxisParam(i,s.shape);if(0===o)return Pt({inputs:{x:s},backend:n});const c=Object(r.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new no(s.shape,u):new to(s.shape,u);return n.runWebGLProgram(c,[s],s.dtype)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ao{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let a="";a="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const so={kernelName:r.RotateWithOffset,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:a}=e,{radians:s,fillValue:i,center:o}=t,u=n,c=new ao(a.shape,i),[l,d]=r.backend_util.getImageCenter(o,a.shape[1],a.shape[2]),p=[[l,d,Math.sin(s),Math.cos(s)]];return u.runWebGLProgram(c,[a],a.dtype,p)}},io=qt({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),oo={kernelName:r.Round,backendName:"webgl",kernelFunc:io},uo=qt({opSnippet:"return inversesqrt(x);",cpuKernelImpl:et}),co={kernelName:r.Rsqrt,backendName:"webgl",kernelFunc:uo};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class lo{constructor(e,t,n,r,a,s,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const o=re(a.length),u=re(s.length);let c="";1===n?c="i":2===n&&(c="i, j");const l=`getIndices(${c})`;let d="";1===r?d="i":2===r&&(d="i, coords[1]");const p=`getUpdates(${d})`,h=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${a});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${l});\n              flattenedIndex += index * ${h};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const po={kernelName:r.ScatterNd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:s,updates:i}=t,{shape:o}=a,{sliceRank:u,numUpdates:c,sliceSize:l,strides:d,outputSize:p}=r.backend_util.calculateShapes(i,s,o),h=[p/l,l];if(0===p)return n.makeTensorInfo(o,s.dtype);const f=rn({inputs:{x:s},backend:n,attrs:{shape:[c,u]}}),m=rn({inputs:{x:i},backend:n,attrs:{shape:[c,l]}}),b=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new lo(c,u,f.shape.length,m.shape.length,d,h),x=n.runWebGLProgram(g,[m,f,b],m.dtype),y=rn({inputs:{x:x},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(b),y}};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ho{constructor(e,t,n,a){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const s=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,i=2===Object(r.env)().getNumber("WEBGL_VERSION")?"while (left < right) {":s,o="left"===a?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${i}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${o} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fo={kernelName:r.SearchSorted,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:s}=t,{side:i}=r,o=new ho(a.shape[0],a.shape[1],s.shape[1],i),u=[[a.shape[1]]];return n.runWebGLProgram(o,[a,s],"int32",u)}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mo{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&s.push(`${n[r]}`);r=s.join(),a=i.join()}const s=re(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bo={kernelName:r.Select,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:a,t:s,e:i}=t,o=new mo(a.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(o,[a,s,i],Object(r.upcastType)(s.dtype,i.dtype))}},go=qt({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${r.backend_util.SELU_SCALEALPHA};\n  float scale = ${r.backend_util.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),xo={kernelName:r.Selu,backendName:"webgl",kernelFunc:go},yo=qt({opSnippet:"if (isnan(x)) return x;\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:nt}),ko={kernelName:r.Sigmoid,backendName:"webgl",kernelFunc:yo},vo=qt({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),wo={kernelName:r.Sign,backendName:"webgl",kernelFunc:vo},Io=qt({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),So={kernelName:r.Sin,backendName:"webgl",kernelFunc:Io},_o=qt({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),Co={kernelName:r.Sinh,backendName:"webgl",kernelFunc:_o},Oo=qt({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),$o={kernelName:r.Softplus,backendName:"webgl",kernelFunc:Oo},To={kernelName:r.SpaceToBatchND,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{blockShape:i,paddings:o}=a;r.util.assert(s.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const u=i.reduce(((e,t)=>e*t)),c=[[0,0]];c.push(...o);for(let e=1+i.length;e<s.shape.length;++e)c.push([0,0]);const l=[],d=Ni({inputs:{x:s},backend:n,attrs:{paddings:c,constantValue:0}}),p=r.backend_util.getReshaped(d.shape,i,u,!1),h=r.backend_util.getPermuted(p.length,i.length,!1),f=r.backend_util.getReshapedPermuted(d.shape,i,u,!1),m=rn({inputs:{x:d},backend:n,attrs:{shape:p}}),b=fn({inputs:{x:m},backend:n,attrs:{perm:h}}),g=rn({inputs:{x:b},backend:n,attrs:{shape:f}});return l.push(d),l.push(m),l.push(b),l.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ao={kernelName:r.SparseFillEmptyRows,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n         ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.readSync(r.dataId),u=n.readSync(a.dataId),c=n.readSync(s.dataId),l=n.readSync(i.dataId)[0],[d,p,h,f,m]=st(o,r.shape,r.dtype,u,a.dtype,c,l);return[n.makeTensorInfo(p,r.dtype,d),n.makeTensorInfo([p[0]],a.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Eo={kernelName:r.SparseReshape,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const i=Array.from(n.readSync(a.dataId)),o=n.readSync(r.dataId),u=Array.from(n.readSync(s.dataId)),[c,l,d]=it(o,r.shape,r.dtype,i,u);return[n.makeTensorInfo(l,r.dtype,c),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const No={kernelName:r.SparseSegmentMean,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${s.shape}`);const i=n.readSync(r.dataId),o=n.readSync(a.dataId),u=n.readSync(s.dataId),[c,l]=ot(i,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(l,r.dtype,c)}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ro={kernelName:r.SparseSegmentSum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${s.shape}`);const i=n.readSync(r.dataId),o=n.readSync(a.dataId),u=n.readSync(s.dataId),[c,l]=ot(i,r.shape,r.dtype,o,u);return n.makeTensorInfo(l,r.dtype,c)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fo={kernelName:r.SparseToDense,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sparseIndices:s,sparseValues:i,defaultValue:o}=t,{outputShape:u}=a,{sliceRank:c,numUpdates:l,sliceSize:d,strides:p,outputSize:h}=r.backend_util.calculateShapes(i,s,u);if("string"===i.dtype){const e=n.bufferSync(s),t=n.bufferSync(i),a=r.util.decodeString(n.readSync(o.dataId)[0]),f=tt(e,t,u,h,d,l,c,p,a,false);return n.makeTensorInfo(u,f.dtype,f.values)}const f=new lo(l,c,s.shape.length,i.shape.length,p,[h,1],false),m=n.runWebGLProgram(f,[i,s,o],i.dtype),b=rn({inputs:{x:m},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(m),b}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mo={kernelName:r.SplitV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{numOrSizeSplits:i,axis:o}=a,u=r.util.parseAxisParam(o,s.shape)[0],c=r.backend_util.prepareSplitSize(s,i,u),l=s.shape.length,d=new Array(l).fill(0),p=s.shape.slice();return c.map((e=>{const t=[...p];t[u]=e;const r=lr({inputs:{x:s},backend:n,attrs:{begin:d,size:t}});return d[u]+=e,r}))}},Do="return sqrt(x);",Po=qt({opSnippet:Do,packedOpSnippet:Do,cpuKernelImpl:ut}),Bo={kernelName:r.Sqrt,backendName:"webgl",kernelFunc:Po},jo=qt({opSnippet:"return x * x;"}),Lo={kernelName:r.Square,backendName:"webgl",kernelFunc:jo},zo="return (a - b) * (a - b);",Wo=Kt({opSnippet:zo,packedOpSnippet:zo}),Uo={kernelName:r.SquaredDifference,backendName:"webgl",kernelFunc:Wo};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Go={kernelName:r.Step,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function({inputs:e,attrs:t,backend:n}){const{x:r}=e,a=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,s=new Ct(r.shape,a);return n.runWebGLProgram(s,[r],r.dtype)}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vo{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,a=re(n.length),s=re(n.length);let i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${a} begin = ${a}(${e});\n      ${a} strides = ${a}(${t});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ho={kernelName:r.StridedSlice,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{begin:i,end:o,strides:u,beginMask:c,endMask:l,ellipsisMask:d,newAxisMask:p,shrinkAxisMask:h}=a,{finalShapeSparse:f,finalShape:m,isIdentity:b,sliceDim0:g,isSimpleSlice:x,begin:y,end:k,strides:v}=r.slice_util.sliceInfo(s.shape,i,o,u,c,l,d,p,h);let w;if(b)w=rn({inputs:{x:s},backend:n,attrs:{shape:m}});else if(g||x){r.util.assert(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=r.slice_util.computeOutShape(y,k,v),t=lr({inputs:{x:s},backend:n,attrs:{begin:y,size:e}});w=rn({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(t)}else{if(n.shouldExecuteOnCPU([s])){const e=n.readSync(s.dataId),t=Object(r.buffer)(s.shape,s.dtype,e),a=ct(f,t,v,y);w=n.makeTensorInfo(m,s.dtype,a.values)}else{const e=new Vo(y,v,f);w=n.runWebGLProgram(e,[s],s.dtype)}}const I=rn({inputs:{x:w},backend:n,attrs:{shape:m}});return n.disposeIntermediateTensorInfo(w),I}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qo={kernelName:r.StringNGrams,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:c}=r,{data:l,dataSplits:d}=t,p=n.readSync(l.dataId),h=n.readSync(d.dataId),[f,m]=lt(p,h,a,s,i,o,u,c);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ko={kernelName:r.StringSplit,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.readSync(s.dataId),u=n.readSync(i.dataId)[0],[c,l,d]=dt(o,u,a),p=l.length;return[n.makeTensorInfo([p,2],"int32",c),n.makeTensorInfo([p],"string",l),n.makeTensorInfo([2],"int32",new Int32Array(d))]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xo={kernelName:r.StringToHashBucketFast,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(s.dataId),o=pt(i,a);return n.makeTensorInfo(s.shape,"int32",o)}},Yo=qt({opSnippet:"return tan(x);"}),Qo={kernelName:r.Tan,backendName:"webgl",kernelFunc:Yo},Zo=qt({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),Jo={kernelName:r.Tanh,backendName:"webgl",kernelFunc:Zo};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class eu{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=re(this.rank),a=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}function tu(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{reps:i}=a;if("string"===s.dtype||s.shape.length>5){const e=n.readSync(s.dataId),t="string"===s.dtype?e.map((e=>r.util.decodeString(e))):e,a=Object(r.buffer)(s.shape,s.dtype,t),o=ft(a,i);return n.makeTensorInfo(o.shape,o.dtype,o.values)}const o=new eu(s.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}const nu={kernelName:r.Tile,backendName:"webgl",kernelFunc:tu};class ru{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class au{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function su(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function iu(e){let t=1;for(;t<e;)t*=2;return t}const ou={kernelName:r.TopK,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{k:i,sorted:o}=a,u=Object(r.env)().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),c=Object(r.env)().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=s.shape,d=l[l.length-1];if(n.shouldExecuteOnCPU([s])||d<u||i>c){const e=n.readSync(s.dataId),[t,r]=mt(e,l,s.dtype,i,o);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===i)return l[l.length-1]=0,[n.makeTensorInfo(l,s.dtype,[]),n.makeTensorInfo(l,"int32",[])];if(1===d)return[s,Va({attrs:{shape:l,dtype:"int32",value:0},backend:n})];const p=n.texData.get(s.dataId),h=null!==p&&p.isPacked,f=h?n.unpackTensor(s):s,m=r.util.sizeFromShape(l)/d,b=rn({inputs:{x:f},attrs:{shape:[m,d]},backend:n});h&&su(n,f);const g=iu(i),x=iu(d);let y=null;const k=()=>null===y?[b,b]:[b,y],v=(e,t,r)=>{const a=k(),s=new ru(r),i=[[d],[null===y?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=y;y=n.runWebGLProgram(s,a,"int32",i),su(n,o)};for(let e=1;e<g;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)v(t,n,[m,x])}for(let e=x;e>g;e/=2){const t=k(),r=new au([m,e/2]),a=[[d],[null===y?1:0],[g]],s=y;y=n.runWebGLProgram(r,t,"int32",a),su(n,s);const i=g/2,o=2*i;for(let e=i;e>=1;e/=2)v(o,e,y.shape)}let w=y;y=lr({inputs:{x:y},backend:n,attrs:{begin:0,size:[m,i]}}),su(n,w);let I=cs({inputs:{x:b,indices:y},backend:n,attrs:{axis:1,batchDims:1}});su(n,b);const S=l.slice(0,-1);S.push(i),w=y,y=rn({inputs:{x:y},attrs:{shape:S},backend:n}),su(n,w);const _=I;return I=rn({inputs:{x:I},attrs:{shape:S},backend:n}),su(n,_),[I,y]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uu{constructor(e,t,n,r,a,s){this.variableNames=["Image","Transforms"],this.outputShape=s;const i="nearest"===n?1:2;let o;switch(r){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cu={kernelName:r.Transform,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:c}=r,[l,d,p,h]=a.shape,[f,m]=null!=c?c:[d,p],b=new uu(d,p,i,o,u,[l,f,m,h]);return n.runWebGLProgram(b,[a,s],"float32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lu={kernelName:r.Unique,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;B(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(s.dataId),{outputValues:o,outputShape:u,indices:c}=gt(i,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,o),r.makeTensorInfo([c.length],"int32",c)]}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const du={kernelName:r.Unpack,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a,o=i.shape.length,u=a.shape[s],c=new Array(o-1);let l=0;for(let e=0;e<o;e++)e!==s&&(c[l++]=i.shape[e]);const d=[],p=new Array(o).fill(0),h=i.shape.slice();h[s]=1;const f=new Array(u);for(let e=0;e<f.length;e++){p[s]=e;const t=lr({inputs:{x:i},backend:n,attrs:{begin:p,size:h}}),r=rn({inputs:{x:t},backend:n,attrs:{shape:c}});f[e]=r,d.push(t)}return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pu{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,i=s*Math.ceil(a/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),u=n%4,c="\n        sumValue += dot(values, segFilter);\n    ";let l="";a%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let d="";a%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${d}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${c}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${c}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${c}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${c}\n        }\n        setOutput(sumValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hu=[gn,yn,vn,In,Cn,Tn,An,En,Pn,Bn,Ln,Wn,Gn,Hn,Kn,Qn,Zn,tr,nr,rr,ir,pr,hr,fr,yr,wr,_r,Lt,$r,Dr,Ur,Kr,Xr,Yr,Qr,Zr,ea,na,aa,la,da,pa,fa,ga,ka,va,Ia,_a,Ca,$a,Ta,Ea,Ra,Ma,Pa,La,Ua,Ha,Ka,Qa,Ja,ns,as,ss,os,ls,ps,fs,Bt,ms,Rr,gs,ys,vs,Ut,Is,_s,Cs,$s,As,Ns,Fs,Ds,js,zs,Us,Vs,Hs,qs,Ys,Qs,Zs,Js,ei,ni,si,oi,bi,nn,gi,yi,vi,Ii,br,_i,$i,Ti,Ri,Mi,Ht,Di,Bi,xr,li,Li,Wi,Gi,an,qi,Xi,Zi,eo,ro,so,oo,co,po,fo,bo,xo,ko,wo,So,Co,dr,mi,$o,To,Ao,Eo,No,Ro,Fo,Mo,Bo,Lo,Uo,Go,Ho,qo,Ko,Xo,hi,hn,Qo,Jo,nu,ou,cu,mn,lu,du,{kernelName:r.UnsortedSegmentSum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,segmentIds:i}=t,{numSegments:o}=a,u=s.shape.length,c=[];let l=0;const d=r.backend_util.getAxesPermutation([l],u);let p=s;null!=d&&(p=fn({inputs:{x:s},backend:n,attrs:{perm:d}}),c.push(p),l=r.backend_util.getInnerMostAxes(1,u)[0]);const h=r.backend_util.segment_util.computeOutShape(p.shape,l,o),f=r.util.sizeFromShape([p.shape[l]]),m=rn({inputs:{x:p},backend:n,attrs:{shape:[-1,f]}});c.push(m);const b=Object(r.sumOutType)(s.dtype),g=(e,t,a,s,i)=>{const o=e.shape[0],u=e.shape[1],l=r.backend_util.segment_util.segOpComputeOptimalWindowSize(u,i),d=new pu({windowSize:l,inSize:u,batchSize:o,numSegments:i},t),p=n.compileAndRun(d,[e,a],s);if(c.push(p),p.shape[1]===i)return p;const h=Pi({backend:n,attrs:{start:0,stop:i,step:1,dtype:"float32"}}),f=tu({inputs:{x:h},backend:n,attrs:{reps:[u/l]}});c.push(h),c.push(f);return g(p,t,f,s,i)},x=rn({inputs:{x:g(m,"unsortedSegmentSum",i,b,o)},backend:n,attrs:{shape:h}});let y=x;if(null!=d){c.push(x);const e=r.backend_util.getUndoAxesPermutation(d);y=fn({inputs:{x:y},backend:n,attrs:{perm:e}})}return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},Oi];
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */for(const e of hu)Object(r.registerKernel)(e);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */},function(e,t,n){"use strict";var r=n(0);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a=Object(r.env)();
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
var s;a.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",(()=>15)),a.registerFlag("WEBGPU_CPU_FORWARD",(()=>!0)),a.registerFlag("WEBGPU_MATMUL_WORK_PER_THREAD",(()=>4)),a.registerFlag("WEBGPU_MATMUL_PROGRAM_TYPE",(()=>-1)),a.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",(()=>!1)),a.registerFlag("WEBGPU_USE_LOW_POWER_GPU",(()=>!1)),a.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e3)),a.registerFlag("WEBGPU_USE_PROFILE_TOOL",(()=>!1)),a.registerFlag("WEBGPU_IMPORT_EXTERNAL_TEXTURE",(()=>!1)),function(e){e[e.MUL=0]="MUL",e[e.ADD=1]="ADD",e[e.SUB=2]="SUB",e[e.DIV=3]="DIV",e[e.EQUAL=4]="EQUAL",e[e.GREATER=5]="GREATER",e[e.GREATER_EQUAL=6]="GREATER_EQUAL",e[e.LESS=7]="LESS",e[e.LESS_EQUAL=8]="LESS_EQUAL",e[e.LOGICAL_AND=9]="LOGICAL_AND",e[e.NOT_EQUAL=10]="NOT_EQUAL",e[e.SQUARED_DIFFERENCE=11]="SQUARED_DIFFERENCE",e[e.INT_DIV=12]="INT_DIV",e[e.POW=13]="POW",e[e.PRELU=14]="PRELU",e[e.MAX=15]="MAX",e[e.MIN=16]="MIN",e[e.COMPLEX_MULTIPLY_REAL=17]="COMPLEX_MULTIPLY_REAL",e[e.COMPLEX_MULTIPLY_IMAG=18]="COMPLEX_MULTIPLY_IMAG"}(s||(s={}));const i="\n  if (isNaN.r) {\n    resultTemp.r = uniforms.NAN;\n  }\n  if (isNaN.g) {\n    resultTemp.g = uniforms.NAN;\n  }\n  if (isNaN.b) {\n    resultTemp.b = uniforms.NAN;\n  }\n  if (isNaN.a) {\n    resultTemp.a = uniforms.NAN;\n  }\n  ",o=`\n  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);\n  let isModRound1 = vec4<f32>(isModRound1Bool);\n  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);\n  var resultTemp = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  let isExpZero = b == vec4<f32>(0.0);\n  if (isExpZero.r) {\n    resultTemp.r = 1.0;\n  }\n  if (isExpZero.g) {\n    resultTemp.g = 1.0;\n  }\n  if (isExpZero.b) {\n    resultTemp.b = 1.0;\n  }\n  if (isExpZero.a) {\n    resultTemp.a = 1.0;\n  }\n  let isNaN = a < vec4<f32>(0.0) & floor(b) < b;\n  ${i}\n  return resultTemp;\n  `;function u(e,t){const n=t?i:"\n  if (isnan(a)) { return a; }\n  if (isnan(b)) { return b; }\n  ";return t?`\n    var resultTemp = vec4<f32>(${e}(a, b));\n    let isNaN = isnanVec4(a) | isnanVec4(b);\n    `+n+"\n    return resultTemp;\n  ":n+`\n    return ${e}(a, b);\n  `}function c(e,t){switch(e){case s.MUL:return"return a * b;";case s.ADD:return"return a + b;";case s.SUB:return"return a - b;";case s.DIV:return"return a / b;";case s.EQUAL:return t?"return vec4<f32>(a == b);":"return f32(a == b);";case s.GREATER:return t?"return vec4<f32>(a > b);":"return f32(a > b);";case s.GREATER_EQUAL:return t?"return vec4<f32>(a >= b);":"return f32(a >= b);";case s.LESS:return t?"return vec4<f32>(a < b);":"return f32(a < b);";case s.LESS_EQUAL:return t?"return vec4<f32>(a <= b);":"return f32(a <= b);";case s.LOGICAL_AND:return t?"return (vec4<f32>(a >= vec4<f32>(1.0)) *\n  vec4<f32>(b >= vec4<f32>(1.0)));":"return f32(f32(a) >= 1.0 && f32(b) >= 1.0);";case s.NOT_EQUAL:return t?"return vec4<f32>(a != b);":"return f32(a != b);";case s.SQUARED_DIFFERENCE:return"return (a - b) * (a - b);";case s.INT_DIV:return t?"\n  let ia = vec4<i32>(round(a));\n  let ib = vec4<i32>(round(b));\n  let cond = ib != vec4<i32>(0);\n  var resultTemp = vec4<i32>(0);\n  let s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    resultTemp[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    resultTemp[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    resultTemp[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    resultTemp[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4<f32>(resultTemp);\n  ":"\n  let s = sign(a) * sign(b);\n  let ia = i32(round(a));\n  let ib = i32(round(b));\n  return f32(idiv(ia, ib, s));\n  ";case s.PRELU:return t?"\n  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));\n  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);\n  ":"if (a < 0.0) { return b * a; }  return a;";case s.MAX:return u("max",t);case s.MIN:return u("min",t);case s.POW:return t?o:"\n  if(a < 0.0 && floor(b) < b) {\n    return uniforms.NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  if (round(abs(b) % 2.0) != 1.0) {\n    return pow(abs(a), b);\n  }\n  return sign(a) * pow(abs(a), b);\n  ";case s.COMPLEX_MULTIPLY_REAL:return"return areal * breal - aimag * bimag;";case s.COMPLEX_MULTIPLY_IMAG:return"return areal * bimag + aimag * breal;";default:throw new Error(`BinaryType ${e} is not implemented!`)}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var l;!function(e){e[e.ABS=0]="ABS",e[e.CEIL=1]="CEIL",e[e.COS=2]="COS",e[e.COSH=3]="COSH",e[e.ELU=4]="ELU",e[e.EXP=5]="EXP",e[e.EXPM1=6]="EXPM1",e[e.FLOOR=7]="FLOOR",e[e.LINEAR=8]="LINEAR",e[e.LOG=9]="LOG",e[e.LOGICAL_NOT=10]="LOGICAL_NOT",e[e.NEG=11]="NEG",e[e.RELU=12]="RELU",e[e.RELU6=13]="RELU6",e[e.LEAKYRELU=14]="LEAKYRELU",e[e.RSQRT=15]="RSQRT",e[e.SIN=16]="SIN",e[e.SINH=17]="SINH",e[e.SIGMOID=18]="SIGMOID",e[e.SQRT=19]="SQRT",e[e.SQUARE=20]="SQUARE",e[e.TANH=21]="TANH",e[e.TO_INT=22]="TO_INT"}(l||(l={}));function d(e,t){switch(e){case l.ABS:return"return abs(a);";case l.COS:return"return cos(a);";case l.COSH:return"\n  let e2x = exp(-a);\n  return (e2x + 1.0 / e2x) / 2.0;\n";case l.CEIL:return"return ceil(a);";case l.ELU:return t?"\n  var resFloat = exp(a) - vec4<f32>(1.0);\n  if (a.r >= 0.0) {\n    resFloat.r = a.r;\n  }\n  if (a.g >= 0.0) {\n    resFloat.g = a.g;\n  }\n  if (a.b >= 0.0) {\n    resFloat.b = a.b;\n  }\n  if (a.a >= 0.0) {\n    resFloat.a = a.a;\n  }\n  return resFloat;\n":"if (a >= 0.0) { return a; }  return (exp(a) - 1.0);";case l.EXP:return"return exp(a);";case l.EXPM1:return"return exp(a) - 1.0;";case l.FLOOR:return"return floor(a);";case l.LINEAR:return"return a;";case l.LOG:return"if (a < 0.0) { return 1.0/0.0; }\n  return log(a);";case l.LOGICAL_NOT:return"return f32(!(a >= 1.0));";case l.NEG:return"return -a;";case l.LEAKYRELU:return t?"\n  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));\n  return (aLessThanZero * (uniforms.alpha * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);\n":"if (a < 0.0) { return uniforms.alpha * a; } return a;";case l.RELU:return t?"\n  return select(a, vec4<f32>(0.0), a < vec4<f32>(0.0));\n":"return select(a, 0.0, a < 0.0);";case l.RELU6:return t?"return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));":"return clamp(a, 0.0, 6.0);";case l.RSQRT:return"return 1.0/sqrt(a);";case l.SIGMOID:return"return 1.0 / (1.0 + exp(-1.0 * a));";case l.SIN:return"return sin(a);";case l.SINH:return"\n  let e2x = exp(a);\n  return (e2x - 1.0 / e2x) / 2.0;\n";case l.SQRT:return"return sqrt(a);";case l.SQUARE:return"return a * a;";case l.TANH:return"\n  let e2x = exp(-2.0 * abs(a));\n  return sign(a) * (1.0 - e2x) / (1.0 + e2x);\n";case l.TO_INT:return"return f32(i32((a)));";default:throw new Error(`BinaryType ${e} is not implemented!`)}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p=e=>{switch(e){case 1:return"f32";case 2:return"vec2<f32>";case 3:return"vec3<f32>";case 4:return"vec4<f32>";default:throw new Error(`${e}-component is not supported.`)}};function h(e,t=!1,n=!1,r=3){if(null===e)return"";let a="";if("linear"===e)a=d(l.LINEAR);else if("relu"===e)a=d(l.RELU,n);else if("elu"===e)a=d(l.ELU,n);else if("relu6"===e)a=d(l.RELU6,n);else if("prelu"===e)a=c(s.PRELU,n);else if("sigmoid"===e)a=d(l.SIGMOID,n);else{if("leakyrelu"!==e)throw new Error(`Activation ${e} has not been implemented for the WebGPU backend.`);a=d(l.LEAKYRELU,n)}const i=p(n?4:1);let o="";return o=t?`\n      fn activation(a : ${i}, coords : vec${r}<i32>) -> ${i} {\n        let b = getPreluActivationWeightsByOutputCoords(coords);\n        ${a}\n      }`:`\n      fn activation(a : ${i}, coords : vec${r}<i32>) -> ${i} {\n        ${a}\n      }`,o}function f(e,t){return`\n      ${e?"value = value + getBiasByOutputCoords(coords);":""}\n      ${t?"value = activation(value, coords);":""}\n      `}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m(e,t){if(Math.max(...e)>3)throw new Error("Cannot symbolically compute strides for rank > 4 tensor.");const n=e.length,r=e.map((e=>`${t}[${e}]`)),a=new Array(n-1);a[n-2]=r[n-1];for(let e=n-3;e>=0;--e)a[e]=`(${a[e+1]} * ${r[e+1]})`;return a}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b=(e,t,n,a)=>{const s=function(e,t,n){const a=[];if(a.push(`\n      const workGroupSizeX = ${n.workGroupSize[0]}u;\n      const workGroupSizeY = ${n.workGroupSize[1]}u;\n      const workGroupSizeZ = ${n.workGroupSize[2]}u;\n\n      var<private> localId: vec3<u32>;\n      var<private> globalId: vec3<u32>;\n      var<private> numWorkgroups: vec3<u32>;\n\n      // Only used when the y/z dimension of workgroup size is 1.\n      fn getGlobalIndex() -> i32 {\n        ${_(n)?"  return i32(globalId.x);":"  let localInvocationIndex = localId.z * workGroupSizeX * workGroupSizeY +\n                   localId.y * workGroupSizeX + localId.x;\n               let workGroupID = (globalId - localId)/vec3<u32>(\n                   workGroupSizeX, workGroupSizeY, workGroupSizeZ);\n\n               return i32((workGroupID.z * numWorkgroups.x * numWorkgroups.y +\n                   workGroupID.y * numWorkgroups.x + workGroupID.x) *\n                   (workGroupSizeX * workGroupSizeY * workGroupSizeZ) +\n                   localInvocationIndex);\n        "}\n      }\n    `),n.isFromPixels)return a.push(`\n        struct Uniform {\n          size            : i32,\n          numChannels     : i32,\n          outShapeStrides : vec2<i32>,\n        };\n\n        @group(0) @binding(0) var<storage, read_write> result: array<${C(t.dtype,n.isVec4)}>;\n        @group(0) @binding(2) var<uniform> uniforms: Uniform;\n      `),[w,a.join("\n"),I(t.shape),n.getUserCode()].join("\n");let s=!1,i=!1,o="struct Uniforms { NAN : f32, ";n.variableNames.forEach(((t,n)=>{const r=g(e[n].shape.length);"vec5"!==r&&"vec6"!==r||(i=!0),(s||i)&&(o+="@align(16) "),s=i,o+=`${t.charAt(0).toLowerCase()+t.slice(1)}Shape : ${r}, `}));const u=g(t.shape.length);i="vec5"===u||"vec6"===u,(s||i)&&(o+="@align(16) ");s=i,o+=`outShape : ${u}, `;const c=g(t.shape.length-1);i="vec5"===c||"vec6"===c,(s||i)&&(o+="@align(16) ");s=i,o+=`\n         outShapeStrides: ${c}, `,n.size&&(s&&(o+="@align(16) "),s=!1,o+="size : i32, ");n.uniforms&&(s&&(o+="@align(16) "),o+=n.uniforms);o+="};",a.push(o),n.atomic?a.push("\n      @group(0) @binding(0) var<storage, read_write> result: array<atomic<i32>>;\n    "):a.push(`\n      @group(0) @binding(0) var<storage, read_write> result: array<${C(t.dtype,n.isVec4)}>;\n    `);n.variableNames.forEach(((t,r)=>{a.push(`\n      @group(0) @binding(${1+r}) var<storage, read> ${t}: array<${n.variableTypes?n.variableTypes[r]:C(e[r].dtype,n.isVec4)}>;\n        `)})),""!==o&&a.push(`\n      @group(0) @binding(${1+n.variableNames.length}) var<uniform> uniforms: Uniforms;\n      `);const l=function(e,t){const{x:n,y:r=[],z:a=[]}=t,s=e.length;if(n.length===s){return`fn getOutputCoords() -> ${g(s)}{\n    let globalIndex = getGlobalIndex();\n    return getCoordsFromIndex(globalIndex);\n  }\n  `}let i="";const o=[n,r,a];let u=0;for(let e=0;e<o.length;e++){const t=o[e];if(0!==t.length)if(u+=t.length,1===t.length)i+=`let d${t[0]} = i32(globalId[${e}]);`;else{const n=m(t,"uniforms.outShape");i+=`var index${e} = i32(globalId[${e}]);`;for(let r=0;r<n.length;r++)i+=`let d${t[r]} = index${e} / ${n[r]};`,r===n.length-1?i+=`let d${t[r+1]} = index${e} - d${t[r]} * ${n[r]};`:i+=`index${e} = index${e} - d${t[r]} * ${n[r]};`}}const c=[];for(let e=0;e<u;e++)c.push(`d${e}`);const l=g(u);let d=`fn getOutputCoords() -> ${l} {\n  ${i}\n`;0===c.length?d+=`return ${l}(0); }`:d+=`return ${l}(${c.join(",")}); }`;return d}(t.shape,n.dispatchLayout),d=[w,a.join("\n"),I(t.shape),l,S(t.shape.length)];n.atomic||d.push(function(e,t,n){const r=e.length,a=C(t,n);let s;s=n?`fn setOutputAtIndex(flatIndex : i32, value : vec4<f32>) {\n      result[flatIndex] = ${a}(value);\n    }\n    fn setOutputAtIndexI32(flatIndex : i32, value : vec4<i32>) {\n      result[flatIndex] = ${a}(value);\n    }`:`fn setOutputAtIndex(flatIndex : i32, value : f32) {\n      result[flatIndex] = ${a}(value);\n    }\n    fn setOutputAtIndexI32(flatIndex : i32, value : i32) {\n      result[flatIndex] = ${a}(value);\n    }`;if(r>=2){const e=["d0","d1","d2","d3","d4","d5"].slice(0,r),t=g(r);s+=n?`\n      fn setOutputAtCoords(${e.map((e=>`${e} : i32`)).join(", ")}, value : vec4<f32>) {\n        let flatIndex = getOutputIndexFromCoords(${t}(${e.join(", ")}));\n        setOutputAtIndex(flatIndex / 4, value);\n      }\n      fn setOutputAtCoordsI32(${e.map((e=>`${e} : i32`)).join(", ")}, value : vec4<i32>) {\n        let flatIndex = getOutputIndexFromCoords(${t}(${e.join(", ")}));\n        setOutputAtIndexI32(flatIndex / 4, value);\n      }\n    `:`\n      fn setOutputAtCoords(${e.map((e=>`${e} : i32`)).join(", ")}, value : f32) {\n        let flatIndex = getOutputIndexFromCoords(${t}(${e.join(", ")}));\n        setOutputAtIndex(flatIndex, value);\n      }\n      fn setOutputAtCoordsI32(${e.map((e=>`${e} : i32`)).join(", ")}, value : i32) {\n        let flatIndex = getOutputIndexFromCoords(${t}(${e.join(", ")}));\n        setOutputAtIndexI32(flatIndex, value);\n      }\n    `}return s}(t.shape,t.dtype,n.isVec4));const p=e.map(((e,a)=>function(e,t,n,a){let s=function(e,t){const n=e.name,r=e.shape.length,a=g(r),s="get"+n.charAt(0).toUpperCase()+n.slice(1),i=["d0","d1","d2","d3","d4","d5"].slice(0,r),o=i.map((e=>`${e} : i32`)).join(", ");if(r<1)return t?`\n        fn ${s}() -> vec4<f32> {\n          return vec4<f32>(${n}[0]);\n        }\n      `:`\n      fn ${s}() ->f32 {\n        return f32(${n}[0]);\n      }\n    `;const u=`uniforms.${n.charAt(0).toLowerCase()+n.slice(1)}Shape`;let c=`${r}D`;0===r&&(c="1D");if(t)return`\n      fn ${s}(${o}) -> vec4<f32> {\n        return vec4<f32>(${n}[getIndexFromCoords${c}(${a}(${i.join(",")}),\n          ${u}) / 4]);\n      }\n      `;return`\n    fn ${s}(${o}) -> f32 {\n      return f32(${n}[getIndexFromCoords${c}(${a}(${i.join(",")}),\n        ${u})]);\n    }\n   `}(e,n);e.shape.length<=t.length&&(s+=function(e,t,n,a){const s=e.name,i=s.charAt(0).toUpperCase()+s.slice(1),o="get"+i+"ByOutput",u=e.shape.length,c=t.length,l=g(c);if(r.util.arraysEqual(e.shape,t)&&a)return n?`\n      fn ${o}Index(globalIndex : i32) -> vec4<f32> {\n        return vec4<f32>(${s}[globalIndex]);\n      }\n\n      fn ${o}Coords(coords : ${l}) -> vec4<f32> {\n        return vec4<f32>(${s}[${c>1?"getOutputIndexFromCoords(coords)":"coords"} / 4]);\n      }\n      `:`\n    fn ${o}Index(globalIndex : i32) -> f32 {\n      return f32(${s}[globalIndex]);\n    }\n\n    fn ${o}Coords(coords : ${l}) -> f32 {\n      return f32(${s}[${c>1?"getOutputIndexFromCoords(coords)":"coords"}]);\n    }\n    `;const d=r.backend_util.getBroadcastDims(e.shape,t),p=c-u;let h="";if(0===u)return n?`\n    fn ${o}Index(globalIndex : i32) -> vec4<f32> {\n      return get${i}();\n    }\n\n    fn ${o}Coords(coords : ${l}) -> vec4<f32> {\n      return get${i}();\n    }\n  `:`\n    fn ${o}Index(globalIndex : i32) -> f32{\n      return get${i}();\n    }\n\n    fn ${o}Coords(coords : ${l}) -> f32{\n      return get${i}();\n    }\n  `;h=c<2&&d.length>=1?"coords = 0;":d.map((e=>`coords.${x(e+p)} = 0;`)).join("\n");let f="";if(c<2&&u>0)f="coords";else if(c>1){const t=g(u),n=e.shape.map(((e,t)=>`coords.${x(t+p)}`)).join(", ");f=`${t}(${n})`}else f="coords";const m=`uniforms.${s.charAt(0).toLowerCase()+s.slice(1)}Shape`,b=`${u}D`;if(n)return`\n    fn ${o}Index(globalIndex : i32) -> vec4<f32> {\n      var coords = getCoordsFromIndex(globalIndex);\n      ${h}\n      return ${s}[getIndexFromCoords${b}(${f}, ${m}) / 4];\n    }\n\n    fn ${o}Coords(coordsIn : ${l}) -> vec4<f32> {\n      var coords = coordsIn;\n      ${h}\n      return ${s}[getIndexFromCoords${b}(${f}, ${m}) / 4];\n    }\n  `;return`\n  fn ${o}Index(globalIndex : i32) -> f32 {\n    var coords = getCoordsFromIndex(globalIndex);\n    ${h}\n    return f32(${s}[getIndexFromCoords${b}(${f}, ${m})]);\n  }\n\n  fn ${o}Coords(coordsIn : ${l}) -> f32 {\n    var coords = coordsIn;\n    ${h}\n    return f32(${s}[getIndexFromCoords${b}(${f}, ${m})]);\n  }\n`}(e,t,n,a));return s}(e,t.shape,n.variableTypes?"vec4<f32>"===n.variableTypes[a]:n.isVec4,n.dispatchLayout.x.length===t.shape.length))).join("\n");d.push(p),d.push(n.getUserCode());return d.join("\n")}(n,{dtype:a.dtype,shape:a.shape},t),i=e.createShaderModule({code:s,label:t.constructor.name});return e.createComputePipeline({compute:{module:i,entryPoint:"main"},label:t.constructor.name,layout:"auto"})};function g(e){if(e<=1)return"i32";if(2===e)return"vec2<i32>";if(3===e)return"vec3<i32>";if(4===e)return"vec4<i32>";if(5===e)return"vec5";if(6===e)return"vec6";throw Error(`GPU for rank ${e} is not yet supported`)}function x(e){if(0===e)return"x";if(1===e)return"y";if(2===e)return"z";if(3===e)return"w";if(4===e)return"u";if(5===e)return"v";throw Error(`Index ${e} is not yet supported`)}function y(){return`\n    ${k()}\n      let index = getGlobalIndex();\n`}function k(){return`\n  ${v()}\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n`}function v(){return"\n  @compute @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n"}const w="\n  struct vec5 {x: i32, y: i32, z: i32, w: i32, u: i32};\n  struct vec6 {x: i32, y: i32, z: i32, w: i32, u: i32, v: i32};\n\n  // Checks whether coordinates lie within the bounds of the shape.\n  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {\n    return all(coord >= vec2<i32>(0)) && all(coord < shape);\n  }\n  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {\n    return all(coord >= vec3<i32>(0)) && all(coord < shape);\n  }\n  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {\n    return all(coord >= vec4<i32>(0)) && all(coord < shape);\n  }\n\n  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {\n    return coord;\n  }\n  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {\n    return dot(coords, vec2<i32>(shape.y, 1));\n  }\n  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {\n    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));\n  }\n  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n    return dot(coords, vec4<i32>(\n        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n  }\n  fn getIndexFromCoords5D(coords : vec5, shape : vec5) -> i32 {\n    let shapeStrides: vec5 = vec5(shape.y * shape.z * shape.w * shape.u, shape.z * shape.w * shape.u, shape.w * shape.u, shape.u, 1);\n    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u;\n  }\n  fn getIndexFromCoords6D(coords : vec6, shape : vec6) -> i32 {\n    let shapeStrides: vec6 = vec6(shape.y * shape.z * shape.w * shape.u * shape.v, shape.z * shape.w * shape.u * shape.v, shape.w * shape.u * shape.v, shape.u * shape.v, shape.v, 1);\n    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u + coords.v*shapeStrides.v;\n  }\n\n  fn idiv(a: i32, b: i32, sign: f32) -> i32 {\n    var res: i32 = a / b;\n    let mod: i32 = a % b;\n    if (sign < 0. && mod != 0) {\n      res = res - 1;\n    }\n    return res;\n  }\n\n  // NaN defination in IEEE 754-1985 is :\n  //   - sign = either 0 or 1.\n  //   - biased exponent = all 1 bits.\n  //   - fraction = anything except all 0 bits (since all 0 bits represents infinity).\n  // https://en.wikipedia.org/wiki/IEEE_754-1985#Representation_of_non-numbers\n  fn isnan(val: f32) -> bool {\n    let floatToUint: u32 = bitcast<u32>(val);\n    return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n  }\n  fn isnanVec4(val : vec4<f32>) -> vec4<bool> {\n    return vec4<bool>(isnan(val[0]), isnan(val[1]), isnan(val[2]), isnan(val[3]));\n  }\n";function I(e){const t=e.length;if(t<=1)return"fn getCoordsFromIndex(index : i32) -> i32 { return index; }";const n=r.util.computeStrides(e),a=g(t),s=[];for(let e=0;e<t;e++)s.push(`d${e}`);if(1===n.length)return"    fn getCoordsFromIndex(index : i32) -> vec2<i32> {\n      let d0 = index / uniforms.outShapeStrides; let d1 = index - d0 * uniforms.outShapeStrides;\n      return vec2<i32>(d0, d1);\n    }";let i;return i="var index2 = index;"+n.map(((e,t)=>`${`let ${s[t]} = index2 / uniforms.outShapeStrides.${x(t)}`}; ${t===n.length-1?`let ${s[t+1]} = index2 - ${s[t]} * uniforms.outShapeStrides.${x(t)}`:`index2 = index2 - ${s[t]} * uniforms.outShapeStrides.${x(t)}`};`)).join(""),`\n    fn getCoordsFromIndex(index : i32) -> ${a} {\n      ${i}\n      return ${a}(${s.join(",")});\n    }\n  `}function S(e){let t="";switch(e){case 0:case 1:t+="\n        fn getOutputIndexFromCoords(coords : i32) -> i32 {\n          return coords;\n        }\n        ";break;case 2:t+="\n        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {\n          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));\n        }\n        ";break;case 3:t+="\n        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {\n          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));\n        }\n        ";break;case 4:t+="\n        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n          return dot(coords, vec4<i32>(\n            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));\n        }\n        ";break;case 5:t+="\n        fn getOutputIndexFromCoords(coords : vec5) -> i32 {\n          return coords.x * uniforms.outShapeStrides.x +\n              coords.y * uniforms.outShapeStrides.y +\n              coords.z * uniforms.outShapeStrides.z +\n              coords.w * uniforms.outShapeStrides.w +\n              coords.u;\n        }\n        ";break;case 6:t+="\n        fn getOutputIndexFromCoords(coords : vec6) -> i32 {\n          return coords.x * uniforms.outShapeStrides.x +\n              coords.y * uniforms.outShapeStrides.y +\n              coords.z * uniforms.outShapeStrides.z +\n              coords.w * uniforms.outShapeStrides.w +\n              coords.u * uniforms.outShapeStrides.u +\n              coords.v;\n        }\n        ";break;default:r.util.assert(!1,(()=>`Unsupported ${e}D shape`))}return t}function _(e){return 1===e.dispatch[1]&&1===e.dispatch[2]}function C(e,t){return"float32"===e?t?"vec4<f32>":"f32":"int32"===e||"bool"===e?t?"vec4<i32>":"i32":e}const O=e=>{let t=1;for(let n=0;n<e.length;n++)t*=e[n];return t};function $(e,t,n=[1,1,1],r=[1,1,1]){const[a,s,i]=[Math.ceil(O(e.x.map((e=>t[e])))/(n[0]*r[0])),e.y?Math.ceil(O(e.y.map((e=>t[e])))/(n[1]*r[1])):1,e.z?Math.ceil(O(e.z.map((e=>t[e])))/(n[2]*r[2])):1];return[a,s,i]}function T(e,t,n=!1){if(n)return[8,8,1];const r=O(e.x.map((e=>t[e]))),a=O(e.y.map((e=>t[e])));return r<=4?[4,16,1]:a<=4?[16,4,1]:[16,16,1]}function A(e,t,n=!1){if(n)return[4,4,1];const r=O(e.x.map((e=>t[e]))),a=O(e.y.map((e=>t[e])));return r<=4?[1,2,1]:a<=4?[2,1,1]:[2,2,1]}function E(e){return{x:e.map(((e,t)=>t))}}function N(){return("undefined"!=typeof window||"undefined"!=typeof WorkerGlobalScope)&&!!navigator.gpu}var R;
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function F(e,t,n,a,s=!1,i=!1,o=!1,u=1){r.util.assert(n&&1===u||!n,(()=>`transposeA ${n} is not compatible with component size ${u}`));const c=`\n      let batch = ${e?"0":"batchIn"};\n      let batchASize = uniforms.aShape[1] * uniforms.aShape[2];\n      ${n?`value = A[(batch * batchASize + col * uniforms.aShape[2] + row) / ${u}];`:`value = A[(batch * batchASize + row * uniforms.aShape[2] + col) / ${u}];`}\n\n    `;let l;return l=!1===a?`value = B[(batch * batchBSize + row * uniforms.bShape[2] + col) / ${u}];`:`value = B[(batch * batchBSize + col * uniforms.bShape[2] + row) / ${u}];`,`\n  fn mm_readA(batchIn: i32, row: i32, colIn: i32) -> ${p(u)} {\n    var value = ${p(u)}(0.0);\n    let col = colIn * ${u};\n    ${s&&o?c:`\n    ${n?"if(row < uniforms.dimAOuter && col < uniforms.dimInner)":"if(row < uniforms.aShape[1] && col < uniforms.aShape[2])"}\n    {\n      ${c}\n    }\n    `}\n    return value;\n  }\n\n  fn mm_readB(batchIn: i32, row: i32, colIn: i32) -> ${p(u)} {\n    let col = colIn * ${u};\n    let batch = ${t?"0":"batchIn"};\n    let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];\n    var value = ${p(u)}(0.0);\n    ${l}\n    return value;\n  }\n  `}function M(e,t,n,r,a,s,i=!1,o=!1,u=!1,c=1){return`\n  ${F(n,r,a,s,i,o,u,c)}\n  fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${p(c)}) {\n    let col = colIn * ${c};\n    ${i&&o?"":"if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)"}\n    {\n      var value = valueIn;\n      let coords = vec3<i32>(batch, row, col);\n      ${f(e,t)}\n      setOutputAtCoords(coords[0], coords[1], coords[2], value);\n    }\n  }\n  `}!function(e){e[e.MatMulPackedVec4Program=0]="MatMulPackedVec4Program",e[e.MatMulReduceProgram=1]="MatMulReduceProgram",e[e.MatMulSplitKProgram=2]="MatMulSplitKProgram",e[e.MatMulSmallOutputSizeProgram=3]="MatMulSmallOutputSizeProgram",e[e.MatMulPackedProgram=4]="MatMulPackedProgram",e[e.MatMulMax=5]="MatMulMax"}(R||(R={}));function D(e,t,n=!1,a=32){const s=e[1]*t[1],i=e[0]*t[0],o=n?s:a,u=n?a:s;r.util.assert(u%t[1]==0&&o%t[0]==0&&a%t[1]==0,(()=>`tileAHight ${u} must be divisible by workGroupSize[1]${t[1]}, tileAWidth ${o} must be divisible by workGroupSize[0]${t[0]}, tileInner ${a} must be divisible by workGroupSize[1]${t[1]}`));const c=u/t[1],l=o/t[0],d=a/t[1];return`\n    var<workgroup> mm_Asub : array<array<f32, ${o}>, ${u}>;\n    var<workgroup> mm_Bsub : array<array<f32, ${i}>, ${a}>;\n    const RowPerThread = ${e[1]};\n    const ColPerThread = ${e[0]};\n    const TileInner = ${a};\n\n    @compute @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n    fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n            @builtin(global_invocation_id) GlobalId : vec3<u32>,\n            @builtin(num_workgroups) NumWorkgroups: vec3<u32>,\n            @builtin(workgroup_id) workgroupId: vec3<u32>) {\n      localId = LocalId;\n      globalId = GlobalId;\n      numWorkgroups = NumWorkgroups;\n\n      let tileRow = i32(localId.y) * RowPerThread;\n      let tileCol = i32(localId.x) * ColPerThread;\n\n      let globalRow = i32(globalId.y) * RowPerThread;\n      let globalCol = i32(globalId.x) * ColPerThread;\n      let batch = i32(globalId.z);\n      let globalRowStart = i32(workgroupId.y) * ${s};\n\n      let numTiles = (uniforms.dimInner - 1) / TileInner + 1;\n\n      var acc : array<array<f32, ColPerThread>, RowPerThread>;\n\n      // Without this initialization strange values show up in acc.\n      for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {\n        for (var innerCol = 0; innerCol < ColPerThread; innerCol = innerCol + 1) {\n          acc[innerRow][innerCol] = 0.0;\n        }\n      }\n\n      let tileRowA = i32(localId.y) * ${c};\n      let tileColA = i32(localId.x) * ${l};\n      let tileRowB = i32(localId.y) * ${d};\n      // Loop over shared dimension.\n      for (var t = 0; t < numTiles; t = t + 1) {\n        // Load one tile of A into local memory.\n        for (var innerRow = 0; innerRow < ${c}; innerRow = innerRow + 1) {\n          for (var innerCol = 0; innerCol < ${l}; innerCol = innerCol + 1) {\n            let inputRow = tileRowA + innerRow;\n            let inputCol = tileColA + innerCol;\n            ${(e=>e?"\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          t * TileInner + inputRow,\n          globalRowStart + inputCol);\n        ":"\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          globalRowStart + inputRow,\n          t * TileInner + inputCol);\n        ")(n)}\n          }\n        }\n\n        // Load one tile of B into local memory.\n        for (var innerRow = 0; innerRow < ${d}; innerRow = innerRow + 1) {\n          for (var innerCol = 0; innerCol < ColPerThread; innerCol = innerCol + 1) {\n            let inputRow = tileRowB + innerRow;\n            let inputCol = tileCol + innerCol;\n            mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n              t * TileInner + inputRow,\n              globalCol + innerCol);\n          }\n        }\n\n        workgroupBarrier();\n\n        // Compute acc values for a single thread.\n        var BCached : array<f32, ColPerThread>;\n        for (var k = 0; k < TileInner; k = k + 1) {\n          for (var inner = 0; inner < ColPerThread; inner = inner + 1) {\n            BCached[inner] = mm_Bsub[k][tileCol + inner];\n          }\n\n          for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {\n            ${(e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];")(n)}\n            for (var innerCol = 0; innerCol < ColPerThread; innerCol = innerCol + 1) {\n              acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\n            }\n          }\n        }\n\n        workgroupBarrier();\n      }\n\n      for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {\n        for (var innerCol = 0; innerCol < ColPerThread; innerCol = innerCol + 1) {\n          mm_write(batch, globalRow + innerRow, globalCol + innerCol,\n              acc[innerRow][innerCol]);\n        }\n      }\n    }\n  `}class P{constructor(e,t,n,a,s,i=!1,o=!1,u=null,c=null,l=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[16,16,1],this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]};const d=i?e[1]:e[2];var p,h;this.workGroupSize=(p=t[1],h=t[2],1===p?[32,1,1]:1===h?[1,32,1]:[8,8,1]),1!==t[1]&&1!==t[2]||(n=1),this.dispatch=$(this.dispatchLayout,this.outputShape,this.workGroupSize,[n,n,1]),r.util.arraysEqual(this.dispatch,[1,1,1])&&(n=1,this.dispatch=$(this.dispatchLayout,this.outputShape,this.workGroupSize,[n,n,1]));const f=null!=u,m=null!=l;f&&this.variableNames.push("bias"),m&&this.variableNames.push("preluActivationWeights"),this.workPerThread=n,this.transposeA=i,this.transposeB=o,this.addBias=f,this.activation=c,this.hasPreluActivationWeights=m,this.batchAEqualOne=a,this.batchBEqualOne=s,[this.fitAOuter,this.fitBOuter,this.fitInner]=this.getShapeFit(t[1],t[2],d),this.shaderKey=`matMulPacked_${this.workPerThread}_${i}_${o}_${this.activation}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.outputShape[1]>1}_${this.batchAEqualOne}_${this.batchBEqualOne}`}getShapeFit(e,t,n){const r=this.workGroupSize[1]*this.workPerThread,a=this.workGroupSize[0]*this.workPerThread;this.tileInner=32,1===this.outputShape[1]&&(this.tileInner=4*this.workGroupSize[0]);return[e%r==0,t%a==0,n%this.tileInner==0]}getUserCode(){const e=`\n      ${h(this.activation,this.hasPreluActivationWeights)}\n      ${M(this.addBias,this.activation,this.batchAEqualOne,this.batchBEqualOne,!1,this.transposeB,this.fitAOuter,this.fitBOuter,this.fitInner)}\n      ${this.outputShape[1]>1?D([this.workPerThread,this.workPerThread,1],this.workGroupSize,this.transposeA,this.tileInner):function(e,t=!1){return r.util.assert(1===e[1]&&1===e[2],(()=>`A linear work group size is required. But got ${e}.`)),`\n    const TileSize = ${4*e[0]};\n    var<workgroup> mm_Asub : array<vec4<f32>, ${e[0]}>;\n\n    ${k()}\n      let tileCol = i32(localId.x);\n      let globalCol = i32(globalId.x);\n      let globalRow = i32(globalId.y);\n\n      let numTiles = (uniforms.dimInner - 1) / TileSize + 1;\n      let batch = i32(globalId.z);\n      // Without this initialization strange values show up in acc.\n      var acc = 0.0;\n\n      // Loop over shared dimension.\n      for (var t = 0; t < numTiles; t = t + 1) {\n        // Load one tile of A into local memory.\n        let colA = t * TileSize + tileCol * 4;\n        mm_Asub[tileCol] = vec4<f32>(${(e=>e?"\n      mm_readA(batch, colA, globalRow),\n      mm_readA(batch, colA + 1, globalRow),\n      mm_readA(batch, colA + 2, globalRow),\n      mm_readA(batch, colA + 3, globalRow)\n  ":"\n      mm_readA(batch, globalRow, colA),\n      mm_readA(batch, globalRow, colA + 1),\n      mm_readA(batch, globalRow, colA + 2),\n      mm_readA(batch, globalRow, colA + 3)\n  ")(t)});\n        workgroupBarrier();\n\n        // Compute acc values for a single thread.\n        for (var k = 0; k < TileSize / 4; k = k + 1) {\n          let rowB = t * TileSize + k * 4;\n          let BCached = vec4<f32>(mm_readB(batch, rowB, globalCol),\n                              mm_readB(batch, rowB + 1, globalCol),\n                              mm_readB(batch, rowB + 2, globalCol),\n                              mm_readB(batch, rowB + 3, globalCol));\n\n          let ACached = mm_Asub[k];\n          acc = acc + dot(ACached, BCached);\n        }\n\n        workgroupBarrier();\n      }\n\n      mm_write(batch, globalRow, globalCol, acc);\n    }\n  `}(this.workGroupSize,this.transposeA)}\n    `;return e}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B(e,t,n,a,s=4,i=!1){const o=i?t:a,u=i?a:t,c=i?e[1]:s;return r.util.assert((i&&t===n||a%4==0||a%3==0)&&4===e[0]&&(3===s||4===s),(()=>`tileInner ${a} must be divisible by 4|3. ColPerThread ${e[0]} must be 4.\n           innerElementSize ${s} must be 3|4.`)),`\n  var<workgroup> mm_Asub : array<array<vec${c}<f32>, ${o/c}>, ${u}>;\n  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${n/e[0]}>, ${a}>;\n\n  const RowPerThread = ${e[1]};\n  const ColPerThread = ${e[0]};\n  const InnerElementSize = ${s};\n  const TileInner = ${a};\n\n  @compute @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>,\n          @builtin(workgroup_id) workgroupId: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n    let localRow = i32(localId.y);\n    let tileRow = ${1===t?"0":"localRow * RowPerThread"};\n    let tileCol = i32(localId.x);\n\n    let globalRow = ${1===t?"0":"i32(globalId.y) * RowPerThread"};\n    let globalCol = i32(globalId.x);\n    let batch = i32(globalId.z);\n    let globalRowStart = i32(workgroupId.y) * ${t};\n\n    let numTiles = (uniforms.dimInner - 1) / TileInner + 1;\n\n    var acc: array<vec4<f32>, RowPerThread>;\n    var BCached : array<vec4<f32>, 4>;\n\n    // Loop over shared dimension.\n    let RowPerThreadB = TileInner / i32(workGroupSizeY);\n    let tileRowB = localRow * RowPerThreadB;\n    for (var t = 0; t < numTiles; t = t + 1) {\n        // Load one tile of A into local memory.\n        for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {\n            let inputRow = tileRow + innerRow;\n            let inputCol = tileCol;\n            ${((e,t)=>e?`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          t * TileInner + inputRow,\n          globalRowStart / ${t} + inputCol);\n        `:`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          globalRow + innerRow,\n          t * TileInner / ${t} + inputCol);\n        `)(i,c)}\n        }\n\n        // Load one tile of B into local memory.\n        for (var innerRow = 0; innerRow < RowPerThreadB; innerRow = innerRow + 1) {\n            let inputRow = tileRowB + innerRow;\n            let inputCol = tileCol;\n            mm_Bsub[inputRow][inputCol] = mm_readB(batch, t * TileInner + inputRow, globalCol);\n        }\n\n        workgroupBarrier();\n\n        // Compute acc values for a single thread.\n        for (var k = 0; k < TileInner / InnerElementSize; k = k + 1) {\n            BCached[0] = mm_Bsub[k * InnerElementSize][tileCol];\n            BCached[1] = mm_Bsub[k * InnerElementSize + 1][tileCol];\n            BCached[2] = mm_Bsub[k * InnerElementSize + 2][tileCol];\n            ${3===s?"":"BCached[3] = mm_Bsub[k * InnerElementSize + 3][tileCol];"}\n\n            ${((e,t)=>e?`\n        let ACached0 = mm_Asub[k * InnerElementSize][localRow];\n        let ACached1 = mm_Asub[k * InnerElementSize + 1][localRow];\n        let ACached2 = mm_Asub[k * InnerElementSize + 2][localRow];\n        ${3===t?"":"let ACached3 = mm_Asub[k * InnerElementSize + 3][localRow];"}\n        for (var i = 0; i < RowPerThread; i = i + 1) {\n          acc[i] = BCached[0] * ACached0[i] + acc[i];\n          acc[i] = BCached[1] * ACached1[i] + acc[i];\n          acc[i] = BCached[2] * ACached2[i] + acc[i];\n          ${3===t?"":"acc[i] = BCached[3] * ACached3[i] + acc[i];"}\n        }`:`\n        for (var i = 0; i < RowPerThread; i = i + 1) {\n          let ACached = mm_Asub[tileRow + i][k];\n          acc[i] = BCached[0] * ACached.x + acc[i];\n          acc[i] = BCached[1] * ACached.y + acc[i];\n          acc[i] = BCached[2] * ACached.z + acc[i];\n          ${3===t?"":"acc[i] = BCached[3] * ACached.w + acc[i];"}\n        }`)(i,s)}\n        }\n\n        workgroupBarrier();\n    }\n\n    for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {\n        mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\n    }\n  }`}class j{constructor(e,t,n,r,a=!1,s=null,i=null,o=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[8,8,1],this.isVec4=!0,this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]},1!==t[1]||a?this.elementsPerThread=[4,4,1]:this.elementsPerThread=[4,1,1],this.dispatch=$(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread);const u=null!=s,c=null!=o;u&&this.variableNames.push("bias"),c&&this.variableNames.push("preluActivationWeights"),this.tileAOuter=1!==t[1]||a?this.workGroupSize[1]*this.elementsPerThread[1]:1,this.tileBOuter=this.workGroupSize[0]*this.elementsPerThread[0],this.tileInner=this.tileBOuter,this.aShape=e,this.addBias=u,this.activation=i,this.hasPreluActivationWeights=c,this.batchAEqualOne=n,this.batchBEqualOne=r,this.transposeA=a;const l=a?e[1]:e[2];this.fitAOuter=t[1]%this.tileAOuter==0,this.fitBOuter=t[2]%this.tileBOuter==0,this.fitInner=l%this.tileInner==0,this.shaderKey=`matMulPackedVec4_${this.activation}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.elementsPerThread}_${this.batchAEqualOne}_${this.batchBEqualOne}_${this.transposeA}`}getUserCode(){return`\n      ${h(this.activation,this.hasPreluActivationWeights,!0)}\n      ${M(this.addBias,this.activation,this.batchAEqualOne,this.batchBEqualOne,!1,!1,this.fitAOuter,this.fitBOuter,this.fitInner,4)}\n      ${B(this.elementsPerThread,this.tileAOuter,this.tileBOuter,this.tileInner,4,this.transposeA)}\n    `}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class L{constructor(e,t,n,r=!1,a=!1,s=null,i=null,o=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=$(this.dispatchLayout,this.outputShape,this.workGroupSize);const u=null!=s,c=null!=o;u&&this.variableNames.push("bias"),c&&this.variableNames.push("preluActivationWeights"),this.transposeA=r,this.transposeB=a,this.addBias=u,this.activation=i,this.hasPreluActivationWeights=c,this.batchAEqualOne=t,this.batchBEqualOne=n,this.shaderKey=`matMulReduce_${this.activation}_${r}_${a}_${this.batchAEqualOne}_${this.batchBEqualOne}`}getUserCode(){return`\n      ${h(this.activation,this.hasPreluActivationWeights)}\n      ${M(this.addBias,this.activation,this.batchAEqualOne,this.batchBEqualOne,this.transposeA,this.transposeB)}\n      \n    var<workgroup> sumValues : array<f32, workGroupSizeX>;\n    ${k()}\n      let coords = getOutputCoords();\n      let batch = coords[0];\n      let row = coords[1];\n      let col = coords[2];\n      var sum = 0.0;\n      let Length = uniforms.dimInner;\n      for (var k = i32(localId.x); k < Length; k = k + i32(workGroupSizeX)) {\n        let dataA = mm_readA(batch, row, k);\n        let dataB = mm_readB(batch, k, col);\n        sum = sum + dataA * dataB;\n      }\n      sumValues[localId.x] = sum;\n      workgroupBarrier();\n\n      for(var currentSize = workGroupSizeX / 2u; currentSize > 1u;\n          currentSize = currentSize / 2u) {\n        if (localId.x < currentSize)\n        {\n          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];\n        }\n        workgroupBarrier();\n      }\n\n      if (localId.x == 0u) {\n        sum = sumValues[0] + sumValues[1];\n        mm_write(batch, row, col, sum);\n      }\n    }\n  \n    `}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class z{constructor(e,t,n,r=!1,a=!1,s=null,i=null,o=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[16,8,1],this.outputShape=n,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(n[2]/this.workGroupSize[0]),Math.ceil(n[1]/this.workGroupSize[1]),n[0]];const u=null!=s;u&&this.variableNames.push("bias");const c=null!=o;c&&this.variableNames.push("preluActivationWeights"),this.transposeA=r,this.transposeB=a,this.addBias=u,this.activation=i,this.hasPreluActivationWeights=c,this.batchAEqualOne=1===e[0],this.batchBEqualOne=1===t[0],this.shaderKey=`matMulSmallOutputSize_${this.activation}_${r}_${a}_${this.batchAEqualOne}_${this.batchBEqualOne}`}getUserCode(){return`\n      ${h(this.activation,this.hasPreluActivationWeights)}\n      ${M(this.addBias,this.activation,this.batchAEqualOne,this.batchBEqualOne,this.transposeA,this.transposeB)}\n      ${function(e){const t=e[1],n=e[0],r=t>n?t:n;return`\n  var<workgroup> mm_Asub : array<array<f32, ${r}>, ${t}>;\n  var<workgroup> mm_Bsub : array<array<f32, ${n}>, ${r}>;\n\n  // If the output size is small for matrix multiplication, avoid to use vec4\n  // and handle some elements per thread to optimally utilize the ALU.\n  // Read data from global memory to registers firstly, then store them into\n  // shared memory, so it is instruction-Level parallelism for arithmetic\n  // operations and others handle IO operations between barrier api, makes ALU\n  // and load/store units work simultaneously, could improves the performance.\n  ${k()}\n    let tileRow = i32(localId.y);\n    let tileCol = i32(localId.x);\n    let globalRow = i32(globalId.y);\n    let globalCol = i32(globalId.x);\n    let batch = i32(globalId.z);\n\n    // uniforms.dimInner should be greater than 0.\n    let numTiles = (uniforms.dimInner - 1) / ${r} + 1;\n    var acc = 0.0;\n\n    var globalColA = tileCol;\n    var globalRowB = 0;\n    var regA = mm_readA(batch, globalRow, globalColA);\n    var regB0 = mm_readB(batch, globalRowB + 2 * tileRow, globalCol);\n    var regB1 = mm_readB(batch, globalRowB + 2 * tileRow + 1, globalCol);\n    globalColA = globalColA + ${r};\n    globalRowB = globalRowB + ${r};\n\n    for (var t = 0; t < numTiles; t = t + 1) {\n      mm_Asub[tileRow][tileCol] = regA;\n      mm_Bsub[2 * tileRow][tileCol] = regB0;\n      mm_Bsub[2 * tileRow + 1][tileCol] = regB1;\n\n      workgroupBarrier();\n\n      regA = mm_readA(batch, globalRow, globalColA);\n      regB0 = mm_readB(batch, globalRowB + 2 * tileRow, globalCol);\n      regB1 = mm_readB(batch, globalRowB + 2 * tileRow + 1, globalCol);\n      globalColA = globalColA + ${r};\n      globalRowB = globalRowB + ${r};\n\n      for (var k = 0; k < ${r}; k = k + 1) {\n        acc = acc + mm_Asub[tileRow][k] * mm_Bsub[k][tileCol];\n      }\n      workgroupBarrier();\n    }\n\n    mm_write(batch, globalRow, globalCol, acc);\n  }\n  `}(this.workGroupSize)}\n    `}}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class W{constructor(e,t,n,a,s=!1,i=!1){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[8,8,1],this.atomic=!0,this.tileInner=32,r.util.assert(1===e[0],(()=>"MatMulSplitKProgram only supports batch = 1.")),this.outputShape=e,this.dispatchLayout={x:[2],y:[1],z:[0,3]},this.elementsPerThread=[4,4,this.tileInner],this.outputShape[1]<16&&(this.elementsPerThread[1]=1),this.outputShape[2]<16&&(this.elementsPerThread[0]=1),this.dispatch=$(this.dispatchLayout,[this.outputShape[0],this.outputShape[1],this.outputShape[2],t],this.workGroupSize,this.elementsPerThread),this.transposeA=s,this.transposeB=i,this.batchAEqualOne=n,this.batchBEqualOne=a,this.shaderKey=`matMulSplitK_${s}_${i}_${n}_${a}_${this.elementsPerThread}`}getUserCode(){return`\n      ${F(this.batchAEqualOne,this.batchBEqualOne,this.transposeA,this.transposeB)}\n      fn mm_write(batch: i32, row : i32, col : i32, valueIn : f32) {\n        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {\n          let coords = vec3<i32>(batch, row, col);\n          let flatIndex = getOutputIndexFromCoords(coords);\n          var value = valueIn;\n          // The problem is that we should initialize output to zero before using.\n          // Otherwise, the original value will be added to the result.\n          \n     var oldValue = atomicLoad(&(result[flatIndex]));\n     var exchanged = false;\n     for (; !exchanged;) {\n       let newValueF32 = bitcast<f32>(oldValue) + value;\n       let newValue = bitcast<i32>(newValueF32);\n       let res = atomicCompareExchangeWeak(&(result[flatIndex]), oldValue, newValue);\n       oldValue = res.old_value;\n       exchanged = res.exchanged;\n     }\n     \n        }\n      }\n\n      ${this.makeMatMulSplitKSource()}\n    `}makeMatMulSplitKSource(){const e=this.workGroupSize[1]*this.elementsPerThread[1],t=this.workGroupSize[0]*this.elementsPerThread[0],n=this.elementsPerThread[1],a=this.elementsPerThread[0],s=this.tileInner/this.workGroupSize[0],i=this.tileInner/this.workGroupSize[1];return r.util.assert(this.tileInner%this.workGroupSize[0]==0&&this.tileInner%this.workGroupSize[1]==0,(()=>`tileInner ${this.tileInner} must be divisible by workGroupSize[0]${this.workGroupSize[0]} and workGroupSize[1]${this.workGroupSize[1]}`)),`\n      var<workgroup> mm_Asub : array<array<f32, ${this.tileInner}>, ${e}>;\n      var<workgroup> mm_Bsub : array<array<f32, ${t}>, ${this.tileInner}>;\n      ${k()}\n        let tileRow = i32(localId.y) * ${n};\n        let tileCol = i32(localId.x) * ${a};\n\n        let globalRow = i32(globalId.y) * ${n};\n        let globalCol = i32(globalId.x) * ${a};\n        let batch = 0;\n        let kStart = i32(globalId.z) * ${this.tileInner};\n\n        // Load one tile of A into local memory.\n        let tileColA = i32(localId.x) * ${s};\n        for (var innerRow = 0; innerRow < ${n}; innerRow = innerRow + 1) {\n          for (var innerCol = 0; innerCol < ${s}; innerCol = innerCol + 1) {\n            let inputRow = tileRow + innerRow;\n            let inputCol = tileColA + innerCol;\n            mm_Asub[inputRow][inputCol] = mm_readA(${this.batchAEqualOne?0:"batch"},\n                globalRow + innerRow,\n                kStart + inputCol);\n          }\n        }\n        // Load one tile of B into local memory.\n        let tileRowB = i32(localId.y) * ${i};\n        for (var innerRow = 0; innerRow < ${i}; innerRow = innerRow + 1) {\n          for (var innerCol = 0; innerCol < ${a}; innerCol = innerCol + 1) {\n            let inputRow = tileRowB + innerRow;\n            let inputCol = tileCol + innerCol;\n            mm_Bsub[inputRow][inputCol] = mm_readB(${this.batchBEqualOne?0:"batch"},\n                kStart + inputRow,\n                globalCol + innerCol);\n          }\n        }\n\n        workgroupBarrier();\n\n        var acc : array<array<f32, ${a}>, ${n}>;\n        // Loop over shared dimension. Compute acc values for a single thread.\n        for (var k = 0; k < ${this.tileInner}; k = k + 1) {\n          var BCached : array<f32, ${a}>;\n          for (var inner = 0; inner < ${a}; inner = inner + 1) {\n            BCached[inner] = mm_Bsub[k][tileCol + inner];\n          }\n\n          for (var innerRow = 0; innerRow < ${n}; innerRow = innerRow + 1) {\n            let ACached = mm_Asub[tileRow + innerRow][k];\n            for (var innerCol = 0; innerCol < ${a}; innerCol = innerCol + 1) {\n              acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\n            }\n          }\n        }\n\n        for (var innerRow = 0; innerRow < ${n}; innerRow = innerRow + 1) {\n          for (var innerCol = 0; innerCol < ${a}; innerCol = innerCol + 1) {\n            mm_write(batch, globalRow + innerRow, globalCol + innerCol, acc[innerRow][innerCol]);\n          }\n        }\n      }\n    `}}class U{constructor(e,t=null,n=null,r=null){this.uniforms="",this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=E(this.outputShape),this.dispatch=$(this.dispatchLayout,this.outputShape,this.workGroupSize),this.addBias=null!=t,this.hasPreluActivationWeights=null!=r,this.activation=n,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`biasActivation_${n}`}getUserCode(){return`\n    ${h(this.activation,this.hasPreluActivationWeights)}\n    ${y()}\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        var value = getXByOutputIndex(index);\n        ${f(this.addBias,this.activation)}\n        setOutputAtIndex(index, value);\n      }\n    }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class G{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="value : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=E(this.outputShape),this.dispatch=$(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="fill"}getUserCode(){return`\n    ${y()}\n      if (index < uniforms.size) {\n        setOutputAtIndex(index, uniforms.value);\n      }\n    }\n  `}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V(e){const{backend:t,attrs:n}=e,{shape:a,value:s}=n;let{dtype:i}=n;if(i=i||r.util.inferDtype(s),"string"===i){const e=r.util.getArrayFromDType(i,r.util.sizeFromShape(a));return e.fill(s),t.makeTensorInfo(a,i,e)}{const e=new G(a),n=[{type:"float32",data:[s]}];return t.runWebGPUProgram(e,[],i,n)}}const H={kernelName:r.Fill,backendName:"webgpu",kernelFunc:V};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q(e){const{inputs:t,attrs:n}=e,{x:a}=t,{shape:s}=n,i=r.util.sizeFromShape(a.shape),o=r.util.inferFromImplicitShape(s,i),u=r.util.sizeFromShape(o);return r.util.assert(i===u,(()=>`The new shape (${o}) has ${u} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),e.backend.incRef(a.dataId),{dataId:a.dataId,shape:o,dtype:a.dtype}}const K={kernelName:r.Reshape,backendName:"webgpu",kernelFunc:q};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X({a:e,b:t,transposeA:n,transposeB:a,backend:s,bias:i=null,preluActivationWeights:o=null,leakyreluAlpha:u=0,activation:c=null}){const l=e.shape.length,d=t.shape.length,p=n?e.shape[l-2]:e.shape[l-1],h=a?t.shape[d-1]:t.shape[d-2],f=n?e.shape[l-1]:e.shape[l-2],m=a?t.shape[d-2]:t.shape[d-1],b=e.shape.slice(0,-2),g=t.shape.slice(0,-2),x=r.util.sizeFromShape(b),y=r.util.sizeFromShape(g),k=r.broadcast_util.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([f,m]);r.util.assert(p===h,(()=>`Error in matMul: inner shapes (${p}) and (${h}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${a} must match.`));const v=n?[x,p,f]:[x,f,p],w=a?[y,m,h]:[y,h,m],I=q({inputs:{x:e},backend:s,attrs:{shape:v}}),S=q({inputs:{x:t},backend:s,attrs:{shape:w}}),_=[I,S],C=Math.max(x,y),O=1===x,$=1===y,T=(p%4==0&&!n||f%4==0&&n)&&m%4==0&&!a,A=[I,S],E=[{type:"int32",data:[f]},{type:"int32",data:[m]},{type:"int32",data:[p]}];let N,F;const M=[C,f,m];let D=Object(r.env)().get("WEBGPU_MATMUL_PROGRAM_TYPE");switch(D<0&&(D=f*m<=128?R.MatMulReduceProgram:1===C&&f<=128&&m<=48&&h>=2e3?R.MatMulSplitKProgram:f<=16&&(m<=512||h>=2*m)||m<=16&&(f<=512||p>=2*f)?R.MatMulSmallOutputSizeProgram:T?R.MatMulPackedVec4Program:R.MatMulPackedProgram),D){case R.MatMulPackedVec4Program:N=new j(v,M,O,$,n,i,c,o);break;case R.MatMulReduceProgram:N=new L(M,O,$,n,a,i,c,o);break;case R.MatMulSplitKProgram:if(F=V({backend:s,attrs:{shape:M,value:0,dtype:e.dtype}}),N=new W(M,h,O,$,n,a),i||c){F=s.runWebGPUProgram(N,A,e.dtype,E,F);const t=new U(F.shape,i,c,o);let n=null;const r=[F];i&&r.push(i),o&&r.push(o),"leakyrelu"===c&&(n=[{type:"float32",data:[u]}],t.uniforms+=" alpha : f32,");const a=s.runWebGPUProgram(t,r,F.dtype,n);_.push(F);const l=q({inputs:{x:a},backend:s,attrs:{shape:k}});_.push(a);for(const e of _)s.disposeData(e.dataId);return l}break;case R.MatMulSmallOutputSizeProgram:N=new z(v,w,M,n,a,i,c,o);break;case R.MatMulPackedProgram:N=new P(v,M,Object(r.env)().get("WEBGPU_MATMUL_WORK_PER_THREAD"),O,$,n,a,i,c,o);break;default:throw new Error(`Unsupported MatMulProgramType ${D}.`)}i&&A.push(i),o&&A.push(o),"leakyrelu"===c&&(E.push({type:"float32",data:[u]}),N.uniforms+=" alpha : f32,"),F=s.runWebGPUProgram(N,A,e.dtype,E,F);const B=q({inputs:{x:F},backend:s,attrs:{shape:k}});_.push(F);for(const e of _)s.disposeData(e.dataId);return B}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y={kernelName:r._FusedMatMul,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:d}=r;return X({a:a,b:s,transposeA:u,transposeB:c,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:d,activation:l})}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Q{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.workGroupSize=[128,1,1],this.size=!0,this.outputShape=r.backend_util.assertAndGetBroadcastShape(t,n),this.dispatchLayout=E(this.outputShape),this.dispatch=$(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binaryOpComplex_${e}`,this.op=e}getUserCode(){return`\n      fn binaryOpComplex(\n          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {\n        ${c(this.op,!1)}\n      }\n\n      ${y()}\n        if(index < uniforms.size) {\n          let areal = getARealByOutputIndex(index);\n          let aimag = getAImagByOutputIndex(index);\n          let breal = getBRealByOutputIndex(index);\n          let bimag = getBImagByOutputIndex(index);\n          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Z{constructor(e,t,n){this.size=!0,this.variableNames=["A","B"],this.outputShape=r.backend_util.assertAndGetBroadcastShape(t,n),this.dispatchLayout=E(this.outputShape),this.op=e,this.useSharedMemoryWithA=1===t.length&&n.length>1&&t[0]<1024,this.useSharedMemoryWithB=1===n.length&&t.length>1&&n[0]<1024,this.useSharedMemoryWithA||this.useSharedMemoryWithB?(this.isVec4=!1,this.lastDimensionSize=this.useSharedMemoryWithB?n[0]:t[0],this.shaderKey=`binary_${this.type}_${e}_${this.lastDimensionSize}_${this.useSharedMemoryWithB}`,this.type="shared",this.workGroupSize=[256,1,1],this.lastDimensionSize<256?this.workPerThread=1:this.lastDimensionSize<512?this.workPerThread=2:this.workPerThread=4):(r.util.arraysEqual(t,n)&&r.util.sizeFromShape(t)%4==0?(this.isVec4=!0,this.type="vec4",this.workPerThread=4):(this.isVec4=!1,this.type="plain",this.workPerThread=1),this.shaderKey=`binary_${this.type}_${e}`,this.workGroupSize=[128,1,1]),this.dispatch=$(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1])}getUserCode(){let e;if("shared"===this.type){const t=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",n=this.useSharedMemoryWithB?`let a = getAByOutputCoords(coords);\n          let b = sharedBuf[${t}];`:`let a = sharedBuf[${t}];\n          let b = getBByOutputCoords(coords);`;e=`\n        fn binaryOperation(a : f32, b : f32) -> f32 {\n          ${c(this.op,this.isVec4)}\n        }\n        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;\n        ${y()}\n\n          // Fill in the shared memory buffer. Here we need a loop to make sure\n          // that all data in A|B are uploaded when |sharedMemorySize| is larger\n          // than work group size.\n          for(var localIndex = i32(localId.x); localIndex < ${this.lastDimensionSize}; localIndex = localIndex + ${this.workGroupSize[0]}) {\n            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}[localIndex]);\n          }\n          workgroupBarrier();\n\n          for(var i = 0; i < ${this.workPerThread}; i = i + 1) {\n            let flatIndex = index * ${this.workPerThread} + i;\n            if(flatIndex < uniforms.size) {\n              let coords = getCoordsFromIndex(flatIndex);\n\n              ${n}\n              setOutputAtIndex(flatIndex, binaryOperation(a, b));\n            }\n          }\n        }\n        `}else{const t="vec4"===this.type?"vec4<f32>":"f32";e=`\n       fn binaryOperation(a : ${t}, b : ${t}) -> ${t} {\n         ${c(this.op,this.isVec4)}\n       }\n       ${y()}\n         if (index < uniforms.size) {\n           let a = getAByOutputIndex(index);\n           let b = getBByOutputIndex(index);\n           setOutputAtIndex(index, binaryOperation(a, b));\n         }\n       }\n       `}return e}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J(e){const{inputs:t}=e,{x:n}=t;return e.backend.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}const ee={kernelName:r.Identity,backendName:"webgpu",kernelFunc:J};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function te(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),i=n.tensorMap.get(s.dataId),o=J({inputs:{x:r},backend:n}),u=J({inputs:{x:a},backend:n});return i.complexTensorInfos={real:o,imag:u},s}const ne={kernelName:r.Complex,backendName:"webgpu",kernelFunc:te};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class re{constructor(e,t){this.variableNames=["A"],this.size=!0;this.workGroupSize=[128,1,1],this.outputShape=e,this.dispatchLayout=E(this.outputShape),this.dispatch=$(this.dispatchLayout,this.outputShape,this.workGroupSize),this.op=t,this.shaderKey=`unary_${t}`}getUserCode(){return`\n      fn unaryOperation(a : f32) -> f32 {\n        ${d(this.op,!1)}\n      }\n      ${y()}\n        if (index < uniforms.size) {\n          let a = getAByOutputIndex(index);\n          setOutputAtIndex(index, unaryOperation(a));\n        }\n      }\n      `}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ae({opType:e,cpuKernelImpl:t,dtype:n}){return({inputs:r,backend:a})=>{const{x:s}=r,i=a,o=n||s.dtype;if(i.shouldExecuteOnCPU([s])&&null!=t){const e=i.tensorMap.get(s.dataId),n=t(e.values,o);return i.makeTensorInfo(s.shape,o,n)}const u=new re(s.shape,e);return i.runWebGPUProgram(u,[s],o)}}function se({opType:e,cpuKernelImpl:t,supportsComplex:n=!1,dtype:a}){return({inputs:i,backend:o})=>{const{a:u,b:c}=i,l=o;if(n&&"complex64"===u.dtype){const t=l.tensorMap.get(u.dataId),n=l.tensorMap.get(c.dataId);let a,i;if(e!==s.MUL)[a,i]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,a]=t,s={dataId:n.dataId,dtype:n.dtype,shape:u.shape},i={dataId:a.dataId,dtype:a.dtype,shape:c.shape},o=new Z(e,u.shape,c.shape);return l.runWebGPUProgram(o,[s,i],Object(r.upcastType)(n.dtype,a.dtype))}));else{const e=new Q(s.COMPLEX_MULTIPLY_REAL,u.shape,c.shape),r=new Q(s.COMPLEX_MULTIPLY_IMAG,u.shape,c.shape),o=[{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:u.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:u.shape},{dataId:n.complexTensorInfos.real.dataId,dtype:n.complexTensorInfos.real.dtype,shape:c.shape},{dataId:n.complexTensorInfos.imag.dataId,dtype:n.complexTensorInfos.imag.dtype,shape:c.shape}];a=l.runWebGPUProgram(e,o,"float32"),i=l.runWebGPUProgram(r,o,"float32")}const o=te({inputs:{real:a,imag:i},backend:l});return l.disposeData(a.dataId),l.disposeData(i.dataId),o}const d=a||Object(r.upcastType)(u.dtype,c.dtype);if(("string"===u.dtype||"string"===c.dtype||l.shouldExecuteOnCPU([u,c]))&&null!=t){const e=l.tensorMap.get(u.dataId).values,n=l.tensorMap.get(c.dataId).values,a="string"===u.dtype?r.backend_util.fromUint8ToStringArray(e):e,s="string"===u.dtype?r.backend_util.fromUint8ToStringArray(n):n,[i,o]=t(u.shape,c.shape,a,s,d);return l.makeTensorInfo(o,d,i)}const p=new Z(e,u.shape,c.shape);return l.runWebGPUProgram(p,[u,c],d)}}var ie=n(27);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:oe,ceilImpl:ue,concatImpl:ce,equalImpl:le,expImpl:de,expm1Impl:pe,floorImpl:he,gatherNdImpl:fe,gatherV2Impl:me,greaterEqualImpl:be,greaterImpl:ge,lessEqualImpl:xe,lessImpl:ye,logImpl:ke,maxImpl:ve,maximumImpl:we,minimumImpl:Ie,multiplyImpl:Se,negImpl:_e,notEqualImpl:Ce,prodImpl:Oe,rangeImpl:$e,rsqrtImpl:Te,scatterImpl:Ae,simpleAbsImpl:Ee,sliceImpl:Ne,stridedSliceImpl:Re,stringNGramsImpl:Fe,subImpl:Me,tileImpl:De,topKImpl:Pe,transposeImpl:Be,uniqueImpl:je}=ie,Le=ae({opType:l.ABS,cpuKernelImpl:Ee}),ze={kernelName:r.Abs,backendName:"webgpu",kernelFunc:Le},We=se({opType:s.ADD,cpuKernelImpl:oe,supportsComplex:!0}),Ue={kernelName:r.Add,backendName:"webgpu",kernelFunc:We};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Ge{constructor(e){this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e[0],this.variableNames=e.map(((e,t)=>`T${t}`)),this.dispatchLayout=E(this.outputShape),this.dispatch=$(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){const e=[];this.variableNames.forEach((t=>{e.push(`let v${t} = get${t}ByOutputCoords(coords);`)}));const t=this.variableNames.map((e=>`v${e}`)).join(" + ");return`\n      ${y()}\n        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {\n          let flatIndex = index * ${this.workPerThread} + i;\n          if (flatIndex < uniforms.size) {\n            let coords = getCoordsFromIndex(flatIndex);\n            ${e.join("\n        ")}\n            setOutputAtIndex(flatIndex, ${t});\n          }\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ve={kernelName:r.AddN,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,a=t;if(1===a.length)return J({inputs:{x:a[0]},backend:n});const s=a.map((e=>e.dtype)).reduce(((e,t)=>Object(r.upcastType)(e,t))),i=a.map((e=>e.shape)),o=new Ge(i);return n.runWebGPUProgram(o,a,s)}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class He{constructor(e,t,n){this.workGroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="infinityValue : f32,",this.size=!0;const a=[t];r.backend_util.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),a,e.length),this.op="min"===n?"<":">";const[s]=r.backend_util.computeOutAndReduceShapes(e,a);this.outputShape=0===s.length?[1]:s,this.dispatchLayout=E(this.outputShape),this.dispatch=$(this.dispatchLayout,this.outputShape,[1,1,1]),this.inputShape=e,this.shaderKey=`argMinMax${this.op}`}getUserCode(){return`\n      fn DIV_CEIL(a : u32, b : u32) -> u32 {\n        return ((a - 1u) / b + 1u);\n      }\n\n      ${`\n      var<workgroup> xBestIndices : array<i32, ${this.workGroupSize[0]}>;\n      var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;\n    `}\n\n      ${y()}\n        let outputIndex = index / i32(workGroupSizeX);\n        let reduceLength = ${(()=>1===this.inputShape.length?"uniforms.xShape":`uniforms.xShape.${x(this.inputShape.length-1)}`)()};\n\n        var bestIndex = i32(localId.x);\n        var bestValue = uniforms.infinityValue;\n        let outputCoords = getCoordsFromIndex(outputIndex);\n        for (var k = i32(localId.x); k < reduceLength && outputIndex < uniforms.size;\n            k = k + i32(workGroupSizeX)) {\n          let candidate = getX(${(()=>{let e="";if(1===this.outputShape.length)1!==this.inputShape.length&&(e+="outputCoords,");else for(let t=0;t<this.outputShape.length;t++)e+=`outputCoords.${x(t)},`;return e})()} k);\n          if (!isnan(candidate) && candidate ${this.op} bestValue) {\n            bestValue = candidate;\n            bestIndex = k;\n          }\n        }\n        xBestValues[localId.x] = bestValue;\n        xBestIndices[localId.x] = bestIndex;\n        workgroupBarrier();\n\n        var reduceSize = min(u32(reduceLength), workGroupSizeX);\n        for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n            currentSize = reduceSize / 2u) {\n          let interval = DIV_CEIL(reduceSize, 2u);\n          if (localId.x < currentSize) {\n            let candidate = xBestValues[localId.x + interval];\n            if (candidate ${this.op} bestValue) {\n              bestValue = candidate;\n              xBestValues[localId.x] = bestValue;\n              xBestIndices[localId.x] = xBestIndices[localId.x + interval];\n            }\n          }\n          reduceSize = interval;\n          workgroupBarrier();\n        }\n\n        if (localId.x == 0u && outputIndex < uniforms.size) {\n          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qe{constructor(e,t){this.variableNames=["A"],this.workGroupSize=[16,16,1];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.dispatchLayout={x:[0],y:[1]},this.dispatch=$(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){return`\n      const TILE_DIM = ${this.workGroupSize[0]};\n      var<workgroup> tile : array<array<f32, ${this.workGroupSize[0]+1}>, ${this.workGroupSize[0]}>;\n      \n  @compute @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n      fn main(@builtin(local_invocation_id) localId : vec3<u32>,\n              @builtin(workgroup_id) workgroupId : vec3<u32>) {\n        var x = i32(workgroupId.x) * TILE_DIM + i32(localId.x);\n        var y = i32(workgroupId.y) * TILE_DIM + i32(localId.y);\n        let width = uniforms.outShape[0];\n        let height = uniforms.outShape[1];\n        if (x < width && y < height) {\n          tile[localId.y][localId.x] = A[y * width + x];\n        }\n        workgroupBarrier();\n\n        x = i32(workgroupId.y) * TILE_DIM + i32(localId.x);\n        y = i32(workgroupId.x) * TILE_DIM + i32(localId.y);\n        if (x < height && y < width) {\n          setOutputAtIndex((y * height + x), tile[localId.x]\n            [localId.y]);\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ke{constructor(e,t){this.variableNames=["A"],this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.dispatchLayout=E(this.outputShape),this.dispatch=$(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.newDim=t,this.shaderKey=`transpose_${t}`}getUserCode(){const e=g(this.outputShape.length),t=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=new Array(t);for(let t=0;t<e.length;t++)n[e[t]]=`resRC.${x(t)}`;return n.join()}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(this.newDim);return`\n      ${y()}\n\n        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {\n          let flatIndex = index * ${this.workPerThread} + i;\n          if(flatIndex < uniforms.size) {\n            let resRC = getCoordsFromIndex(flatIndex);\n            setOutputAtIndex(flatIndex, A[getIndexFromCoords${this.outputShape.length}D(\n              ${e}(${t}), uniforms.aShape)]);\n          }\n        }\n      }\n    `}}function Xe(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{perm:i}=a,o=n,u=s.shape.length,c=new Array(u);for(let e=0;e<c.length;e++)c[e]=s.shape[i[e]];if(n.shouldExecuteOnCPU([s])){const e=o.tensorMap.get(s.dataId).values,t=Be(e,s.shape,s.dtype,i,c);return n.makeTensorInfo(c,s.dtype,t)}if(2===s.shape.length&&r.util.arraysEqual(i,[1,0])){const e=new qe(s.shape,i);return o.runWebGPUProgram(e,[s],s.dtype)}const l=new Ke(s.shape,i);return o.runWebGPUProgram(l,[s],s.dtype)}const Ye={kernelName:r.Transpose,backendName:"webgpu",kernelFunc:Xe};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qe={kernelName:r.ArgMax,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:i}=a;let o=r.util.parseAxisParam(i,s.shape);const u=r.backend_util.getAxesPermutation(o,s.shape.length);let c=s;const l=[];null!=u&&(c=Xe({inputs:{x:s},backend:n,attrs:{perm:u}}),l.push(c),o=r.backend_util.getInnerMostAxes(o.length,c.shape.length)),r.backend_util.assertAxesAreInnerMostDims("argMax",[o[0]],c.shape.length);const d=new He(c.shape,o[0],"max"),p=[{type:"float32",data:[Number.NEGATIVE_INFINITY]}],h=n.runWebGPUProgram(d,[c],"int32",p);return l.forEach((e=>n.disposeData(e.dataId))),h}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ze={kernelName:r.ArgMin,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:i}=a;let o=r.util.parseAxisParam(i,s.shape);const u=r.backend_util.getAxesPermutation(o,s.shape.length);let c=s;const l=[];null!=u&&(c=Xe({inputs:{x:s},backend:n,attrs:{perm:u}}),l.push(c),o=r.backend_util.getInnerMostAxes(o.length,c.shape.length)),r.backend_util.assertAxesAreInnerMostDims("argMin",[o[0]],c.shape.length);const d=new He(c.shape,o[0],"min"),p=[{type:"float32",data:[Number.POSITIVE_INFINITY]}],h=n.runWebGPUProgram(d,[c],"int32",p);return l.forEach((e=>n.disposeData(e.dataId))),h}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Je{constructor(e,t){this.variableNames=["x"],this.uniforms="stride : vec2<i32>, pad : vec2<i32>, dilation : vec2<i32>, convDims : vec2<i32>, filterDims : vec2<i32>,",this.workGroupSize=[128,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=E(this.outputShape),this.dispatch=$(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`pool2D_${t}`,this.poolType=t}getUserCode(){let e="resultValue = max(value, resultValue);";"avg"===this.poolType&&(e="resultValue = resultValue + value; count = count + 1.0;");let t="resultValue";"avg"===this.poolType&&(t="resultValue / count");return`\n      ${y()}\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n          let batch = coords[0];\n          let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;\n          let xRCorner = xRCCorner.x;\n          let xCCorner = xRCCorner.y;\n\n          var resultValue = ${"avg"===this.poolType?"0.0":"-1.0 / pow(10.0, -20.0)"};\n          var count = 0.0;\n\n          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilation.x) {\n            let xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= uniforms.convDims.x) {\n              continue;\n            }\n\n            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilation.y) {\n              let xC = xCCorner + wC;\n              if (xC < 0 || xC >= uniforms.convDims.y) {\n                continue;\n              }\n\n              let value = getX(batch, xR, xC, coords[3]);\n              ${e}\n            }\n          }\n\n          setOutputAtIndex(index, ${t});\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class et{constructor(e){this.variableNames=["x"],this.uniforms="stride : vec2<i32>,",this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=E(this.outputShape),this.dispatch=$(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`\n      ${y()}\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let batch = coords[0];\n          let d = coords[3];\n\n          let xRCCorner = coords.yz * uniforms.stride;\n          let xRCorner = xRCCorner.x;\n          let xCCorner = xRCCorner.y;\n\n          let value = getX(batch, xRCorner, xCCorner, d);\n          setOutputAtIndex(index, value);\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tt={kernelName:r.AvgPool,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:c}=a,l=r.backend_util.computePool2DInfo(s.shape,i,o,1,u,c);if(1===l.filterWidth&&1===l.filterHeight&&r.util.arraysEqual(l.inShape,l.outShape))return J({inputs:{x:s},backend:n});let d;const p=[{type:"int32",data:[l.strideHeight,l.strideWidth]}];return 1===l.filterHeight&&1===l.filterWidth?d=new et(l):(d=new Je(l,"avg"),p.push({type:"int32",data:[l.padInfo.top,l.padInfo.left]},{type:"int32",data:[l.dilationHeight,l.dilationWidth]},{type:"int32",data:[l.inHeight,l.inWidth]},{type:"int32",data:[l.effectiveFilterHeight,l.effectiveFilterWidth]})),n.runWebGPUProgram(d,[s],s.dtype,p)}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nt={kernelName:r.BatchMatMul,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:s}=t,{transposeA:i,transposeB:o}=r;return X({a:a,b:s,transposeA:i,transposeB:o,backend:n})}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rt{constructor(e,t){this.variableNames=["source"],this.workPerThread=1,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.rank=t.length,this.dispatchLayout=E(this.outputShape),this.dispatch=$(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms=`start : ${g(e.length)}, `,this.shaderKey="slice"}getUserCode(){const e=g(this.rank),t=function(e){if(1===e)return"sourceLoc";if(e<=6)return at.slice(0,e).map((e=>`sourceLoc.${e}`)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(this.rank);let n;n=1===this.start.length?this.outputShape.map(((e,t)=>"sourceLoc = uniforms.start + coords;")):this.outputShape.map(((e,t)=>`sourceLoc.${at[t]} = uniforms.start[${t}] + coords.${at[t]};`));return`\n      ${y()}\n        if (index < uniforms.size) {\n          var sourceLoc : ${e};\n          let coords = getCoordsFromIndex(index);\n          ${n.join("\n")}\n          setOutputAtIndex(index, getSource(${t}));\n        }\n      }\n    `}}const at=["x","y","z","w","u","v"];function st(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{begin:i,size:o}=a,[u,c]=r.slice_util.parseSliceParams(s,i,o);if(r.slice_util.assertParamsValid(s,u,c),n.shouldExecuteOnCPU([s])||"string"===s.dtype){const e=n.tensorMap.get(s.dataId),t=Ne(e.values,u,c,s.shape,s.dtype);return n.makeTensorInfo(c,s.dtype,t)}if(0===r.util.sizeFromShape(c))return n.makeTensorInfo(c,s.dtype,[]);const l=new rt(u,c),d=[{type:"int32",data:u}];return n.runWebGPUProgram(l,[s],s.dtype,d)}const it={kernelName:r.Slice,backendName:"webgpu",kernelFunc:st},ot={kernelName:r.BatchToSpaceND,backendName:"webgpu",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{blockShape:i,crops:o}=a;r.util.assert(s.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet"));const u=i.reduce(((e,t)=>e*t)),c=r.backend_util.getReshaped(s.shape,i,u),l=r.backend_util.getPermuted(c.length,i.length),d=r.backend_util.getReshapedPermuted(s.shape,i,u),p=r.backend_util.getSliceBeginCoords(o,i.length),h=r.backend_util.getSliceSize(d,o,i.length),f=[],m=q({inputs:{x:s},backend:n,attrs:{shape:c}}),b=Xe({inputs:{x:m},backend:n,attrs:{perm:l}}),g=q({inputs:{x:b},backend:n,attrs:{shape:d}}),x=st({inputs:{x:g},backend:n,attrs:{begin:p,size:h}});return f.push(m),f.push(b),f.push(g),f.forEach((e=>n.disposeData(e.dataId))),x}},ut=se({opType:s.NOT_EQUAL,dtype:"bool",cpuKernelImpl:Ce}),ct={kernelName:r.NotEqual,backendName:"webgpu",kernelFunc:ut};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function lt(e){const{inputs:t,backend:n}=e,{input:r}=t;return J({inputs:{x:n.tensorMap.get(r.dataId).complexTensorInfos.real},backend:n})}const dt={kernelName:r.Real,backendName:"webgpu",kernelFunc:lt};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pt={kernelName:r.Cast,backendName:"webgpu",kernelFunc:
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function e(t){const{inputs:n,backend:a,attrs:s}=t,{x:i}=n,{dtype:o}=s;if("complex64"===o){if("complex64"===i.dtype)return J({inputs:{x:i},backend:a});const t=r.zeros(i.shape),n=e({inputs:{x:i},backend:a,attrs:{dtype:"float32"}}),s=te({inputs:{real:n,imag:t},backend:a});return t.dispose(),a.disposeData(n.dataId),s}if("complex64"===i.dtype){const t=lt({inputs:{input:i},backend:a}),n=e({inputs:{x:t},backend:a,attrs:{dtype:o}});return a.disposeData(t.dataId),n}if(!r.util.hasEncodingLoss(i.dtype,o)){const e=J({inputs:{x:i},backend:a});return{dataId:e.dataId,shape:e.shape,dtype:o}}if("int32"===o)return function(e,t){const n=new re(e.shape,l.TO_INT),r=t.runWebGPUProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(i,a);if("bool"===o){const e=a.makeTensorInfo([],"bool",r.util.getTypedArrayFromDType("bool",1)),t=ut({inputs:{a:i,b:e},backend:a});return a.disposeData(e.dataId),t}throw new Error(`Error in Cast: failed to cast ${i.dtype} to ${o}`)}},ht=ae({opType:l.CEIL,cpuKernelImpl:ue}),ft={kernelName:r.Ceil,backendName:"webgpu",kernelFunc:ht};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class mt{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workPerThread=4,this.workGroupSize=[64,1,1],this.isVec4=!0,this.size=!0,this.outputShape=e,this.dispatchLayout=E(this.outputShape),this.dispatch=$(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return`\n      ${y()}\n        if(index < uniforms.size) {\n          let value = getAByOutputIndex(index);\n          var clampedValue : vec4<f32>;\n          for (var i = 0; i < 4; i = i + 1) {\n            if (isnan(value[i])) {\n              clampedValue[i] = value[i];\n            } else {\n              clampedValue[i] = clamp(value[i], uniforms.minVal, uniforms.maxVal);\n            }\n          }\n\n          setOutputAtIndex(index, clampedValue);\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bt{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=E(this.outputShape),this.dispatch=$(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="clip"}getUserCode(){return`\n      ${y()}\n        if(index < uniforms.size) {\n          let value = getAByOutputIndex(index);\n          if (isnan(value)) {\n            setOutputAtIndex(index, value);\n            return;\n          }\n          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gt={kernelName:r.ClipByValue,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{clipValueMin:i,clipValueMax:o}=a;let u;const c=[{type:"float32",data:[i]},{type:"float32",data:[o]}];return u=r.util.sizeFromShape(s.shape)%4==0?new mt(s.shape):new bt(s.shape),n.runWebGPUProgram(u,[s],s.dtype,c)}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xt{constructor(e){this.uniforms="",this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=r.backend_util.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`)),this.dispatchLayout=E(this.outputShape),this.dispatch=$(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.offsetLength=e.length-1;for(let e=0;e<this.offsetLength;e++)this.uniforms+=`offset${e} : i32,`;this.shaderKey="concat"}getUserCode(){const e=[];if(this.offsetLength>0){e.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let t=1;t<this.offsetLength;t++)e.push(`else if (yC < uniforms.offset${[t]}){ setOutputAtCoords(coords.x, coords.y, getT${t}(yR, yC - uniforms.offset${t-1})); }`);const t=this.offsetLength,n=this.offsetLength-1;e.push(`else { setOutputAtCoords(coords.x, coords.y, getT${t}(yR, yC - uniforms.offset${n})); }`)}else e.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return`\n      ${y()}\n        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {\n          let flatIndex = index * ${this.workPerThread} + i;\n          if(flatIndex < uniforms.size) {\n            let coords = getCoordsFromIndex(flatIndex);\n            let yR = coords.x;\n            let yC = coords.y;\n\n            ${e.join("\n        ")}\n          }\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yt(e){const{inputs:t,backend:n}=e,{input:r}=t;return J({inputs:{x:n.tensorMap.get(r.dataId).complexTensorInfos.imag},backend:n})}const kt={kernelName:r.Imag,backendName:"webgpu",kernelFunc:yt};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vt(e,t,n){const a=e[0].dtype;if("complex64"===a){const r=e.map((e=>lt({inputs:{input:e},backend:n}))),a=e.map((e=>yt({inputs:{input:e},backend:n}))),s=vt(r,t,n),i=vt(a,t,n),o=te({inputs:{real:s,imag:i},backend:n});return r.forEach((e=>n.disposeData(e.dataId))),a.forEach((e=>n.disposeData(e.dataId))),n.disposeData(s.dataId),n.disposeData(i.dataId),o}let s=n.shouldExecuteOnCPU(e);if("string"===a&&(s=!0),s){const s=e.map((e=>{const a=r.util.sizeFromShape(e.shape.slice(t));return q({inputs:{x:e},backend:n,attrs:{shape:[-1,a]}})})),i=s.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),o=r.backend_util.computeOutShape(s.map((e=>e.shape)),1),u=1===s[0].shape[0],c=ce(i,o,a,u),l=r.backend_util.computeOutShape(e.map((e=>e.shape)),t),d=n.makeTensorInfo(l,a,c);return s.forEach((e=>n.disposeData(e.dataId))),d}const i=n.device.limits.maxStorageBuffersPerShaderStage-1;if(e.length>i){const r=[];for(let a=0;a<e.length;a+=i){const s=e.slice(a,a+i);r.push(vt(s,t,n))}const a=vt(r,t,n);for(const e of r)n.disposeData(e.dataId);return a}const{tensors2D:o,outShape:u}=function(e,t,n){const a=r.backend_util.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>q({inputs:{x:e},backend:n,attrs:{shape:[r.util.sizeFromShape(e.shape.slice(0,t)),r.util.sizeFromShape(e.shape.slice(t))]}}))),outShape:a}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(e,t,n),c=o.map((e=>e.shape)),l=new xt(c),d=[],p=new Array(c.length-1);if(p.length>0){p[0]=c[0][1],d.push({type:"int32",data:[p[0]]});for(let e=1;e<p.length;e++)p[e]=p[e-1]+c[e][1],d.push({type:"int32",data:[p[e]]})}const h=n.runWebGPUProgram(l,o,o[0].dtype,d);o.forEach((e=>n.disposeData(e.dataId)));const f=q({inputs:{x:h},backend:n,attrs:{shape:u}});return n.disposeData(h.dataId),f}function wt(e){const{inputs:t,backend:n,attrs:a}=e,{axis:s}=a,i=r.util.parseAxisParam(s,t[0].shape)[0],o=r.backend_util.computeOutShape(t.map((e=>e.shape)),i);if(0===r.util.sizeFromShape(o))return n.makeTensorInfo(o,t[0].dtype,[]);const u=t.filter((e=>r.util.sizeFromShape(e.shape)>0));if(1===u.length)return J({inputs:{x:u[0]},backend:n});const c=u.map((e=>e.shape));return r.backend_util.assertParamsConsistent(c,i),vt(u,i,n)}const It={kernelName:r.Concat,backendName:"webgpu",kernelFunc:wt};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class St{constructor(e,t,n,r,a=!1,s=null,i=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.outShape,this.isChannelsLast="channelsLast"===e.dataFormat,this.isVec4=((e.inChannels%4==0||e.inChannels%3==0)&&this.isChannelsLast||e.outWidth%4==0&&!this.isChannelsLast)&&e.outChannels%4==0,this.dispatchLayout=this.isChannelsLast?{x:[3],y:[1,2],z:[0]}:{x:[2,3],y:[1],z:[0]},this.workGroupSize=T(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=A(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=$(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.isVec4?(this.isChannelsLast&&e.inChannels%4!=0?(this.innerElementSize=3,this.variableTypes=["f32","vec4<f32>"]):(this.innerElementSize=4,this.variableTypes=["vec4<f32>","vec4<f32>"]),a&&(this.variableNames.push("bias"),this.variableTypes.push("vec4<f32>")),i&&(this.variableNames.push("preluActivationWeights"),this.variableTypes.push("vec4<f32>"))):(this.innerElementSize=this.elementsPerThread[0],a&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights")),this.addBias=a,this.activation=s,this.hasPreluActivationWeights=i,this.tileAOuter=this.workGroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workGroupSize[0]*this.elementsPerThread[0],this.tileInner=Math.max(this.workGroupSize[0]*this.innerElementSize,this.workGroupSize[1]),this.fitAOuter=t%this.tileAOuter==0,this.fitBOuter=n%this.tileBOuter==0,this.fitInner=r%this.tileInner==0,this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.innerElementSize}_${this.isChannelsLast}`}getUserCode(){const e=this.isVec4?B(this.elementsPerThread,this.tileAOuter,this.tileBOuter,this.tileInner,this.innerElementSize,!this.isChannelsLast):D(this.elementsPerThread,this.workGroupSize,!this.isChannelsLast,this.tileInner),t=this.isVec4?[this.isChannelsLast?this.innerElementSize:4,4,4]:[1,1,1];return`\n    ${function(e,t,n,r,a=!1,s=null,i=!1,o=4,u=4,c=4){const l=e?"\n      let coord = vec4<i32>(batch, xRow, xCol, xCh);\n      ":"\n      let coord = vec4<i32>(batch, xCh, xRow, xCol);\n      ",d=e?"\n      let coords = vec4<i32>(\n        batch,\n        row / outWidth,\n        row % outWidth,\n        col);\n      ":"\n      let coords = vec4<i32>(\n        batch,\n        row,\n        col / outWidth,\n        col % outWidth);\n      ",m=e?"uniforms.xShape[1]":"uniforms.xShape[2]",b=e?"uniforms.xShape[2]":"uniforms.xShape[3]",g=e?"row":"col",x=e?"col":"row",y=`\n      let inChannels = uniforms.wShape[2];\n      let outWidth = ${e?"uniforms.outShape[2]":"uniforms.outShape[3]"};\n      let outRow = ${g} / outWidth;\n      let outCol = ${g} % outWidth;\n\n      let WRow = ${x} / (uniforms.filterDims[1] * inChannels);\n      let WCol = ${x} / inChannels % uniforms.filterDims[1];\n      let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];\n      let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];\n      let xCh = ${x} % inChannels;\n      var resData = ${p(o)}(0.0);\n      // The bounds checking is always needed since we use it to pad zero for\n      // the 'same' padding type.\n      if (xRow >= 0 && xRow < ${m} && xCol >= 0 && xCol < ${b}) {\n        ${l}\n        let xIndex = getIndexFromCoords4D(coord, uniforms.xShape);\n        ${(e=>{switch(e){case 1:return"resData = x[xIndex];";case 3:return"resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);";case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${e} is not supported.`)}})(o)}\n      }\n      return resData;`,k=e?t&&r?`\n      let col = colIn * ${o};\n      ${y}`:`\n      let col = colIn * ${o};\n      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {\n        ${y}\n      }\n      return ${p(o)}(0.0);`:r&&n?`\n      let col = colIn * ${o};\n      ${y}`:`\n      let col = colIn * ${o};\n      if (row < uniforms.dimInner && col < uniforms.dimBOuter) {\n        ${y}\n      }\n      return ${p(o)}(0.0);`,v=`${(e=>{switch(e){case 1:return"return W[row * uniforms.wShape[3] + colIn];";case 4:return"return W[row * uniforms.wShape[3] / 4 + colIn];";default:throw new Error(`innerElementSize ${e} is not supported.`)}})(u)}`,w=p(c),I=p(e?o:u),S=p(e?u:o);return`\n      ${h(s,i,4===c,4)}\n      fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${I} {\n        ${e?k:v}\n      }\n\n      fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${S} {\n        ${e?v:k}\n      }\n\n      fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${w}) {\n        let col = colIn * ${c};\n        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)\n        {\n        var value = valueIn;\n        let outWidth = ${e?"uniforms.outShape[2]":"uniforms.outShape[3]"};\n        ${d}\n        ${f(a,s)}\n        setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n        }\n      }`}(this.isChannelsLast,this.fitAOuter,this.fitBOuter,this.fitInner,this.addBias,this.activation,this.hasPreluActivationWeights,t[0],t[1],t[2])}\n    ${e}\n  `}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _t(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function Ct({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){const u=null!=a,c=null!=s,l="channelsLast"===n.dataFormat;if(l&&n.filterHeight===n.inHeight&&n.filterWidth===n.inWidth&&"VALID"===n.padInfo.type||1===n.filterHeight&&1===n.filterWidth&&1===n.dilationHeight&&1===n.dilationWidth&&1===n.strideHeight&&1===n.strideWidth&&("SAME"===n.padInfo.type||"VALID"===n.padInfo.type))return function({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){const u="channelsLast"===n.dataFormat,c=!u,l=[];let d,p;if(u&&n.filterHeight===n.inHeight&&n.filterWidth===n.inWidth&&"VALID"===n.padInfo.type){const a=n.inHeight*n.inWidth*n.inChannels;d=q({inputs:{x:e},backend:r,attrs:{shape:[1,n.batchSize,a]}}),p=q({inputs:{x:t},backend:r,attrs:{shape:[1,a,n.outChannels]}})}else d=q({inputs:{x:e},backend:r,attrs:{shape:u?[n.batchSize,n.inHeight*n.inWidth,n.inChannels]:[n.batchSize,n.inChannels,n.inHeight*n.inWidth]}}),p=q({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});if(l.push(d),l.push(p),null!=s){const e=_t(s.shape,u);null!=e&&(s=q({inputs:{x:s},backend:r,attrs:{shape:e}}),l.push(s))}if(null!=a){const e=_t(a.shape,u);null!=e&&(a=q({inputs:{x:a},backend:r,attrs:{shape:e}}),l.push(a))}const h=X({a:u?d:p,b:u?p:d,transposeA:c,transposeB:!1,backend:r,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),f=q({inputs:{x:h},backend:r,attrs:{shape:n.outShape}});l.push(h);for(const e of l)r.disposeData(e.dataId);return f}({x:e,filter:t,convInfo:n,backend:r,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i});const d=l?n.outHeight*n.outWidth:n.outChannels,p=l?n.outChannels:n.outHeight*n.outWidth,h=n.filterHeight*n.filterWidth*n.inChannels,f=[n.padInfo.top,n.padInfo.left],m=[{type:"int32",data:[n.filterHeight,n.filterWidth]},{type:"int32",data:[...f]},{type:"int32",data:[n.strideHeight,n.strideWidth]},{type:"int32",data:[n.dilationHeight,n.dilationWidth]},{type:"int32",data:[d]},{type:"int32",data:[p]},{type:"int32",data:[h]}],b=new St(n,d,p,h,u,o,c),g=[],x=[e,t];u&&(l||1!==a.shape.length||(a=q({inputs:{x:a},backend:r,attrs:{shape:[a.shape[0],1,1]}}),g.push(a)),x.push(a)),c&&(l||1!==s.shape.length||(s=q({inputs:{x:s},backend:r,attrs:{shape:[s.shape[0],1,1]}}),g.push(s)),x.push(s)),"leakyrelu"===o&&(m.push({type:"float32",data:[i]}),b.uniforms+=" alpha : f32,");const y=r.runWebGPUProgram(b,x,e.dtype,m);for(const e of g)r.disposeData(e.dataId);return y}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ot={kernelName:r.Conv2D,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{x:s,filter:i}=t,{strides:o,pad:u,dataFormat:c,dilations:l,dimRoundingMode:d}=n,p=r.backend_util.convertConv2DDataFormat(c);return Ct({x:s,filter:i,convInfo:r.backend_util.computeConv2DInfo(s.shape,i.shape,o,l,u,d,!1,p),backend:a})}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $t{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, stride : vec2<i32>, outBackprop : vec4<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.inShape,r.util.assert("channelsLast"===e.dataFormat,(()=>"TODO: NCHW is unimplemented")),this.isVec4=e.inChannels%4==0&&e.outChannels%4==0,this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=T(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=A(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=$(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.isVec4?(this.innerElementSize=4,this.variableTypes=["vec4<f32>","f32"]):this.innerElementSize=this.elementsPerThread[0],this.tileAOuter=this.workGroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workGroupSize[0]*this.elementsPerThread[0],this.tileInner=Math.max(this.workGroupSize[0]*this.innerElementSize,this.workGroupSize[1]),this.shaderKey=`conv2DDerInputMM_${this.isVec4}_${this.elementsPerThread}_${this.innerElementSize}`}getUserCode(){const e=this.isVec4?B(this.elementsPerThread,this.tileAOuter,this.tileBOuter,this.tileInner,this.innerElementSize):D(this.elementsPerThread,this.workGroupSize);return`\n    ${function(e=4){const t=`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {\n        \n      let outRow = row / uniforms.outShape[2];\n      let outCol = row % uniforms.outShape[2];\n\n      let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);\n      let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];\n      let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.stride[0]);\n      let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.stride[1]);\n      if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {\n        return ${p(e)}(0.0);\n      }\n      if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {\n        return ${p(e)}(0.0);\n      }\n      let coord = vec4<i32>(\n          batch,\n          i32(xR),\n          i32(xC),\n          col % uniforms.outBackprop[3]);\n      return x[getIndexFromCoords4D(coord, uniforms.xShape)/${e}];\n      }\n      return ${p(e)}(0.0);`;return`\n  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${p(e)} {\n    let col = colIn * ${e};\n    ${t}\n  }\n\n  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${p(e)} {\n    let col = colIn * ${e};\n    let coordX = uniforms.filterDims.x - 1 -\n        row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);\n    let coordY = uniforms.filterDims.y - 1 -\n        (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];\n    if (row < uniforms.dimInner && col < uniforms.dimBOuter &&\n        coordX >= 0 && coordY >= 0) {\n      let rowInner = row % uniforms.outBackprop[3];\n      let coord = vec4<i32>(coordX, coordY, col, rowInner);\n      ${(e=>{switch(e){case 1:return"return W[getIndexFromCoords4D(coord, uniforms.wShape)];";case 4:return"\n            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);\n            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);\n            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);\n            let v0 = W[getIndexFromCoords4D(coord, uniforms.wShape)];\n            let v1 = W[getIndexFromCoords4D(coord1, uniforms.wShape)];\n            let v2 = W[getIndexFromCoords4D(coord2, uniforms.wShape)];\n            let v3 = W[getIndexFromCoords4D(coord3, uniforms.wShape)];\n            return vec4<f32>(v0, v1, v2, v3);\n            ";default:throw new Error(`innerElementSize ${e} is not supported.`)}})(e)}\n    }\n    return ${p(e)}(0.0);\n  }\n\n  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${p(e)}) {\n    let col = colIn * ${e};\n    if (row < uniforms.dimAOuter && (col + ${e-1}) < uniforms.dimBOuter) {\n      var value = valueInput;\n      let outCoord = vec4<i32>(\n          batch,\n          row / uniforms.outShape[2],\n          row % uniforms.outShape[2],\n          col);\n      result[getIndexFromCoords4D(outCoord, uniforms.outShape)/${e}] = value;\n    }\n  }`}(this.isVec4?4:1)}\n    ${e}\n    `}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Tt{constructor(e){this.variableNames=["dy","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, stride : vec2<i32>, outBackprop : vec4<i32>,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=E(this.outputShape),this.dispatch=$(this.dispatchLayout,this.outputShape,this.workGroupSize),this.isChannelsLast="channelsLast"===e.dataFormat,this.shaderKey=`conv2DDerInput_${this.isChannelsLast}`}getUserCode(){const e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,n=this.isChannelsLast?3:1;return`\n    ${y()} {\n      if(index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords[0];\n        let d1 = coords[${n}];\n\n        let dyCorner = vec2<i32>(coords[${e}]), coords[${t}]) - uniforms.pads;\n        let dyRCorner = dyCorner.x;\n        let dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {\n          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.stride.x);\n          let wRPerm = uniforms.filterDims.x - 1 - wR;\n          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||\n              wRPerm < 0) {\n            continue;\n          }\n          let idyR = dyR;\n\n          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {\n            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.stride.y);\n            let wCPerm = uniforms.filterDims.y - 1 - wC;\n            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||\n                fract(dyC) > 0.0 || wCPerm < 0) {\n              continue;\n            }\n            let idyC = dyC;\n\n            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {\n              if (${this.isChannelsLast}) {\n                let xValue = getDy(batch, idyR, idyC, d2);\n                let wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd = dotProd + xValue * wValue;\n              } else {\n                let xValue = getDy(batch, d2, idyR, idyC);\n                let wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd = dotProd + xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n  `}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const At={kernelName:r.Conv2DBackpropInput,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,filter:i}=t,{inputShape:o,strides:u,pad:c,dataFormat:l,dimRoundingMode:d}=a,p=r.backend_util.convertConv2DDataFormat(l),h=r.backend_util.computeConv2DInfo(o,i.shape,u,1,c,d,!1,p),f=[{type:"int32",data:[h.filterHeight,h.filterWidth]},{type:"int32",data:[h.filterHeight-1-h.padInfo.top,h.filterWidth-1-h.padInfo.left]},{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.batchSize,h.outHeight,h.outWidth,h.outChannels]}];let m;if(Object(r.env)().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE"))m=new Tt(h);else{m=new $t(h);const e=h.inShape[1]*h.inShape[2],t=h.inShape[3],n=h.filterHeight*h.filterWidth*h.outChannels;f.push({type:"uint32",data:[e]},{type:"uint32",data:[t]},{type:"uint32",data:[n]})}return n.runWebGPUProgram(m,[s,i],"float32",f)}},Et=ae({opType:l.COS}),Nt={kernelName:r.Cos,backendName:"webgpu",kernelFunc:Et},Rt=ae({opType:l.COSH}),Ft={kernelName:r.Cosh,backendName:"webgpu",kernelFunc:Rt};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Mt{constructor(e,t,n,r){this.variableNames=["Image","Boxes","BoxInd"],this.uniforms="extrapolationValue : f32,",this.workGroupSize=[64,1,1],this.size=!0;const[a]=t;this.outputShape=[a,n[0],n[1],e],this.dispatchLayout=E(this.outputShape),this.dispatch=$(this.dispatchLayout,this.outputShape,this.workGroupSize),this.methodId="bilinear"===r?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){const[e,t]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[n,r,a]=this.cropHeightBiggerThan1?[`(${e} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${e} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${e}`],[s,i,o]=this.cropWidthBiggerThan1?[`(${t} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${t} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${t}`];return`\n      ${y()}\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let height_ratio = f32(${n});\n        let width_ratio = f32(${s});\n        let b = coords[0];\n        let y = coords[1];\n        let x = coords[2];\n        let d = coords[3];\n        // get box vals\n        let y1 = getBoxes(b, 0);\n        let x1 = getBoxes(b, 1);\n        let y2 = getBoxes(b, 2);\n        let x2 = getBoxes(b, 3);\n        // get image in batch index\n        let bInd = i32(round(getBoxInd(b)));\n        if(bInd < 0 || bInd >= uniforms.outShape[0]) {\n          return;\n        }\n        let height_scale = ${r};\n        let width_scale = ${i};\n        let in_y = ${a};\n        if( in_y < 0.0 || in_y > ${e} ) {\n          setOutputAtIndex(index, uniforms.extrapolationValue);\n          return;\n        }\n        let in_x = ${o};\n        if( in_x < 0.0 || in_x > ${t} ) {\n          setOutputAtIndex(index, uniforms.extrapolationValue);\n          return;\n        }\n        let sourceFracIndexCR = vec2<f32>(in_x,in_y);\n        if(${this.methodId} == 1) {\n          // Compute the four integer indices.\n          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);\n          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));\n          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);\n          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);\n          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);\n          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);\n          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);\n          let top = topLeft + (topRight - topLeft) * fracCR.x;\n          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          let newValue = top + (bottom - top) * fracCR.y;\n          setOutputAtIndex(index, newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          let sourceNearestCR = vec2<i32>(floor(\n            sourceFracIndexCR + vec2<f32>(0.5,0.5)));\n          let newValue = getImage(\n            bInd, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutputAtIndex(index, newValue);\n        }\n      }\n    }\n    `}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dt={kernelName:r.CropAndResize,backendName:"webgpu",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:c}=r,l=new Mt(a.shape[3],s.shape,o,u),d=[{type:"float32",data:[c]}];return n.runWebGPUProgram(l,[a,s,i],"float32",d)}};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
var Pt;!function(e){e.Prod="*",e.Sum="+"}(Pt||(Pt={}));class Bt{constructor(e,t,n,r){this.variableNames=["x"],this.uniforms="index : f32,",this.size=!0;this.workGroupSize=[128,1,1],this.outputShape=t,this.dispatchLayout=E(this.outputShape),this.dispatch=$(this.dispatchLayout,this.outputShape,this.workGroupSize),this.exclusive=n,this.reverse=r,this.op=e,this.shaderKey=`cum_${this.op}_${this.exclusive}_${this.reverse}`}getUserCode(){const e=this.outputShape.length,t=this.op===Pt.Prod?"1.0":"0.0",n=this.exclusive?t:`getX(${jt(e,"coords",this.op)})`,r=this.outputShape[this.outputShape.length-1];let a="",s="";return this.exclusive?(a=this.reverse?"end != "+(r-1):"end != 0",s=this.reverse?"end + 1":"end - 1"):(a=this.reverse?`end + pow2 < ${r}`:"end >= pow2",s=this.reverse?"end + pow2":"end - pow2"),`\n      ${y()}\n       if (index < uniforms.size) {\n         var coords = getCoordsFromIndex(index);\n\n         let end = ${Lt(e,"coords",this.op)};\n         var val = ${n};\n         let pow2 = i32(pow(2.0, uniforms.index));\n         if (${a}) {\n           let idx = ${s};\n           ${Lt(e,"coords",this.op)} = idx;\n           val ${this.op}= getX(${jt(e,"coords",this.op)});\n         }\n         setOutputAtIndex(index, val);\n       }\n      }\n    `}}function jt(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function Lt(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative ${n} for rank ${e} is not yet supported`)}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zt(e,t,n,a,s,i){const o=t.shape.length,u=r.backend_util.getAxesPermutation([a],o);let c=t;null!=u&&(c=Xe({inputs:{x:t},backend:n,attrs:{perm:u}}));const l=r.backend_util.getInnerMostAxes(1,o)[0];if(l!==o-1)throw new Error(`WebGPU cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${a}`);const d=c.shape[l];let p=J({inputs:{x:c},backend:n});for(let t=0;t<=Math.ceil(Math.log2(d))-1;t++){const r=new Bt(e,c.shape,!1,i),a=p,s=[{type:"float32",data:[t]}];p=n.runWebGPUProgram(r,[p],p.dtype,s),n.disposeData(a.dataId)}if(s){const t=new Bt(e,c.shape,s,i),r=p,a=[{type:"float32",data:[0]}];p=n.runWebGPUProgram(t,[p],p.dtype,a),n.disposeData(r.dataId)}if(null!=u){const e=Xe({inputs:{x:p},backend:n,attrs:{perm:r.backend_util.getUndoAxesPermutation(u)}});return n.disposeData(p.dataId),n.disposeData(c.dataId),e}return p}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wt={kernelName:r.Cumprod,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;return zt(Pt.Prod,a,n,s,i,o)}};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ut={kernelName:r.Cumsum,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;return zt(Pt.Sum,a,n,s,i,o)}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Gt{constructor(e,t){this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.uniforms="blockSize : i32,",this.outputShape=e,this.dispatchLayout=E(this.outputShape),this.dispatch=$(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`depthToSpace_${t}`,this.dataFormat=t}getUserCode(){return`\n      ${y()}\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let b = coords[0];\n          let h = ${this.getHeightCoordString()};\n          let w = ${this.getWidthCoordString()};\n          let d = ${this.getDepthCoordString()};\n\n          let in_h = h / uniforms.blockSize;\n          let offset_h = h % uniforms.blockSize;\n          let in_w = w / uniforms.blockSize;\n          let offset_w = w % uniforms.blockSize;\n          let offset_d = (offset_h * uniforms.blockSize + offset_w) *\n            ${this.getOutputDepthSize()};\n          let in_d = d + offset_d;\n\n          let rlt = ${this.getInputSamplingString()};\n          setOutputAtIndex(index, rlt);\n        }\n      }`}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vt={kernelName:r.DepthToSpace,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r,o=a.shape[0],u=("NHWC"===i?a.shape[1]:a.shape[2])*s,c=("NHWC"===i?a.shape[2]:a.shape[3])*s,l=("NHWC"===i?a.shape[3]:a.shape[1])/(s*s),d=[{type:"int32",data:[s]}],p=new Gt("NHWC"===i?[o,u,c,l]:[o,l,u,c],i);return n.runWebGPUProgram(p,[a],a.dtype,d)}};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ht{constructor(e,t,n,r=!1,a=null,s=!1){this.variableNames=["x","W"],this.uniforms="pad : vec2<i32>, inDims : vec2<i32>,",this.workGroupSize=[16,16,1],this.outputShape=e,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=$(this.dispatchLayout,this.outputShape,this.workGroupSize),r&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.addBias=r,this.activation=a,this.hasPreluActivation=s,this.filterHeight=t,this.filterWidth=n,this.shaderKey=`depthwiseNCHW_${this.activation}_${this.filterHeight}_${this.filterWidth}`}getUserCode(){const e=this.filterWidth*this.filterHeight,t=this.workGroupSize[0]*this.workGroupSize[1]*this.workGroupSize[2],n=this.workGroupSize[1]+this.filterHeight-1,r=this.workGroupSize[0]+this.filterWidth-1;return`\n      ${h(this.activation,this.hasPreluActivation,!1,4)}\n\n      var<workgroup> mm_Asub : array<array<f32, ${r}>, ${n}>;\n      var<workgroup> mm_Bsub : array<array<f32, ${this.filterWidth}>, ${this.filterHeight}>;\n      fn readX(batch : i32, channel : i32, row : i32, col : i32) -> f32 {\n        var value = 0.0;\n        if (row >=0 && row < uniforms.inDims[0] && col >=0 && col < uniforms.inDims[1])\n        {\n          value = getX(batch, channel, row, col);\n        }\n        return value;\n      }\n\n      \n  @compute @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n      fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n              @builtin(global_invocation_id) GlobalId : vec3<u32>,\n              @builtin(local_invocation_index) LocalIndex: u32,\n              @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n        localId = LocalId;\n        globalId = GlobalId;\n        let localIndex = i32(LocalIndex);\n        numWorkgroups = NumWorkgroups;\n        let coords = getOutputCoords();\n        let batch = coords[0];\n        let xRCCorner = vec2<i32>(coords.zw) - uniforms.pad;\n        let channelMul = uniforms.wShape[3];\n        let d1 = coords[1] / channelMul;\n        let q = coords[1] % channelMul;\n\n        let inputRowStart = xRCCorner.x;\n        let inputColStart = xRCCorner.y;\n\n        let localRow = i32(localId.y);\n        let localCol = i32(localId.x);\n\n        // Load one tile of X into local memory.\n        for (var inputRow = localRow; inputRow < ${n}; inputRow = inputRow + ${this.workGroupSize[1]}) {\n          for (var inputCol = localCol; inputCol < ${r}; inputCol = inputCol + ${this.workGroupSize[0]}) {\n            let rowOffset = inputRow - localRow;\n            let colOffset = inputCol - localCol;\n            mm_Asub[inputRow][inputCol] = readX(batch, d1, inputRowStart + rowOffset, inputColStart + colOffset);\n          }\n        }\n\n        // Load one tile of W into local memory.\n        var wIndex = localIndex;\n        ${e<t?`if (wIndex < ${e})`:`for(; wIndex < ${e}; wIndex = wIndex + ${t})`}\n\n        {\n          let wRow = wIndex / ${this.filterWidth};\n          let wCol = wIndex % ${this.filterWidth};\n          mm_Bsub[wRow][wCol] = getW(wRow, wCol, d1, q);\n        }\n\n        workgroupBarrier();\n\n        var value = 0.0;\n        for (var wR = 0; wR < ${this.filterHeight}; wR = wR + 1) {\n          for (var wC = 0; wC < ${this.filterWidth}; wC = wC + 1) {\n            let xVal = mm_Asub[localRow + wR][localCol + wC];\n            let wVal = mm_Bsub[wR][wC];\n            value = fma(xVal, wVal, value);\n          }\n        }\n        ${f(this.addBias,this.activation)}\n        if (coordsInBounds4D(coords, uniforms.outShape)) {\n          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qt{constructor(e,t=!1,n=null,a=!1){this.variableNames=["x","W"],this.uniforms="pad : vec2<i32>, inDims : vec2<i32>,",this.workGroupSize=[4,4,4],this.isVec4=!0,this.outputShape=e.outShape,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=$(this.dispatchLayout,this.outputShape,this.workGroupSize,[4,4,1]),r.util.assert("channelsLast"===e.dataFormat,(()=>"TODO: NCHW is unimplemented")),t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=a,this.shaderKey=`depthwiseVec4_${n}_${this.convInfo.filterHeight}_${this.convInfo.filterWidth}`}getUserCode(){const e=4+this.convInfo.filterWidth-1;return`\n      ${h(this.activation,this.hasPreluActivation,!0,4)}\n      fn readX(batch : i32, row : i32, col : i32, channel : i32) -> vec4<f32> {\n        var value = vec4<f32>(0.0);\n        if (row >=0 && row < uniforms.inDims[0] && col >=0 && col < uniforms.inDims[1])\n        {\n          value = getX(batch, row, col, channel);\n        }\n        return value;\n      }\n      \n  @compute @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n      fn main(@builtin(global_invocation_id) globalId: vec3<u32>) {\n        let batch = i32(globalId.z) / uniforms.outShape[1];\n        let r = i32(globalId.z) % uniforms.outShape[1];\n        let c = i32(globalId.y) * 4;\n        let d1 = i32(globalId.x) * 4;\n        let xRCCorner = vec2<i32>(r, c) - uniforms.pad;\n\n        let xRCorner = xRCCorner.x;\n        let xCCorner = xRCCorner.y;\n        var xVals : array<vec4<f32>, ${e}>;\n        var dotProd : array<vec4<f32>, 4>;\n        dotProd[0] = vec4<f32>(0.0);\n        dotProd[1] = vec4<f32>(0.0);\n        dotProd[2] = vec4<f32>(0.0);\n        dotProd[3] = vec4<f32>(0.0);\n\n        // Use constant instead of uniform can give better performance.\n        for (var wR = 0; wR < ${this.convInfo.filterHeight}; wR = wR + 1) {\n          let xR = xRCorner + wR;\n          for (var i = 0; i < ${e}; i++)\n          {\n            xVals[i] = readX(batch, xR, xCCorner + i, d1);\n          }\n          for (var wC = 0; wC < ${this.convInfo.filterWidth}; wC = wC + 1) {\n            let wValue = getW(wR, wC, d1, 0);\n            dotProd[0] = dotProd[0] + xVals[0 + wC] * wValue;\n            dotProd[1] = dotProd[1] + xVals[1 + wC] * wValue;\n            dotProd[2] = dotProd[2] + xVals[2 + wC] * wValue;\n            dotProd[3] = dotProd[3] + xVals[3 + wC] * wValue;\n          }\n        }\n\n        for (var i = 0; i < 4; i = i + 1) {\n          let coords = vec4<i32>(batch, r, c + i, d1);\n          if (coordsInBounds4D(coords, uniforms.outShape)) {\n            var value = dotProd[i];\n            ${f(this.addBias,this.activation)}\n            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n          }\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kt{constructor(e,t=!1,n=null,r=!1){this.variableNames=["x","W"],this.uniforms="pad : vec2<i32>, inDims : vec2<i32>, filterHeight : i32,\n      filterWidth : i32, stride : vec2<i32>, dilation : vec2<i32>,",this.workGroupSize=[256,1,1],this.outputShape=e.outShape,this.dispatchLayout=E(this.outputShape),this.dispatch=$(this.dispatchLayout,this.outputShape,this.workGroupSize),this.isChannelsLast="channelsLast"===e.dataFormat,t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=r,this.shaderKey=`depthwise_${this.activation}_${this.isChannelsLast}`}getUserCode(){const e=this.isChannelsLast?"getX(batch, xR, xC, d1);":"getX(batch, d1, xR, xC);";return`\n      ${h(this.activation,this.hasPreluActivation,!1,4)}\n\n      ${k()}\n        let coords = getOutputCoords();\n        let batch = coords[0];\n        let xRCCorner = vec2<i32>(coords.${this.isChannelsLast?"yz":"zw"}) * uniforms.stride - uniforms.pad;\n        let d2 = coords[${this.isChannelsLast?3:1}];\n        let channelMul = uniforms.wShape[3];\n        let d1 = d2 / channelMul;\n        let q = d2 % channelMul;\n\n        let inputRowStart = xRCCorner.x;\n        let inputColStart = xRCCorner.y;\n        let inputRowEnd = inputRowStart + uniforms.filterHeight *\n            uniforms.dilation[0];\n        let inputColEnd = inputColStart + uniforms.filterWidth *\n            uniforms.dilation[1];\n\n        // Convolve x(?, ?, d1)|x(d1, ?, ?) with w(:, :, d1, q) to get\n        // y(yR, yC, d2)|y(d2, yR, yC). ? = to be determined. : = across all\n        // values in that axis. x(?, ?, d1) and y(yR, yC, d2) is for NHWC.\n        // x(d1, ?, ?) and y(d2, yR, yC) is for NCHW.\n        var value = 0.0;\n\n        // Extract if checking out of for loop for performance.\n        if (inputRowStart >= 0 && inputColStart >= 0 &&\n          inputRowEnd < uniforms.inDims[0] &&\n              inputColEnd < uniforms.inDims[1]) {\n            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {\n              let xR = inputRowStart + wR * uniforms.dilation[0];\n\n              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {\n                let xC = inputColStart + wC * uniforms.dilation[1];\n\n                let xVal = ${e};\n                let wVal = getW(wR, wC, d1, q);\n                value = value + xVal * wVal;\n              }\n            }\n          } else {\n            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {\n              let xR = inputRowStart + wR * uniforms.dilation[0];\n\n              if (xR < 0 || xR >= uniforms.inDims[0]) {\n                continue;\n              }\n\n              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {\n                let xC = inputColStart + wC * uniforms.dilation[1];\n\n                if (xC < 0 || xC >= uniforms.inDims[1]) {\n                  continue;\n                }\n\n                let xVal = ${e};\n                let wVal = getW(wR, wC, d1, q);\n                value = value + xVal * wVal;\n              }\n            }\n          }\n          ${f(this.addBias,this.activation)}\n        if (coordsInBounds4D(coords, uniforms.outShape)) {\n          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xt={kernelName:r.DepthwiseConv2dNative,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:i}=t,{strides:o,pad:u,dataFormat:c,dilations:l,dimRoundingMode:d}=a,p=r.backend_util.convertConv2DDataFormat(c);let h=l;null==h&&(h=[1,1]);const f=r.backend_util.computeConv2DInfo(s.shape,i.shape,o,h,u,d,!0,p),m=[{type:"int32",data:[f.padInfo.top,f.padInfo.left]},{type:"int32",data:[f.inHeight,f.inWidth]}],b="channelsLast"===f.dataFormat;let g;return!b&&f.inHeight>16&&f.inWidth>16&&1===f.strideHeight&&1===f.strideWidth&&1===f.dilationWidth&&1===f.dilationHeight&&f.inChannels===f.outChannels?g=new Ht(f.outShape,f.filterHeight,f.filterWidth):b&&f.inHeight>4&&f.inWidth>4&&1===f.strideHeight&&1===f.strideWidth&&f.inChannels===f.outChannels&&1===f.dilationHeight&&1===f.dilationWidth&&f.inChannels%4==0?g=new qt(f):(g=new Kt(f),m.push({type:"int32",data:[f.filterHeight]},{type:"int32",data:[f.filterWidth]},{type:"int32",data:[f.strideHeight,f.strideWidth]},{type:"int32",data:[f.dilationHeight,f.dilationWidth]})),n.runWebGPUProgram(g,[s,i],s.dtype,m)}},Yt=se({opType:s.MUL,cpuKernelImpl:Se,supportsComplex:!0}),Qt={kernelName:r.Multiply,backendName:"webgpu",kernelFunc:Yt};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Zt{constructor(e,t){this.workGroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="reduceSize : i32,",this.size=!0,this.inputShape=[e.batchSize,e.inSize];const[n]=r.backend_util.computeOutAndReduceShapes(this.inputShape,[1]);this.outputShape=0===n.length?[1]:n,this.dispatchLayout=E(this.outputShape),this.dispatch=$(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=t,this.shaderKey=`reduce_${t}`}getUserCode(){let e="",t="0.0";"min"===this.reduceType||"max"===this.reduceType?(e=`\n         if (isnan(candidate)) {\n          bestValue = uniforms.NAN;\n         } else if (!isnan(bestValue) && candidate ${"min"===this.reduceType?"<":">"} bestValue)\n           {  bestValue = candidate; }`,t="f32(x[offset])"):"sum"===this.reduceType||"mean"===this.reduceType?e=" bestValue = bestValue + candidate; ":"prod"===this.reduceType&&(e=" bestValue = bestValue * candidate; ",t="1.0");const n="mean"===this.reduceType?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);";return`\n       fn DIV_CEIL(a : u32, b : u32) -> u32 {\n        return ((a - 1u) / b + 1u);\n       }\n\n       ${`\n         var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;\n       `}\n       fn getOffset(outputIndex : i32) -> i32 {\n         let outputCoords = getCoordsFromIndex(outputIndex);\n         let offset = ${1===this.outputShape.length?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;\n          return offset;\n       }\n       ${y()}\n         let outputIndex = index / i32(workGroupSizeX);\n         let offset = getOffset(outputIndex);\n         var bestValue = ${t};\n         let Length = uniforms.reduceSize;\n         let WorkPerThread = DIV_CEIL(u32(Length), workGroupSizeX);\n         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;\n             k = k + i32(workGroupSizeX)) {\n           let candidate = f32(x[offset + k]);\n           ${e}\n         }\n         xBestValues[localId.x] = bestValue;\n         workgroupBarrier();\n\n         var reduceSize = min(u32(Length), workGroupSizeX);\n         for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n             currentSize = reduceSize / 2u) {\n           let interval = DIV_CEIL(reduceSize, 2u);\n           if (localId.x < currentSize) {\n            let candidate = xBestValues[localId.x + interval];\n            ${e}\n            xBestValues[localId.x] = bestValue;\n           }\n           reduceSize = interval;\n           workgroupBarrier();\n         }\n\n         if (localId.x == 0u && outputIndex < uniforms.size) {\n          ${n}\n        }\n       }\n     `}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jt(e,t,n,a,s){const i=e.shape.length,o=[],u=r.util.parseAxisParam(t,e.shape);let c=u;const l=r.backend_util.getAxesPermutation(c,i);let d=e;null!=l&&(d=Xe({inputs:{x:e},attrs:{perm:l},backend:s}),c=r.backend_util.getInnerMostAxes(c.length,i),o.push(d)),r.backend_util.assertAxesAreInnerMostDims(a,c,i);const[p,h]=r.backend_util.computeOutAndReduceShapes(d.shape,c);let f,m=p;if(n&&(m=r.backend_util.expandShapeToKeepDim(p,u)),"max"!==a&&"prod"!==a||!s.shouldExecuteOnCPU([d])){const t=r.util.sizeFromShape(h),n={windowSize:t,inSize:t,batchSize:r.util.sizeFromShape(d.shape)/t,outSize:1},i="mean"===a?"float32":Object(r.sumOutType)(e.dtype),u=[{type:"int32",data:[t]}],c=new Zt(n,a),l=s.runWebGPUProgram(c,[d],i,u);o.push(l),f=q({inputs:{x:l},attrs:{shape:m},backend:s})}else{const t=s.tensorMap.get(d.dataId).values;switch(a){case"max":const n=ve(t,r.util.sizeFromShape(h),m,e.dtype);f=s.makeTensorInfo(m,e.dtype,n);break;case"prod":const{outVals:i,outShape:o,outDtype:u}=Oe(d.shape,d.dtype,t,c);f=s.makeTensorInfo(o,u,i);break;default:throw new Error(`${a} CPU implementation is not yet supported.`)}}return o.forEach((e=>s.disposeData(e.dataId))),f}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function en(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;return Jt(a,s,i,"sum",n)}const tn={kernelName:r.Sum,backendName:"webgpu",kernelFunc:en};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nn={kernelName:r.Einsum,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{equation:s}=a,i=t,{allDims:o,summedDims:u,idDims:c}=r.backend_util.decodeEinsumEquation(s,i.length);r.backend_util.checkEinsumDimSizes(o.length,c,i);const{path:l,steps:d}=r.backend_util.getEinsumComputePath(u,c),p=d.length;let h=null,f=o.length;const m=[];for(let e=0;e<p;++e){for(const t of d[e]){const{permutationIndices:e,expandDims:a}=r.backend_util.getEinsumPermutation(f,c[t]);let s;r.backend_util.isIdentityPermutation(e)?s=i[t]:(s=Xe({inputs:{x:i[t]},backend:n,attrs:{perm:e}}),m.push(s));const o=s.shape.slice();for(let e=0;e<a.length;++e)o.splice(a[e],0,1);r.util.arraysEqual(s.shape,o)||(s=q({inputs:{x:s},backend:n,attrs:{shape:o}}),m.push(s)),null===h?h=s:(h=Yt({inputs:{a:s,b:h},backend:n}),m.push(h))}e<p-1&&(l[e]>=0&&(h=en({inputs:{x:h},backend:n,attrs:{axis:l[e]-(o.length-f),keepDims:!1}}),m.push(h)),f--)}for(const e of m)e!==h&&n.disposeData(e.dataId);return h}},rn=ae({opType:l.ELU}),an={kernelName:r.Elu,backendName:"webgpu",kernelFunc:rn},sn=se({opType:s.EQUAL,dtype:"bool",cpuKernelImpl:le}),on={kernelName:r.Equal,backendName:"webgpu",kernelFunc:sn},un=ae({opType:l.EXP,cpuKernelImpl:de,dtype:"float32"}),cn={kernelName:r.Exp,backendName:"webgpu",kernelFunc:un};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ln(e){const{inputs:t,attrs:n,backend:a}=e,{dim:s}=n,{input:i}=t,o=i.shape.length,u=i.shape.slice();let c=s;return s<0&&(r.util.assert(-(o+1)<=s,(()=>`Axis must be in the interval [${-(o+1)}, ${o}]`)),c=o+s+1),u.splice(c,0,1),q({inputs:{x:i},backend:a,attrs:{shape:u}})}const dn={kernelName:r.ExpandDims,backendName:"webgpu",kernelFunc:ln},pn=ae({opType:l.EXPM1,cpuKernelImpl:pe}),hn={kernelName:r.Expm1,backendName:"webgpu",kernelFunc:pn};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class fn{constructor(e){this.outputShape=[],this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=E(this.outputShape),this.dispatch=$(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return`\n      ${y()}\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let coordX = uniforms.xShape[2] - coords[2] - 1;\n          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);\n          setOutputAtIndex(index, outputValue);\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mn={kernelName:r.FlipLeftRight,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,a=new fn(n.shape);return r.runWebGPUProgram(a,[n],n.dtype)}},bn=ae({opType:l.FLOOR,cpuKernelImpl:he}),gn={kernelName:r.Floor,backendName:"webgpu",kernelFunc:bn},xn=se({opType:s.INT_DIV,dtype:"int32"}),yn={kernelName:r.FloorDiv,backendName:"webgpu",kernelFunc:xn};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class kn{constructor(e,t,n=!1){this.isFromPixels=!0,this.outputShape=[0],this.variableNames=[],this.workGroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout=E(this.outputShape),this.dispatch=$(this.dispatchLayout,this.outputShape,this.workGroupSize,[t,1,1]),this.importVideo=n,this.shaderKey=`fromPixels_${this.importVideo}`}getUserCode(){const e=this.importVideo?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`\n      @binding(1) @group(0) var src: ${this.importVideo?"texture_external":"texture_2d<f32>"};\n      ${y()}\n        let flatIndex = index * uniforms.numChannels;\n        if (flatIndex < uniforms.size) {\n          let coords = getCoordsFromIndex(flatIndex);\n          let values = ${e};\n          for (var i = 0; i < uniforms.numChannels; i = i + 1) {\n            result[flatIndex + i] = i32(floor(255.0 * values[i]));\n          }\n        }\n      }\n  `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use backend file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vn={kernelName:r.FromPixels,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e;let{pixels:s}=t;const{numChannels:i}=a;if(null==s)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");const o="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,u="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,c="undefined"!=typeof HTMLCanvasElement&&s instanceof HTMLCanvasElement||"undefined"!=typeof OffscreenCanvas&&s instanceof OffscreenCanvas,l="undefined"!=typeof ImageBitmap&&s instanceof ImageBitmap,[d,p]=o?[s.videoWidth,s.videoHeight]:[s.width,s.height],h=[p,d,i],f=Object(r.env)().getBool("WEBGPU_IMPORT_EXTERNAL_TEXTURE")&&o,m=o||u;if(l||c||m){let e;if(f){const t=s;if(!In.has(t)||In.get(t).expired){const e={source:t};In.set(t,n.device.importExternalTexture(e))}e={width:d,height:p,format:null,usage:null,texture:In.get(t)}}else{m&&(null==wn&&(wn=document.createElement("canvas").getContext("2d")),wn.canvas.width=d,wn.canvas.height=p,wn.drawImage(s,0,0,d,p),s=wn.canvas);const t=GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING,r="rgba8unorm",a=n.textureManager.acquireTexture(h[1],h[0],r,t);n.queue.copyExternalImageToTexture({source:s},{texture:a},[h[1],h[0]]),e={width:d,height:p,format:r,usage:t,texture:a}}const t=r.util.sizeFromShape(h),a=r.util.computeStrides(h),o=new kn(h,i,f),u=[{type:"uint32",data:[t]},{type:"uint32",data:[i]},{type:"uint32",data:[...a]}],c=n.makeTensorInfo([p,d],"int32");n.tensorMap.get(c.dataId).resourceInfo=e;const l=n.runWebGPUProgram(o,[c],"int32",u);return n.disposeData(c.dataId),l}const b=s.data;let g=b;if(null!=i&&4!==i){g=new Uint8Array(s.width*s.height*i);const e=b.length;let t=0;for(let n=0;n<e;n++)n%4<i&&(g[t++]=b[n])}const x=n.makeTensorInfo(h,"int32",new Int32Array(g));return n.uploadToGPU(x.dataId),x}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */};let wn;const In=new Map;class Sn{constructor(e,t,n,a,s){this.uniforms="varianceEpsilon : f32,",this.workGroupSize=[128,1,1],this.size=!0,this.variableNames=["x","mean","variance"],r.backend_util.assertAndGetBroadcastShape(e,t),r.backend_util.assertAndGetBroadcastShape(e,n),this.outputShape=e,this.dispatchLayout=E(this.outputShape),this.dispatch=$(this.dispatchLayout,this.outputShape,this.workGroupSize),null!=a&&(r.backend_util.assertAndGetBroadcastShape(e,a),this.variableNames.push("offset")),null!=s&&(r.backend_util.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale")),this.offsetShape=a,this.scaleShape=s,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";null!=this.offsetShape&&(e="getOffsetByOutputIndex(index)");let t="1.0";null!=this.scaleShape&&(t="getScaleByOutputIndex(index)");return`\n      ${y()}\n        if (index < uniforms.size)\n        {\n          let xValue = getXByOutputIndex(index);\n          let meanValue = getMeanByOutputIndex(index);\n          let varianValue = getVarianceByOutputIndex(index);\n          let offsetValue = ${e};\n          let scaleValue = ${t};\n          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));\n          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));\n        }\n      }\n  `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _n={kernelName:r.FusedBatchNorm,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r,scale:a,offset:s,mean:i,variance:o}=e,{varianceEpsilon:u}=t,c=n,l=[r,i,o];let d=null;null!=s&&(d=s.shape,l.push(s));let p=null;null!=a&&(p=a.shape,l.push(a));const h=new Sn(r.shape,i.shape,o.shape,d,p),f=[{type:"float32",data:[u]}];return c.runWebGPUProgram(h,l,r.dtype,f)}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cn={kernelName:r.FusedConv2D,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:i,bias:o,preluActivationWeights:u}=t,{strides:c,pad:l,dataFormat:d,dilations:p,dimRoundingMode:h,activation:f,leakyreluAlpha:m}=a,b=r.backend_util.convertConv2DDataFormat(d);return Ct({x:s,filter:i,convInfo:r.backend_util.computeConv2DInfo(s.shape,i.shape,c,p,l,h,!1,b),backend:n,bias:o,preluActivationWeights:u,leakyreluAlpha:m,activation:f})}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const On={kernelName:r.FusedDepthwiseConv2D,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:i,bias:o,preluActivationWeights:u}=t,{strides:c,pad:l,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=a;let m=d;null==m&&(m=[1,1]),r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(c,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${c} and dilations '${m}'`));const b=r.backend_util.computeConv2DInfo(s.shape,i.shape,c,m,l,p,!0),g=[s,i],x=null!=o,y=null!=u;x&&g.push(o),y&&g.push(u);const k=[{type:"int32",data:[b.padInfo.top,b.padInfo.left]},{type:"int32",data:[b.inHeight,b.inWidth]}];let v;return b.inHeight>4&&b.inWidth>4&&1===b.strideHeight&&1===b.strideWidth&&b.inChannels===b.outChannels&&1===b.dilationHeight&&1===b.dilationWidth&&b.inChannels%4==0?v=new qt(b,x,h,y):(v=new Kt(b,x,h,y),k.push({type:"int32",data:[b.filterHeight]},{type:"int32",data:[b.filterWidth]},{type:"int32",data:[b.strideHeight,b.strideWidth]},{type:"int32",data:[b.dilationHeight,b.dilationWidth]})),"leakyrelu"===h&&(k.push({type:"float32",data:[f]}),v.uniforms+=" alpha : f32,"),n.runWebGPUProgram(v,g,"float32",k)}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $n{constructor(e,t){this.variableNames=["A","indices"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=E(this.outputShape),this.dispatch=$(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`gathernd_${e}`,this.sliceDim=e,this.uniforms=`sliceDim : i32, strides : ${g(e)},`}getUserCode(){let e;e=this.sliceDim>1?"uniforms.strides[j]":"uniforms.strides";return`\n        ${y()}\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          var flattenIndex = 0;\n          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {\n            let indexTemp = i32(round(getIndices(coords[0], j)));\n            let strideNum = ${e};\n            flattenIndex = flattenIndex + indexTemp * strideNum;\n          }\n\n          setOutputAtIndex(index, getA(flattenIndex, coords[1]));\n        }\n      }\n      `}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tn={kernelName:r.GatherNd,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:s}=t,i=s.shape,o=i[i.length-1],u=r.util.sizeFromShape(a.shape),[c,l,d,p]=r.backend_util.prepareAndValidate(a,s),h=q({inputs:{x:s},backend:n,attrs:{shape:[l,o]}}),f=q({inputs:{x:a},backend:n,attrs:{shape:[r.util.sizeFromShape(a.shape)/d,d]}});if(n.shouldExecuteOnCPU([a,s])||"string"===a.dtype){const e=n.readSync(s.dataId),t=n.bufferSync(a),r=fe(e,t,a.dtype,l,o,d,p,a.shape,u);return n.makeTensorInfo(c,a.dtype,r.values)}const m=new $n(o,[l,d]),b=[{type:"int32",data:[o]},{type:"int32",data:p}],g=n.runWebGPUProgram(m,[f,h],f.dtype,b),x=q({inputs:{x:g},backend:n,attrs:{shape:c}});return n.disposeData(h.dataId),n.disposeData(f.dataId),n.disposeData(g.dataId),x}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class An{constructor(e,t){this.variableNames=["A","indices"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e.slice(),this.aShape=e,this.outputShape=t,this.dispatchLayout=E(this.outputShape),this.dispatch=$(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="gather"}getUserCode(){const e=function(e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let r=0;r<e.length;r++)2===r?n.push("indexZ"):n.push(`${t[r]}`);return n.join()}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(this.aShape);return`\n      ${y()}\n        if (index < uniforms.size) {\n          let resRC = getCoordsFromIndex(index);\n          let indexZ = i32(getIndices(resRC.x, resRC.z));\n          let inBounds = select(0.0, 1.0, indexZ >= 0 && indexZ < uniforms.aShape[2]);\n          setOutputAtIndex(index, inBounds * getA(${e}));\n        }\n      }\n    `}}function En(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,indices:i}=t,{axis:o,batchDims:u}=a,c=r.util.parseAxisParam(o,s.shape)[0],l=r.backend_util.segment_util.collectGatherOpShapeInfo(s,i,c,u),d=r.util.sizeFromShape(i.shape),p=[],h=q({inputs:{x:s},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),f=q({inputs:{x:i},backend:n,attrs:{shape:[l.batchSize,d/l.batchSize]}});p.push(h),p.push(f);const m=[l.batchSize,l.outerSize,d/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([s,i])){const e=n.tensorMap.get(f.dataId).values,t=Object(r.buffer)(f.shape,f.dtype,e),a=n.tensorMap.get(h.dataId).values,s=Object(r.buffer)(h.shape,h.dtype,a),i=me(s,t,m);return p.forEach((e=>n.disposeData(e.dataId))),n.makeTensorInfo(l.outputShape,i.dtype,i.values)}const b=new An(h.shape,m),g=n.runWebGPUProgram(b,[h,f],h.dtype);p.push(g);const x=q({inputs:{x:g},backend:n,attrs:{shape:l.outputShape}});return p.forEach((e=>n.disposeData(e.dataId))),x}const Nn={kernelName:r.GatherV2,backendName:"webgpu",kernelFunc:En},Rn=se({opType:s.GREATER,cpuKernelImpl:ge,dtype:"bool"}),Fn={kernelName:r.Greater,backendName:"webgpu",kernelFunc:Rn},Mn=se({opType:s.GREATER_EQUAL,dtype:"bool",cpuKernelImpl:be}),Dn={kernelName:r.GreaterEqual,backendName:"webgpu",kernelFunc:Mn};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pn={kernelName:r.LeakyRelu,backendName:"webgpu",kernelFunc:
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r,i=[{type:"float32",data:[s]}],o=new re(a.shape,l.LEAKYRELU);return o.uniforms="alpha : f32,",n.runWebGPUProgram(o,[a],"float32",i)}},Bn=se({opType:s.LESS,dtype:"bool",cpuKernelImpl:ye}),jn={kernelName:r.Less,backendName:"webgpu",kernelFunc:Bn},Ln=se({opType:s.LESS_EQUAL,dtype:"bool",cpuKernelImpl:xe}),zn={kernelName:r.LessEqual,backendName:"webgpu",kernelFunc:Ln},Wn=ae({opType:l.LOG,cpuKernelImpl:ke}),Un={kernelName:r.Log,backendName:"webgpu",kernelFunc:Wn},Gn=se({opType:s.LOGICAL_AND,dtype:"bool"}),Vn={kernelName:r.LogicalAnd,backendName:"webgpu",kernelFunc:Gn},Hn=ae({opType:l.LOGICAL_NOT}),qn={kernelName:r.LogicalNot,backendName:"webgpu",kernelFunc:Hn};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Kn(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r;return Jt(a,s,i,"max",n)}const Xn={kernelName:r.Max,backendName:"webgpu",kernelFunc:Kn},Yn=se({opType:s.MAX,cpuKernelImpl:we}),Qn={kernelName:r.Maximum,backendName:"webgpu",kernelFunc:Yn};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zn={kernelName:r.MaxPool,backendName:"webgpu",kernelFunc:
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:c}=a,l=r.backend_util.computePool2DInfo(s.shape,i,o,1,u,c);let d;const p=[];if(1===l.filterHeight&&1===l.filterWidth){if(r.util.arraysEqual(l.inShape,l.outShape))return J({inputs:{x:s},backend:n});d=new et(l),p.push({type:"int32",data:[l.strideHeight,l.strideWidth]})}else d=new Je(l,"max"),p.push({type:"int32",data:[l.strideHeight,l.strideWidth]},{type:"int32",data:[l.padInfo.top,l.padInfo.left]},{type:"int32",data:[l.dilationHeight,l.dilationWidth]},{type:"int32",data:[l.inHeight,l.inWidth]},{type:"int32",data:[l.effectiveFilterHeight,l.effectiveFilterWidth]});return n.runWebGPUProgram(d,[s],s.dtype,p)}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jn={kernelName:r.Mean,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{keepDims:s,axis:i}=r;return Jt(a,i,s,"mean",n)}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const er={kernelName:r.Min,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;return Jt(a,s,i,"min",n)}},tr=se({opType:s.MIN,cpuKernelImpl:Ie}),nr={kernelName:r.Minimum,backendName:"webgpu",kernelFunc:tr};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class rr{constructor(e,t,n){this.uniforms="",this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1])),this.dispatchLayout=E(this.outputShape),this.dispatch=$(this.dispatchLayout,this.outputShape,this.workGroupSize),this.xShape=e,t.map(((e,t)=>{this.uniforms+=` pad${t} : vec2<i32>,`})),this.offset="reflect"===n?0:1,this.shaderKey=`mirrorPad_${n}`}getUserCode(){const e=this.xShape.length,t=this.xShape.map(((e,t)=>`uniforms.pad${t}[0]`)).join(","),n=this.xShape.map(((t,n)=>`uniforms.pad${n}[0] + uniforms.xShape${e>1?`[${n}]`:""}`)).join(","),r=1===e?"start":"start[i]",a=1===e?"end":"end[i]",s=1===e?"outC":"outC[i]",i=g(e),o=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`\n      ${y()}\n        if (index < uniforms.size) {\n          let start = ${i}(${t});\n          let end = ${i}(${n});\n          var outC = getCoordsFromIndex(index);\n          for (var i = 0; i < ${e}; i = i + 1) {\n            if (${s} < ${r}) {\n              ${s} = ${r} * 2 - ${s} - ${this.offset};\n            } else if(${s} >= ${a}) {\n              ${s} = (${a} - 1) * 2 - ${s} + ${this.offset};\n            }\n          }\n          let coords = outC - start;\n          setOutputAtIndex(index, getX(${o}));\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ar={kernelName:r.MirrorPad,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{paddings:a,mode:s}=t,i=n,o=a.map((e=>({type:"int32",data:[e[0],e[1]]}))),u=new rr(r.shape,a,s);return i.runWebGPUProgram(u,[r],r.dtype,o)}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sr={kernelName:r.Neg,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.tensorMap.get(r.dataId),[t,a]=_e(e.values,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,t)}const a=new re(r.shape,l.NEG);return n.runWebGPUProgram(a,[r],r.dtype)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ir={kernelName:r.NonMaxSuppressionV3,backendName:"webgpu",kernelFunc:function(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:s,scores:i}=t,{maxOutputSize:o,iouThreshold:u,scoreThreshold:c}=a,l=n.readSync(s.dataId),d=n.readSync(i.dataId),{selectedIndices:p}=r.kernel_impls.nonMaxSuppressionV3Impl(l,d,o,u,c);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const or={kernelName:r.NonMaxSuppressionV5,backendName:"webgpu",kernelFunc:function(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:s,scores:i}=t,{maxOutputSize:o,iouThreshold:u,scoreThreshold:c,softNmsSigma:l}=a,d=n.readSync(s.dataId),p=n.readSync(i.dataId),h=o,f=u,m=c,b=l,{selectedIndices:g,selectedScores:x}=r.kernel_impls.nonMaxSuppressionV5Impl(d,p,h,f,m,b);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([x.length],"float32",new Float32Array(x))]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ur(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=lt({inputs:{input:r},backend:n}),t=ur({inputs:{x:e},backend:n}),a=yt({inputs:{input:r},backend:n}),s=ur({inputs:{x:a},backend:n}),i=te({inputs:{real:t,imag:s},backend:n});return n.disposeData(e.dataId),n.disposeData(t.dataId),n.disposeData(a.dataId),n.disposeData(s.dataId),i}return V({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const cr={kernelName:r.ZerosLike,backendName:"webgpu",kernelFunc:ur};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lr={kernelName:r.OnesLike,backendName:"webgpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){const t=lt({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=yt({inputs:{input:a},backend:r}),i=ur({inputs:{x:s},backend:r}),o=te({inputs:{real:n,imag:i},backend:r});return r.disposeData(t.dataId),r.disposeData(n.dataId),r.disposeData(s.dataId),r.disposeData(i.dataId),o}return V({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r})}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dr={kernelName:r.Pack,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{axis:s}=a;if(1===t.length)return ln({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const i=t[0].shape,o=t[0].dtype;t.forEach((e=>{r.util.assertShapesMatch(i,e.shape,"All tensors passed to stack must have matching shapes"),r.util.assert(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const u=[],c=wt({inputs:t.map((e=>{const t=ln({inputs:{input:e},backend:n,attrs:{dim:s}});return u.push(t),t})),backend:n,attrs:{axis:s}});return u.forEach((e=>n.disposeData(e.dataId))),c}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pr{constructor(e,t){this.variableNames=["x"],this.uniforms="constantValue : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1])),this.dispatchLayout=E(this.outputShape),this.dispatch=$(this.dispatchLayout,this.outputShape,this.workGroupSize),t.map(((e,t)=>{this.uniforms+=` pad${t} : vec2<i32>,`})),this.xShape=e,this.shaderKey="pad"}getUserCode(){const e=this.xShape.length,t=g(e),n=this.xShape.map(((e,t)=>`uniforms.pad${t}[0]`)).join(","),r=this.xShape.map(((t,n)=>`uniforms.pad${n}[0] + uniforms.xShape${e>1?`[${n}]`:""}`)).join(","),a=e>1?`${t}(${n})`:`${n}`,s=e>1?`${t}(${r})`:`${r}`,i=e>1?"any(outC < start)":"outC < start",o=e>1?"any(outC >= end)":"outC >= end",u=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`\n      ${y()}\n        if (index < uniforms.size) {\n          let start = ${a};\n          let end = ${s};\n          let outC = getCoordsFromIndex(index);\n\n          if (${i} || ${o}) {\n            setOutputAtIndex(index, uniforms.constantValue);\n          } else {\n            let coords = outC - start;\n            setOutputAtIndex(index, getX(${u}));\n          }\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hr=e=>{const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{paddings:i,constantValue:o}=a;if(i.every((e=>r.util.arraysEqual(e,[0,0]))))return J({inputs:{x:s},backend:n});if(0===r.util.sizeFromShape(s.shape)){return V({backend:n,attrs:{shape:i.map(((e,t)=>e[0]+s.shape[t]+e[1])),value:o,dtype:s.dtype}})}const u=[{type:"float32",data:[o]}];i.map((e=>u.push({type:"int32",data:[e[0],e[1]]})));const c=new pr(s.shape,i);return n.runWebGPUProgram(c,[s],s.dtype,u)},fr={kernelName:r.PadV2,backendName:"webgpu",kernelFunc:hr},mr=se({opType:s.POW}),br={kernelName:r.Pow,backendName:"webgpu",kernelFunc:mr};const gr={kernelName:r.Prelu,backendName:"webgpu",kernelFunc:
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t,i=new Z(s.PRELU,r.shape,a.shape);return n.runWebGPUProgram(i,[r,a],"float32")}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xr={kernelName:r.Prod,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;return Jt(a,s,i,"prod",n)}},yr={kernelName:r.Range,backendName:"webgpu",kernelFunc:e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=$e(r,a,s,i);return t.makeTensorInfo([o.length],i,o)}},kr=se({opType:s.DIV}),vr={kernelName:r.RealDiv,backendName:"webgpu",kernelFunc:kr},wr=ae({opType:l.RELU}),Ir={kernelName:r.Relu,backendName:"webgpu",kernelFunc:wr},Sr=ae({opType:l.RELU6}),_r={kernelName:r.Relu6,backendName:"webgpu",kernelFunc:Sr};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Cr{constructor(e,t,n){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, halfPixelCenters : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=E(this.outputShape),this.dispatch=$(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return`\n      ${y()}\n        if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n          let b = coords[0];\n          let d = coords[3];\n          let rc = coords.yz;\n\n          let effectiveInSize = vec2<f32>(\n            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveOutSize = vec2<f32>(\n            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveInputOverOutputRatioRC =\n              effectiveInSize / effectiveOutSize;\n\n          // Fractional source index\n          let sourceFracIndexRC =\n            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *\n            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);\n\n          // Compute the four integer indices.\n          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);\n          let sourceCeilRC = vec2<i32>(\n            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));\n\n          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);\n          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);\n          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);\n          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);\n\n          let top = topLeft + (topRight - topLeft) * fracRC.y;\n          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n          let newValue = top + (bottom - top) * fracRC.x;\n\n          setOutputAtIndex(index, newValue);\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Or={kernelName:r.ResizeBilinear,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,size:i,halfPixelCenters:o}=r,[u,c]=i,l=[{type:"float32",data:[s&&u>1?1:0,s&&c>1?1:0]},{type:"float32",data:[o?.5:0]}],d=new Cr(a.shape,u,c);return n.runWebGPUProgram(d,[a],"float32",l)}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $r{constructor(e,t,n,r){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, roundBase : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=E(this.outputShape),this.dispatch=$(this.dispatchLayout,this.outputShape,this.workGroupSize),this.halfPixelCenters=r,this.shaderKey=`resizeNearest_${r}`}getUserCode(){let e;e=this.halfPixelCenters?"max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":"vec2<f32>(rc) * effectiveInputOverOutputRatioRC";return`\n      ${y()}\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let b = coords[0];\n          let d = coords[3];\n          let rc = coords.yz;\n\n          let effectiveInSize = vec2<f32>(\n            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveOutSize = vec2<f32>(\n            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveInputOverOutputRatioRC =\n              effectiveInSize / effectiveOutSize;\n\n          // Fractional source index\n          let sourceFracIndexRC = ${e};\n\n          // Compute the coordinators of nearest neighbor point.\n          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));\n          let sourceNearestRC = vec2<i32>(\n            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));\n          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n          setOutputAtIndex(index, newValue);\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tr={kernelName:r.ResizeNearestNeighbor,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[u,c]=o,l=[{type:"float32",data:[s&&u>1?1:0,s&&c>1?1:0]},{type:"float32",data:[s?.5:0]}],d=new $r(a.shape,u,c,i);return n.runWebGPUProgram(d,[a],a.dtype,l)}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ar{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=E(this.outputShape),this.dispatch=$(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms="centerX : f32, centerY : f32, sinRadians : f32,\n          cosRadians : f32,",this.shaderKey="rotate",this.outputShape=e,"number"==typeof t?(this.uniforms+=" fillValue : f32,",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>,",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`\n        ${y()}\n\n          if (index < uniforms.size) {\n            let coords = getCoordsFromIndex(index);\n            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *\n                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *\n                uniforms.sinRadians;\n            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *\n                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *\n                uniforms.cosRadians;\n            let coordX = i32(round(coordXFloat + uniforms.centerX));\n            let coordY = i32(round(coordYFloat + uniforms.centerY));\n            ${this.fillSnippet}\n            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&\n                coordY < uniforms.xShape[1]) {\n              outputValue = getX(coords[0], coordY, coordX, coords[3]);\n            }\n            setOutputAtIndex(index, outputValue);\n          }\n        }\n      `}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Er={kernelName:r.RotateWithOffset,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:a}=e,{radians:s,fillValue:i,center:o}=t,u=n,c=new Ar(a.shape,i),[l,d]=r.backend_util.getImageCenter(o,a.shape[1],a.shape[2]),p=[{type:"float32",data:[l]},{type:"float32",data:[d]},{type:"float32",data:[Math.sin(s)]},{type:"float32",data:[Math.cos(s)]}];"number"==typeof i?p.push({type:"float32",data:[Number.parseFloat(i.toFixed(2))]}):p.push({type:"float32",data:i});return u.runWebGPUProgram(c,[a],a.dtype,p)}},Nr=ae({opType:l.RSQRT,cpuKernelImpl:Te}),Rr={kernelName:r.Rsqrt,backendName:"webgpu",kernelFunc:Nr};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Fr{constructor(e,t,n,r,a,s,i,o=!0){this.variableNames=["updates","indices"],this.workGroupSize=[64,1,1],this.atomic=!0,this.outputShape=s,this.type=i,this.sumDupeIndices=o,this.dispatchLayout=E(e),this.dispatch=$(this.dispatchLayout,e,this.workGroupSize),this.sliceDimGreaterThanOne=t>1,this.shaderKey=`scatter_${n}_${r}_${this.sliceDimGreaterThanOne}_${i}_${o}`;const u=g(a.length);this.uniforms=`sliceDim : i32, strides: ${u}, size: i32,`,this.updatesRank=r,this.indicesRank=n}getUserCode(){let e="";1===this.indicesRank?e="coords[0]":2===this.indicesRank&&(e="coords[0], j");const t=`getIndices(${e})`,n=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides";let r="",a="";1===this.dispatchLayout.x.length?(r="flattenedIndex",a="\n      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {\n        return index;\n      }\n      "):2===this.dispatchLayout.x.length&&(r="vec2<i32>(flattenedIndex, coords[1])",a="\n      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {\n        // N.B. |updates| could be a scalar tensor, conceptually representing a\n        // 2D tensor with all values equal to that. By design, its size must be\n        // the same as |outShape[1]| in one dimension, and |indicesShape[0]|\n        // gives the other.\n        let sliceSize = uniforms.outShape[1];\n        let d0 = index / sliceSize;\n        let d1 = index - d0 * sliceSize;\n        return vec2<i32>(d0, d1);\n      }\n      ");const s=`getUpdates(${Array.from({length:this.updatesRank},((e,t)=>`coords[${t}]`)).join(", ")})`;return`\n    ${a}\n\n      ${y()}\n\n        if (index < uniforms.size) {\n          let coords = getUpdatesCoordsFromFlatIndex(index);\n          var flattenedIndex = 0;\n          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {\n            let indexInside = i32(round(${t}));\n            flattenedIndex = flattenedIndex + indexInside * ${n};\n          }\n          let updateValue =\n              ${C(this.type,!1)}(${s});\n          let flatIndex = getOutputIndexFromCoords(${r});\n\n          ${((e,t)=>{let n=`atomicAdd(${e}, bitcast<i32>(${t}))`;"float32"===this.type&&(n=`\n          {\n            var oldBits = 0;\n            var newBits = bitcast<i32>(${t});\n            loop {\n              let info = atomicCompareExchangeWeak(${e}, oldBits, newBits);\n              if (info.exchanged) {\n                break;\n              }\n              oldBits = info.old_value;\n              let oldValue = bitcast<f32>(oldBits);\n              let newValue = oldValue + (${t});\n              newBits = bitcast<i32>(newValue);\n            }\n          }\n        `);const r=`atomicStore(${e}, bitcast<i32>(${t}));`;return this.sumDupeIndices?n:r})("&result[flatIndex]","updateValue")};\n        }\n      }`}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mr={kernelName:r.ScatterNd,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:s,updates:i}=t,{shape:o}=a,{sliceRank:u,numUpdates:c,sliceSize:l,strides:d,outputSize:p}=r.backend_util.calculateShapes(i,s,o),h=[p/l,l];if(0===p)return n.makeTensorInfo(o,s.dtype);const f=q({inputs:{x:s},backend:n,attrs:{shape:[c,u]}}),m=q({inputs:{x:i},backend:n,attrs:{shape:[c,l]}}),b=m.dtype,g=V({backend:n,attrs:{shape:h,value:0,dtype:b}}),x=[{type:"int32",data:[u]},{type:"int32",data:d},{type:"int32",data:[r.util.sizeFromShape(m.shape)]}],y=new Fr(m.shape,u,f.shape.length,m.shape.length,d,h,b),k=n.runWebGPUProgram(y,[m,f],b,x,g),v=q({inputs:{x:k},backend:n,attrs:{shape:o}});return n.disposeData(f.dataId),n.disposeData(m.dataId),n.disposeData(k.dataId),v}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Dr{constructor(e,t,n){this.variableNames=["c","a","b"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=E(this.outputShape),this.dispatch=$(this.dispatchLayout,this.outputShape,this.workGroupSize),this.cRank=e,this.rank=n,this.shaderKey="select"}getUserCode(){let e,t;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(1===this.rank)t="resRC",e="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[],a=[];for(let e=0;e<this.outputShape.length;e++)a.push(`${n[e]}`),e<this.cRank&&r.push(`${n[e]}`);e=r.join(),t=a.join()}return`\n      ${y()}\n        if (index < uniforms.size) {\n          let resRC = getCoordsFromIndex(index);\n          let cVal = getC(${e});\n          if (cVal >= 1.0) {\n            setOutputAtIndex(index, getA(${t}));\n          } else {\n            setOutputAtIndex(index, getB(${t}));\n          }\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pr={kernelName:r.Select,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:a,t:s,e:i}=t,o=new Dr(a.shape.length,s.shape,s.shape.length);return n.runWebGPUProgram(o,[a,s,i],Object(r.upcastType)(s.dtype,i.dtype))}},Br=ae({opType:l.SIGMOID}),jr={kernelName:r.Sigmoid,backendName:"webgpu",kernelFunc:Br},Lr=ae({opType:l.SIN}),zr={kernelName:r.Sin,backendName:"webgpu",kernelFunc:Lr},Wr=ae({opType:l.SINH}),Ur={kernelName:r.Sinh,backendName:"webgpu",kernelFunc:Wr},Gr=se({opType:s.SUB,cpuKernelImpl:Me,supportsComplex:!0}),Vr={kernelName:r.Sub,backendName:"webgpu",kernelFunc:Gr};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hr={kernelName:r.Softmax,backendName:"webgpu",kernelFunc:
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:a}=e,{logits:s}=t,{dim:i}=a,o=r.util.parseAxisParam([i],s.shape),u=Kn({inputs:{x:s},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),c=r.backend_util.expandShapeToKeepDim(u.shape,o),l=q({inputs:{x:u},backend:n,attrs:{shape:c}}),d=Gr({inputs:{a:s,b:l},backend:n}),p=un({inputs:{x:d},backend:n}),h=en({inputs:{x:p},backend:n,attrs:{axis:o,keepDims:!1}}),f=q({inputs:{x:h},backend:n,attrs:{shape:c}}),m=kr({inputs:{a:p,b:f},backend:n});return n.disposeData(u.dataId),n.disposeData(l.dataId),n.disposeData(d.dataId),n.disposeData(p.dataId),n.disposeData(h.dataId),n.disposeData(f.dataId),m}},qr={kernelName:r.SpaceToBatchND,backendName:"webgpu",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{blockShape:i,paddings:o}=a;r.util.assert(s.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet"));const u=i.reduce(((e,t)=>e*t)),c=[[0,0]];c.push(...o);for(let e=1+i.length;e<s.shape.length;++e)c.push([0,0]);const l=[],d=hr({inputs:{x:s},backend:n,attrs:{paddings:c,constantValue:0}}),p=r.backend_util.getReshaped(d.shape,i,u,!1),h=r.backend_util.getPermuted(p.length,i.length,!1),f=r.backend_util.getReshapedPermuted(d.shape,i,u,!1),m=q({inputs:{x:d},backend:n,attrs:{shape:p}}),b=Xe({inputs:{x:m},backend:n,attrs:{perm:h}}),g=q({inputs:{x:b},backend:n,attrs:{shape:f}});return l.push(d),l.push(m),l.push(b),l.forEach((e=>n.disposeData(e.dataId))),g}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Kr{constructor(e,t){this.variableNames=["A"],this.workGroupSize=[64,1,1],this.size=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.dispatchLayout=E(this.outputShape),this.dispatch=$(this.dispatchLayout,this.outputShape,this.workGroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){const e=function(e,t=""){if(e>=5)throw Error(`Tile for rank ${e} is not yet supported`);if(1===e)return`(resRC % ${t}aShape)`;const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let a=0;a<e;a++)r.push(`(${n[a]} % ${t}aShape[${a}])`);return r.join()}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(this.rank,"uniforms.");return`\n      ${y()}\n        if (index < uniforms.size) {\n          let resRC = getCoordsFromIndex(index);\n          setOutputAtIndex(index, getA(${e}));\n        }\n      }\n    `}}function Xr(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{reps:i}=a;if(n.shouldExecuteOnCPU([s])||"string"===s.dtype||s.shape.length>=5){const e=n.readSync(s.dataId),t="string"===s.dtype?e.map((e=>r.util.decodeString(e))):e,a=Object(r.buffer)(s.shape,s.dtype,t),o=De(a,i);return n.makeTensorInfo(o.shape,o.dtype,o.values)}const o=new Kr(s.shape,i);return n.runWebGPUProgram(o,[s],s.dtype)}const Yr={kernelName:r.Tile,backendName:"webgpu",kernelFunc:Xr};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qr={kernelName:r.SparseToDense,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sparseIndices:s,sparseValues:i,defaultValue:o}=t,{outputShape:u}=a,{sliceRank:c,numUpdates:l,sliceSize:d,strides:p,outputSize:h}=r.backend_util.calculateShapes(i,s,u),f=!1;if("string"===i.dtype){const e=n.bufferSync(s),t=n.bufferSync(i),a=r.util.decodeString(n.readSync(o.dataId)[0]),m=Ae(e,t,u,h,d,l,c,p,a,f);return n.makeTensorInfo(u,m.dtype,m.values)}const m=[h/d,d],b=q({inputs:{x:s},backend:n,attrs:{shape:[l,c]}}),g=i.shape.length?q({inputs:{x:i},backend:n,attrs:{shape:[l,d]}}):J({inputs:{x:i},backend:n}),x=g.dtype,y=n.makeTensorInfo([],x,r.util.makeZerosTypedArray(1,x)),k=q({inputs:{x:o},backend:n,attrs:{shape:Array(m.length).fill(1)}}),v=Xr({inputs:{x:k},backend:n,attrs:{reps:m}}),w=[{type:"int32",data:[c]},{type:"int32",data:p},{type:"int32",data:[r.util.sizeFromShape([l,d])]}];switch(l){case 0:break;case 1:{const e=new Fr([l,d],c,b.shape.length,g.shape.length,p,m,x,f);n.runWebGPUProgram(e,[g,b],x,w,v)}break;default:{const e=new Fr([l,d],c,b.shape.length,y.shape.length,p,m,x,f);n.runWebGPUProgram(e,[y,b],x,w,v)}{const e=new Fr([l,d],c,b.shape.length,g.shape.length,p,m,x);n.runWebGPUProgram(e,[g,b],x,w,v)}}const I=q({inputs:{x:v},backend:n,attrs:{shape:u}});return n.disposeData(b.dataId),n.disposeData(g.dataId),n.disposeData(k.dataId),n.disposeData(y.dataId),n.disposeData(v.dataId),I}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zr={kernelName:r.SplitV,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{numOrSizeSplits:i,axis:o}=a,u=r.util.parseAxisParam(o,s.shape)[0],c=r.backend_util.prepareSplitSize(s,i,u),l=s.shape.length,d=new Array(l).fill(0),p=s.shape.slice();return c.map((e=>{const t=[...p];t[u]=e;const r=st({inputs:{x:s},backend:n,attrs:{begin:d,size:t}});return d[u]+=e,r}))}},Jr=ae({opType:l.SQRT}),ea={kernelName:r.Sqrt,backendName:"webgpu",kernelFunc:Jr},ta={kernelName:r.Square,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t,a=new re(n.shape,l.SQUARE);return r.runWebGPUProgram(a,[n],n.dtype)}},na=se({opType:s.SQUARED_DIFFERENCE}),ra={kernelName:r.SquaredDifference,backendName:"webgpu",kernelFunc:na};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class aa{constructor(e){this.variableNames=["x"],this.workPerThread=1,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=E(this.outputShape),this.dispatch=$(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);const t=g(this.outputShape.length);this.uniforms=`begin : ${t},  strides : ${t}, `,this.shaderKey="stridedSlice"}getUserCode(){let e="";if(1===this.outputShape.length)e="coords * uniforms.strides + uniforms.begin";else{let t=0;e=this.outputShape.map(((e,n)=>(t++,1===this.outputShape.length?`coords * uniforms.strides[${n}] + uniforms.begin[${n}]`:`coords[${t-1}] * uniforms.strides[${n}] + uniforms.begin[${n}]`))).join(",")}return`\n       ${y()}\n         if (index < uniforms.size) {\n           let coords = getCoordsFromIndex(index);\n           setOutputAtIndex(index, getX(${e}));\n         }\n       }\n     `}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sa={kernelName:r.StridedSlice,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{begin:i,end:o,strides:u,beginMask:c,endMask:l,ellipsisMask:d,newAxisMask:p,shrinkAxisMask:h}=a,{finalShapeSparse:f,finalShape:m,isIdentity:b,sliceDim0:g,isSimpleSlice:x,begin:y,end:k,strides:v}=r.slice_util.sliceInfo(s.shape,i,o,u,c,l,d,p,h);let w;if(b)w=q({inputs:{x:s},backend:n,attrs:{shape:m}});else if(g||x){r.util.assert(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=r.slice_util.computeOutShape(y,k,v),t=st({inputs:{x:s},backend:n,attrs:{begin:y,size:e}});w=q({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeData(t.dataId)}else{if(n.shouldExecuteOnCPU([s])){const e=n.readSync(s.dataId),t=Object(r.buffer)(s.shape,s.dtype,e),a=Re(f,t,v,y);w=n.makeTensorInfo(m,s.dtype,a.values)}else{const e=new aa(f),t=[{type:"int32",data:y},{type:"int32",data:v}],r=n.runWebGPUProgram(e,[s],s.dtype,t);w=q({inputs:{x:r},backend:n,attrs:{shape:m}}),n.disposeData(r.dataId)}}return w}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ia={kernelName:r.StringNGrams,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:c}=r,{data:l,dataSplits:d}=t,p=n.readSync(l.dataId),h=n.readSync(d.dataId),[f,m]=Fe(p,h,a,s,i,o,u,c);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}},oa=ae({opType:l.TANH}),ua={kernelName:r.Tanh,backendName:"webgpu",kernelFunc:oa};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class ca{constructor(e){this.variableNames=["x","indices"],this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=E(this.outputShape),this.dispatch=$(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms="inputSize : i32, firstPass : i32, negativeInf : f32,\n        dir : i32, inc : i32,",this.shaderKey="swap"}getUserCode(){return`\n        ${y()}\n          if (index < uniforms.size) {\n            let outC = getCoordsFromIndex(index);\n            let batch = outC[0];\n            let elemIdx = outC[1];\n            // We compare elements pair-wise within a group of size 2 * inc.\n            // The comparing rule for each group alternates between ascending\n            // and descending. Within each group, we compare each pair at\n            // positions i and i+inc. To decide whether an element at position i\n            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n            // inc, it is in the first half of the group, we denote it as x0,\n            // otherwise we denote it as x1.\n            // For example, as shown in the Bitonic top K paper referenced\n            // above, Figure5(a) shows that element[1] is in the second half of\n            // the group when group size is 2, but it is in the first half of\n            // the group when group size is 4.\n            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;\n            var i = 0;\n            if (isFirstInPair) {\n              i = elemIdx;\n            } else {\n              i = elemIdx - uniforms.inc;\n            }\n\n            var i0 = 0;\n            if (uniforms.firstPass == 1) {\n              i0 = i;\n            } else {\n              i0 = i32(getIndices(batch, i));\n            }\n\n            var i1 = 0;\n            if (uniforms.firstPass == 1) {\n              i1 = i + uniforms.inc;\n            } else {\n              i1 = i32(getIndices(batch, i + uniforms.inc));\n            }\n\n            var x0 = f32(0.0);\n            var x1 = f32(0.0);\n            if (i0 < uniforms.inputSize) {\n              x0 = getX(batch, i0);\n            } else {\n              x0 = uniforms.negativeInf;\n            }\n            if (i1 < uniforms.inputSize) {\n              x1 = getX(batch, i1);\n            } else {\n              x1 = uniforms.negativeInf;\n            }\n\n            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;\n            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n            if (reverse == isGreater) {\n              // Elements in opposite order of direction\n              let iTemp = i0;\n              i0 = i1;\n              i1 = iTemp;\n            }\n            if (isFirstInPair) {\n              setOutputAtIndex(index, f32(i0));\n            } else {\n              setOutputAtIndex(index, f32(i1));\n            }\n          }\n        }\n      `}}class la{constructor(e){this.variableNames=["x","indices"],this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=E(this.outputShape),this.dispatch=$(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms="inputSize : i32, firstPass : i32, k : i32,",this.shaderKey="merge"}getUserCode(){return`\n        ${y()}\n          if (index < uniforms.size) {\n            let outC = getCoordsFromIndex(index);\n            let batch = outC[0];\n            let elemIdx = outC[1];\n            // The output size is half of the previous size.\n            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _\n            // (k=4), we only need to output the indices at positions |, the\n            // indices at positions _ can be thrown away, see Figure5(b) After\n            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced\n            // above.\n            // For example, the paper shows we only need to output the orange\n            // bars. The output sequence should look like this | | | | | | | |.\n            // Because the sequence is halved, to map the output index back to\n            // the previous sequence to find the corresponding value, we need\n            // to double the index. When we double the index, we basically\n            // interpolate a position, so 2i looks like\n            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k\n            // position of each 2k positions by - elemIdx % k. E.g. for output\n            // at index 4,5,6,7, we want to get the corresponding element at\n            // original index 8,9,10,11, for output at index 8,9,10,11,\n            // we want to get the corresponding element at original index\n            // 16,17,18,19, so on and so forth.\n\n            var i = 0;\n            if (elemIdx < uniforms.k) {\n              i = elemIdx;\n            } else {\n              i = elemIdx * 2 - elemIdx % uniforms.k;\n            }\n            var i0 = 0;\n            if (uniforms.firstPass == 1) {\n              i0 = i;\n            } else {\n              i0 = i32(getIndices(batch, i));\n            }\n            var i1 = 0;\n            if (uniforms.firstPass == 1) {\n              i1 = i + uniforms.k;\n            } else {\n              i1 = i32(getIndices(batch, i + uniforms.k));\n            }\n\n            let x0 = getX(batch, i0);\n            var x1 = f32(0.0);\n            if (i1 < uniforms.inputSize) {\n              x1 = getX(batch, i1);\n            } else {\n              x1 = x0;\n            }\n\n            if (x0 >= x1) {\n              setOutputAtIndex(index, f32(i0));\n            } else {\n              setOutputAtIndex(index, f32(i1));\n            }\n          }\n        }\n      `}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function da(e,t){null!==t&&e.disposeData(t.dataId)}function pa(e){let t=1;for(;t<e;)t*=2;return t}const ha={kernelName:r.TopK,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{k:i,sorted:o}=a,u=s.shape,c=u[u.length-1];if(n.shouldExecuteOnCPU([s])){const e=n.readSync(s.dataId),[t,r]=Pe(e,u,s.dtype,i,o);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===i)return u[u.length-1]=0,[n.makeTensorInfo(u,s.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===c)return[s,V({attrs:{shape:u,dtype:"int32",value:0},backend:n})];const l=r.util.sizeFromShape(u)/c,d=q({inputs:{x:s},attrs:{shape:[l,c]},backend:n}),p=pa(i),h=pa(c);let f=null;const m=()=>null===f?[d,d]:[d,f],b=(e,t,r)=>{const a=m(),s=new ca(r),i=[{type:"int32",data:[c]},{type:"int32",data:[null===f?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[e]},{type:"int32",data:[t]}],o=f;f=n.runWebGPUProgram(s,a,"int32",i),da(n,o)};for(let e=1;e<p;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)b(t,n,[l,h])}for(let e=h;e>p;e/=2){const t=m(),r=new la([l,e/2]),a=[{type:"int32",data:[c]},{type:"int32",data:[null===f?1:0]},{type:"int32",data:[p]}],s=f;f=n.runWebGPUProgram(r,t,"int32",a),da(n,s);const i=p/2,o=2*i;for(let e=i;e>=1;e/=2)b(o,e,f.shape)}let g=f;f=st({inputs:{x:f},backend:n,attrs:{begin:0,size:[l,i]}}),da(n,g);let x=En({inputs:{x:d,indices:f},backend:n,attrs:{axis:1,batchDims:1}});da(n,d);const y=u.slice(0,-1);y.push(i),g=f,f=q({inputs:{x:f},attrs:{shape:y},backend:n}),da(n,g);const k=x;return x=q({inputs:{x:x},attrs:{shape:y},backend:n}),da(n,k),[x,f]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fa{constructor(e){this.variableNames=["Image","Transforms"],this.uniforms="interpolationModeId : i32, fillModeId : i32, fillValue : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=E(this.outputShape),this.dispatch=$(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="transform"}getUserCode(){return`\n          fn mapCoord(outCoord : f32, len : f32) -> f32{\n            var inCoord = outCoord;\n            if(uniforms.fillModeId == 2) {\n              if (inCoord < 0.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz2 = 2.0 * len;\n                  if (inCoord < sz2) {\n                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +\n                    inCoord;\n                  }\n                  if (inCoord < -len) {\n                    inCoord = inCoord + sz2;\n                  } else {\n                    inCoord = -inCoord - 1.0;\n                  }\n                }\n              } else if (inCoord > len - 1.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz2 = 2.0 * len;\n                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));\n                  if (inCoord >= len) {\n                    inCoord = sz2 - inCoord - 1.0;\n                  }\n                }\n              }\n              return clamp(inCoord, 0.0, len - 1.0);\n            } else if (uniforms.fillModeId == 3) {\n              if (inCoord < 0.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz = len - 1.0;\n                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);\n                }\n              } else if (inCoord > len - 1.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz = len - 1.0;\n                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));\n                }\n              }\n              return clamp(inCoord, 0.0, len - 1.0);\n            } else if (uniforms.fillModeId == 4) {\n              return clamp(outCoord, 0.0, len - 1.0);\n            }\n            return outCoord;\n          }\n          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,\n            channel : i32) -> f32 {\n            var outputValue : f32;\n            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {\n                outputValue = getImage(batch, coordY, coordX, channel);\n            } else {\n              outputValue = uniforms.fillValue;\n            }\n            return outputValue;\n          }\n\n          ${y()}\n            if (index < uniforms.size) {\n              let coords = getCoordsFromIndex(index);\n              var outputValue : f32;\n              let batch = coords[0];\n              let x = coords[2];\n              let y = coords[1];\n              let channel = coords[3];\n              let xf = f32(x);\n              let yf = f32(y);\n              let a1 = getTransforms(batch, 0);\n              let a2 = getTransforms(batch, 1);\n              let a3 = getTransforms(batch, 2);\n              let b1 = getTransforms(batch, 3);\n              let b2 = getTransforms(batch, 4);\n              let b3 = getTransforms(batch, 5);\n              let c1 = getTransforms(batch, 6);\n              let c2 = getTransforms(batch, 7);\n              let projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = uniforms.fillValue;\n              } else {\n                let inX = (a1 * xf + a2 * yf + a3) / projection;\n                let inY = (b1 * xf + b2 * yf + b3) / projection;\n                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));\n                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));\n\n                if (uniforms.interpolationModeId == 1) {\n                  let coordY = i32(round(mapY));\n                  let coordX = i32(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  let yFloor = floor(mapY);\n                  let xFloor = floor(mapX);\n                  let yCeil = yFloor + 1.0;\n                  let xCeil = xFloor + 1.0;\n                  let valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);\n                  let valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutputAtIndex(index, outputValue);\n            }\n          }\n        `}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ma=[Y,ze,Ue,Ve,Qe,Ze,tt,nt,ot,pt,ft,gt,ne,It,Ot,At,Nt,Ft,Dt,Wt,Ut,Vt,Xt,nn,an,on,cn,dn,hn,H,mn,vn,gn,yn,_n,Cn,On,Tn,Nn,Fn,Dn,ee,kt,Pn,jn,zn,Un,Vn,qn,Xn,Qn,Zn,Jn,er,nr,ar,Qt,sr,ir,or,ct,lr,dr,fr,br,gr,xr,yr,dt,vr,Ir,_r,K,Or,Tr,Er,Rr,Mr,Pr,jr,zr,Ur,it,sa,ia,Hr,qr,Qr,Zr,ea,ta,ra,Vr,tn,ua,Yr,ha,{kernelName:r.Transform,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:c}=r,[l,d,p,h]=a.shape,[f,m]=null!=c?c:[d,p],b=new fa([l,f,m,h]),g="nearest"===i?1:2;let x;switch(o){case"constant":default:x=1;break;case"reflect":x=2;break;case"wrap":x=3;break;case"nearest":x=4}const y=[{type:"int32",data:[g]},{type:"int32",data:[x]},{type:"float32",data:[u]}];return n.runWebGPUProgram(b,[a,s],"float32",y)}},Ye,{kernelName:r.Unpack,backendName:"webgpu",kernelFunc:
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a,o=i.shape.length,u=a.shape[s],c=new Array(o-1);let l=0;for(let e=0;e<o;e++)e!==s&&(c[l++]=i.shape[e]);const d=[],p=new Array(o).fill(0),h=i.shape.slice();h[s]=1;const f=new Array(u);for(let e=0;e<f.length;e++){p[s]=e;const t=st({inputs:{x:i},backend:n,attrs:{begin:p,size:h}}),r=q({inputs:{x:t},backend:n,attrs:{shape:c}});f[e]=r,d.push(t)}return d.forEach((e=>n.disposeData(e.dataId))),f}},cr];
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */for(const e of ma)Object(r.registerKernel)(e);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ba{constructor(e){this.device=e,this.numUsedBuffers=0,this.numFreeBuffers=0,this.freeBuffers=new Map,this.usedBuffers=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireUploadBuffer(e,t){return this.acquireBuffer(e,t,!0)}acquireBuffer(e,t,n=!1){const r=ga(e,t);if(this.freeBuffers.has(r)||this.freeBuffers.set(r,[]),this.usedBuffers.has(r)||this.usedBuffers.set(r,[]),this.numBytesUsed+=e,this.numUsedBuffers++,this.freeBuffers.get(r).length>0){this.numFreeBuffers--;const e=this.freeBuffers.get(r).shift();return this.usedBuffers.get(r).push(e),e}this.numBytesAllocated+=e;const a=this.device.createBuffer({size:e,usage:t,mappedAtCreation:n});return this.usedBuffers.get(r).push(a),a}releaseBuffer(e,t,n){if(0===this.freeBuffers.size)return;const r=ga(t,n);this.freeBuffers.has(r)||this.freeBuffers.set(r,[]),this.freeBuffers.get(r).push(e),this.numFreeBuffers++,this.numUsedBuffers--;const a=this.usedBuffers.get(r),s=a.indexOf(e);if(s<0)throw new Error("Cannot release a buffer that was never provided by this buffer manager");a.splice(s,1),this.numBytesUsed-=t}releaseUploadBuffer(e,t,n){e.mapAsync(GPUMapMode.WRITE).then((()=>{this.releaseBuffer(e,t,n)}),(e=>{}))}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach(((e,t)=>{e.forEach((e=>{e.destroy()}))})),this.usedBuffers.forEach(((e,t)=>{e.forEach((e=>{e.destroy()}))})),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}}function ga(e,t){return`${e}_${t}`}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xa{constructor(e){this.device=e,this.numUsedTextures=0,this.numFreeTextures=0,this.freeTextures=new Map,this.usedTextures=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireTexture(e,t,n,r){const a=e*t*ka(n),s=ya(e,t,n,r);if(this.freeTextures.has(s)||this.freeTextures.set(s,[]),this.usedTextures.has(s)||this.usedTextures.set(s,[]),this.numBytesUsed+=a,this.numUsedTextures++,this.freeTextures.get(s).length>0){this.numFreeTextures--;const e=this.freeTextures.get(s).shift();return this.usedTextures.get(s).push(e),e}this.numBytesAllocated+=a;const i=this.device.createTexture({size:[e,t],format:n,usage:r});return this.usedTextures.get(s).push(i),i}releaseTexture(e,t,n,r,a){if(0===this.freeTextures.size)return;const s=ya(t,n,r,a);this.freeTextures.has(s)||this.freeTextures.set(s,[]),this.freeTextures.get(s).push(e),this.numFreeTextures++,this.numUsedTextures--;const i=this.usedTextures.get(s),o=i.indexOf(e);if(o<0)throw new Error("Cannot release a texture that was never provided by this texture manager");i.splice(o,1);const u=t*n*ka(r);this.numBytesUsed-=u}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){this.freeTextures.forEach(((e,t)=>{e.forEach((e=>{e.destroy()}))})),this.usedTextures.forEach(((e,t)=>{e.forEach((e=>{e.destroy()}))})),this.freeTextures=new Map,this.usedTextures=new Map,this.numUsedTextures=0,this.numFreeTextures=0,this.numBytesUsed=0,this.numBytesAllocated=0}}function ya(e,t,n,r){return`${e}_${t}_${n}_${r}`}function ka(e){if("rgba8unorm"===e)return 16;throw new Error(`${e} is not supported!`)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const va=Object(r.env)().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD");class wa extends r.KernelBackend{constructor(e,t=!1){if(super(),this.commandQueueOwnedIds=new WeakSet,this.dispatchNumberInEncoder=0,this.disposed=!1,this.downloadWaitMs=0,this.tensorDataPendingDisposal=[],this.stagingPendingDisposal=[],this.uniformPendingDisposal=[],this.uploadWaitMs=0,!N())throw new Error("WebGPU is not supported on this device");this.pipelineCache={},this.device=e,this.queue=e.queue,this.currentCommandEncoder=null,this.currentComputePass=null,this.supportTimeQuery=t,this.bufferManager=new ba(this.device),this.textureManager=new xa(this.device),this.tensorMap=new r.DataStorage(this,Object(r.engine)()),this.supportTimeQuery&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:2})),Object(r.env)().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}nextDataId(){return wa.nextDataId++}floatPrecision(){return 32}defaultGpuBufferUsage(){return GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST}disposeData(e,t=!1){if(this.tensorDataPendingDisposal.indexOf(e)>=0)return!1;if(!this.tensorMap.has(e))return!0;const n=this.tensorMap.get(e);if(this.decRef(e),!t&&n.refCount>0)return!1;if(this.commandQueueOwnedIds.has(e))return this.tensorDataPendingDisposal.push(e),!1;const{complexTensorInfos:r}=this.tensorMap.get(e);return null!=r&&(this.disposeData(r.real.dataId,t),this.disposeData(r.imag.dataId,t)),this.releaseResource(e),this.tensorMap.delete(e),!0}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}releaseResource(e){const t=this.tensorMap.get(e);if(t&&t.resourceInfo){if("texture"in t.resourceInfo){const e=t.resourceInfo;e.texture instanceof GPUTexture&&this.textureManager.releaseTexture(e.texture,e.width,e.height,e.format,e.usage),e.texture=null}else{const e=t.resourceInfo;this.bufferManager.releaseBuffer(e.buffer,e.size,e.usage),e.buffer=null}t.resourceInfo=null}}refCount(e){if(this.tensorMap.has(e)){return this.tensorMap.get(e).refCount}return 0}incRef(e){this.tensorMap.get(e).refCount++}decRef(e){if(this.tensorMap.has(e)){this.tensorMap.get(e).refCount--}}write(e,t,n){if("complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.tensorMap.set(r,{dtype:n,shape:t,values:e,refCount:1}),r}move(e,t,n,r,a){if("complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.tensorMap.set(e,{dtype:r,shape:n,values:t,refCount:a})}submitQueue(){this.ensureComputePassEnded(),this.queue.submit([this.currentCommandEncoder.finish()]),this.currentCommandEncoder=null,this.dispatchNumberInEncoder=0,this.commandQueueOwnedIds=new WeakSet,this.tensorDataPendingDisposal.forEach((e=>{this.releaseResource(e),this.tensorMap.delete(e)})),this.uniformPendingDisposal.forEach((e=>this.bufferManager.releaseBuffer(e.buffer,e.size,e.usage))),this.stagingPendingDisposal.forEach((e=>this.bufferManager.releaseUploadBuffer(e.buffer,e.size,e.usage))),this.tensorDataPendingDisposal=[],this.uniformPendingDisposal=[],this.stagingPendingDisposal=[]}ensureCommandEncoderReady(){this.currentCommandEncoder||(this.currentCommandEncoder=this.device.createCommandEncoder())}ensureComputePassEnded(){this.currentComputePass&&(this.currentComputePass.end(),this.currentComputePass=null)}getComputePass(){return this.currentComputePass||(this.currentComputePass=this.currentCommandEncoder.beginComputePass()),this.currentComputePass}async getBufferData(e,t){const n=this.bufferManager.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(e,0,n,0,t),this.submitQueue(),await n.mapAsync(GPUMapMode.READ);const a=n.getMappedRange().slice(0);return n.unmap(),null!=n&&this.bufferManager.releaseBuffer(n,t,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ),Object(r.env)().getBool("WEBGPU_USE_PROFILE_TOOL")&&(r.util.assert(void 0!==this.dummyContext,(()=>"Fail to get context for profiling tool")),this.dummyContext.getCurrentTexture()),a}convertAndCacheOnCPU(e,t){const n=this.tensorMap.get(e);return this.releaseResource(e),n.values=t,n.values}readSync(e){const t=this.tensorMap.get(e),{values:n}=t;if(null==n)throw new Error("WebGPU readSync is only available for CPU-resident tensors.");return n}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);const t=this.tensorMap.get(e),{values:n}=t;if(null!=n)return this.convertAndCacheOnCPU(e,n);let a;if("complex64"===t.dtype){const e=await Promise.all([this.read(t.complexTensorInfos.real.dataId),this.read(t.complexTensorInfos.imag.dataId)]),n=e[0],s=e[1];a=r.backend_util.mergeRealAndImagArrays(n,s)}else{const e=t.resourceInfo;a=function(e,t){if("float32"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}(await this.getBufferData(e.buffer,e.size),t.dtype)}return this.convertAndCacheOnCPU(e,a),a}readToGPU(e){const t=this.tensorMap.get(e),{values:n,dtype:a,shape:s,resourceInfo:i}=t;if("complex64"===a)throw new Error("Does not support reading buffer for complex64 dtype.");if(null==i)throw null!=n?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const o=i.size,u=this.bufferManager.acquireBuffer(o,i.usage);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(i.buffer,0,u,0,o),this.submitQueue();const c=this.makeTensorInfo(s,a),l=Object(r.engine)().makeTensorFromTensorInfo(c);return this.tensorMap.get(c.dataId).resourceInfo={size:o,usage:this.defaultGpuBufferUsage(),buffer:u},{tensorRef:l,buffer:u,bufSize:o}}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>r.util.decodeString(e)));return Object(r.buffer)(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Object(r.buffer)(e.shape,e.dtype,t)}async time(e){const t=this.activeTimers,n=[];let a=!1;null==this.programTimersStack?(this.programTimersStack=n,a=!0):this.activeTimers.push(n),this.activeTimers=n,e();const s=r.util.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),i=r.util.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,a&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},u=await Promise.all(s);return o.kernelMs=r.util.sum(u),o.getExtraProfileInfo=()=>u.map(((e,t)=>({name:i[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,o}makeTensorInfo(e,t,n){"string"===t&&null!=n&&n.length>0&&r.util.isString(n[0])&&(n=n.map((e=>r.util.encodeString(e))));return{dataId:this.write(n,e,t),shape:e,dtype:t}}tensorToBinding(e){if(!e)return null;const t=this.tensorMap.get(e.dataId);if("texture"in t.resourceInfo){const e=t.resourceInfo;return e.texture instanceof GPUExternalTexture?e.texture:e.texture.createView()}const n=t.resourceInfo;return{offset:0,size:n.size,buffer:n.buffer}}async getQueryTime(e){return this.supportTimeQuery?this.getTimeFromQuerySet(e):0}uploadToGPU(e){const t=this.tensorMap.get(e);if(t.resourceInfo)return;const n=function(e){if("float32"===e||"int32"===e||"bool"===e||"string"===e)return 4;if("complex64"===e)return 8;throw new Error(`Unknown dtype ${e}`)}(t.dtype)*r.util.sizeFromShape(t.shape),a=this.bufferManager.acquireBuffer(n,this.defaultGpuBufferUsage());if(t.resourceInfo={size:n,usage:this.defaultGpuBufferUsage(),buffer:a},t.values){const e=this.bufferManager.acquireUploadBuffer(n,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC),r=e.getMappedRange();"int32"===t.dtype||"bool"===t.dtype?new Int32Array(r).set(t.values):new Float32Array(r).set(t.values),e.unmap(),this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(e,0,a,0,n);const s={size:n,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,buffer:e};this.stagingPendingDisposal.push(s)}}makeUniforms(e){let t=0,n=0;const a=[];e.forEach((e=>{let s;switch(0===e.data.length&&(e.data=[1]),e.data.length){case 1:s=4;break;case 2:s=8;break;case 3:case 4:case 5:case 6:s=16;break;default:r.util.assert(!1,(()=>`Unsupported ${e.data.length}D shape`))}5!==n&&6!==n||(s=16),t=Math.ceil(t/s)*s,n=e.data.length,a.push(t),t+=4*e.data.length}));const s=new ArrayBuffer(t);e.forEach(((e,t)=>{const n=a[t];"int32"===e.type?new Int32Array(s,n,e.data.length).set(e.data):"uint32"===e.type?new Uint32Array(s,n,e.data.length).set(e.data):new Float32Array(s,n,e.data.length).set(e.data)}));const i=this.bufferManager.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.queue.writeBuffer(i,0,s,0,t);const o={size:t,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM,buffer:i};return this.uniformPendingDisposal.push(o),{offset:0,size:t,buffer:i}}runWebGPUProgram(e,t,n,a,s){if(s||(s=this.makeTensorInfo(e.outputShape,n)),0===r.util.sizeFromShape(s.shape))return this.tensorMap.get(s.dataId).values=r.util.getTypedArrayFromDType(s.dtype,0),s;this.uploadToGPU(s.dataId),e.dispatch=((e,t)=>{const n=e.limits.maxComputeWorkgroupsPerDimension,a=t.dispatchLayout,s=t.dispatch;if(s.every((e=>e<=n)))return s;r.util.assert(s[0]>n&&void 0===a.y&&void 0===a.z,(()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension."));let i=Math.ceil(Math.sqrt(s[0]));return i>n?(i=Math.ceil(Math.cbrt(s[0])),r.util.assert(i<=n,(()=>"Total dispatch size exceeds WebGPU maximum.")),[i,i,i]):[i,i,1]})(this.device,e);let i=[],o=[];if(!e.isFromPixels){i.push({type:"float32",data:[NaN]}),o=t.concat(s).map((e=>e.shape));const n="int32";o.map((e=>{i.push({type:n,data:e})}));const a=r.util.computeStrides(s.shape);if(i.push({type:n,data:a}),e.size){const t=r.util.sizeFromShape(e.outputShape);i.push({type:n,data:[e.isVec4?t/4:t]})}}const u=t.map(((t,n)=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(t.dataId),{dtype:this.tensorMap.get(t.dataId).dtype,shape:t.shape,name:e.variableNames[n]}})),c=function(e,t,n,a){let s=e.shaderKey;if(e.isFromPixels)return s;const i=n.map((e=>e.dtype)).concat(a.dtype),o=n.map((e=>r.backend_util.getBroadcastDims(e.shape,a.shape))),u=n.map((e=>r.util.arraysEqual(e.shape,a.shape))).join("_"),c=o.map((e=>e.join("_"))).join(";"),l=_(e)?"flatDispatch":"";return s+="_"+(e.workGroupSize?e.workGroupSize.join(","):"")+t.map((e=>e.length)).join(",")+i.join(",")+e.variableNames.join(",")+c+u+l,s}(e,o,u,s);let l;c in this.pipelineCache?l=this.pipelineCache[c]:(l=b(this.device,e,u,s),this.pipelineCache[c]=l),a&&(i=[...i,...a]);const d=[this.tensorToBinding(s),...t.map((e=>this.tensorToBinding(e))),this.makeUniforms(i)],p=this.device.createBindGroup({layout:l.getBindGroupLayout(0),entries:d.map(((e,t)=>({binding:t,resource:e})))});this.ensureCommandEncoderReady();const h=this.getComputePass(),f=null!=this.activeTimers;return f&&this.supportTimeQuery&&h.writeTimestamp(this.querySet,0),h.setPipeline(l),h.setBindGroup(0,p),h.dispatchWorkgroups(e.dispatch[0],e.dispatch[1],e.dispatch[2]),f&&this.supportTimeQuery&&h.writeTimestamp(this.querySet,1),this.dispatchNumberInEncoder++,t.forEach((e=>{this.commandQueueOwnedIds.add(e.dataId)})),this.commandQueueOwnedIds.add(s.dataId),Object(r.env)().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchNumberInEncoder&&this.submitQueue(),f&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)}),s}async getTimeFromQuerySet(e){const t=this.bufferManager.acquireBuffer(16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),n=this.bufferManager.acquireBuffer(16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.resolveQuerySet(e,0,2,t,0),this.currentCommandEncoder.copyBufferToBuffer(t,0,n,0,16),this.submitQueue(),await n.mapAsync(GPUMapMode.READ);const r=new BigUint64Array(n.getMappedRange()),a=Number(r[1]-r[0]);return n.unmap(),this.bufferManager.releaseBuffer(n,16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST),this.bufferManager.releaseBuffer(t,16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),a/1e6}shouldExecuteOnCPU(e,t=va){return Object(r.env)().getBool("WEBGPU_CPU_FORWARD")&&e.every((e=>null==this.tensorMap.get(e.dataId).resourceInfo&&r.util.sizeFromShape(e.shape)<t))}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDataPendingDisposal.length}dispose(){this.disposed||(this.bufferManager.dispose(),this.textureManager.dispose(),this.disposed=!0)}}wa.nextDataId=0,
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
N()&&Object(r.registerBackend)("webgpu",(async()=>{Object(r.env)().set("CHECK_COMPUTATION_FOR_ERRORS",!1);const e={powerPreference:Object(r.env)().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},t=await navigator.gpu.requestAdapter(e),n=t.limits,a={},s=t.features.has("timestamp-query");a.requiredLimits={maxComputeWorkgroupStorageSize:n.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:n.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:n.maxStorageBufferBindingSize},s?a.requiredFeatures=["timestamp-query"]:console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --disable-dawn-features=disallow_unsafe_apis then try again. Or zero will shown for the kernel time when profiling mode isenabled. Using performance.now is not workable for webgpu sinceit doesn't support synchronously to read data from GPU.");const i=await t.requestDevice(a);return new wa(i,s)}),3)},function(e,t,n){"use strict";var r=n(0),a=n(7);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const s=r.kernel_impls.whereImpl;class i extends r.KernelBackend{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new r.DataStorage(this,Object(r.engine)())}nextDataId(){return i.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,Object(r.env)().get("IS_NODE")&&r.backend_util.warn("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const a={id:this.nextDataId()};return this.data.set(a,{values:e,dtype:n,refCount:1}),a}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&r.util.isString(n[0])){const s=n.map((e=>r.util.encodeString(e)));a=this.write(s,e,t)}else a=this.write(n,e,t);return{dataId:a,shape:e,dtype:t}}refCount(e){if(this.data.has(e)){return this.data.get(e).refCount}return 0}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,r,a){this.data.set(e,{values:t,dtype:r,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){const e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return r.backend_util.mergeRealAndImagArrays(e,t)}return this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>r.util.decodeString(e)));return Object(r.buffer)(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Object(r.buffer)(e.shape,e.dtype,t)}makeOutput(e,t,n){return Object(r.engine)().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=r.util.now();e();return{kernelMs:r.util.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Object(a.a)([e],"where");const t=this.readSync(e.dataId);return s(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}i.nextDataId=0,
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(r.registerBackend)("cpu",(()=>new i),1);var o=n(8);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u=Object(o.a)(r.Elu,(e=>e>=0?e:Math.exp(e)-1)),c={kernelName:r.Elu,backendName:"cpu",kernelFunc:u};var l=n(19);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d(e){const{inputs:t,backend:n,attrs:s}=e,{x:i}=t,{alpha:o}=s;Object(a.a)([i],"leakyRelu");const u=r.util.sizeFromShape(i.shape),c=n.data.get(i.dataId).values,l=r.util.getTypedArrayFromDType("float32",u);for(let e=0;e<c.length;e++)l[e]=c[e]<0?o*c[e]:c[e];return n.makeTensorInfo(i.shape,"float32",l)}const p={kernelName:r.LeakyRelu,backendName:"cpu",kernelFunc:d};var h=n(12);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f=Object(h.a)(((e,t)=>e<0?t*e:e));function m(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t;Object(a.a)([r,s],"prelu");const i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,[u,c]=f(r.shape,s.shape,i,o,"float32");return n.makeTensorInfo(c,"float32",u)}const b={kernelName:r.Prelu,backendName:"cpu",kernelFunc:m},g=Object(o.a)(r.Relu,(e=>Math.max(0,e))),x={kernelName:r.Relu,backendName:"cpu",kernelFunc:g},y=Object(o.a)(r.Relu6,(e=>Math.min(Math.max(0,e),6))),k={kernelName:r.Relu6,backendName:"cpu",kernelFunc:y};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var v=n(46);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w(e,t,n,r,a){if("linear"===n)return Object(l.a)({inputs:{x:t},backend:e});if("relu"===n)return g({inputs:{x:t},backend:e});if("elu"===n)return u({inputs:{x:t},backend:e});if("relu6"===n)return y({inputs:{x:t},backend:e});if("prelu"===n)return m({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return d({inputs:{x:t},backend:e,attrs:{alpha:a}});if("sigmoid"===n)return Object(v.a)({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}var I=n(24);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{shape:i}=a,o=r.util.sizeFromShape(s.shape),u=r.util.inferFromImplicitShape(i,o),c=r.util.sizeFromShape(u);r.util.assert(o===c,(()=>`The new shape (${u}) has ${c} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(s.dataId);const l=n.data.get(s.dataId);if(null!=l.complexTensorInfos){const e=l.complexTensorInfos.real,t=l.complexTensorInfos.imag;e.shape=u,t.shape=u}return{dataId:s.dataId,shape:u,dtype:s.dtype}}const _={kernelName:r.Reshape,backendName:"cpu",kernelFunc:S};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C(e){const{inputs:t,backend:n,attrs:s}=e,{a:i,b:o}=t,{transposeA:u,transposeB:c}=s;Object(a.a)([i,o],"matMul");const l=i.shape.length,d=o.shape.length,p=u?i.shape[l-2]:i.shape[l-1],h=c?o.shape[d-1]:o.shape[d-2],f=u?i.shape[l-1]:i.shape[l-2],m=c?o.shape[d-2]:o.shape[d-1],b=i.shape.slice(0,-2),g=o.shape.slice(0,-2),x=r.util.sizeFromShape(b),y=r.util.sizeFromShape(g),k=r.broadcast_util.assertAndGetBroadcastShape(i.shape.slice(0,-2),o.shape.slice(0,-2)).concat([f,m]);r.util.assert(p===h,(()=>`Error in matMul: inner shapes (${p}) and (${h}) of Tensors with shapes ${i.shape} and ${o.shape} and transposeA=${u} and transposeB=${c} must match.`));const v=c?[y,m,h]:[y,h,m],w=S({inputs:{x:i},backend:n,attrs:{shape:u?[x,p,f]:[x,f,p]}}),I=S({inputs:{x:o},backend:n,attrs:{shape:v}}),_=u?w.shape[1]:w.shape[2],C=u?w.shape[2]:w.shape[1],O=c?I.shape[1]:I.shape[2],$=Math.max(x,y),T=n.data.get(w.dataId).values,A=n.data.get(I.dataId).values,E=r.util.computeStrides(w.shape),N=r.util.computeStrides(I.shape),[R,F,M]=u?[E[0],1,E[1]]:[E[0],E[1],1],[D,P,B]=c?[1,N[1],N[0]]:[N[1],1,N[0]],j=C*O,L=Object(r.buffer)([$,C,O],w.dtype),z=L.values,W=n.blockSize;for(let e=0;e<$;e++)for(let t=0;t<C;t+=W)for(let n=0;n<O;n+=W)for(let r=0;r<_;r+=W){const a=Math.min(t+W,C),s=Math.min(n+W,O),i=Math.min(r+W,_);for(let o=t;o<a;o++)for(let t=n;t<s;t++){let n=0;for(let a=r;a<i;a++){const r=Math.min(e,x-1)*R,s=Math.min(e,y-1)*B;n+=T[r+o*F+a*M]*A[a*D+t*P+s]}z[e*j+(o*O+t)]+=n}}return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(I),n.makeTensorInfo(k,L.dtype,L.values)}const O={kernelName:r.BatchMatMul,backendName:"cpu",kernelFunc:C};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $={kernelName:r._FusedMatMul,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:d}=r;let p,h,f;const m=[];p=C({inputs:{a:a,b:s},attrs:{transposeA:u,transposeB:c},backend:n}),i&&(h=Object(I.a)({inputs:{a:p,b:i},backend:n}),m.push(p),p=h),l&&(f=w(n,p,l,o,d),m.push(p),p=f);for(const e of m)n.disposeIntermediateTensorInfo(e);return p}};var T=n(55);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A=Object(o.a)(r.Acos,(e=>Math.acos(e))),E={kernelName:r.Acos,backendName:"cpu",kernelFunc:A},N=Object(o.a)(r.Acosh,(e=>Math.acosh(e))),R={kernelName:r.Acosh,backendName:"cpu",kernelFunc:N};const F={kernelName:r.AddN,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n}=e,s=t;Object(a.a)(t,"addN");const i=s.map((e=>n.data.get(e.dataId).values)),o=Object(r.buffer)(s[0].shape,s[0].dtype),u=o.values;for(let e=0;e<s.length;e++){const t=i[e];for(let e=0;e<u.length;e++)u[e]+=t[e]}return n.makeTensorInfo(o.shape,o.dtype,o.values)}};var M=n(16);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D={kernelName:r.All,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:i}=t,{axis:o,keepDims:u}=s;Object(a.a)(i,"all");const c=r.util.parseAxisParam(o,i.shape);let l=c;const d=r.backend_util.getAxesPermutation(l,i.shape.length);let p=i;null!=d&&(p=Object(M.a)({inputs:{x:i},backend:n,attrs:{perm:d}}),l=r.backend_util.getInnerMostAxes(l.length,i.shape.length)),r.backend_util.assertAxesAreInnerMostDims("all",l,p.shape.length);const[h,f]=r.backend_util.computeOutAndReduceShapes(p.shape,l),m=r.util.sizeFromShape(f),b=r.util.makeZerosTypedArray(r.util.sizeFromShape(h),p.dtype),g=n.data.get(p.dataId).values;for(let e=0;e<b.length;++e){const t=e*m;let n=g[t];for(let e=0;e<m;++e){const r=g[t+e];n=n&&r}b[e]=n}null!=d&&n.disposeIntermediateTensorInfo(p);const x=n.makeTensorInfo(h,p.dtype,b);if(u){const e=S({inputs:{x:x},backend:n,attrs:{shape:r.backend_util.expandShapeToKeepDim(h,c)}});return n.disposeIntermediateTensorInfo(x),e}return x}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P={kernelName:r.Any,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:i}=t,{axis:o,keepDims:u}=s;Object(a.a)(i,"any");const c=r.util.parseAxisParam(o,i.shape);let l=c;const d=r.backend_util.getAxesPermutation(l,i.shape.length);let p=i;null!=d&&(p=Object(M.a)({inputs:{x:i},backend:n,attrs:{perm:d}}),l=r.backend_util.getInnerMostAxes(l.length,i.shape.length)),r.backend_util.assertAxesAreInnerMostDims("any",l,p.shape.length);const[h,f]=r.backend_util.computeOutAndReduceShapes(p.shape,l),m=r.util.sizeFromShape(f),b=r.util.makeZerosTypedArray(r.util.sizeFromShape(h),p.dtype),g=n.data.get(p.dataId).values;for(let e=0;e<b.length;++e){const t=e*m;let n=g[t];for(let e=0;e<m;++e){const r=g[t+e];n=n||r}b[e]=n}null!=d&&n.disposeIntermediateTensorInfo(p);const x=n.makeTensorInfo(h,p.dtype,b);if(u){const e=S({inputs:{x:x},backend:n,attrs:{shape:r.backend_util.expandShapeToKeepDim(h,c)}});return n.disposeIntermediateTensorInfo(x),e}return x}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B={kernelName:r.ArgMax,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:i}=t,{axis:o}=s;Object(a.a)(i,"argMax");let u=r.util.parseAxisParam(o,i.shape);const c=r.backend_util.getAxesPermutation(u,i.shape.length);let l=i;const d=[];null!=c&&(l=Object(M.a)({inputs:{x:i},backend:n,attrs:{perm:c}}),d.push(l),u=r.backend_util.getInnerMostAxes(u.length,l.shape.length)),u=[u[0]],r.backend_util.assertAxesAreInnerMostDims("argMax",u,l.shape.length);const[p,h]=r.backend_util.computeOutAndReduceShapes(l.shape,u),f=r.util.sizeFromShape(p),m=r.util.makeZerosTypedArray(f,"int32"),b=r.util.sizeFromShape(h),g=n.data.get(l.dataId).values;for(let e=0;e<m.length;++e){const t=e*b;let n=g[t],r=0;for(let e=0;e<b;++e){const a=g[t+e];a>n&&(n=a,r=e)}m[e]=r}return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(p,"int32",m)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j={kernelName:r.ArgMin,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:i}=t,{axis:o}=s;Object(a.a)(i,"argMin");let u=r.util.parseAxisParam(o,i.shape);const c=r.backend_util.getAxesPermutation(u,i.shape.length);let l=i;const d=[];null!=c&&(l=Object(M.a)({inputs:{x:i},backend:n,attrs:{perm:c}}),d.push(l),u=r.backend_util.getInnerMostAxes(u.length,l.shape.length)),u=[u[0]],r.backend_util.assertAxesAreInnerMostDims("argMin",u,l.shape.length);const[p,h]=r.backend_util.computeOutAndReduceShapes(l.shape,u),f=r.util.sizeFromShape(p),m=r.util.makeZerosTypedArray(f,"int32"),b=r.util.sizeFromShape(h),g=n.data.get(l.dataId).values;for(let e=0;e<m.length;++e){const t=e*b;let n=g[t],r=0;for(let e=0;e<b;++e){const a=g[t+e];a<n&&(n=a,r=e)}m[e]=r}return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(p,"int32",m)}},L=Object(o.a)(r.Asin,(e=>Math.asin(e))),z={kernelName:r.Asin,backendName:"cpu",kernelFunc:L},W=Object(o.a)(r.Asinh,(e=>Math.asinh(e))),U={kernelName:r.Asinh,backendName:"cpu",kernelFunc:W},G=Object(o.a)(r.Atan,(e=>Math.atan(e))),V={kernelName:r.Atan,backendName:"cpu",kernelFunc:G};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var H=n(13);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q=Object(h.a)(((e,t)=>Math.atan2(e,t))),K=Object(H.a)(r.Atan2,q),X={kernelName:r.Atan2,backendName:"cpu",kernelFunc:K},Y=Object(o.a)(r.Atanh,(e=>Math.atanh(e))),Q={kernelName:r.Atanh,backendName:"cpu",kernelFunc:Y};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Z(e,t,n,a,s,i){const o=s.strideHeight,u=s.strideWidth,c=s.dilationHeight,l=s.dilationWidth,d=s.effectiveFilterHeight,p=s.effectiveFilterWidth,h=s.padInfo.top,f=s.padInfo.left,m="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,b=Object(r.buffer)(s.outShape,n),g=b.values,x=s.outShape[1]*s.outShape[2]*s.outShape[3],y=s.outShape[2]*s.outShape[3],k=s.outShape[3];for(let t=0;t<s.batchSize;++t){const n=t*x,r=t*a[0];for(let t=0;t<s.inChannels;++t)for(let b=0;b<s.outHeight;++b){const x=b*o-h,v=Math.max(0,x),w=Math.min(s.inHeight,d+x),I=n+b*y;for(let n=0;n<s.outWidth;++n){const o=n*u-f,d=Math.max(0,o),h=Math.min(s.inWidth,p+o);let b=m,x=0,y=0;for(let n=v;n<w;n+=c){const s=r+n*a[1];for(let n=d;n<h;n+=l){const r=e[s+n*a[2]+t];"max"===i&&r>b?b=r:"avg"===i&&(x+=r,y++)}if(isNaN(b))break}g[I+n*k+t]="avg"===i?x/y:b}}}return b}function J(e,t,n,a,s=!1,i=!1){const o=Object(r.buffer)(a.outShape,"int32"),u=a.strideHeight,c=a.strideWidth,l=a.dilationHeight,d=a.dilationWidth,p=a.effectiveFilterHeight,h=a.effectiveFilterWidth,f=a.padInfo.top,m=a.padInfo.left,b=Object(r.buffer)(t,n,e);for(let e=0;e<a.batchSize;++e)for(let t=0;t<a.inChannels;++t)for(let n=0;n<a.outHeight;++n){const r=n*u-f;let g=r;for(;g<0;)g+=l;const x=Math.min(a.inHeight,p+r);for(let u=0;u<a.outWidth;++u){const p=u*c-m;let f=p;for(;f<0;)f+=d;const y=Math.min(a.inWidth,h+p);let k=Number.NEGATIVE_INFINITY,v=-1;for(let n=g;n<x;n+=l){const o=n-r;for(let r=f;r<y;r+=d){const u=r-p,c=b.get(e,n,r,t);c>k&&(k=c,v=s?i?((e*a.inHeight+n)*a.inWidth+r)*a.inChannels+t:(n*a.inWidth+r)*a.inChannels+t:o*h+u)}}o.set(v,e,n,u,t)}}return o}function ee(e,t,n,a,s,i){const o=s.strideDepth,u=s.strideHeight,c=s.strideWidth,l=s.dilationDepth,d=s.dilationHeight,p=s.dilationWidth,h=s.effectiveFilterDepth,f=s.effectiveFilterHeight,m=s.effectiveFilterWidth,b=s.padInfo.front,g=s.padInfo.top,x=s.padInfo.left,y="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,k=Object(r.buffer)(s.outShape,n),v=k.values,w=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],I=s.outShape[2]*s.outShape[3]*s.outShape[4],S=s.outShape[3]*s.outShape[4],_=s.outShape[4];for(let t=0;t<s.batchSize;++t){const n=t*w,r=t*a[0];for(let t=0;t<s.inChannels;++t)for(let k=0;k<s.outDepth;++k){const w=k*o-b;let C=w;for(;C<0;)C+=l;const O=Math.min(s.inDepth,h+w),$=n+k*I;for(let n=0;n<s.outHeight;++n){const o=n*u-g;let h=o;for(;h<0;)h+=d;const b=Math.min(s.inHeight,f+o),k=$+n*S;for(let n=0;n<s.outWidth;++n){const o=n*c-x;let u=o;for(;u<0;)u+=p;const f=Math.min(s.inWidth,m+o),g=k+n*_;let w=y,I=0,S=0;for(let n=C;n<O;n+=l){const s=r+n*a[1];for(let n=h;n<b;n+=d){const r=s+n*a[2];for(let n=u;n<f;n+=p){const s=e[r+n*a[3]+t];if("max"===i&&s>w?w=s:"avg"===i&&(I+=s,S++),isNaN(w))break}if(isNaN(w))break}if(isNaN(w))break}v[g+t]="avg"===i?I/S:w}}}}return k}const te={kernelName:r.AvgPool,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:s}=e,{x:i}=t;Object(a.a)(i,"avgPool");const{filterSize:o,strides:u,pad:c,dimRoundingMode:d}=s;r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(u,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${u} and dilations '1'`));const p=r.backend_util.computePool2DInfo(i.shape,o,u,1,c,d);let h;if(1===p.filterWidth&&1===p.filterHeight&&r.util.arraysEqual(p.inShape,p.outShape))h=Object(l.a)({inputs:{x:i},backend:n});else{const e=n.data.get(i.dataId).values,t=r.util.computeStrides(i.shape),a=Z(e,i.shape,i.dtype,t,p,"avg");h=n.makeTensorInfo(p.outShape,i.dtype,a.values)}return h}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ne={kernelName:r.AvgPool3D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:i}=t,{filterSize:o,strides:u,pad:c,dimRoundingMode:l,dataFormat:d}=s;Object(a.a)(i,"avgPool3d");const p=r.backend_util.computePool3DInfo(i.shape,o,u,1,c,l,d),h=ee(n.data.get(i.dataId).values,i.shape,i.dtype,r.util.computeStrides(i.shape),p,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const re={kernelName:r.AvgPool3DGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:i,input:o}=t,{filterSize:u,strides:c,pad:l,dimRoundingMode:d}=s;Object(a.a)([i,o],"avgPool3DGrad");const p=r.backend_util.computePool3DInfo(o.shape,u,c,1,l,d),h=p.strideDepth,f=p.strideHeight,m=p.strideWidth,b=p.filterDepth,g=p.filterHeight,x=p.filterWidth,y=p.dilationDepth,k=p.dilationHeight,v=p.dilationWidth,w=p.effectiveFilterDepth,I=p.effectiveFilterHeight,S=p.effectiveFilterWidth,_=w-1-p.padInfo.front,C=S-1-p.padInfo.left,O=I-1-p.padInfo.top,$=Object(r.buffer)(o.shape,"float32"),T=1/(b*g*x),A=n.bufferSync(i);for(let e=0;e<p.batchSize;++e)for(let t=0;t<p.inChannels;++t)for(let n=0;n<p.inDepth;++n)for(let r=0;r<p.inHeight;++r)for(let a=0;a<p.inWidth;++a){const s=n-_,i=r-O,o=a-C;let u=0;for(let n=0;n<w;n+=y){const r=(s+n)/h;if(!(r<0||r>=p.outDepth||Math.floor(r)!==r))for(let n=0;n<I;n+=k){const a=(i+n)/f;if(!(a<0||a>=p.outHeight||Math.floor(a)!==a))for(let n=0;n<S;n+=v){const s=(o+n)/m;if(s<0||s>=p.outWidth||Math.floor(s)!==s)continue;u+=A.get(e,r,a,s,t)}}}$.set(u*T,e,n,r,a,t)}return n.makeTensorInfo($.shape,$.dtype,$.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ae={kernelName:r.AvgPoolGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:i,input:o}=t,u=o;Object(a.a)([i,o],"avgPoolGrad");const{filterSize:c,strides:l,pad:d}=s,p=r.backend_util.computePool2DInfo(u.shape,c,l,1,d),h=p.strideHeight,f=p.strideWidth,m=p.filterHeight,b=p.filterWidth,g=p.dilationHeight,x=p.dilationWidth,y=p.effectiveFilterHeight,k=p.effectiveFilterWidth,v=k-1-p.padInfo.left,w=y-1-p.padInfo.top,I=Object(r.buffer)(u.shape,"float32"),S=1/(m*b),_=n.data.get(i.dataId).values,C=Object(r.buffer)(i.shape,"float32",_);for(let e=0;e<p.batchSize;++e)for(let t=0;t<p.inChannels;++t)for(let n=0;n<p.inHeight;++n)for(let r=0;r<p.inWidth;++r){const a=n-w,s=r-v;let i=0;for(let n=0;n<y;n+=g){const r=(a+n)/h;if(!(r<0||r>=p.outHeight||Math.floor(r)!==r))for(let n=0;n<k;n+=x){const a=(s+n)/f;if(a<0||a>=p.outWidth||Math.floor(a)!==a)continue;i+=C.get(e,r,a,t)}}I.set(i*S,e,n,r,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const se={kernelName:r.FusedBatchNorm,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:i,scale:o,offset:u,mean:c,variance:l}=t;r.util.assert(c.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),r.util.assert(null==u||c.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),r.util.assert(null==o||c.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),Object(a.a)([i,c,l,o,u],"batchNorm");let{varianceEpsilon:d}=s;null==d&&(d=.001);const p=n.data.get(i.dataId).values,h=n.data.get(c.dataId).values,f=n.data.get(l.dataId).values,m=o?n.data.get(o.dataId).values:new Float32Array([1]),b=u?n.data.get(u.dataId).values:new Float32Array([0]),g=new Float32Array(p.length),x=b.length,y=m.length,k=f.length,v=h.length;let w=0,I=0,S=0,_=0;for(let e=0;e<p.length;++e)g[e]=b[w++]+(p[e]-h[I++])*m[S++]/Math.sqrt(f[_++]+d),w>=x&&(w=0),I>=v&&(I=0),S>=y&&(S=0),_>=k&&(_=0);return n.makeTensorInfo(i.shape,i.dtype,g)}};var ie=n(23);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oe={kernelName:r.BatchToSpaceND,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:i}=t,{blockShape:o,crops:u}=s;Object(a.a)([i],"batchToSpaceND");const c=o.reduce(((e,t)=>e*t)),l=r.backend_util.getReshaped(i.shape,o,c),d=r.backend_util.getPermuted(l.length,o.length),p=r.backend_util.getReshapedPermuted(i.shape,o,c),h=r.backend_util.getSliceBeginCoords(u,o.length),f=r.backend_util.getSliceSize(p,u,o.length),m=S({inputs:{x:i},backend:n,attrs:{shape:l}}),b=Object(M.a)({inputs:{x:m},backend:n,attrs:{perm:d}}),g=S({inputs:{x:b},backend:n,attrs:{shape:p}}),x=Object(ie.a)({inputs:{x:g},backend:n,attrs:{begin:h,size:f}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(g),x}};var ue=n(35);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ce={kernelName:r.Bincount,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,c=Object(ue.a)(o,u,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,c)}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const le={kernelName:r.BroadcastArgs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:a,s1:s}=t,i=n.data.get(a.dataId).values,o=n.data.get(s.dataId).values,u=r.backend_util.assertAndGetBroadcastShape(Array.from(i),Array.from(o));return n.makeTensorInfo([u.length],"int32",Int32Array.from(u))}};var de=n(29),pe=n(56);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const he=Object(o.a)(r.ClipByValue,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),fe={kernelName:r.ClipByValue,backendName:"cpu",kernelFunc:he};var me=n(18);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const be={kernelName:r.ComplexAbs,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,a=new Float32Array(r.util.sizeFromShape(t.shape)),s=n.data.get(t.dataId),i=s.complexTensorInfos.real,o=s.complexTensorInfos.imag,u=n.data.get(i.dataId).values,c=n.data.get(o.dataId).values;for(let e=0;e<u.length;e++){const t=u[e],n=c[e];a[e]=Math.hypot(t,n)}return n.makeOutput(a,t.shape,"float32")}};var ge=n(57);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xe(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}const ye={kernelName:r.Imag,backendName:"cpu",kernelFunc:xe};var ke=n(25);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ve(e){const{inputs:t,backend:n,attrs:a}=e,{axis:s}=a,i=r.util.parseAxisParam(s,t[0].shape)[0];let o=r.backend_util.computeOutShape(t.map((e=>e.shape)),i);if(0===r.util.sizeFromShape(o))return n.makeTensorInfo(o,t[0].dtype,[]);const u=t.filter((e=>r.util.sizeFromShape(e.shape)>0));if(1===u.length)return Object(l.a)({inputs:{x:u[0]},backend:n});const c=u.map((e=>e.shape));if(r.backend_util.assertParamsConsistent(c,i),"complex64"===u[0].dtype){const e=u.map((e=>Object(ke.a)({inputs:{input:e},backend:n}))),t=u.map((e=>xe({inputs:{input:e},backend:n}))),r=ve({inputs:e,backend:n,attrs:{axis:i}}),a=ve({inputs:t,backend:n,attrs:{axis:i}}),s=Object(me.a)({inputs:{real:r,imag:a},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),s}const d=u.map((e=>{const t=r.util.sizeFromShape(e.shape.slice(i));return S({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),p=d.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));o=r.backend_util.computeOutShape(d.map((e=>e.shape)),1);const h=1===d[0].shape[0],f=Object(ge.a)(p,o,t[0].dtype,h),m=r.backend_util.computeOutShape(u.map((e=>e.shape)),i),b=n.makeTensorInfo(m,t[0].dtype,f);return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}const we={kernelName:r.Concat,backendName:"cpu",kernelFunc:ve};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ie(e){const{inputs:t,backend:n,attrs:s}=e,{x:i,filter:o}=t,{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:p}=s;Object(a.a)([i,o],"conv2d");const h=r.backend_util.convertConv2DDataFormat(l),f=r.backend_util.computeConv2DInfo(i.shape,o.shape,u,d,c,p,!1,h),m=f.filterHeight,b=f.filterWidth,g=f.dilationHeight,x=f.dilationWidth,y=f.padInfo.left,k=f.padInfo.top,v="channelsLast"===f.dataFormat,w=new r.TensorBuffer(f.outShape,i.dtype),I=r.util.computeStrides(i.shape),S=r.util.computeStrides(o.shape),_=I[0],C=v?I[1]:I[2],O=v?I[2]:1,$=v?1:I[1],T=w.strides[0],A=v?w.strides[1]:w.strides[2],E=v?w.strides[2]:1,N=v?1:w.strides[1],R=n.data.get(i.dataId).values,F=n.data.get(o.dataId).values,M=w.values;for(let e=0;e<f.batchSize;++e){const t=e*_,n=e*T;for(let e=0;e<f.outHeight;++e){const r=n+e*A,a=e*f.strideHeight-k;for(let e=0;e<m;++e){const n=a+e*g;if(n<0||n>=f.inHeight)continue;const s=e*S[0],i=t+n*C;for(let e=0;e<f.outWidth;++e){const t=r+e*E,n=e*f.strideWidth-y;for(let e=0;e<b;++e){const r=n+e*x;if(r<0||r>=f.inWidth)continue;const a=i+r*O;let o=s+e*S[1];for(let e=0;e<f.inChannels;++e){const n=R[a+e*$];for(let e=0;e<f.outChannels;++e)M[t+e*N]+=n*F[o+e];o+=f.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,M)}const Se={kernelName:r.Conv2D,backendName:"cpu",kernelFunc:Ie};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _e={kernelName:r.Conv2DBackpropFilter,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:i,dy:o}=t,{strides:u,pad:c,dataFormat:l,dimRoundingMode:d,filterShape:p}=s;Object(a.a)([i,o],"conv2dBackpropFilter");const h=r.backend_util.convertConv2DDataFormat(l),f=r.backend_util.computeConv2DInfo(i.shape,p,u,1,c,d,!1,h),{strideHeight:m,strideWidth:b,filterHeight:g,filterWidth:x}=f,y="channelsLast"===f.dataFormat,k=new r.TensorBuffer(f.filterShape,"float32"),v=f.padInfo.left,w=f.padInfo.top,I=n.data.get(i.dataId).values,S=n.data.get(o.dataId).values,_=new r.TensorBuffer(i.shape,i.dtype,I),C=new r.TensorBuffer(o.shape,o.dtype,S);for(let e=0;e<g;++e){const t=Math.max(0,Math.ceil((w-e)/m)),n=Math.min(f.outHeight,(f.inHeight+w-e)/m);for(let r=0;r<x;++r){const a=Math.max(0,Math.ceil((v-r)/b)),s=Math.min(f.outWidth,(f.inWidth+v-r)/b);for(let i=0;i<f.inChannels;++i)for(let o=0;o<f.outChannels;++o){let u=0;for(let c=0;c<f.batchSize;++c)for(let l=t;l<n;++l){const t=e+l*m-w;for(let e=a;e<s;++e){const n=r+e*b-v;u+=y?_.get(c,t,n,i)*C.get(c,l,e,o):_.get(c,i,t,n)*C.get(c,o,l,e)}}k.set(u,e,r,i,o)}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ce={kernelName:r.Conv2DBackpropInput,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:i,filter:o}=t,{inputShape:u,strides:c,pad:l,dataFormat:d,dimRoundingMode:p}=s;Object(a.a)([i,o],"conv2dBackpropInput");const h=r.util.computeStrides(o.shape),f=r.util.computeStrides(i.shape);let m=r.backend_util.convertConv2DDataFormat(d);const b=r.backend_util.computeConv2DInfo(u,o.shape,c,1,l,p,!1,m),g=new r.TensorBuffer(b.inShape,"float32"),x=g.values,y=n.data.get(i.dataId).values,k=n.data.get(o.dataId).values,[v,w,I]=h,{batchSize:S,filterHeight:_,filterWidth:C,inChannels:O,inHeight:$,inWidth:T,outChannels:A,outHeight:E,outWidth:N,strideHeight:R,strideWidth:F}=b;m=b.dataFormat;const M=_-1-b.padInfo.top,D=C-1-b.padInfo.left,P="channelsLast"===m,B=g.strides[0],j=P?g.strides[1]:g.strides[2],L=P?g.strides[2]:1,z=P?1:g.strides[1],W=f[0],U=P?f[1]:f[2],G=P?f[2]:1,V=P?1:f[1];for(let e=0;e<S;++e)for(let t=0;t<O;++t)for(let n=0;n<$;++n){const r=n-M,a=Math.max(0,Math.ceil(r/R)),s=Math.min(E,(_+r)/R);for(let i=0;i<T;++i){const o=i-D,u=Math.max(0,Math.ceil(o/F)),c=Math.min(N,(C+o)/F);let l=0;for(let n=a;n<s;++n){const a=n*R-r;for(let r=u;r<c;++r){const s=W*e+U*n+G*r,i=v*(_-1-a)+w*(C-1-(r*F-o))+I*t;for(let e=0;e<A;++e){l+=y[s+V*e]*k[i+e]}}}x[B*e+j*n+L*i+z*t]=l}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oe={kernelName:r.Conv3D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:i,filter:o}=t,{strides:u,pad:c,dilations:l}=s;Object(a.a)([i,o],"conv3d");const d=r.backend_util.computeConv3DInfo(i.shape,o.shape,u,l,c),{filterDepth:p,filterHeight:h,filterWidth:f,dilationDepth:m,dilationHeight:b,dilationWidth:g,padInfo:x}=d,y=x.front,k=x.left,v=x.top,w=new r.TensorBuffer(d.outShape,i.dtype),I=n.data.get(i.dataId).values,S=n.data.get(o.dataId).values,_=w.values,C=r.util.computeStrides(i.shape),O=r.util.computeStrides(o.shape);for(let e=0;e<d.batchSize;++e){const t=e*C[0],n=e*w.strides[0];for(let e=0;e<d.outDepth;++e){const r=n+e*w.strides[1],a=e*d.strideDepth-y;for(let e=0;e<p;++e){const n=a+e*m;if(n<0||n>=d.inDepth)continue;const s=e*O[0],i=t+n*C[1];for(let e=0;e<d.outHeight;++e){const t=r+e*w.strides[2],n=e*d.strideHeight-v;for(let e=0;e<h;++e){const r=n+e*b;if(r<0||r>=d.inHeight)continue;const a=s+e*O[1],o=i+r*C[2];for(let e=0;e<d.outWidth;++e){const n=t+e*d.outChannels,r=e*d.strideWidth-k;for(let e=0;e<f;++e){const t=r+e*g;if(t<0||t>=d.inWidth)continue;const s=a+e*O[2],i=o+t*d.inChannels;let u=s;for(let e=0;e<d.inChannels;++e){const t=I[i+e];for(let e=0;e<d.outChannels;++e)_[n+e]+=t*S[u+e];u+=d.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $e={kernelName:r.Conv3DBackpropFilterV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:i,dy:o}=t,{strides:u,pad:c,filterShape:l}=s;Object(a.a)([i,o],"conv3dBackpropFilterV2");const d=r.util.computeStrides(i.shape),p=r.util.computeStrides(o.shape),h=r.backend_util.computeConv3DInfo(i.shape,l,u,1,c),f=h.strideDepth,m=h.strideHeight,b=h.strideWidth,g=h.filterDepth,x=h.filterHeight,y=h.filterWidth,k=new r.TensorBuffer(h.filterShape,"float32"),v=k.values,[w,I,S,_]=k.strides,C=n.data.get(o.dataId).values,[O,$,T,A]=p,E=n.data.get(i.dataId).values,[N,R,F,M]=d,D=h.padInfo.front,P=h.padInfo.left,B=h.padInfo.top;for(let e=0;e<g;++e){const t=Math.max(0,Math.ceil((D-e)/f)),n=Math.min(h.outDepth,(h.inDepth+D-e)/f),r=e*w;for(let a=0;a<x;++a){const s=Math.max(0,Math.ceil((B-a)/m)),i=Math.min(h.outHeight,(h.inHeight+B-a)/m),o=a*I+r;for(let r=0;r<y;++r){const u=Math.max(0,Math.ceil((P-r)/b)),c=Math.min(h.outWidth,(h.inWidth+P-r)/b),l=r*S+o;for(let o=0;o<h.inChannels;++o){const d=o*_+l;for(let l=0;l<h.outChannels;++l){let p=0;for(let d=0;d<h.batchSize;++d){const h=d*N,g=d*O;for(let d=t;d<n;++d){const t=(e+d*f-D)*R+h,n=d*$+g;for(let e=s;e<i;++e){const s=(a+e*m-B)*F+t,i=e*T+n;for(let e=u;e<c;++e){const t=e*A+i;p+=E[(r+e*b-P)*M+s+o]*C[t+l]}}}}v[d+l]=p}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Te={kernelName:r.Conv3DBackpropInputV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:i,filter:o}=t,{pad:u,strides:c,inputShape:l}=s;Object(a.a)([i],"conv3dBackpropInputV2");const d=r.util.computeStrides(i.shape),p=r.util.computeStrides(o.shape),h=r.backend_util.computeConv3DInfo(l,o.shape,c,1,u),f=new r.TensorBuffer(h.inShape,"float32"),m=f.values,[b,g,x,y]=f.strides,k=n.data.get(i.dataId).values,[v,w,I,S]=d,_=n.data.get(o.dataId).values,[C,O,$,T]=p,{batchSize:A,filterDepth:E,filterHeight:N,filterWidth:R,inChannels:F,inDepth:M,inHeight:D,inWidth:P,outChannels:B,outDepth:j,outHeight:L,outWidth:z,strideDepth:W,strideHeight:U,strideWidth:G}=h,V=E-1-h.padInfo.front,H=N-1-h.padInfo.top,q=R-1-h.padInfo.left;for(let e=0;e<A;++e)for(let t=0;t<F;++t)for(let n=0;n<M;++n){const r=n-V,a=Math.max(0,Math.ceil(r/W)),s=Math.min(j,(E+r)/W);for(let i=0;i<D;++i){const o=i-H,u=Math.max(0,Math.ceil(o/U)),c=Math.min(L,(N+o)/U);for(let l=0;l<P;++l){const d=l-q,p=Math.max(0,Math.ceil(d/G)),h=Math.min(z,(R+d)/G);let f=0;for(let n=a;n<s;++n){const a=n*W-r;for(let r=u;r<c;++r){const s=r*U-o;for(let i=p;i<h;++i){const o=v*e+w*n+I*r+S*i,u=C*(E-1-a)+O*(N-1-s)+$*(R-1-(i*G-d))+T*t;for(let e=0;e<B;++e){f+=k[o+e]*_[u+e]}}}}m[b*e+g*n+x*i+y*l+t]=f}}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},Ae=Object(o.a)(r.Cos,(e=>Math.cos(e))),Ee={kernelName:r.Cos,backendName:"cpu",kernelFunc:Ae},Ne=Object(o.a)(r.Cosh,(e=>Math.cosh(e))),Re={kernelName:r.Cosh,backendName:"cpu",kernelFunc:Ne};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fe={kernelName:r.CropAndResize,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:a}=e,{image:s,boxes:i,boxInd:o}=t,{cropSize:u,method:c,extrapolationValue:l}=a,[d,p,h,f]=s.shape,m=i.shape[0],[b,g]=u,x=Object(r.buffer)([m,b,g,f],"float32"),y=n.data.get(i.dataId).values,k=n.data.get(o.dataId).values,v=n.data.get(s.dataId).values,w=r.util.computeStrides(s.shape),I=r.util.computeStrides(x.shape);for(let e=0;e<m;e++){const t=4*e,n=y[t],r=y[t+1],a=y[t+2],s=y[t+3],i=k[e];if(i>=d)continue;const o=b>1?(a-n)*(p-1)/(b-1):0,u=g>1?(s-r)*(h-1)/(g-1):0;for(let t=0;t<b;t++){const d=b>1?n*(p-1)+t*o:.5*(n+a)*(p-1);if(d<0||d>p-1)for(let n=0;n<g;n++)for(let r=0;r<f;r++){const a=r+n*I[2]+t*I[1]+e*I[0];x.values[a]=l}else if("bilinear"===c){const n=Math.floor(d),a=Math.ceil(d),o=d-n;for(let c=0;c<g;c++){const d=g>1?r*(h-1)+c*u:.5*(r+s)*(h-1);if(d<0||d>h-1){for(let n=0;n<f;n++){const r=n+c*I[2]+t*I[1]+e*I[0];x.values[r]=l}continue}const p=Math.floor(d),m=Math.ceil(d),b=d-p;for(let r=0;r<f;r++){let s=r+p*w[2]+n*w[1]+i*w[0];const u=v[s];s=r+m*w[2]+n*w[1]+i*w[0];const l=v[s];s=r+p*w[2]+a*w[1]+i*w[0];const d=v[s];s=r+m*w[2]+a*w[1]+i*w[0];const h=u+(l-u)*b,f=d+(v[s]-d)*b;s=r+c*I[2]+t*I[1]+e*I[0],x.values[s]=h+(f-h)*o}}}else for(let n=0;n<g;++n){const a=g>1?r*(h-1)+n*u:.5*(r+s)*(h-1);if(a<0||a>h-1){for(let r=0;r<f;r++){const a=r+n*I[2]+t*I[1]+e*I[0];x.values[a]=l}continue}const o=Math.round(a),c=Math.round(d);for(let r=0;r<f;r++){const a=r+o*w[2]+c*w[1]+i*w[0],s=r+n*I[2]+t*I[1]+e*I[0];x.values[s]=v[a]}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Me={kernelName:r.Cumprod,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:i}=t,{axis:o,exclusive:u,reverse:c}=s;Object(a.a)(i,"cumprod");const l=r.backend_util.getAxesPermutation([o],i.shape.length);let d=i;null!=l&&(d=Object(M.a)({inputs:{x:i},backend:n,attrs:{perm:l}}));const p=r.backend_util.getInnerMostAxes(1,i.shape.length)[0];if(p!==d.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${d.shape.length-1} but got axis=${p}`);const h=Object(r.upcastType)(d.dtype,"int32"),f=r.util.makeOnesTypedArray(r.util.sizeFromShape(d.shape),h),m=n.data.get(d.dataId).values,b=d.shape[d.shape.length-1],g=c?(e,t)=>e+b-t-1:(e,t)=>e+t;for(let e=0;e<m.length;e+=b)for(let t=0;t<b;t++){const n=g(e,t);if(0===t)f[n]=u?1:m[n];else{const r=g(e,t-1);f[n]=u?m[r]*f[r]:m[n]*f[r]}}const x=n.makeTensorInfo(d.shape,h,f);if(null!=l){const e=r.backend_util.getUndoAxesPermutation(l),t=Object(M.a)({inputs:{x:x},backend:n,attrs:{perm:e}});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(d),t}return x}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const De={kernelName:r.Cumsum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:i}=t,{axis:o,exclusive:u,reverse:c}=s;Object(a.a)(i,"cumsum");const l=r.backend_util.getAxesPermutation([o],i.shape.length);let d=i;null!=l&&(d=Object(M.a)({inputs:{x:i},backend:n,attrs:{perm:l}}));const p=r.backend_util.getInnerMostAxes(1,i.shape.length)[0];if(p!==d.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${d.shape.length-1} but got axis=${p}`);const h=Object(r.upcastType)(d.dtype,"int32"),f=r.util.makeZerosTypedArray(r.util.sizeFromShape(d.shape),h),m=n.data.get(d.dataId).values,b=d.shape[d.shape.length-1],g=c?(e,t)=>e+b-t-1:(e,t)=>e+t;for(let e=0;e<m.length;e+=b)for(let t=0;t<b;t++){const n=g(e,t);if(0===t)f[n]=u?0:m[n];else{const r=g(e,t-1);f[n]=u?m[r]+f[r]:m[n]+f[r]}}const x=n.makeTensorInfo(d.shape,h,f);if(null!=l){const e=r.backend_util.getUndoAxesPermutation(l),t=Object(M.a)({inputs:{x:x},backend:n,attrs:{perm:e}});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(d),t}return x}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pe={kernelName:r.DenseBincount,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){const e=n.data.get(a.dataId).values,t=n.data.get(s.dataId).values,r=Object(ue.a)(e,t,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,r)}if(2===a.shape.length){const e=n.bufferSync(a),t=n.bufferSync(s),r=Object(ue.b)(e,t,i,o);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Be={kernelName:r.DepthToSpace,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{blockSize:i,dataFormat:o}=a;r.util.assert("NHWC"===o,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${o}`));const u=s.shape[0],c=s.shape[1],l=s.shape[2],d=s.shape[3],p=c*i,h=l*i,f=d/(i*i),m=n.data.get(s.dataId).values,b=new Float32Array(u*p*h*f);let g=0;for(let e=0;e<u;++e)for(let t=0;t<p;++t){const n=Math.floor(t/i),r=t%i;for(let t=0;t<h;++t){const a=Math.floor(t/i),s=(r*i+t%i)*f;for(let t=0;t<f;++t){const r=t+s+d*(a+l*(n+c*e));b[g++]=m[r]}}}return n.makeTensorInfo([u,p,h,f],s.dtype,b)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function je(e){const{inputs:t,backend:n,attrs:s}=e,{x:i,filter:o}=t,{strides:u,pad:c,dilations:l,dimRoundingMode:d}=s;Object(a.a)([i,o],"depthwiseConv2DNative");const p=r.util.computeStrides(i.shape),h=r.util.computeStrides(o.shape);let f=l;null==f&&(f=[1,1]),r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(u,f),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${f}'`));const m=r.backend_util.computeConv2DInfo(i.shape,o.shape,u,f,c,d,!0),{filterHeight:b,filterWidth:g,dilationHeight:x,dilationWidth:y,padInfo:k}=m,v=k.left,w=k.top,I=m.outChannels/m.inChannels,S=new r.TensorBuffer(m.outShape,i.dtype),_=n.data.get(i.dataId).values,C=n.data.get(o.dataId).values,O=S.values;for(let e=0;e<m.batchSize;++e){const t=e*p[0],n=e*S.strides[0];for(let e=0;e<m.outHeight;++e){const r=n+e*S.strides[1],a=e*m.strideHeight-w;for(let e=0;e<b;++e){const n=a+e*x;if(n<0||n>=m.inHeight)continue;const s=e*h[0],i=t+n*p[1];for(let e=0;e<m.outWidth;++e){const t=r+e*S.strides[2],n=e*m.strideWidth-v;for(let e=0;e<g;++e){const r=n+e*y;if(r<0||r>=m.inWidth)continue;const a=s+e*h[1],o=i+r*m.inChannels;let u=t,c=a;for(let e=0;e<m.inChannels;++e){const t=_[o+e];for(let e=0;e<I;++e)O[u+e]+=t*C[c+e];u+=I,c+=I}}}}}}return n.makeTensorInfo(S.shape,S.dtype,S.values)}const Le={kernelName:r.DepthwiseConv2dNative,backendName:"cpu",kernelFunc:je};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ze={kernelName:r.DepthwiseConv2dNativeBackpropFilter,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:i,dy:o}=t,{strides:u,dilations:c,pad:l,dimRoundingMode:d,filterShape:p}=s;Object(a.a)([i,o],"depthwiseConv2dNativeBackpropFilter");const h=r.backend_util.computeConv2DInfo(i.shape,p,u,c,l,d,!0),{strideHeight:f,strideWidth:m,filterHeight:b,filterWidth:g}=h,x=new r.TensorBuffer(h.filterShape,"float32"),y=h.padInfo.left,k=h.padInfo.top,v=h.outChannels/h.inChannels,w=n.data.get(i.dataId).values,I=new r.TensorBuffer(i.shape,i.dtype,w),S=n.data.get(o.dataId).values,_=new r.TensorBuffer(o.shape,o.dtype,S);for(let e=0;e<b;++e){const t=Math.max(0,Math.ceil((k-e)/f)),n=Math.min(h.outHeight,(h.inHeight+k-e)/f);for(let r=0;r<g;++r){const a=Math.max(0,Math.ceil((y-r)/m)),s=Math.min(h.outWidth,(h.inWidth+y-r)/m);for(let i=0;i<h.outChannels;++i){const o=Math.trunc(i/v),u=i%v;let c=0;for(let u=0;u<h.batchSize;++u)for(let l=t;l<n;++l){const t=e+l*f-k;for(let e=a;e<s;++e){const n=r+e*m-y;c+=I.get(u,t,n,o)*_.get(u,l,e,i)}}x.set(c,e,r,o,u)}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const We={kernelName:r.DepthwiseConv2dNativeBackpropInput,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:i,filter:o}=t,{strides:u,dilations:c,pad:l,dimRoundingMode:d,inputShape:p}=s;Object(a.a)([i,o],"depthwiseConv2DNativeBackpropInput");const h=r.util.computeStrides(i.shape),f=r.util.computeStrides(o.shape),m=r.backend_util.computeConv2DInfo(p,o.shape,u,c,l,d,!0),b=new r.TensorBuffer(m.inShape,"float32"),g=b.values,[x,y,k]=b.strides,v=n.data.get(i.dataId).values,[w,I,S]=h,_=n.data.get(o.dataId).values,[C,O,$]=f,{batchSize:T,filterHeight:A,filterWidth:E,inChannels:N,inHeight:R,inWidth:F,outChannels:M,outHeight:D,outWidth:P,strideHeight:B,strideWidth:j}=m,L=A-1-m.padInfo.top,z=E-1-m.padInfo.left,W=M/N;for(let e=0;e<T;++e)for(let t=0;t<N;++t)for(let n=0;n<R;++n){const r=n-L,a=Math.max(0,Math.ceil(r/B)),s=Math.min(D,(A+r)/B);for(let i=0;i<F;++i){const o=i-z,u=Math.max(0,Math.ceil(o/j)),c=Math.min(P,(E+o)/j);let l=0;for(let n=a;n<s;++n){const a=n*B-r;for(let r=u;r<c;++r){const s=w*e+I*n+S*r,i=C*(A-1-a)+O*(E-1-(r*j-o))+$*t;for(let e=0;e<W;++e){l+=v[s+(t*W+e)]*_[i+e]}}}g[x*e+y*n+k*i+t]=l}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ue={kernelName:r.Diag,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,s=r.util.sizeFromShape(a.shape),i=n.data.get(a.dataId).values,o=Object(r.buffer)([s,s],a.dtype),u=o.values;for(let e=0;e<i.length;e++)u[e*s+e]=i[e];const c=[...a.shape,...a.shape];return n.makeTensorInfo(c,o.dtype,o.values)}},Ge={kernelName:r.Dilation2D,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,filter:s}=e,{strides:i,pad:o,dilations:u}=n,c=t,l=c.data.get(a.dataId).values,d=a.shape.length,p=c.data.get(s.dataId).values,h=s.shape.length,{batchSize:f,inHeight:m,inWidth:b,inChannels:g,outHeight:x,outWidth:y,padInfo:k,strideHeight:v,strideWidth:w,filterHeight:I,filterWidth:S,dilationHeight:_,dilationWidth:C,outShape:O}=r.backend_util.computeDilation2DInfo(a.shape,s.shape,i,o,"NHWC",u),$=r.util.sizeFromShape(O),T=O.length,A=r.util.getArrayFromDType(a.dtype,$);for(let e=0;e<f;++e)for(let t=0;t<x;++t){const n=t*v-k.top;for(let i=0;i<y;++i){const o=i*w-k.left;for(let u=0;u<g;++u){let c=Number.MIN_SAFE_INTEGER;for(let t=0;t<I;++t){const i=n+t*_;if(i>=0&&i<m)for(let n=0;n<S;++n){const f=o+n*C;if(f>=0&&f<b){const o=r.util.locToIndex([e,i,f,u],d,r.util.computeStrides(a.shape)),m=r.util.locToIndex([t,n,u],h,r.util.computeStrides(s.shape)),b=l[o]+p[m];b>c&&(c=b)}}}A[r.util.locToIndex([e,t,i,u],T,r.util.computeStrides(O))]=c}}}return{dataId:c.write(r.util.toTypedArray(A,a.dtype),O,a.dtype),shape:O,dtype:a.dtype}}},Ve={kernelName:r.Dilation2DBackpropFilter,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,filter:s,dy:i}=e,{strides:o,pad:u,dilations:c}=n,l=t,d=r.util.toNestedArray(a.shape,l.data.get(a.dataId).values),p=r.util.toNestedArray(s.shape,l.data.get(s.dataId).values),{batchSize:h,inHeight:f,inWidth:m,inChannels:b,outHeight:g,outWidth:x,padInfo:y,strideHeight:k,strideWidth:v,filterHeight:w,filterWidth:I,dilationHeight:S,dilationWidth:_,outShape:C}=r.backend_util.computeDilation2DInfo(a.shape,s.shape,o,u,"NHWC",c);r.util.assert(i.rank===C.length,(()=>`Error in ${r.Dilation2DBackpropFilter}, dy must have the same rank as output ${C.length}, but got ${i.rank}`));const O=r.util.toNestedArray(C,l.data.get(i.dataId).values),$=r.util.makeZerosNestedTypedArray(s.shape,s.dtype);for(let e=0;e<h;++e)for(let t=0;t<g;++t){const n=t*k-y.top;for(let r=0;r<x;++r){const a=r*v-y.left;for(let s=0;s<b;++s){let i=Number.MIN_SAFE_INTEGER,o=0,u=0;for(let t=0;t<w;++t){const r=n+t*S;if(r>=0&&r<f)for(let n=0;n<I;++n){const c=a+n*_;if(c>=0&&c<m){const a=d[e][r][c][s]+p[t][n][s];a>i&&(i=a,o=t,u=n)}}}$[o][u][s]+=O[e][t][r][s]}}}return{dataId:l.write(r.util.toTypedArray($,a.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},He={kernelName:r.Dilation2DBackpropInput,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,filter:s,dy:i}=e,{strides:o,pad:u,dilations:c}=n,l=t,d=r.util.toNestedArray(a.shape,l.data.get(a.dataId).values),p=r.util.toNestedArray(s.shape,l.data.get(s.dataId).values),{batchSize:h,inHeight:f,inWidth:m,inChannels:b,outHeight:g,outWidth:x,padInfo:y,strideHeight:k,strideWidth:v,filterHeight:w,filterWidth:I,dilationHeight:S,dilationWidth:_,outShape:C}=r.backend_util.computeDilation2DInfo(a.shape,s.shape,o,u,"NHWC",c);r.util.assert(i.rank===C.length,(()=>`Error in ${r.Dilation2DBackpropInput}, dy must have the same rank as output ${C.length}, but got ${i.rank}`));const O=r.util.toNestedArray(C,l.data.get(i.dataId).values),$=r.util.makeZerosNestedTypedArray(a.shape,a.dtype);for(let e=0;e<h;++e)for(let t=0;t<g;++t){const n=t*k-y.top;for(let r=0;r<x;++r){const a=r*v-y.left;for(let s=0;s<b;++s){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,u=a<0?0:a;for(let t=0;t<w;++t){const r=n+t*S;if(r>=0&&r<f)for(let n=0;n<I;++n){const c=a+n*_;if(c>=0&&c<m){const a=d[e][r][c][s]+p[t][n][s];a>i&&(i=a,o=r,u=c)}}}$[e][o][u][s]+=O[e][t][r][s]}}}return{dataId:l.write(r.util.toTypedArray($,a.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var qe=n(28),Ke=n(87);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Xe(e){const{inputs:t,backend:n,attrs:s}=e,{x:i}=t,{axis:o,keepDims:u}=s;let c;Object(a.a)(i,"sum"),c="bool"===i.dtype?Object(de.a)({inputs:{x:i},backend:n,attrs:{dtype:"int32"}}):Object(l.a)({inputs:{x:i},backend:n});const d=c.shape.length,p=r.util.parseAxisParam(o,c.shape),h=r.backend_util.getAxesPermutation(p,d);let f=p,m=c;null!=h&&(m=Object(M.a)({inputs:{x:c},backend:n,attrs:{perm:h}}),f=r.backend_util.getInnerMostAxes(f.length,d)),r.backend_util.assertAxesAreInnerMostDims("sum",f,m.shape.length);const[b,g]=r.backend_util.computeOutAndReduceShapes(m.shape,f),x=r.backend_util.upcastType(m.dtype,"int32");let y=Object(Ke.a)(n,b,x);const k=r.util.sizeFromShape(g),v=n.data.get(y.dataId).values,w=n.data.get(m.dataId).values;for(let e=0;e<v.length;++e){const t=e*k;let n=0;for(let e=0;e<k;++e)n+=w[t+e];v[e]=n}if(u){const e=y;y=S({inputs:{x:y},backend:n,attrs:{shape:r.backend_util.expandShapeToKeepDim(y.shape,p)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(c),null!=h&&n.disposeIntermediateTensorInfo(m),y}const Ye={kernelName:r.Sum,backendName:"cpu",kernelFunc:Xe};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qe={kernelName:r.Einsum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{equation:s}=a,i=t,{allDims:o,summedDims:u,idDims:c}=r.backend_util.decodeEinsumEquation(s,i.length);r.backend_util.checkEinsumDimSizes(o.length,c,i);const{path:l,steps:d}=r.backend_util.getEinsumComputePath(u,c),p=d.length;let h=null,f=o.length;const m=[];for(let e=0;e<p;++e){for(const t of d[e]){const{permutationIndices:e,expandDims:a}=r.backend_util.getEinsumPermutation(f,c[t]);let s;r.backend_util.isIdentityPermutation(e)?s=i[t]:(s=Object(M.a)({inputs:{x:i[t]},backend:n,attrs:{perm:e}}),m.push(s));const o=s.shape.slice();for(let e=0;e<a.length;++e)o.splice(a[e],0,1);r.util.arraysEqual(s.shape,o)||(s=S({inputs:{x:s},backend:n,attrs:{shape:o}}),m.push(s)),null===h?h=s:(h=Object(qe.a)({inputs:{a:s,b:h},backend:n}),m.push(h))}e<p-1&&(l[e]>=0&&(h=Xe({inputs:{x:h},backend:n,attrs:{axis:l[e]-(o.length-f),keepDims:!1}}),m.push(h)),f--)}for(const e of m)e!==h&&n.disposeIntermediateTensorInfo(e);return h}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ze={kernelName:r.EluGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:s,y:i}=t;Object(a.a)([s,i],"eluGrad");const o=new Float32Array(r.util.sizeFromShape(i.shape)),u=n.data.get(i.dataId).values,c=n.data.get(s.dataId).values;for(let e=0;e<u.length;++e){const t=u[e];o[e]=t>=1?c[e]:c[e]*(t+1)}return n.makeTensorInfo(i.shape,"float32",o)}};var Je=n(43);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const et=r.backend_util.ERF_P,tt=r.backend_util.ERF_A1,nt=r.backend_util.ERF_A2,rt=r.backend_util.ERF_A3,at=r.backend_util.ERF_A4,st=r.backend_util.ERF_A5,it=Object(o.a)(r.Erf,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+et*n);return t*(1-((((st*r+at)*r+rt)*r+nt)*r+tt)*r*Math.exp(-n*n))})),ot={kernelName:r.Erf,backendName:"cpu",kernelFunc:it};var ut=n(44);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ct(e){const{inputs:t,backend:n,attrs:a}=e,{input:s}=t,{dim:i}=a,o=s.shape.length,u=s.shape.slice();let c=i;return i<0&&(r.util.assert(-(o+1)<=i,(()=>`Axis must be in the interval [${-(o+1)}, ${o}]`)),c=o+i+1),u.splice(c,0,1),S({inputs:{x:s},backend:n,attrs:{shape:u}})}const lt={kernelName:r.ExpandDims,backendName:"cpu",kernelFunc:ct};var dt=n(58);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pt=Object(h.a)(((e,t)=>e/t)),ht=Object(H.a)(r.RealDiv,pt),ft={kernelName:r.RealDiv,backendName:"cpu",kernelFunc:ht};var mt=n(36);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bt(e,t,n){const a=e.shape,s=a[0],i=a[1],o=n.data.get(e.dataId),u=o.complexTensorInfos.real,c=o.complexTensorInfos.imag,l=[s,i],d=r.util.sizeFromShape(l),p=r.util.getTypedArrayFromDType("float32",d),h=r.util.getTypedArrayFromDType("float32",d);for(let e=0;e<s;e++){const a=Object(ie.a)({inputs:{x:u},backend:n,attrs:{begin:[e,0],size:[1,i]}}),s=Object(ie.a)({inputs:{x:c},backend:n,attrs:{begin:[e,0],size:[1,i]}}),o=Object(me.a)({inputs:{real:a,imag:s},backend:n}),{real:l,imag:d}=gt(o,t,n),f=r.backend_util.mergeRealAndImagArrays(l,d);for(let t=0;t<i;t++){const n=r.backend_util.getComplexWithIndex(f,t);p[e*i+t]=n.real,h[e*i+t]=n.imag}n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o)}const f=n.makeTensorInfo(l,"float32",p),m=n.makeTensorInfo(l,"float32",h),b=Object(me.a)({inputs:{real:f,imag:m},backend:n});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),b}function gt(e,t,n){const a=r.util.sizeFromShape(e.shape),s=n.data.get(e.dataId),i=n.data.get(s.complexTensorInfos.real.dataId).values,o=n.data.get(s.complexTensorInfos.imag.dataId).values;if(0==((u=a)&u-1)){const s=xt(i,o,a,t,n),u=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(u,"float32",s.real),t=n.makeTensorInfo(u,"float32",s.imag),i=n.makeTensorInfo([],"float32",r.util.createScalarValue(a,"float32")),o=Object(l.a)({inputs:{x:i},backend:n}),c=ft.kernelFunc({inputs:{a:e,b:i},backend:n}),d=ft.kernelFunc({inputs:{a:t,b:o},backend:n}),p=n.data.get(c.dataId).values,h=n.data.get(d.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(d),{real:p,imag:h}}return s}{const e=function(e,t,n){const a=new Float32Array(2*t);for(let s=0;s<t;s++){let i=0,o=0;for(let a=0;a<t;a++){const u=r.backend_util.exponent(s*a,t,n),c=r.backend_util.getComplexWithIndex(e,a);i+=c.real*u.real-c.imag*u.imag,o+=c.real*u.imag+c.imag*u.real}n&&(i/=t,o/=t),r.backend_util.assignToTypedArray(a,i,o,s)}return a}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(r.backend_util.mergeRealAndImagArrays(i,o),a,t);return r.backend_util.splitRealAndImagArrays(e)}var u}function xt(e,t,n,a,s){if(1===n)return{real:e,imag:t};const i=r.backend_util.mergeRealAndImagArrays(e,t),o=n/2,u=r.backend_util.complexWithEvenIndex(i),c=u.real,l=u.imag,d=[c.length],p=s.makeTensorInfo(d,"float32",c),h=s.makeTensorInfo(d,"float32",l),f=Object(me.a)({inputs:{real:p,imag:h},backend:s}),m=r.backend_util.complexWithOddIndex(i),b=m.real,g=m.imag,x=[b.length],y=s.makeTensorInfo(x,"float32",b),k=s.makeTensorInfo(x,"float32",g),v=Object(me.a)({inputs:{real:y,imag:k},backend:s}),w=xt(c,l,o,a,s),S=w.real,_=w.imag,C=[S.length],O=s.makeTensorInfo(C,"float32",S),$=s.makeTensorInfo(C,"float32",_),T=Object(me.a)({inputs:{real:O,imag:$},backend:s}),A=xt(b,g,o,a,s),E=A.real,N=A.imag,R=[E.length],F=s.makeTensorInfo(R,"float32",E),M=s.makeTensorInfo(R,"float32",N),D=Object(me.a)({inputs:{real:F,imag:M},backend:s}),P=r.backend_util.exponents(n,a),B=[P.real.length],j=s.makeTensorInfo(B,"float32",P.real),L=s.makeTensorInfo(B,"float32",P.imag),z=Object(me.a)({inputs:{real:j,imag:L},backend:s}),W=Object(qe.a)({inputs:{a:z,b:D},backend:s}),U=Object(I.a)({inputs:{a:T,b:W},backend:s}),G=Object(mt.a)({inputs:{a:T,b:W},backend:s}),V=Object(ke.a)({inputs:{input:U},backend:s}),H=Object(ke.a)({inputs:{input:G},backend:s}),q=xe({inputs:{input:U},backend:s}),K=xe({inputs:{input:G},backend:s}),X=ve({inputs:[V,H],backend:s,attrs:{axis:0}}),Y=ve({inputs:[q,K],backend:s,attrs:{axis:0}}),Q=s.data.get(X.dataId).values,Z=s.data.get(Y.dataId).values;return s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(f),s.disposeIntermediateTensorInfo(y),s.disposeIntermediateTensorInfo(k),s.disposeIntermediateTensorInfo(v),s.disposeIntermediateTensorInfo(O),s.disposeIntermediateTensorInfo($),s.disposeIntermediateTensorInfo(T),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(M),s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(K),s.disposeIntermediateTensorInfo(X),s.disposeIntermediateTensorInfo(Y),{real:Q,imag:Z}}const yt={kernelName:r.FFT,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t,s=r.util.sizeFromShape(a.shape),i=a.shape[a.shape.length-1],o=S({inputs:{x:a},backend:n,attrs:{shape:[s/i,i]}}),u=bt(o,!1,n),c=S({inputs:{x:u},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),c}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kt(e){const{backend:t,attrs:n}=e,{shape:a,value:s,dtype:i}=n,o=i||r.util.inferDtype(s),u=r.util.getArrayFromDType(o,r.util.sizeFromShape(a));return function(e,t,n){e.fill(t)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(u,s),t.makeTensorInfo(a,o,u)}const vt={kernelName:r.Fill,backendName:"cpu",kernelFunc:kt};const wt={kernelName:r.FlipLeftRight,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:a}=e,s=n,i=r.util.getTypedArrayFromDType(a.dtype,r.util.sizeFromShape(a.shape)),[o,u,c,l]=a.shape,d=s.data.get(a.dataId).values;for(let e=0;e<o;e++){const t=e*c*u*l;for(let e=0;e<u;e++){const n=e*(c*l);for(let e=0;e<c;e++){const r=e*l;for(let a=0;a<l;a++){const s=Math.round(c-e-1),o=t+n+r+a;let u=d[o];if(s>=0&&s<c){u=d[t+n+s*l+a]}i[o]=u}}}}return{dataId:s.write(i,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}};var It=n(59);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const St=Object(h.a)(((e,t)=>Math.floor(e/t))),_t=Object(H.a)(r.FloorDiv,St,null,"int32"),Ct={kernelName:r.FloorDiv,backendName:"cpu",kernelFunc:_t};const Ot={kernelName:r.FusedConv2D,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=r;let m=Ie({inputs:{x:a,filter:s},backend:n,attrs:{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:p}});if(i){const e=m;if("NCHW"===l&&1===i.shape.length&&1!==i.shape[0]){const e=S({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=Object(I.a)({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=Object(I.a)({inputs:{a:m,b:i},backend:n});n.disposeIntermediateTensorInfo(e)}if(h){const e=m;if("NCHW"===l&&"prelu"===h&&1===o.shape.length&&1!==o.shape[0]){const e=S({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=w(n,m,h,e,f),n.disposeIntermediateTensorInfo(e)}else m=w(n,m,h,o,f);n.disposeIntermediateTensorInfo(e)}return m}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $t={kernelName:r.FusedDepthwiseConv2D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=r;let m=je({inputs:{x:a,filter:s},backend:n,attrs:{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:p}});if(i){const e=m;m=Object(I.a)({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(h){const e=m;m=w(n,m,h,o,f),n.disposeIntermediateTensorInfo(e)}return m}};var Tt=n(60);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const At={kernelName:r.GatherNd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:s}=t,i=r.util.sizeFromShape(a.shape),o=s.shape,u=o[o.length-1],[c,l,d,p]=r.backend_util.prepareAndValidate(a,s);if(0===l)return n.makeTensorInfo(c,a.dtype,[]);const h=n.data.get(s.dataId).values,f=n.bufferSync(a),m=Object(Tt.a)(h,f,a.dtype,l,u,d,p,a.shape,i);return n.makeTensorInfo(c,a.dtype,m.values)}};var Et=n(61);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nt={kernelName:r.GatherV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:i,indices:o}=t,{axis:u,batchDims:c}=s;Object(a.a)([i,o],"gatherV2");const l=r.util.parseAxisParam(u,i.shape)[0],d=n.data.get(o.dataId).values,p=i.shape[l];for(let e=0;e<d.length;++e){const t=d[e];r.util.assert(t<=p-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${p-1}]`))}let h=c;null==c&&(h=0);const f=r.util.sizeFromShape(o.shape),m=r.backend_util.segment_util.collectGatherOpShapeInfo(i,o,l,h),b=S({inputs:{x:i},backend:n,attrs:{shape:[m.batchSize,m.outerSize,m.dimSize,m.sliceSize]}}),g=S({inputs:{x:o},backend:n,attrs:{shape:[m.batchSize,f/m.batchSize]}}),x=[m.batchSize,m.outerSize,f/m.batchSize,m.sliceSize],y=n.bufferSync(g),k=n.bufferSync(b),v=Object(Et.a)(k,y,x);return n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(g),n.makeTensorInfo(m.outputShape,v.dtype,v.values)}};var Rt=n(62),Ft=n(63);const Mt={kernelName:r.IFFT,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n}=e,{input:a}=t,s=r.util.sizeFromShape(a.shape),i=a.shape[a.shape.length-1],o=S({inputs:{x:a},backend:n,attrs:{shape:[s/i,i]}}),u=bt(o,!0,n),c=S({inputs:{x:u},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),c}},Dt=Object(o.a)(r.IsFinite,(e=>Number.isFinite(e)?1:0),"bool"),Pt={kernelName:r.IsFinite,backendName:"cpu",kernelFunc:Dt},Bt=Object(o.a)(r.IsInf,(e=>Math.abs(e)===1/0?1:0),"bool"),jt={kernelName:r.IsInf,backendName:"cpu",kernelFunc:Bt},Lt=Object(o.a)(r.IsNan,(e=>Number.isNaN(e)?1:0),"bool"),zt={kernelName:r.IsNan,backendName:"cpu",kernelFunc:Lt};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Wt=n(64),Ut=n(65),Gt=n(66);const Vt={kernelName:r.LinSpace,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=Object(Gt.a)(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}};var Ht=n(67);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qt=Object(o.a)(r.Log1p,(e=>Math.log1p(e))),Kt={kernelName:r.Log1p,backendName:"cpu",kernelFunc:qt},Xt=Object(h.a)(((e,t)=>e&&t)),Yt=Object(H.a)(r.LogicalAnd,Xt,null,"bool"),Qt={kernelName:r.LogicalAnd,backendName:"cpu",kernelFunc:Yt},Zt=Object(o.a)(r.LogicalNot,(e=>e?0:1),"bool"),Jt={kernelName:r.LogicalNot,backendName:"cpu",kernelFunc:Zt},en=Object(h.a)(((e,t)=>e||t)),tn=Object(H.a)(r.LogicalOr,en,null,"bool"),nn={kernelName:r.LogicalOr,backendName:"cpu",kernelFunc:tn};const rn={kernelName:r.LRN,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:s}=e,{x:i}=t,{depthRadius:o,bias:u,alpha:c,beta:l}=s;Object(a.a)(i,"LRN");const d=i.shape[3],p=d-1,h=n.data.get(i.dataId).values,f=r.util.sizeFromShape(i.shape),m=new Float32Array(f);function b(e){const t=e%d;let n=e-t+Math.max(0,t-o);const r=e-t+Math.min(t+o,p);let a=0;for(;n<=r;n++){const e=h[n];a+=e*e}return a}for(let e=0;e<f;e++){const t=b(e),n=h[e]*Math.pow(u+c*t,-l);m[e]=n}return n.makeTensorInfo(i.shape,i.dtype,m)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const an={kernelName:r.LRNGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:i,y:o,dy:u}=t,{depthRadius:c,bias:l,alpha:d,beta:p}=s;Object(a.a)(u,"LRNGrad");const h=r.util.sizeFromShape(u.shape),f=u.shape[3],m=n.data.get(u.dataId).values,b=n.data.get(i.dataId).values,g=n.data.get(o.dataId).values,x=new Float32Array(h),y=h;for(let e=0;e<y;e++){const t=e%f,n=e-t+Math.max(0,t-c),r=e-t+Math.min(f,t+c+1);let a=0;for(let e=n;e<r;e++)a+=Math.pow(b[e],2);a=d*a+l;for(let t=n;t<r;t++){let n=-2*d*p*b[t]*g[e]/a;e===t&&(n+=Math.pow(a,-p)),n*=m[e],x[t]+=n}}return n.makeTensorInfo(u.shape,i.dtype,x)}};var sn=n(68),on=n(45);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function un(e){const{inputs:t,backend:n,attrs:s}=e,{x:i}=t,{reductionIndices:o,keepDims:u}=s,c=n;let l=i.shape;const d=l.length,p=r.util.parseAxisParam(o,l);let h=p;const f=r.backend_util.getAxesPermutation(h,d);let m=c.data.get(i.dataId).values;if(null!=f){const e=new Array(d);for(let t=0;t<e.length;t++)e[t]=l[f[t]];m=Object(on.a)(m,l,i.dtype,f,e),h=r.backend_util.getInnerMostAxes(h.length,d),l=e}Object(a.a)(i,"max"),r.backend_util.assertAxesAreInnerMostDims("max",h,d);const[b,g]=r.backend_util.computeOutAndReduceShapes(l,h),x=r.util.sizeFromShape(g),y=Object(sn.a)(m,x,b,i.dtype),k=c.write(y,b,i.dtype);let v=b;if(u){v=r.backend_util.expandShapeToKeepDim(b,p)}return{dataId:k,shape:v,dtype:i.dtype}}const cn={kernelName:r.Max,backendName:"cpu",kernelFunc:un};var ln=n(69);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dn={kernelName:r.MaxPool,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:i}=t;Object(a.a)(i,"maxPool");const{filterSize:o,strides:u,pad:c,dimRoundingMode:d}=s;r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(u,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${u} and dilations '1'`));const p=r.backend_util.computePool2DInfo(i.shape,o,u,1,c,d);let h;if(1===p.filterWidth&&1===p.filterHeight&&r.util.arraysEqual(p.inShape,p.outShape))h=Object(l.a)({inputs:{x:i},backend:n});else{const e=n.data.get(i.dataId).values,t=r.util.computeStrides(i.shape),a=Z(e,i.shape,i.dtype,t,p,"max");h=n.makeTensorInfo(p.outShape,i.dtype,a.values)}return h}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pn={kernelName:r.MaxPool3D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:i}=t,{filterSize:o,strides:u,pad:c,dimRoundingMode:l,dataFormat:d}=s;Object(a.a)(i,"maxPool3d");const p=r.backend_util.computePool3DInfo(i.shape,o,u,1,c,l,d),h=ee(n.data.get(i.dataId).values,i.shape,i.dtype,r.util.computeStrides(i.shape),p,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hn={kernelName:r.MaxPool3DGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:i,input:o}=t,{filterSize:u,strides:c,pad:l,dimRoundingMode:d}=s;Object(a.a)([i,o],"maxPool3DGrad");const p=r.backend_util.computePool3DInfo(o.shape,u,c,1,l,d),h=function(e,t){const n=Object(r.buffer)(t.outShape,"int32"),a=t.strideDepth,s=t.strideHeight,i=t.strideWidth,o=t.dilationDepth,u=t.dilationHeight,c=t.dilationWidth,l=t.effectiveFilterDepth,d=t.effectiveFilterHeight,p=t.effectiveFilterWidth,h=t.padInfo.front,f=t.padInfo.top,m=t.padInfo.left;for(let r=0;r<t.batchSize;++r)for(let b=0;b<t.inChannels;++b)for(let g=0;g<t.outDepth;++g){const x=g*a-h;let y=x;for(;y<0;)y+=o;const k=Math.min(t.inDepth,l+x);for(let a=0;a<t.outHeight;++a){const l=a*s-f;let h=l;for(;h<0;)h+=u;const v=Math.min(t.inHeight,d+l);for(let s=0;s<t.outWidth;++s){const f=s*i-m;let w=f;for(;w<0;)w+=c;const I=Math.min(t.inWidth,p+f);let S=Number.NEGATIVE_INFINITY,_=-1;for(let t=y;t<k;t+=o){const n=t-x;for(let a=h;a<v;a+=u){const s=a-l;for(let i=w;i<I;i+=c){const o=i-f,u=e.get(r,t,a,i,b);u>=S&&(S=u,_=n*d*p+s*d+o)}}}n.set(_,r,g,a,s,b)}}}return n}(n.bufferSync(o),p),f=p.strideDepth,m=p.strideHeight,b=p.strideWidth,g=p.dilationDepth,x=p.dilationHeight,y=p.dilationWidth,k=p.effectiveFilterDepth,v=p.effectiveFilterHeight,w=p.effectiveFilterWidth,I=k-1-p.padInfo.front,S=w-1-p.padInfo.left,_=v-1-p.padInfo.top,C=Object(r.buffer)(o.shape,"float32"),O=n.bufferSync(i);for(let e=0;e<p.batchSize;++e)for(let t=0;t<p.inChannels;++t)for(let n=0;n<p.inDepth;++n)for(let r=0;r<p.inHeight;++r)for(let a=0;a<p.inWidth;++a){const s=n-I,i=r-_,o=a-S;let u=0;for(let n=0;n<k;n+=g){const r=(s+n)/f;if(!(r<0||r>=p.outDepth||Math.floor(r)!==r))for(let a=0;a<v;a+=x){const s=(i+a)/m;if(!(s<0||s>=p.outHeight||Math.floor(s)!==s))for(let i=0;i<w;i+=y){const c=(o+i)/b;if(c<0||c>=p.outWidth||Math.floor(c)!==c)continue;const l=k*v*w-1-h.get(e,r,s,c,t)===n*v*w+a*w+i?1:0;if(0===l)continue;u+=O.get(e,r,s,c,t)*l}}}C.set(u,e,n,r,a,t)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fn={kernelName:r.MaxPoolGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:i,input:o,output:u}=t,c=o;Object(a.a)([o,u],"maxPoolGrad");const{filterSize:l,strides:d,pad:p,dimRoundingMode:h}=s,f=r.backend_util.computePool2DInfo(c.shape,l,d,1,p,h),m=n.data.get(c.dataId).values,b=Object(r.buffer)(f.outShape,c.dtype,J(m,c.shape,c.dtype,f).values),g=f.strideHeight,x=f.strideWidth,y=f.dilationHeight,k=f.dilationWidth,v=f.effectiveFilterHeight,w=f.effectiveFilterWidth,I=w-1-f.padInfo.left,S=v-1-f.padInfo.top,_=Object(r.buffer)(c.shape,"float32"),C=n.data.get(i.dataId).values,O=Object(r.buffer)(i.shape,"float32",C);for(let e=0;e<f.batchSize;++e)for(let t=0;t<f.inChannels;++t)for(let n=0;n<f.inHeight;++n)for(let r=0;r<f.inWidth;++r){const a=n-S,s=r-I;let i=0;for(let n=0;n<v;n+=y){const r=(a+n)/g;if(!(r<0||r>=f.outHeight||Math.floor(r)!==r))for(let a=0;a<w;a+=k){const o=(s+a)/x;if(o<0||o>=f.outWidth||Math.floor(o)!==o)continue;const u=v*w-1-b.get(e,r,o,t)===n*w+a?1:0;if(0===u)continue;i+=O.get(e,r,o,t)*u}}_.set(i,e,n,r,t)}return n.makeTensorInfo(_.shape,_.dtype,_.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const mn={kernelName:r.MaxPoolWithArgmax,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{filterSize:i,strides:o,pad:u,includeBatchInIndex:c}=t,l=n;Object(a.a)(s,"MaxPoolWithArgmax");const d=l.data.get(s.dataId).values,p=r.backend_util.computePool2DInfo(s.shape,i,o,[1,1],u),[h,f]=function(e,t,n,a,s){const i=Z(e,0,n,r.util.computeStrides(t),s,"max"),o=J(e,t,n,s,!0,a);return[i.values,o.values]}(d,s.shape,s.dtype,c,p),m=l.write(h,p.outShape,s.dtype),b=l.write(f,p.outShape,s.dtype);return[{dataId:m,shape:p.outShape,dtype:s.dtype},{dataId:b,shape:p.outShape,dtype:"int32"}]}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bn={kernelName:r.Mean,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:i,keepDims:o}=a,u=r.util.parseAxisParam(i,s.shape),c=r.backend_util.computeOutAndReduceShapes(s.shape,u)[1],l=r.util.sizeFromShape(c),d=[],p=n.makeTensorInfo([],"float32",new Float32Array([l]));d.push(p);const h=Object(de.a)({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});d.push(h);const f=ht({inputs:{a:h,b:p},backend:n});d.push(f);const m=Xe({inputs:{x:f},backend:n,attrs:{axis:i,keepDims:o}});return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),m}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gn={kernelName:r.Min,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:i}=t,{axis:o,keepDims:u}=s;Object(a.a)(i,"min");const c=r.util.parseAxisParam(o,i.shape);let l=c;const d=r.backend_util.getAxesPermutation(l,i.shape.length);let p=i;null!=d&&(p=Object(M.a)({inputs:{x:i},backend:n,attrs:{perm:d}}),l=r.backend_util.getInnerMostAxes(l.length,i.shape.length)),r.backend_util.assertAxesAreInnerMostDims("min",l,p.shape.length);const[h,f]=r.backend_util.computeOutAndReduceShapes(p.shape,l),m=r.util.sizeFromShape(f),b=r.util.makeZerosTypedArray(r.util.sizeFromShape(h),p.dtype),g=n.data.get(p.dataId).values;for(let e=0;e<b.length;++e){const t=e*m;let n=g[t];for(let e=0;e<m;++e){const r=g[t+e];(Number.isNaN(r)||r<n)&&(n=r)}b[e]=n}null!=d&&n.disposeIntermediateTensorInfo(p);const x=n.makeTensorInfo(h,p.dtype,b);if(u){const e=S({inputs:{x:x},backend:n,attrs:{shape:r.backend_util.expandShapeToKeepDim(h,c)}});return n.disposeIntermediateTensorInfo(x),e}return x}};var xn=n(70);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yn={kernelName:r.MirrorPad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:i}=t,{paddings:o,mode:u}=s;Object(a.a)(i,"mirrorPad");const c=o.map(((e,t)=>e[0]+i.shape[t]+e[1])),l=o.map((e=>e[0])),d=o.map(((e,t)=>e[0]+i.shape[t])),p="reflect"===u?0:1,h=n.data.get(i.dataId).values,f=i.shape.length,m=r.util.computeStrides(i.shape),b=r.util.sizeFromShape(c),g=c.length,x=r.util.computeStrides(c),y=r.util.getTypedArrayFromDType(i.dtype,b);for(let e=0;e<b;e++){let t=r.util.indexToLoc(e,g,x);for(let e=0;e<g;e++)t[e]<l[e]?t[e]=2*l[e]-t[e]-p:t[e]>=d[e]&&(t[e]=2*(d[e]-1)-t[e]+p);t=t.map(((e,t)=>e-l[t]));const n=r.util.locToIndex(t,f,m);y[e]=h[n]}return{dataId:n.write(y,c,i.dtype),shape:c,dtype:i.dtype}}},kn=Object(h.a)(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),vn=Object(H.a)(r.Mod,kn),wn={kernelName:r.Mod,backendName:"cpu",kernelFunc:vn};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var In=n(49);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sn(e){const{inputs:t,backend:n,attrs:a}=e,{logits:s}=t,{dim:i}=a,o=s.shape.length;let u=i;if(-1===u&&(u=o-1),u!==o-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${o} and dim was ${u}`);const c=r.util.parseAxisParam([u],s.shape),l=un({inputs:{x:s},backend:n,attrs:{reductionIndices:c,keepDims:!1}}),d=r.backend_util.expandShapeToKeepDim(l.shape,c),p=S({inputs:{x:l},backend:n,attrs:{shape:d}}),h=Object(mt.a)({inputs:{a:s,b:p},backend:n}),f=Object(ut.a)({inputs:{x:h},backend:n}),m=Xe({inputs:{x:f},backend:n,attrs:{axis:c,keepDims:!1}}),b=S({inputs:{x:m},backend:n,attrs:{shape:d}}),g=ht({inputs:{a:f,b:b},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),g}const _n={kernelName:r.Softmax,backendName:"cpu",kernelFunc:Sn};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cn={kernelName:r.Multinomial,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{logits:i}=t,{numSamples:o,seed:u,normalized:c}=s;Object(a.a)(i,"multinomial");const l=c?i:Sn({inputs:{logits:i},backend:n,attrs:{dim:-1}}),d=l.shape[0],p=l.shape[1],h=n.data.get(l.dataId).values,f=[d,o],m=r.util.makeZerosTypedArray(r.util.sizeFromShape(f),"int32");for(let e=0;e<d;++e){const t=e*p,n=new Float32Array(p-1);n[0]=h[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+h[t+e];const r=In.alea(u.toString()),a=e*o;for(let e=0;e<o;++e){const t=r();m[a+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){m[a+e]=r;break}}}return c||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(f,"int32",m)}};var On=n(71);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $n=r.kernel_impls.nonMaxSuppressionV3Impl;const Tn={kernelName:r.NonMaxSuppressionV3,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:i}=t,{maxOutputSize:o,iouThreshold:u,scoreThreshold:c}=r;Object(a.a)(s,"NonMaxSuppression");const l=n.data.get(s.dataId).values,d=n.data.get(i.dataId).values,{selectedIndices:p}=$n(l,d,o,u,c);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}},An=r.kernel_impls.nonMaxSuppressionV4Impl;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const En={kernelName:r.NonMaxSuppressionV4,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:i}=t,{maxOutputSize:o,iouThreshold:u,scoreThreshold:c,padToMaxOutputSize:l}=r;Object(a.a)(s,"NonMaxSuppressionPadded");const d=n.data.get(s.dataId).values,p=n.data.get(i.dataId).values,{selectedIndices:h,validOutputs:f}=An(d,p,o,u,c,l);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}},Nn=r.kernel_impls.nonMaxSuppressionV5Impl;
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rn={kernelName:r.NonMaxSuppressionV5,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:i}=t,{maxOutputSize:o,iouThreshold:u,scoreThreshold:c,softNmsSigma:l}=r;Object(a.a)(s,"NonMaxSuppressionWithScore");const d=n.data.get(s.dataId).values,p=n.data.get(i.dataId).values,h=o,f=u,m=c,b=l,{selectedIndices:g,selectedScores:x}=Nn(d,p,h,f,m,b);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([x.length],"float32",new Float32Array(x))]}};var Fn=n(72);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mn={kernelName:r.OneHot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:i}=t,{depth:o,onValue:u,offValue:c}=s;Object(a.a)(i,"oneHot");const l=r.util.sizeFromShape(i.shape),d=new Float32Array(l*o);d.fill(c);const p=n.data.get(i.dataId).values;for(let e=0;e<l;++e)p[e]>=0&&p[e]<o&&(d[e*o+p[e]]=u);return n.makeTensorInfo([...i.shape,o],"int32",d)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dn(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=Object(ke.a)({inputs:{input:r},backend:n}),t=Dn({inputs:{x:e},backend:n}),a=xe({inputs:{input:r},backend:n}),s=Dn({inputs:{x:a},backend:n}),i=Object(me.a)({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return kt({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const Pn={kernelName:r.ZerosLike,backendName:"cpu",kernelFunc:Dn};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bn={kernelName:r.OnesLike,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===a.dtype){const t=Object(ke.a)({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=xe({inputs:{input:a},backend:r}),i=Dn({inputs:{x:s},backend:r}),o=Object(me.a)({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return kt({backend:r,attrs:{shape:a.shape,value:1,dtype:a.dtype}})}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jn(e){const{inputs:t,backend:n,attrs:a}=e,{axis:s}=a;if(1===t.length)return ct({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const i=t[0].shape,o=t[0].dtype;t.forEach((e=>{r.util.assertShapesMatch(i,e.shape,"All tensors passed to stack must have matching shapes"),r.util.assert(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const u=[],c=ve({inputs:t.map((e=>{const t=ct({inputs:{input:e},backend:n,attrs:{dim:s}});return u.push(t),t})),backend:n,attrs:{axis:s}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const Ln={kernelName:r.Pack,backendName:"cpu",kernelFunc:jn};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zn={kernelName:r.PadV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:i}=t,{paddings:o,constantValue:u}=s;Object(a.a)(i,"pad");const c=o.map(((e,t)=>e[0]+i.shape[t]+e[1])),l=o.map((e=>e[0])),d=n.data.get(i.dataId).values,p=r.util.sizeFromShape(i.shape),h=i.shape.length,f=r.util.computeStrides(i.shape),m=r.util.sizeFromShape(c),b=c.length,g=r.util.computeStrides(c),x=r.util.getTypedArrayFromDType(i.dtype,m);0!==u&&x.fill(u);for(let e=0;e<p;e++){const t=r.util.indexToLoc(e,h,f).map(((e,t)=>e+l[t]));x[r.util.locToIndex(t,b,g)]=d[e]}return{dataId:n.write(x,c,i.dtype),shape:c,dtype:i.dtype}}},Wn=Object(h.a)(((e,t)=>Math.pow(e,t))),Un=Object(H.a)(r.Pow,Wn),Gn={kernelName:r.Pow,backendName:"cpu",kernelFunc:Un};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Vn=n(73),Hn=n(74);const qn={kernelName:r.Range,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,dtype:s,step:i}=n,o=Object(Hn.a)(r,a,i,s);return t.makeTensorInfo([o.length],s,o)}},Kn=Object(o.a)(r.Reciprocal,(e=>1/e)),Xn={kernelName:r.Reciprocal,backendName:"cpu",kernelFunc:Kn};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yn={kernelName:r.ResizeBilinear,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:s}=e,{images:i}=t,{alignCorners:o,halfPixelCenters:u,size:c}=s;Object(a.a)(i,"resizeBilinear");const l=r.util.computeStrides(i.shape),[d,p]=c,[h,f,m,b]=i.shape,g=n.data.get(i.dataId).values,x=new Float32Array(r.util.sizeFromShape([h,d,p,b])),y=[o&&d>1?f-1:f,o&&p>1?m-1:m],k=[o&&d>1?d-1:d,o&&p>1?p-1:p];let v=0;const w=y[0]/k[0],I=y[1]/k[1];for(let e=0;e<h;e++)for(let t=0;t<d;t++){let n;n=u?w*(t+.5)-.5:w*t;const r=Math.max(0,Math.floor(n)),a=n-r,s=Math.min(f-1,Math.ceil(n)),i=e*l[0]+r*l[1],o=e*l[0]+s*l[1];for(let e=0;e<p;e++){let t;t=u?I*(e+.5)-.5:I*e;const n=Math.max(0,Math.floor(t)),r=t-n,s=Math.min(m-1,Math.ceil(t)),c=i+n*l[2],d=o+n*l[2],p=i+s*l[2],h=o+s*l[2];for(let e=0;e<b;e++){const t=g[c+e],n=g[d+e],s=t+(g[p+e]-t)*r,i=s+(n+(g[h+e]-n)*r-s)*a;x[v++]=i}}}return n.makeTensorInfo([h,d,p,b],"float32",x)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qn={kernelName:r.ResizeBilinearGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:i,dy:o}=t,{alignCorners:u}=s;Object(a.a)([o,i],"resizeBilinearGrad");const c=r.util.computeStrides(i.shape),[l,d,p,h]=i.shape,[,f,m]=o.shape,b=new Float32Array(l*d*p*h),g=[u&&f>1?d-1:d,u&&m>1?p-1:p],x=[u&&f>1?f-1:f,u&&m>1?m-1:m],y=g[0]/x[0],k=g[1]/x[1],v=n.data.get(o.dataId).values;let w=0;for(let e=0;e<l;e++){const t=e*c[0];for(let e=0;e<f;e++){const n=e*y,r=Math.floor(n),a=Math.min(Math.ceil(n),d-1),s=t+r*c[1],i=t+a*c[1],o=n-r,u=1-o;for(let e=0;e<m;e++){const t=e*k,n=Math.floor(t),r=Math.min(Math.ceil(t),p-1),a=t-n,l=1-a,d=s+n*c[2],f=s+r*c[2],m=i+n*c[2],g=i+r*c[2],x=u*l,y=u*a,I=o*l,S=o*a;for(let e=0;e<h;e++){const t=v[w++];b[d+e]+=t*x,b[f+e]+=t*y,b[m+e]+=t*I,b[g+e]+=t*S}}}}return n.makeTensorInfo([l,p,d,h],"float32",b)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zn={kernelName:r.ResizeNearestNeighbor,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:i}=t,{alignCorners:o,halfPixelCenters:u,size:c}=s;Object(a.a)(i,"resizeNearestNeighbor");const l=r.util.computeStrides(i.shape),[d,p]=c,[h,f,m,b]=i.shape,g=n.data.get(i.dataId).values,x=new Float32Array(h*d*p*b),y=[o&&d>1?f-1:f,o&&p>1?m-1:m],k=[o&&d>1?d-1:d,o&&p>1?p-1:p],v=y[0]/k[0],w=y[1]/k[1];let I=0;for(let e=0;e<h;e++){const t=e*l[0];for(let e=0;e<d;e++){const n=u?v*(e+.5):v*e;let r=Math.min(f-1,o?Math.round(n):Math.floor(n));u&&(r=Math.max(0,r));const a=t+r*l[1];for(let e=0;e<p;e++){const t=u?w*(e+.5):w*e;let n=Math.min(m-1,o?Math.round(t):Math.floor(t));u&&(n=Math.max(0,n));const r=a+n*l[2];for(let e=0;e<b;e++){const t=g[r+e];x[I++]=t}}}}return n.makeTensorInfo([h,d,p,b],i.dtype,x)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jn={kernelName:r.ResizeNearestNeighborGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:i,dy:o}=t,{alignCorners:u}=s;Object(a.a)([o,i],"resizeNearestNeighborGrad");const c=r.util.computeStrides(i.shape),l=r.util.computeStrides(o.shape),[d,p,h,f]=i.shape,[,m,b]=o.shape,g=new Float32Array(d*p*h*f),x=n.data.get(o.dataId).values,y=[u&&m>1?p-1:p,u&&b>1?h-1:h],k=[u&&m>1?m-1:m,u&&b>1?b-1:b],v=y[0]/k[0],w=y[1]/k[1],I=1/v,S=1/w,_=2*Math.ceil(I)+2,C=2*Math.ceil(S)+2;for(let e=0;e<d;e++){const t=e*c[0];for(let e=0;e<p;e++){const n=t+e*c[1],r=Math.floor(e*I),a=Math.floor(r-_/2);for(let r=0;r<h;r++){const s=n+r*c[2],i=Math.floor(r*S),o=Math.floor(i-C/2);for(let n=0;n<f;n++){let i=0;for(let s=0;s<_;s++){const c=s+a;if(c<0||c>=m)continue;const d=t+c*l[1],f=c*v;if(e===Math.min(p-1,u?Math.round(f):Math.floor(f)))for(let e=0;e<C;e++){const t=e+o;if(t<0||t>=b)continue;const a=d+t*l[2],s=t*w;r===Math.min(h-1,u?Math.round(s):Math.floor(s))&&(i+=x[a+n])}}g[s+n]=i}}}}return n.makeTensorInfo(i.shape,i.dtype,g)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const er={kernelName:r.Reverse,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:i}=t,{dims:o}=s;Object(a.a)(i,"reverse");const u=i.shape.length,c=r.util.parseAxisParam(o,i.shape);if(0===u)return Object(l.a)({inputs:{x:i},backend:n});const d=new r.TensorBuffer(i.shape,i.dtype),p=n.bufferSync(i);for(let e=0;e<d.size;e++){const t=d.indexToLoc(e),n=t.slice();c.forEach((e=>n[e]=i.shape[e]-1-n[e])),d.set(p.get(...n),...t)}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},tr={kernelName:r.RotateWithOffset,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:a}=e,{radians:s,fillValue:i,center:o}=t,u=n,c=r.util.getTypedArrayFromDType(a.dtype,r.util.sizeFromShape(a.shape)),[l,d,p,h]=a.shape,[f,m]=r.backend_util.getImageCenter(o,d,p),b=Math.sin(s),g=Math.cos(s),x=u.data.get(a.dataId).values;for(let e=0;e<l;e++){const t=e*p*d*h;for(let e=0;e<d;e++){const n=e*(p*h);for(let r=0;r<p;r++){const a=r*h;for(let s=0;s<h;s++){const o=[l,e,r,s],u=o[2],y=o[1];let k=(u-f)*g-(y-m)*b,v=(u-f)*b+(y-m)*g;k=Math.round(k+f),v=Math.round(v+m);let w=i;if("number"!=typeof i&&(w=3===s?255:i[s]),k>=0&&k<p&&v>=0&&v<d){w=x[t+v*(p*h)+k*h+s]}c[t+n+a+s]=w}}}}return{dataId:u.write(c,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},nr=Object(o.a)(r.Round,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),rr={kernelName:r.Round,backendName:"cpu",kernelFunc:nr};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var ar=n(75),sr=n(33);const ir={kernelName:r.ScatterNd,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:s,updates:i}=t,{shape:o}=a,{sliceRank:u,numUpdates:c,sliceSize:l,strides:d,outputSize:p}=r.backend_util.calculateShapes(i,s,o),h=n.bufferSync(s),f=n.bufferSync(i),m=Object(sr.a)(h,f,o,p,l,c,u,d,0,!0);return n.makeTensorInfo(o,m.dtype,m.values)}};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function or(e,t){let n=0,r=e.length,a=0;for(;n<r;)a=Math.floor((n+r)/2),e[a]<t?n=a+1:r=a;return r}function ur(e,t){let n=0,r=e.length,a=0;for(;n<r;)a=Math.floor((n+r)/2),e[a]<=t?n=a+1:r=a;return r}const cr={kernelName:r.SearchSorted,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:a}=e,{sortedSequence:s,values:i}=t,{side:o}=a,u=function(e,t,n,a,s,i){const o=r.util.getArrayFromDType("int32",n*s);for(let r=0;r<n;++r){const n=e.slice(r*a,(r+1)*a),u=r*s;for(let e=0;e<s;++e)o[u+e]="left"===i?or(n,t[e+u]):ur(n,t[e+u])}return o}(n.data.get(s.dataId).values,n.data.get(i.dataId).values,s.shape[0],s.shape[1],i.shape[1],o);return n.makeTensorInfo(i.shape,"int32",u)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lr={kernelName:r.Select,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:s,t:i,e:o}=t;Object(a.a)([s,i,o],"select");const u=s.shape.length,c=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values,d=n.data.get(o.dataId).values,p=Object(r.upcastType)(i.dtype,o.dtype),h=r.util.makeZerosTypedArray(r.util.sizeFromShape(i.shape),p);let f=0;const m=0===u||u>1||1===i.shape.length?1:r.util.sizeFromShape(i.shape.slice(1));for(let e=0;e<c.length;e++)for(let t=0;t<m;t++)1===c[e]?h[f++]=l[e]:h[f++]=d[e];return n.makeTensorInfo(i.shape,p,h)}},dr=r.backend_util.SELU_SCALEALPHA,pr=r.backend_util.SELU_SCALE,hr=Object(o.a)(r.Selu,(e=>e>=0?pr*e:dr*(Math.exp(e)-1))),fr={kernelName:r.Selu,backendName:"cpu",kernelFunc:hr},mr=Object(o.a)(r.Sign,(e=>e<0?-1:e>0?1:0)),br={kernelName:r.Sign,backendName:"cpu",kernelFunc:mr},gr=Object(o.a)(r.Sin,(e=>Math.sin(e))),xr={kernelName:r.Sin,backendName:"cpu",kernelFunc:gr},yr=Object(o.a)(r.Sinh,(e=>Math.sinh(e))),kr={kernelName:r.Sinh,backendName:"cpu",kernelFunc:yr},vr=Math.log(1.1920928955078125e-7)+2,wr=Object(o.a)(r.Softplus,(e=>{const t=e>-vr,n=e<vr,r=Math.exp(e);let a;return a=n?r:t?e:Math.log(1+r),a})),Ir={kernelName:r.Softplus,backendName:"cpu",kernelFunc:wr};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sr={kernelName:r.SpaceToBatchND,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:s}=e,{x:i}=t,{blockShape:o,paddings:u}=s;Object(a.a)([i],"spaceToBatchND");const c=r.util.sizeFromShape(o),l=[[0,0]];l.push(...u);for(let e=1+o.length;e<i.shape.length;++e)l.push([0,0]);const d=zn.kernelFunc({inputs:{x:i},backend:n,attrs:{paddings:l,constantValue:0}}),p=r.backend_util.getReshaped(d.shape,o,c,!1),h=r.backend_util.getPermuted(p.length,o.length,!1),f=r.backend_util.getReshapedPermuted(d.shape,o,c,!1),m=S({inputs:{x:d},backend:n,attrs:{shape:p}}),b={x:m},g={perm:h},x=Object(M.a)({inputs:b,backend:n,attrs:g}),y=S({inputs:{x:x},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(x),y}};var _r=n(76);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cr={kernelName:r.SparseFillEmptyRows,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n        ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,c=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values[0],[d,p,h,f,m]=Object(_r.a)(o,r.shape,r.dtype,u,a.dtype,c,l);return[n.makeTensorInfo(p,r.dtype,d),n.makeTensorInfo([p[0]],a.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};var Or=n(77);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $r={kernelName:r.SparseReshape,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const i=Array.from(n.data.get(a.dataId).values),o=n.data.get(r.dataId).values,u=Array.from(n.data.get(s.dataId).values),[c,l,d]=Object(Or.a)(o,r.shape,r.dtype,i,u);return[n.makeTensorInfo(l,r.dtype,c),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}};var Tr=n(47);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ar={kernelName:r.SparseSegmentMean,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,[c,l]=Object(Tr.a)(i,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(l,r.dtype,c)}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Er={kernelName:r.SparseSegmentSum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,[c,l]=Object(Tr.a)(i,r.shape,r.dtype,o,u);return n.makeTensorInfo(l,r.dtype,c)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nr={kernelName:r.SparseToDense,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sparseIndices:s,sparseValues:i,defaultValue:o}=t,{outputShape:u}=a,{sliceRank:c,numUpdates:l,sliceSize:d,strides:p,outputSize:h}=r.backend_util.calculateShapes(i,s,u),f=!1,m=n.bufferSync(s);let b;switch(i.dtype){case"bool":{const e=n.bufferSync(i),t=Boolean(n.data.get(o.dataId).values[0]);b=Object(sr.a)(m,e,u,h,d,l,c,p,t,f);break}case"float32":{const e=n.bufferSync(i),t=n.data.get(o.dataId).values[0];b=Object(sr.a)(m,e,u,h,d,l,c,p,t,f);break}case"int32":{const e=n.bufferSync(i),t=n.data.get(o.dataId).values[0];b=Object(sr.a)(m,e,u,h,d,l,c,p,t,f);break}case"string":{const e=n.bufferSync(i),t=r.util.decodeString(n.data.get(o.dataId).values[0]);b=Object(sr.a)(m,e,u,h,d,l,c,p,t,f);break}default:throw new Error(`Unsupported type ${i.dtype}`)}return n.makeTensorInfo(u,b.dtype,b.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rr={kernelName:r.SplitV,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{numOrSizeSplits:i,axis:o}=a,u=r.util.parseAxisParam(o,s.shape)[0],c=r.backend_util.prepareSplitSize(s,i,u),l=new Array(s.shape.length).fill(0),d=s.shape.slice();return c.map((e=>{const t=[...d];t[u]=e;const r=Object(ie.a)({inputs:{x:s},backend:n,attrs:{begin:l,size:t}});return l[u]+=e,r}))}};var Fr=n(78);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mr={kernelName:r.Square,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;Object(a.a)(n,"square");const s=r.data.get(n.dataId).values,i=new Float32Array(s.length);for(let e=0;e<s.length;++e){const t=s[e];i[e]=t*t}return{dataId:r.write(i,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};var Dr=n(79);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pr=Object(o.a)(r.Step,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),Br={kernelName:r.Step,backendName:"cpu",kernelFunc:Pr};var jr=n(80);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lr={kernelName:r.StridedSlice,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:i}=t,{begin:o,end:u,strides:c,beginMask:l,endMask:d,ellipsisMask:p,newAxisMask:h,shrinkAxisMask:f}=s;Object(a.a)(i,"stridedSlice");const{finalShapeSparse:m,finalShape:b,isIdentity:g,sliceDim0:x,isSimpleSlice:y,begin:k,end:v,strides:w}=r.slice_util.sliceInfo(i.shape,o,u,c,l,d,p,h,f);let I;if(g)I=S({inputs:{x:i},backend:n,attrs:{shape:b}});else if(x||y){r.util.assert(i.shape.length>=1,(()=>`Input must have rank at least 1, got: ${i.shape.length}`));const e=r.slice_util.computeOutShape(k,v,w),t=Object(ie.a)({inputs:{x:i},backend:n,attrs:{begin:k,size:e}});I=S({inputs:{x:t},backend:n,attrs:{shape:b}}),n.disposeIntermediateTensorInfo(t)}else{const e=n.bufferSync(i),t=Object(jr.a)(m,e,w,k);I=n.makeTensorInfo(b,t.dtype,t.values)}return I}};var zr=n(81);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wr={kernelName:r.StringNGrams,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:c}=r,{data:l,dataSplits:d}=t,p=n.data.get(l.dataId).values,h=n.data.get(d.dataId).values,[f,m]=Object(zr.a)(p,h,a,s,i,o,u,c);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}};var Ur=n(82);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gr={kernelName:r.StringSplit,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values[0],[c,l,d]=Object(Ur.a)(o,u,a),p=l.length;return[n.makeTensorInfo([p,2],"int32",c),n.makeTensorInfo([p],"string",l),n.makeTensorInfo([2],"int32",new Int32Array(d))]}};var Vr=n(83);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hr={kernelName:r.StringToHashBucketFast,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const i=n.data.get(s.dataId).values,o=Object(Vr.a)(i,a);return n.makeTensorInfo(s.shape,"int32",o)}},qr=Object(o.a)(r.Tan,(e=>Math.tan(e))),Kr={kernelName:r.Tan,backendName:"cpu",kernelFunc:qr},Xr=Object(o.a)(r.Tanh,(e=>Math.tanh(e))),Yr={kernelName:r.Tanh,backendName:"cpu",kernelFunc:Xr};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Qr=n(84);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zr={kernelName:r.Tile,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:i}=r;Object(a.a)(s,"tile");const o=Object(Qr.a)(n.bufferSync(s),i);return n.makeTensorInfo(o.shape,o.dtype,o.values)}};var Jr=n(85);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ea={kernelName:r.TopK,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:i,sorted:o}=r;Object(a.a)(s,"topk");const u=n.data.get(s.dataId).values,[c,l]=Object(Jr.a)(u,s.shape,s.dtype,i,o);return[n.makeTensorInfo(c.shape,c.dtype,c.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ta={kernelName:r.Transform,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{image:s,transforms:i}=t,{interpolation:o,fillMode:u,fillValue:c,outputShape:l}=n,[d,p,h,f]=s.shape,[m,b]=null!=l?l:[p,h],g=[d,m,b,f],x=r.util.computeStrides(s.shape),y=x[0],k=x[1],v=x[2],w=r.util.getTypedArrayFromDType(s.dtype,r.util.sizeFromShape(g));w.fill(c);const I=a.data.get(s.dataId).values,S=a.data.get(i.dataId).values;for(let e=0;e<d;++e){const t=1===i.shape[0]?S:S.subarray(8*e,8*e+8);for(let n=0;n<m;++n)for(let r=0;r<b;++r)for(let a=0;a<f;++a){let s;const i=t[6]*r+t[7]*n+1;if(0===i)continue;const l=(t[0]*r+t[1]*n+t[2])/i,d=(t[3]*r+t[4]*n+t[5])/i,f=na(l,h,u),m=na(d,p,u);switch(o){case"nearest":s=aa(I,p,h,y,k,v,e,m,f,a,c);break;case"bilinear":s=sa(I,p,h,y,k,v,e,m,f,a,c);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${o}`)}w[e*y+n*k+r*v+a]=s}return a.makeTensorInfo(g,s.dtype,w)}return{dataId:a.write(w,g,s.dtype),shape:s.shape,dtype:s.dtype}}};function na(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return r.util.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return r.util.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return r.util.clamp(0,e,t-1)}(e,t);default:return function(e,t){return e}(e)}}function ra(e,t,n,r,a,s,i,o,u,c,l){return 0<=o&&o<t&&0<=u&&u<n?e[i*r+o*a+u*s+c]:l}function aa(e,t,n,r,a,s,i,o,u,c,l){return ra(e,t,n,r,a,s,i,Math.round(o),Math.round(u),c,l)}function sa(e,t,n,r,a,s,i,o,u,c,l){const d=Math.floor(o),p=Math.floor(u),h=d+1,f=p+1;return(h-o)*((f-u)*ra(e,t,n,r,a,s,i,d,p,c,l)+(u-p)*ra(e,t,n,r,a,s,i,d,f,c,l))+(o-d)*((f-u)*ra(e,t,n,r,a,s,i,h,p,c,l)+(u-p)*ra(e,t,n,r,a,s,i,h,f,c,l))}var ia=n(86);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oa={kernelName:r.Unique,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:i}=t;Object(a.a)(i,"unique");const o=r.data.get(i.dataId).values,{outputValues:u,outputShape:c,indices:l}=Object(ia.a)(o,s,i.shape,i.dtype);return[r.makeTensorInfo(c,i.dtype,u),r.makeTensorInfo([l.length],"int32",l)]}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ua={kernelName:r.Unpack,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a.shape.length,o=a.shape[s],u=new Array(i-1);let c=0;for(let e=0;e<i;e++)e!==s&&(u[c++]=a.shape[e]);const l=new Array(i).fill(0),d=a.shape.slice();d[s]=1;const p=new Array(o);for(let e=0;e<p.length;e++){l[s]=e;const t=Object(ie.a)({inputs:{x:a},backend:n,attrs:{begin:l,size:d}});p[e]=S({inputs:{x:t},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(t)}return p}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ca={kernelName:r.UnsortedSegmentSum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:i,segmentIds:o}=t,{numSegments:u}=s;Object(a.a)(i,"unsortedSegmentSum");const c=[],l=[],d=i.shape.length-o.shape.length;let p=o;for(let e=0;e<d;++e){const t=ct({inputs:{input:p},backend:n,attrs:{dim:e+1}});p=t,l.push(t)}for(let e=0;e<u;++e){const t=r.util.createScalarValue(e,"int32"),a=n.makeTensorInfo([],"int32",t),s=Object(Je.a)({inputs:{a:a,b:p},backend:n}),o=Object(de.a)({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),u=Object(qe.a)({inputs:{a:o,b:i},backend:n}),d=Xe({inputs:{x:u},backend:n,attrs:{axis:0,keepDims:!1}});c.push(d),l.push(a),l.push(s),l.push(o),l.push(u),l.push(d)}const h=jn({inputs:c,backend:n,attrs:{axis:0}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},la=[$,T.a,E,R,I.b,F,D,P,B,j,z,U,V,X,Q,te,ne,re,ae,O,se,oe,ce,le,de.b,pe.a,fe,me.b,be,we,Se,_e,Ce,Oe,$e,Te,Ee,Re,Fe,Me,De,Pe,Be,Le,ze,We,Ue,Ge,Ve,He,Qe,c,Ze,Je.b,ot,ut.b,lt,dt.a,yt,vt,wt,It.a,Ct,Ot,$t,At,Nt,Rt.a,Ft.a,l.b,Mt,ye,Pt,jt,zt,p,Wt.a,Ut.a,Vt,Ht.a,Kt,Qt,Jt,nn,rn,an,cn,ln.a,dn,pn,hn,fn,mn,bn,gn,xn.a,yn,wn,Cn,qe.b,On.a,Tn,En,Rn,Fn.a,Mn,Bn,Ln,zn,Gn,b,Vn.a,qn,ke.b,ft,Xn,x,k,_,Yn,Qn,Zn,Jn,er,tr,rr,ar.a,ir,cr,lr,fr,v.b,br,xr,kr,ie.b,_n,Ir,Sr,Cr,$r,Ar,Er,Nr,Rr,Fr.a,Mr,Dr.a,Br,Lr,Wr,Gr,Hr,mt.b,Ye,Kr,Yr,Zr,ea,ta,M.b,oa,ua,ca,Pn];
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */for(const e of la)Object(r.registerKernel)(e);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */},function(e,t){e.exports.wasmWorkerContents='"use strict";var Module={};var ENVIRONMENT_IS_NODE=typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads");var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var fs=require("fs");Object.assign(global,{self:global,require:require,Module:Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:function(f){(0,eval)(fs.readFileSync(f,"utf8"))},postMessage:function(msg){parentPort.postMessage(msg)},performance:global.performance||{now:function(){return Date.now()}}})}function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,text+"\n");return}console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;self.alert=threadAlert;Module["instantiateWasm"]=((info,receiveInstance)=>{var instance=new WebAssembly.Instance(Module["wasmModule"],info);receiveInstance(instance);Module["wasmModule"]=null;return instance.exports});self.onmessage=(e=>{try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance})}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0,1);Module["establishStackSpace"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].threadInit();try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(Module["keepRuntimeAlive"]()){Module["PThread"].setExitStatus(result)}else{Module["__emscripten_thread_exit"](result)}}catch(ex){if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["keepRuntimeAlive"]()){}else{Module["__emscripten_thread_exit"](ex.status)}}else{throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["__emscripten_thread_exit"](-1)}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else if(e.data.cmd==="processProxyingQueue"){if(Module["_pthread_self"]()){Module["_emscripten_proxy_execute_queue"](e.data.queue)}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);if(Module["__emscripten_thread_crashed"]){Module["__emscripten_thread_crashed"]()}throw ex}});'},,,function(e,t,n){e.exports=n(103)},function(e,t,n){"use strict";n.r(t),function(e){var t=n(90),r=n(48),a=n(88),s=n(38),i=n(11);null==navigator.ml&&(navigator.ml=new t.a),null==e.ML&&(e.ML=t.a),null==e.MLContext&&(e.MLContext=r.a),null==e.MLGraphBuilder&&(e.MLGraphBuilder=s.d),null==e.MLGraph&&(e.MLGraph=a.a),null==e.MLOperand&&(e.MLOperand=i.c)}.call(this,n(39))},function(e,t,n){"use strict";(function(e){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <http://feross.org>
 * @license  MIT
 */
var r=n(105),a=n(106),s=n(107);function i(){return u.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function o(e,t){if(i()<t)throw new RangeError("Invalid typed array length");return u.TYPED_ARRAY_SUPPORT?(e=new Uint8Array(t)).__proto__=u.prototype:(null===e&&(e=new u(t)),e.length=t),e}function u(e,t,n){if(!(u.TYPED_ARRAY_SUPPORT||this instanceof u))return new u(e,t,n);if("number"==typeof e){if("string"==typeof t)throw new Error("If encoding is specified then the first argument must be a string");return d(this,e)}return c(this,e,t,n)}function c(e,t,n,r){if("number"==typeof t)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer?function(e,t,n,r){if(t.byteLength,n<0||t.byteLength<n)throw new RangeError("'offset' is out of bounds");if(t.byteLength<n+(r||0))throw new RangeError("'length' is out of bounds");t=void 0===n&&void 0===r?new Uint8Array(t):void 0===r?new Uint8Array(t,n):new Uint8Array(t,n,r);u.TYPED_ARRAY_SUPPORT?(e=t).__proto__=u.prototype:e=p(e,t);return e}(e,t,n,r):"string"==typeof t?function(e,t,n){"string"==typeof n&&""!==n||(n="utf8");if(!u.isEncoding(n))throw new TypeError('"encoding" must be a valid string encoding');var r=0|f(t,n),a=(e=o(e,r)).write(t,n);a!==r&&(e=e.slice(0,a));return e}(e,t,n):function(e,t){if(u.isBuffer(t)){var n=0|h(t.length);return 0===(e=o(e,n)).length||t.copy(e,0,0,n),e}if(t){if("undefined"!=typeof ArrayBuffer&&t.buffer instanceof ArrayBuffer||"length"in t)return"number"!=typeof t.length||(r=t.length)!=r?o(e,0):p(e,t);if("Buffer"===t.type&&s(t.data))return p(e,t.data)}var r;throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(e,t)}function l(e){if("number"!=typeof e)throw new TypeError('"size" argument must be a number');if(e<0)throw new RangeError('"size" argument must not be negative')}function d(e,t){if(l(t),e=o(e,t<0?0:0|h(t)),!u.TYPED_ARRAY_SUPPORT)for(var n=0;n<t;++n)e[n]=0;return e}function p(e,t){var n=t.length<0?0:0|h(t.length);e=o(e,n);for(var r=0;r<n;r+=1)e[r]=255&t[r];return e}function h(e){if(e>=i())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+i().toString(16)+" bytes");return 0|e}function f(e,t){if(u.isBuffer(e))return e.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(e)||e instanceof ArrayBuffer))return e.byteLength;"string"!=typeof e&&(e=""+e);var n=e.length;if(0===n)return 0;for(var r=!1;;)switch(t){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":case void 0:return z(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return W(e).length;default:if(r)return z(e).length;t=(""+t).toLowerCase(),r=!0}}function m(e,t,n){var r=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return A(this,t,n);case"utf8":case"utf-8":return C(this,t,n);case"ascii":return $(this,t,n);case"latin1":case"binary":return T(this,t,n);case"base64":return _(this,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return E(this,t,n);default:if(r)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),r=!0}}function b(e,t,n){var r=e[t];e[t]=e[n],e[n]=r}function g(e,t,n,r,a){if(0===e.length)return-1;if("string"==typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),n=+n,isNaN(n)&&(n=a?0:e.length-1),n<0&&(n=e.length+n),n>=e.length){if(a)return-1;n=e.length-1}else if(n<0){if(!a)return-1;n=0}if("string"==typeof t&&(t=u.from(t,r)),u.isBuffer(t))return 0===t.length?-1:x(e,t,n,r,a);if("number"==typeof t)return t&=255,u.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?a?Uint8Array.prototype.indexOf.call(e,t,n):Uint8Array.prototype.lastIndexOf.call(e,t,n):x(e,[t],n,r,a);throw new TypeError("val must be string, number or Buffer")}function x(e,t,n,r,a){var s,i=1,o=e.length,u=t.length;if(void 0!==r&&("ucs2"===(r=String(r).toLowerCase())||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(e.length<2||t.length<2)return-1;i=2,o/=2,u/=2,n/=2}function c(e,t){return 1===i?e[t]:e.readUInt16BE(t*i)}if(a){var l=-1;for(s=n;s<o;s++)if(c(e,s)===c(t,-1===l?0:s-l)){if(-1===l&&(l=s),s-l+1===u)return l*i}else-1!==l&&(s-=s-l),l=-1}else for(n+u>o&&(n=o-u),s=n;s>=0;s--){for(var d=!0,p=0;p<u;p++)if(c(e,s+p)!==c(t,p)){d=!1;break}if(d)return s}return-1}function y(e,t,n,r){n=Number(n)||0;var a=e.length-n;r?(r=Number(r))>a&&(r=a):r=a;var s=t.length;if(s%2!=0)throw new TypeError("Invalid hex string");r>s/2&&(r=s/2);for(var i=0;i<r;++i){var o=parseInt(t.substr(2*i,2),16);if(isNaN(o))return i;e[n+i]=o}return i}function k(e,t,n,r){return U(z(t,e.length-n),e,n,r)}function v(e,t,n,r){return U(function(e){for(var t=[],n=0;n<e.length;++n)t.push(255&e.charCodeAt(n));return t}(t),e,n,r)}function w(e,t,n,r){return v(e,t,n,r)}function I(e,t,n,r){return U(W(t),e,n,r)}function S(e,t,n,r){return U(function(e,t){for(var n,r,a,s=[],i=0;i<e.length&&!((t-=2)<0);++i)r=(n=e.charCodeAt(i))>>8,a=n%256,s.push(a),s.push(r);return s}(t,e.length-n),e,n,r)}function _(e,t,n){return 0===t&&n===e.length?r.fromByteArray(e):r.fromByteArray(e.slice(t,n))}function C(e,t,n){n=Math.min(e.length,n);for(var r=[],a=t;a<n;){var s,i,o,u,c=e[a],l=null,d=c>239?4:c>223?3:c>191?2:1;if(a+d<=n)switch(d){case 1:c<128&&(l=c);break;case 2:128==(192&(s=e[a+1]))&&(u=(31&c)<<6|63&s)>127&&(l=u);break;case 3:s=e[a+1],i=e[a+2],128==(192&s)&&128==(192&i)&&(u=(15&c)<<12|(63&s)<<6|63&i)>2047&&(u<55296||u>57343)&&(l=u);break;case 4:s=e[a+1],i=e[a+2],o=e[a+3],128==(192&s)&&128==(192&i)&&128==(192&o)&&(u=(15&c)<<18|(63&s)<<12|(63&i)<<6|63&o)>65535&&u<1114112&&(l=u)}null===l?(l=65533,d=1):l>65535&&(l-=65536,r.push(l>>>10&1023|55296),l=56320|1023&l),r.push(l),a+=d}return function(e){var t=e.length;if(t<=O)return String.fromCharCode.apply(String,e);var n="",r=0;for(;r<t;)n+=String.fromCharCode.apply(String,e.slice(r,r+=O));return n}(r)}t.Buffer=u,t.SlowBuffer=function(e){+e!=e&&(e=0);return u.alloc(+e)},t.INSPECT_MAX_BYTES=50,u.TYPED_ARRAY_SUPPORT=void 0!==e.TYPED_ARRAY_SUPPORT?e.TYPED_ARRAY_SUPPORT:function(){try{var e=new Uint8Array(1);return e.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===e.foo()&&"function"==typeof e.subarray&&0===e.subarray(1,1).byteLength}catch(e){return!1}}(),t.kMaxLength=i(),u.poolSize=8192,u._augment=function(e){return e.__proto__=u.prototype,e},u.from=function(e,t,n){return c(null,e,t,n)},u.TYPED_ARRAY_SUPPORT&&(u.prototype.__proto__=Uint8Array.prototype,u.__proto__=Uint8Array,"undefined"!=typeof Symbol&&Symbol.species&&u[Symbol.species]===u&&Object.defineProperty(u,Symbol.species,{value:null,configurable:!0})),u.alloc=function(e,t,n){return function(e,t,n,r){return l(t),t<=0?o(e,t):void 0!==n?"string"==typeof r?o(e,t).fill(n,r):o(e,t).fill(n):o(e,t)}(null,e,t,n)},u.allocUnsafe=function(e){return d(null,e)},u.allocUnsafeSlow=function(e){return d(null,e)},u.isBuffer=function(e){return!(null==e||!e._isBuffer)},u.compare=function(e,t){if(!u.isBuffer(e)||!u.isBuffer(t))throw new TypeError("Arguments must be Buffers");if(e===t)return 0;for(var n=e.length,r=t.length,a=0,s=Math.min(n,r);a<s;++a)if(e[a]!==t[a]){n=e[a],r=t[a];break}return n<r?-1:r<n?1:0},u.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},u.concat=function(e,t){if(!s(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return u.alloc(0);var n;if(void 0===t)for(t=0,n=0;n<e.length;++n)t+=e[n].length;var r=u.allocUnsafe(t),a=0;for(n=0;n<e.length;++n){var i=e[n];if(!u.isBuffer(i))throw new TypeError('"list" argument must be an Array of Buffers');i.copy(r,a),a+=i.length}return r},u.byteLength=f,u.prototype._isBuffer=!0,u.prototype.swap16=function(){var e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var t=0;t<e;t+=2)b(this,t,t+1);return this},u.prototype.swap32=function(){var e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var t=0;t<e;t+=4)b(this,t,t+3),b(this,t+1,t+2);return this},u.prototype.swap64=function(){var e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var t=0;t<e;t+=8)b(this,t,t+7),b(this,t+1,t+6),b(this,t+2,t+5),b(this,t+3,t+4);return this},u.prototype.toString=function(){var e=0|this.length;return 0===e?"":0===arguments.length?C(this,0,e):m.apply(this,arguments)},u.prototype.equals=function(e){if(!u.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===u.compare(this,e)},u.prototype.inspect=function(){var e="",n=t.INSPECT_MAX_BYTES;return this.length>0&&(e=this.toString("hex",0,n).match(/.{2}/g).join(" "),this.length>n&&(e+=" ... ")),"<Buffer "+e+">"},u.prototype.compare=function(e,t,n,r,a){if(!u.isBuffer(e))throw new TypeError("Argument must be a Buffer");if(void 0===t&&(t=0),void 0===n&&(n=e?e.length:0),void 0===r&&(r=0),void 0===a&&(a=this.length),t<0||n>e.length||r<0||a>this.length)throw new RangeError("out of range index");if(r>=a&&t>=n)return 0;if(r>=a)return-1;if(t>=n)return 1;if(this===e)return 0;for(var s=(a>>>=0)-(r>>>=0),i=(n>>>=0)-(t>>>=0),o=Math.min(s,i),c=this.slice(r,a),l=e.slice(t,n),d=0;d<o;++d)if(c[d]!==l[d]){s=c[d],i=l[d];break}return s<i?-1:i<s?1:0},u.prototype.includes=function(e,t,n){return-1!==this.indexOf(e,t,n)},u.prototype.indexOf=function(e,t,n){return g(this,e,t,n,!0)},u.prototype.lastIndexOf=function(e,t,n){return g(this,e,t,n,!1)},u.prototype.write=function(e,t,n,r){if(void 0===t)r="utf8",n=this.length,t=0;else if(void 0===n&&"string"==typeof t)r=t,n=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t|=0,isFinite(n)?(n|=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}var a=this.length-t;if((void 0===n||n>a)&&(n=a),e.length>0&&(n<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");for(var s=!1;;)switch(r){case"hex":return y(this,e,t,n);case"utf8":case"utf-8":return k(this,e,t,n);case"ascii":return v(this,e,t,n);case"latin1":case"binary":return w(this,e,t,n);case"base64":return I(this,e,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return S(this,e,t,n);default:if(s)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),s=!0}},u.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var O=4096;function $(e,t,n){var r="";n=Math.min(e.length,n);for(var a=t;a<n;++a)r+=String.fromCharCode(127&e[a]);return r}function T(e,t,n){var r="";n=Math.min(e.length,n);for(var a=t;a<n;++a)r+=String.fromCharCode(e[a]);return r}function A(e,t,n){var r=e.length;(!t||t<0)&&(t=0),(!n||n<0||n>r)&&(n=r);for(var a="",s=t;s<n;++s)a+=L(e[s]);return a}function E(e,t,n){for(var r=e.slice(t,n),a="",s=0;s<r.length;s+=2)a+=String.fromCharCode(r[s]+256*r[s+1]);return a}function N(e,t,n){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>n)throw new RangeError("Trying to access beyond buffer length")}function R(e,t,n,r,a,s){if(!u.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>a||t<s)throw new RangeError('"value" argument is out of bounds');if(n+r>e.length)throw new RangeError("Index out of range")}function F(e,t,n,r){t<0&&(t=65535+t+1);for(var a=0,s=Math.min(e.length-n,2);a<s;++a)e[n+a]=(t&255<<8*(r?a:1-a))>>>8*(r?a:1-a)}function M(e,t,n,r){t<0&&(t=4294967295+t+1);for(var a=0,s=Math.min(e.length-n,4);a<s;++a)e[n+a]=t>>>8*(r?a:3-a)&255}function D(e,t,n,r,a,s){if(n+r>e.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function P(e,t,n,r,s){return s||D(e,0,n,4),a.write(e,t,n,r,23,4),n+4}function B(e,t,n,r,s){return s||D(e,0,n,8),a.write(e,t,n,r,52,8),n+8}u.prototype.slice=function(e,t){var n,r=this.length;if((e=~~e)<0?(e+=r)<0&&(e=0):e>r&&(e=r),(t=void 0===t?r:~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),t<e&&(t=e),u.TYPED_ARRAY_SUPPORT)(n=this.subarray(e,t)).__proto__=u.prototype;else{var a=t-e;n=new u(a,void 0);for(var s=0;s<a;++s)n[s]=this[s+e]}return n},u.prototype.readUIntLE=function(e,t,n){e|=0,t|=0,n||N(e,t,this.length);for(var r=this[e],a=1,s=0;++s<t&&(a*=256);)r+=this[e+s]*a;return r},u.prototype.readUIntBE=function(e,t,n){e|=0,t|=0,n||N(e,t,this.length);for(var r=this[e+--t],a=1;t>0&&(a*=256);)r+=this[e+--t]*a;return r},u.prototype.readUInt8=function(e,t){return t||N(e,1,this.length),this[e]},u.prototype.readUInt16LE=function(e,t){return t||N(e,2,this.length),this[e]|this[e+1]<<8},u.prototype.readUInt16BE=function(e,t){return t||N(e,2,this.length),this[e]<<8|this[e+1]},u.prototype.readUInt32LE=function(e,t){return t||N(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},u.prototype.readUInt32BE=function(e,t){return t||N(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},u.prototype.readIntLE=function(e,t,n){e|=0,t|=0,n||N(e,t,this.length);for(var r=this[e],a=1,s=0;++s<t&&(a*=256);)r+=this[e+s]*a;return r>=(a*=128)&&(r-=Math.pow(2,8*t)),r},u.prototype.readIntBE=function(e,t,n){e|=0,t|=0,n||N(e,t,this.length);for(var r=t,a=1,s=this[e+--r];r>0&&(a*=256);)s+=this[e+--r]*a;return s>=(a*=128)&&(s-=Math.pow(2,8*t)),s},u.prototype.readInt8=function(e,t){return t||N(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},u.prototype.readInt16LE=function(e,t){t||N(e,2,this.length);var n=this[e]|this[e+1]<<8;return 32768&n?4294901760|n:n},u.prototype.readInt16BE=function(e,t){t||N(e,2,this.length);var n=this[e+1]|this[e]<<8;return 32768&n?4294901760|n:n},u.prototype.readInt32LE=function(e,t){return t||N(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},u.prototype.readInt32BE=function(e,t){return t||N(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},u.prototype.readFloatLE=function(e,t){return t||N(e,4,this.length),a.read(this,e,!0,23,4)},u.prototype.readFloatBE=function(e,t){return t||N(e,4,this.length),a.read(this,e,!1,23,4)},u.prototype.readDoubleLE=function(e,t){return t||N(e,8,this.length),a.read(this,e,!0,52,8)},u.prototype.readDoubleBE=function(e,t){return t||N(e,8,this.length),a.read(this,e,!1,52,8)},u.prototype.writeUIntLE=function(e,t,n,r){(e=+e,t|=0,n|=0,r)||R(this,e,t,n,Math.pow(2,8*n)-1,0);var a=1,s=0;for(this[t]=255&e;++s<n&&(a*=256);)this[t+s]=e/a&255;return t+n},u.prototype.writeUIntBE=function(e,t,n,r){(e=+e,t|=0,n|=0,r)||R(this,e,t,n,Math.pow(2,8*n)-1,0);var a=n-1,s=1;for(this[t+a]=255&e;--a>=0&&(s*=256);)this[t+a]=e/s&255;return t+n},u.prototype.writeUInt8=function(e,t,n){return e=+e,t|=0,n||R(this,e,t,1,255,0),u.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),this[t]=255&e,t+1},u.prototype.writeUInt16LE=function(e,t,n){return e=+e,t|=0,n||R(this,e,t,2,65535,0),u.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):F(this,e,t,!0),t+2},u.prototype.writeUInt16BE=function(e,t,n){return e=+e,t|=0,n||R(this,e,t,2,65535,0),u.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):F(this,e,t,!1),t+2},u.prototype.writeUInt32LE=function(e,t,n){return e=+e,t|=0,n||R(this,e,t,4,4294967295,0),u.TYPED_ARRAY_SUPPORT?(this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e):M(this,e,t,!0),t+4},u.prototype.writeUInt32BE=function(e,t,n){return e=+e,t|=0,n||R(this,e,t,4,4294967295,0),u.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):M(this,e,t,!1),t+4},u.prototype.writeIntLE=function(e,t,n,r){if(e=+e,t|=0,!r){var a=Math.pow(2,8*n-1);R(this,e,t,n,a-1,-a)}var s=0,i=1,o=0;for(this[t]=255&e;++s<n&&(i*=256);)e<0&&0===o&&0!==this[t+s-1]&&(o=1),this[t+s]=(e/i>>0)-o&255;return t+n},u.prototype.writeIntBE=function(e,t,n,r){if(e=+e,t|=0,!r){var a=Math.pow(2,8*n-1);R(this,e,t,n,a-1,-a)}var s=n-1,i=1,o=0;for(this[t+s]=255&e;--s>=0&&(i*=256);)e<0&&0===o&&0!==this[t+s+1]&&(o=1),this[t+s]=(e/i>>0)-o&255;return t+n},u.prototype.writeInt8=function(e,t,n){return e=+e,t|=0,n||R(this,e,t,1,127,-128),u.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),e<0&&(e=255+e+1),this[t]=255&e,t+1},u.prototype.writeInt16LE=function(e,t,n){return e=+e,t|=0,n||R(this,e,t,2,32767,-32768),u.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):F(this,e,t,!0),t+2},u.prototype.writeInt16BE=function(e,t,n){return e=+e,t|=0,n||R(this,e,t,2,32767,-32768),u.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):F(this,e,t,!1),t+2},u.prototype.writeInt32LE=function(e,t,n){return e=+e,t|=0,n||R(this,e,t,4,2147483647,-2147483648),u.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24):M(this,e,t,!0),t+4},u.prototype.writeInt32BE=function(e,t,n){return e=+e,t|=0,n||R(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),u.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):M(this,e,t,!1),t+4},u.prototype.writeFloatLE=function(e,t,n){return P(this,e,t,!0,n)},u.prototype.writeFloatBE=function(e,t,n){return P(this,e,t,!1,n)},u.prototype.writeDoubleLE=function(e,t,n){return B(this,e,t,!0,n)},u.prototype.writeDoubleBE=function(e,t,n){return B(this,e,t,!1,n)},u.prototype.copy=function(e,t,n,r){if(n||(n=0),r||0===r||(r=this.length),t>=e.length&&(t=e.length),t||(t=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("sourceStart out of bounds");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),e.length-t<r-n&&(r=e.length-t+n);var a,s=r-n;if(this===e&&n<t&&t<r)for(a=s-1;a>=0;--a)e[a+t]=this[a+n];else if(s<1e3||!u.TYPED_ARRAY_SUPPORT)for(a=0;a<s;++a)e[a+t]=this[a+n];else Uint8Array.prototype.set.call(e,this.subarray(n,n+s),t);return s},u.prototype.fill=function(e,t,n,r){if("string"==typeof e){if("string"==typeof t?(r=t,t=0,n=this.length):"string"==typeof n&&(r=n,n=this.length),1===e.length){var a=e.charCodeAt(0);a<256&&(e=a)}if(void 0!==r&&"string"!=typeof r)throw new TypeError("encoding must be a string");if("string"==typeof r&&!u.isEncoding(r))throw new TypeError("Unknown encoding: "+r)}else"number"==typeof e&&(e&=255);if(t<0||this.length<t||this.length<n)throw new RangeError("Out of range index");if(n<=t)return this;var s;if(t>>>=0,n=void 0===n?this.length:n>>>0,e||(e=0),"number"==typeof e)for(s=t;s<n;++s)this[s]=e;else{var i=u.isBuffer(e)?e:z(new u(e,r).toString()),o=i.length;for(s=0;s<n-t;++s)this[s+t]=i[s%o]}return this};var j=/[^+\/0-9A-Za-z-_]/g;function L(e){return e<16?"0"+e.toString(16):e.toString(16)}function z(e,t){var n;t=t||1/0;for(var r=e.length,a=null,s=[],i=0;i<r;++i){if((n=e.charCodeAt(i))>55295&&n<57344){if(!a){if(n>56319){(t-=3)>-1&&s.push(239,191,189);continue}if(i+1===r){(t-=3)>-1&&s.push(239,191,189);continue}a=n;continue}if(n<56320){(t-=3)>-1&&s.push(239,191,189),a=n;continue}n=65536+(a-55296<<10|n-56320)}else a&&(t-=3)>-1&&s.push(239,191,189);if(a=null,n<128){if((t-=1)<0)break;s.push(n)}else if(n<2048){if((t-=2)<0)break;s.push(n>>6|192,63&n|128)}else if(n<65536){if((t-=3)<0)break;s.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;s.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return s}function W(e){return r.toByteArray(function(e){if((e=function(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")}(e).replace(j,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function U(e,t,n,r){for(var a=0;a<r&&!(a+n>=t.length||a>=e.length);++a)t[a+n]=e[a];return a}}).call(this,n(39))},function(e,t,n){"use strict";t.byteLength=function(e){var t=c(e),n=t[0],r=t[1];return 3*(n+r)/4-r},t.toByteArray=function(e){var t,n,r=c(e),i=r[0],o=r[1],u=new s(function(e,t,n){return 3*(t+n)/4-n}(0,i,o)),l=0,d=o>0?i-4:i;for(n=0;n<d;n+=4)t=a[e.charCodeAt(n)]<<18|a[e.charCodeAt(n+1)]<<12|a[e.charCodeAt(n+2)]<<6|a[e.charCodeAt(n+3)],u[l++]=t>>16&255,u[l++]=t>>8&255,u[l++]=255&t;2===o&&(t=a[e.charCodeAt(n)]<<2|a[e.charCodeAt(n+1)]>>4,u[l++]=255&t);1===o&&(t=a[e.charCodeAt(n)]<<10|a[e.charCodeAt(n+1)]<<4|a[e.charCodeAt(n+2)]>>2,u[l++]=t>>8&255,u[l++]=255&t);return u},t.fromByteArray=function(e){for(var t,n=e.length,a=n%3,s=[],i=16383,o=0,u=n-a;o<u;o+=i)s.push(l(e,o,o+i>u?u:o+i));1===a?(t=e[n-1],s.push(r[t>>2]+r[t<<4&63]+"==")):2===a&&(t=(e[n-2]<<8)+e[n-1],s.push(r[t>>10]+r[t>>4&63]+r[t<<2&63]+"="));return s.join("")};for(var r=[],a=[],s="undefined"!=typeof Uint8Array?Uint8Array:Array,i="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",o=0,u=i.length;o<u;++o)r[o]=i[o],a[i.charCodeAt(o)]=o;function c(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=e.indexOf("=");return-1===n&&(n=t),[n,n===t?0:4-n%4]}function l(e,t,n){for(var a,s,i=[],o=t;o<n;o+=3)a=(e[o]<<16&16711680)+(e[o+1]<<8&65280)+(255&e[o+2]),i.push(r[(s=a)>>18&63]+r[s>>12&63]+r[s>>6&63]+r[63&s]);return i.join("")}a["-".charCodeAt(0)]=62,a["_".charCodeAt(0)]=63},function(e,t){
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
t.read=function(e,t,n,r,a){var s,i,o=8*a-r-1,u=(1<<o)-1,c=u>>1,l=-7,d=n?a-1:0,p=n?-1:1,h=e[t+d];for(d+=p,s=h&(1<<-l)-1,h>>=-l,l+=o;l>0;s=256*s+e[t+d],d+=p,l-=8);for(i=s&(1<<-l)-1,s>>=-l,l+=r;l>0;i=256*i+e[t+d],d+=p,l-=8);if(0===s)s=1-c;else{if(s===u)return i?NaN:1/0*(h?-1:1);i+=Math.pow(2,r),s-=c}return(h?-1:1)*i*Math.pow(2,s-r)},t.write=function(e,t,n,r,a,s){var i,o,u,c=8*s-a-1,l=(1<<c)-1,d=l>>1,p=23===a?Math.pow(2,-24)-Math.pow(2,-77):0,h=r?0:s-1,f=r?1:-1,m=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(o=isNaN(t)?1:0,i=l):(i=Math.floor(Math.log(t)/Math.LN2),t*(u=Math.pow(2,-i))<1&&(i--,u*=2),(t+=i+d>=1?p/u:p*Math.pow(2,1-d))*u>=2&&(i++,u/=2),i+d>=l?(o=0,i=l):i+d>=1?(o=(t*u-1)*Math.pow(2,a),i+=d):(o=t*Math.pow(2,d-1)*Math.pow(2,a),i=0));a>=8;e[n+h]=255&o,h+=f,o/=256,a-=8);for(i=i<<a|o,c+=a;c>0;e[n+h]=255&i,h+=f,i/=256,c-=8);e[n+h-f]|=128*m}},function(e,t){var n={}.toString;e.exports=Array.isArray||function(e){return"[object Array]"==n.call(e)}},function(e,t,n){"use strict";(function(e){var t=n(9);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r=()=>n(109);let a;class s{constructor(){this.util=n(110),this.textEncoder=new this.util.TextEncoder}fetch(e,n){return null!=Object(t.c)().global.fetch?Object(t.c)().global.fetch(e,n):(null==a&&(a=r()),a(e,n))}now(){const t=e.hrtime();return 1e3*t[0]+t[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}}Object(t.c)().get("IS_NODE")&&!Object(t.c)().get("IS_BROWSER")&&Object(t.c)().setPlatform("node",new s)}).call(this,n(40))},function(e,t){},function(e,t){},function(e,t,n){(function(e){var r;!function(e,a,s){function i(e){var t,n=this,r=(t=4022871197,function(e){e=String(e);for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function u(e,t){var n=new i(e),r=t&&t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n(26)&&n(42)?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.alea=u}(0,e,n(26))}).call(this,n(41)(e))},function(e,t,n){(function(e){var r;!function(e,a,s){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function u(e,t){var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n(26)&&n(42)?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xor128=u}(0,e,n(26))}).call(this,n(41)(e))},function(e,t,n){(function(e){var r;!function(e,a,s){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function u(e,t){var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n(26)&&n(42)?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xorwow=u}(0,e,n(26))}).call(this,n(41)(e))},function(e,t,n){(function(e){var r;!function(e,a,s){function i(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.x&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n(26)&&n(42)?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xorshift7=u}(0,e,n(26))}).call(this,n(41)(e))},function(e,t,n){(function(e){var r;!function(e,a,s){function i(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,i,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,s=-32;s<u;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(i=i+1640531527|0,a=0==(n=o[127&s]^=r+i)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=i,e.X=o,e.i=a}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.X&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n(26)&&n(42)?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xor4096=u}(0,e,n(26))}).call(this,n(41)(e))},function(e,t,n){(function(e){var r;!function(e,a,s){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function u(e,t){var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n(26)&&n(42)?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.tychei=u}(0,e,n(26))}).call(this,n(41)(e))},function(e,t,n){var r;!function(a,s,i){var o,u=256,c=i.pow(u,6),l=i.pow(2,52),d=2*l,p=255;function h(e,t,n){var r=[],p=g(b((t=1==t?{entropy:!0}:t||{}).entropy?[e,x(s)]:null==e?function(){try{var e;return o&&(e=o.randomBytes)?e=e(u):(e=new Uint8Array(u),(a.crypto||a.msCrypto).getRandomValues(e)),x(e)}catch(e){var t=a.navigator,n=t&&t.plugins;return[+new Date,a,n,a.screen,x(s)]}}():e,3),r),h=new f(r),y=function(){for(var e=h.g(6),t=c,n=0;e<l;)e=(e+n)*u,t*=u,n=h.g(1);for(;e>=d;)e/=2,t/=2,n>>>=1;return(e+n)/t};return y.int32=function(){return 0|h.g(4)},y.quick=function(){return h.g(4)/4294967296},y.double=y,g(x(h.S),s),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,h),e.state=function(){return m(h,{})}),n?(i.random=e,t):e})(y,p,"global"in t?t.global:this==i,t.state)}function f(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);a<u;)i[a]=a++;for(a=0;a<u;a++)i[a]=i[s=p&s+e[a%n]+(t=i[a])],i[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,i=r.S;e--;)t=i[a=p&a+1],n=n*u+i[p&(i[a]=i[s=p&s+t])+(i[s]=t)];return r.i=a,r.j=s,n})(u)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function b(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(b(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function g(e,t){for(var n,r=e+"",a=0;a<r.length;)t[p&a]=p&(n^=19*t[p&a])+r.charCodeAt(a++);return x(t)}function x(e){return String.fromCharCode.apply(0,e)}if(g(i.random(),s),e.exports){e.exports=h;try{o=n(118)}catch(e){}}else void 0===(r=function(){return h}.call(t,n,t,e))||(e.exports=r)}("undefined"!=typeof self?self:this,[],Math)},function(e,t){},function(e,t,n){(function(e){var r="undefined"!=typeof e&&e||"undefined"!=typeof self&&self||window,a=Function.prototype.apply;function s(e,t){this._id=e,this._clearFn=t}t.setTimeout=function(){return new s(a.call(setTimeout,r,arguments),clearTimeout)},t.setInterval=function(){return new s(a.call(setInterval,r,arguments),clearInterval)},t.clearTimeout=t.clearInterval=function(e){e&&e.close()},s.prototype.unref=s.prototype.ref=function(){},s.prototype.close=function(){this._clearFn.call(r,this._id)},t.enroll=function(e,t){clearTimeout(e._idleTimeoutId),e._idleTimeout=t},t.unenroll=function(e){clearTimeout(e._idleTimeoutId),e._idleTimeout=-1},t._unrefActive=t.active=function(e){clearTimeout(e._idleTimeoutId);var t=e._idleTimeout;t>=0&&(e._idleTimeoutId=setTimeout((function(){e._onTimeout&&e._onTimeout()}),t))},n(120),t.setImmediate="undefined"!=typeof self&&self.setImmediate||"undefined"!=typeof e&&e.setImmediate||this&&this.setImmediate,t.clearImmediate="undefined"!=typeof self&&self.clearImmediate||"undefined"!=typeof e&&e.clearImmediate||this&&this.clearImmediate}).call(this,n(39))},function(e,t,n){(function(e,t){!function(e,n){"use strict";if(!e.setImmediate){var r,a,s,i,o,u=1,c={},l=!1,d=e.document,p=Object.getPrototypeOf&&Object.getPrototypeOf(e);p=p&&p.setTimeout?p:e,"[object process]"==={}.toString.call(e.process)?r=function(e){t.nextTick((function(){f(e)}))}:!function(){if(e.postMessage&&!e.importScripts){var t=!0,n=e.onmessage;return e.onmessage=function(){t=!1},e.postMessage("","*"),e.onmessage=n,t}}()?e.MessageChannel?((s=new MessageChannel).port1.onmessage=function(e){f(e.data)},r=function(e){s.port2.postMessage(e)}):d&&"onreadystatechange"in d.createElement("script")?(a=d.documentElement,r=function(e){var t=d.createElement("script");t.onreadystatechange=function(){f(e),t.onreadystatechange=null,a.removeChild(t),t=null},a.appendChild(t)}):r=function(e){setTimeout(f,0,e)}:(i="setImmediate$"+Math.random()+"$",o=function(t){t.source===e&&"string"==typeof t.data&&0===t.data.indexOf(i)&&f(+t.data.slice(i.length))},e.addEventListener?e.addEventListener("message",o,!1):e.attachEvent("onmessage",o),r=function(t){e.postMessage(i+t,"*")}),p.setImmediate=function(e){"function"!=typeof e&&(e=new Function(""+e));for(var t=new Array(arguments.length-1),n=0;n<t.length;n++)t[n]=arguments[n+1];var a={callback:e,args:t};return c[u]=a,r(u),u++},p.clearImmediate=h}function h(e){delete c[e]}function f(e){if(l)setTimeout(f,0,e);else{var t=c[e];if(t){l=!0;try{!function(e){var t=e.callback,n=e.args;switch(n.length){case 0:t();break;case 1:t(n[0]);break;case 2:t(n[0],n[1]);break;case 3:t(n[0],n[1],n[2]);break;default:t.apply(void 0,n)}}(t)}finally{h(e),l=!1}}}}}("undefined"==typeof self?"undefined"==typeof e?this:e:self)}).call(this,n(39),n(40))},function(e,t){},function(e,t){},function(e,t){}]);
//# sourceMappingURL=webnn-polyfill.js.map